<A> = <B>	<B> を <A> に代入する
<B> = <A>	<A> を <B> に代入する
<A> = <B>	<A> を <B> とする
<B> = <A>	<B> を <A> とする
<A> = <B>	<A> は <B> である
<B> = <A>	<B> は <A> である
<A> , <B> = <B> , <A>	<A> と <B> をスワップする
<B> , <A> = <A> , <B>	<B> と <A> をスワップする
<A> , <B> = <B> , <A>	<A> と <B> の値をスワップする
<B> , <A> = <A> , <B>	<B> と <A> の値をスワップする
<A> , <B> = <B> , <A>	<A> と <B> を入れ替える
<B> , <A> = <A> , <B>	<B> と <A> を入れ替える
<A> % 2 == 0	<A> が偶数かどうか
if <A> % 2 == 0 :	<A> が偶数ならば
<A> % 2 == 1	<A> が奇数か否か
if <A> % 2 == 1 :	<A> が奇数のとき
<A> % 2 != 0	<A> が奇数か
if <A> % 2 != 0 :	<A> が奇数ならば
<A> % 2 != 1	<A> が偶数かどうか
if <A> % 2 != 1 :	もし <A> が偶数ならば
<A> % <B> == 0	<A> が <B> の倍数か否か
<B> % <A> == 0	<B> が <A> の倍数か否か
if <A> % <B> == 0 :	<A> が <B> の倍数のとき
if <B> % <A> == 0 :	<B> が <A> の倍数のとき
<A> % <B> == 0	<A> が <B> の倍数でないか
<B> % <A> == 0	<B> が <A> の倍数でないか
if <A> % <B> == 0 :	<A> が <B> の倍数でないとき
if <B> % <A> == 0 :	<B> が <A> の倍数でないとき
<A> == <B>	<A> が <B> に等しいか否か
<B> == <A>	<B> が <A> に等しいか否か
if <A> == <B> :	<A> が <B> に等しいならば
if <B> == <A> :	<B> が <A> に等しいならば
<A> != <B>	<A> が <B> に等しくないか
<B> != <A>	<B> が <A> に等しくないか
if <A> != <B> :	もし <A> が <B> に等しくないならば
if <B> != <A> :	もし <B> が <A> に等しくないならば
<A> is <B>	<A> が <B> と同一か否か
<B> is <A>	<B> が <A> と同一か否か
if <A> is <B> :	<A> が <B> と同一ならば
if <B> is <A> :	<B> が <A> と同一ならば
<A> is <B>	<A> が <B> と同じかどうか
<B> is <A>	<B> が <A> と同じかどうか
if <A> is <B> :	もし <A> が <B> と同じならば
if <B> is <A> :	もし <B> が <A> と同じならば
<A> is not <B>	<A> が <B> と同一でないか
<B> is not <A>	<B> が <A> と同一でないか
if <A> is not <B> :	もし <A> が <B> と同一でないならば
if <B> is not <A> :	もし <B> が <A> と同一でないならば
<A> is not <B>	<A> が <B> と同じでないか
<B> is not <A>	<B> が <A> と同じでないか
if <A> is not <B> :	<A> が <B> と同じでない場合
if <B> is not <A> :	<B> が <A> と同じでない場合
<A> in <B>	<A> が <B> に含まれるか否か
<B> in <A>	<B> が <A> に含まれるか否か
if <A> in <B> :	もし <A> が <B> に含まれるならば
if <B> in <A> :	もし <B> が <A> に含まれるならば
<A> in <B>	<A> が <B> 内にあるか
<B> in <A>	<B> が <A> 内にあるか
if <A> in <B> :	<A> が <B> 内にあるとき
if <B> in <A> :	<B> が <A> 内にあるとき
<A> in <B>	<A> が <B> 中に含まれるかどうか
<B> in <A>	<B> が <A> 中に含まれるかどうか
if <A> in <B> :	<A> が <B> 中に含まれるとき
if <B> in <A> :	<B> が <A> 中に含まれるとき
<A> in <B>	<A> が <B> 中にあるか
<B> in <A>	<B> が <A> 中にあるか
if <A> in <B> :	<A> が <B> 中にある場合
if <B> in <A> :	<B> が <A> 中にある場合
<A> not in <B>	<A> が <B> 中に存在しないかどうか
<B> not in <A>	<B> が <A> 中に存在しないかどうか
if <A> not in <B> :	<A> が <B> 中に存在しないならば
if <B> not in <A> :	<B> が <A> 中に存在しないならば
<A> not in <B>	<A> が <B> 中にないかどうか
<B> not in <A>	<B> が <A> 中にないかどうか
if <A> not in <B> :	<A> が <B> 中にないとき
if <B> not in <A> :	<B> が <A> 中にないとき
<A> not in <B>	<A> が <B> にないかどうか
<B> not in <A>	<B> が <A> にないかどうか
if <A> not in <B> :	<A> が <B> にないならば
if <B> not in <A> :	<B> が <A> にないならば
<A> not in <B>	<A> が <B> 中に含まれないかどうか
<B> not in <A>	<B> が <A> 中に含まれないかどうか
if <A> not in <B> :	もし <A> が <B> 中に含まれないならば
if <B> not in <A> :	もし <B> が <A> 中に含まれないならば
<A> not in <B>	<A> が <B> 内にないか
<B> not in <A>	<B> が <A> 内にないか
if <A> not in <B> :	<A> が <B> 内にないとき
if <B> not in <A> :	<B> が <A> 内にないとき
<A> not in <B>	<A> が <B> 内に含まれないか
<B> not in <A>	<B> が <A> 内に含まれないか
if <A> not in <B> :	もし <A> が <B> 内に含まれないならば
if <B> not in <A> :	もし <B> が <A> 内に含まれないならば
<A> not in <B>	<A> が <B> 内に存在しないか
<B> not in <A>	<B> が <A> 内に存在しないか
if <A> not in <B> :	もし <A> が <B> 内に存在しないならば
if <B> not in <A> :	もし <B> が <A> 内に存在しないならば
<A> ** <B>	<A> の <B> 乗
<B> ** <A>	<B> の <A> 乗
<A> |  <B>	<A> と <B> の論理和
<B> |  <A>	<B> と <A> の論理和
<A> ^  <B>	<A> と <B> の排他的論理和
<B> ^  <A>	<B> と <A> の排他的論理和
<A> &  <B>	<A> と <B> の論理積
<B> &  <A>	<B> と <A> の論理積
<A> << <B>	<A> の <B> ビット左シフト
<B> << <A>	<B> の <A> ビット左シフト
<A> >> <B>	<A> の <B> ビット右シフト
<B> >> <A>	<B> の <A> ビット右シフト
~ <A>	<A> のビット反転
<A> += <B>	<A> を <B> だけ増加させる
<B> += <A>	<B> を <A> だけ増加させる
<A> += <B>	<A> を <B> だけ増やす
<B> += <A>	<B> を <A> だけ増やす
<A> += <B>	<A> を <B> 増やす
<B> += <A>	<B> を <A> 増やす
<A> += <B>	<A> を <B> だけ多くする
<B> += <A>	<B> を <A> だけ多くする
<A> += <b>	<A> を <b> つ増やす
<B> += <a>	<B> を <a> つ増やす
<A> += <b>	<A> を <b> つ増加させる
<B> += <a>	<B> を <a> つ増加させる
<A> += <b>	<A> を <b> つ多くする
<B> += <a>	<B> を <a> つ多くする
<A> -= <B>	<A> を <B> 少なくする
<B> -= <A>	<B> を <A> 少なくする
<A> -= <B>	<A> を <B> だけ減少させる
<B> -= <A>	<B> を <A> だけ減少させる
<A> -= <B>	<A> を <B> 減らす
<B> -= <A>	<B> を <A> 減らす
<A> -= <B>	<A> を <B> 減少させる
<B> -= <A>	<B> を <A> 減少させる
<A> -= <b>	<A> を <b> つ減少させる
<B> -= <a>	<B> を <a> つ減少させる
<A> -= <b>	<A> を <b> つ少なくする
<B> -= <a>	<B> を <a> つ少なくする
<A> -= <b>	<A> を <b> つ減らす
<B> -= <a>	<B> を <a> つ減らす
<A> *= <B>	<A> を <B> 倍にする
<B> *= <A>	<B> を <A> 倍にする
<A> /= <B>	<A> を <B> 分の 1 にする
<B> /= <A>	<B> を <A> 分の 1 にする
<A> // = <B>	<A> を <B> 分の 1 にする
<B> // = <A>	<B> を <A> 分の 1 にする
<A> // = <B>	<A> を切り捨てながら <B> 分の 1 にする
<B> // = <A>	<B> を切り捨てながら <A> 分の 1 にする
<A> /= 2	<A> を半分にする
<A> // = 2	<A> を半分にする
<A> // = 2	<A> を切り捨てながら半分にする
<A> ** = <B>	<A> を <B> 乗にする
<B> ** = <A>	<B> を <A> 乗にする
<A> % = <B>	<A> を <B> で割った余りにする
<B> % = <A>	<B> を <A> で割った余りにする
<A> % = <B>	<A> を <B> の剰余にする
<B> % = <A>	<B> を <A> の剰余にする
<A> | = <B>	<A> を <B> との論理和にする
<B> | = <A>	<B> を <A> との論理和にする
<A> & = <B>	<A> を <B> との論理積にする
<B> & = <A>	<B> を <A> との論理積にする
<A> ^ = <B>	<A> を <B> との排他論理和にする
<B> ^ = <A>	<B> を <A> との排他論理和にする
<A> << = <B>	<A> を <B> ビット左にシフトする
<B> << = <A>	<B> を <A> ビット左にシフトする
<A> << = <B>	<A> を <B> ビット、左シフトする
<B> << = <A>	<B> を <A> ビット、左シフトする
<A> >> = <B>	<A> を <B> ビット右にシフトする
<B> >> = <A>	<B> を <A> ビット右にシフトする
<A> >> = <B>	<A> を <B> ビット、右シフトする
<B> >> = <A>	<B> を <A> ビット、右シフトする
abs ( <A> )	<A> の絶対値
bool ( <A> )	<A> が真か
if bool ( <A> ) :	<A> が真ならば
not bool ( <A> )	<A> が真でないか否か
if bool ( <A> ) :	もし <A> が真ならば
if not bool ( <A> ) :	もし <A> が真でなとき
while bool ( <A> ) :	<A> が真間
while not bool ( <A> ) :	<A> が真でな間
complex ( <A> , <B> )	<A> , <B> の複素数
complex ( <B> , <A> )	<B> , <A> の複素数
divmod ( <A> , <B> )	<A> と <B> の商と余り
divmod ( <B> , <A> )	<B> と <A> の商と余り
divmod ( <A> , <B> ) [ 0 ]	<A> と <B> の商
divmod ( <B> , <A> ) [ 0 ]	<B> と <A> の商
divmod ( <A> , <B> ) [ 1 ]	<A> と <B> の余り
divmod ( <B> , <A> ) [ 1 ]	<B> と <A> の余り
float ( <A> )	数に <A> を変換する
float ( <A> )	小数点数に <A> を変換する
float ( <A> )	数に <A> をする
float ( <A> )	小数点数に <A> をする
float ( <A> )	<A> を小数点数に変換する
float ( <A> )	<A> を浮動小数点数に変換する
float ( <A> )	実数に <A> をする
float ( <A> )	実数に <A> を変換する
float ( <A> )	<A> を数に変換する
float ( <A> )	<A> の小数点数
float ( <A> )	<A> の実数
float ( <A> )	<A> の浮動小数点数
float ( <A> )	<A> の数
int ( <A> )	<A> を整数値にする
int ( <A> )	<A> を整数に変換する
int ( <A> )	整数に <A> をする
int ( <A> )	整数に <A> を変換する
int ( <A> )	整数値に <A> をする
int ( <A> )	整数値に <A> を変換する
int ( <A> )	<A> を自然数に変換する
int ( <A> )	自然数に <A> をする
int ( <A> )	<A> を変換した整数値
int ( <A> )	<A> の整数値
int ( <A> , <b> )	<b> 進数表現 <A> から自然数にする
int ( <B> , <a> )	<a> 進数表現 <B> から自然数にする
int ( <A> , <b> )	<b> 進数表現 <A> から整数に変換する
int ( <B> , <a> )	<a> 進数表現 <B> から整数に変換する
int ( <A> , <b> )	<b> 進数表記 <A> から整数に変換する
int ( <B> , <a> )	<a> 進数表記 <B> から整数に変換する
int ( <A> , <b> )	<b> 進数表現 <A> から整数にする
int ( <B> , <a> )	<a> 進数表現 <B> から整数にする
int ( <A> , <b> )	<b> 進数表記 <A> から自然数に変換する
int ( <B> , <a> )	<a> 進数表記 <B> から自然数に変換する
int ( <A> , <b> )	<b> 進数表記 <A> から整数にする
int ( <B> , <a> )	<a> 進数表記 <B> から整数にする
int ( <A> , <b> )	<b> 進数表記 <A> から整数値にする
int ( <B> , <a> )	<a> 進数表記 <B> から整数値にする
int ( <A> , <b> )	<b> 進数文字列 <A> から整数に変換する
int ( <B> , <a> )	<a> 進数文字列 <B> から整数に変換する
int ( <A> , <b> )	<b> 進数として <A> 文字列を整数にする
int ( <B> , <a> )	<a> 進数として <B> 文字列を整数にする
int ( <A> , <b> )	<b> 進数として <A> 文字列を自然数にする
int ( <B> , <a> )	<a> 進数として <B> 文字列を自然数にする
int ( <A> , <b> )	<b> 進数として <A> 文字列を整数に変換する
int ( <B> , <a> )	<a> 進数として <B> 文字列を整数に変換する
int ( <A> , <b> )	文字列 <A> を <b> 進数として整数値にする
int ( <B> , <a> )	文字列 <B> を <a> 進数として整数値にする
int ( <A> , <b> )	<b> 進数として文字列 <A> を自然数に変換する
int ( <B> , <a> )	<a> 進数として文字列 <B> を自然数に変換する
int ( <A> , <b> )	<A> を <b> 進数として整数値にする
int ( <B> , <a> )	<B> を <a> 進数として整数値にする
int ( <A> , <b> )	文字列 <A> を <b> 進数として整数に変換する
int ( <B> , <a> )	文字列 <B> を <a> 進数として整数に変換する
int ( <A> , <b> )	<b> 進数として <A> を自然数に変換する
int ( <B> , <a> )	<a> 進数として <B> を自然数に変換する
int ( <A> , <b> )	<b> 進数として <A> を整数にする
int ( <B> , <a> )	<a> 進数として <B> を整数にする
int ( <A> , <b> )	<A> を <b> 進数として整数にする
int ( <B> , <a> )	<B> を <a> 進数として整数にする
int ( <A> , <b> )	<b> 進数として文字列 <A> を自然数にする
int ( <B> , <a> )	<a> 進数として文字列 <B> を自然数にする
int ( <A> , <b> )	<b> 進数表現 <A> から変換した整数値
int ( <B> , <a> )	<a> 進数表現 <B> から変換した整数値
int ( <A> , <b> )	<b> 進数表現 <A> から変換した自然数
int ( <B> , <a> )	<a> 進数表現 <B> から変換した自然数
int ( <A> , <b> )	<b> 進数文字列 <A> から変換した自然数
int ( <B> , <a> )	<a> 進数文字列 <B> から変換した自然数
int ( <A> , <b> )	<b> 進数表現 <A> から変換した整数
int ( <B> , <a> )	<a> 進数表現 <B> から変換した整数
int ( <A> , <b> )	<b> 進数文字列 <A> から変換した整数値
int ( <B> , <a> )	<a> 進数文字列 <B> から変換した整数値
int ( <A> , <b> )	<b> 進数表記 <A> から変換した整数
int ( <B> , <a> )	<a> 進数表記 <B> から変換した整数
ord ( <A> )	<A> のコードポイント
max ( <A> )	数列 <A> の最大値
max ( <A> )	<A> の最大値
max ( <A> , <B> )	<A> と <B> の大きな方
max ( <B> , <A> )	<B> と <A> の大きな方
max ( <A> , <B> )	<A> と <B> の最大値
max ( <B> , <A> )	<B> と <A> の最大値
max ( <A> , <B> , <C> )	<A> , <B> , <C> の最大値
max ( <C> , <B> , <A> )	<C> , <B> , <A> の最大値
min ( <A> )	数列 <A> の最小値
min ( <A> )	<A> の最小値
min ( <A> , <B> )	<A> と <B> の小さな方
min ( <B> , <A> )	<B> と <A> の小さな方
min ( <A> , <B> )	<A> と <B> の小さな値
min ( <B> , <A> )	<B> と <A> の小さな値
min ( <A> , <B> )	<A> と <B> の最小値
min ( <B> , <A> )	<B> と <A> の最小値
min ( <A> , <B> , <C> )	<A> , <B> , <C> の最小値
min ( <C> , <B> , <A> )	<C> , <B> , <A> の最小値
pow ( <A> , <B> )	<A> の <B> 乗
pow ( <B> , <A> )	<B> の <A> 乗
pow ( <A> , <B> , <C> )	<A> の <B> 乗を <C> で剰余した値
pow ( <C> , <B> , <A> )	<C> の <B> 乗を <A> で剰余した値
round ( <A> )	<A> を四捨五入する
round ( <A> )	<A> を丸める
round ( <A> )	<A> を四捨五入した整数値
round ( <A> )	<A> を丸めた整数
round ( <A> )	<A> を四捨五入した自然数
round ( <A> )	<A> を丸めた整数値
round ( <A> )	<A> を四捨五入した整数
round ( <A> , <B> )	<A> を少数部 <B> 桁まで丸める
round ( <B> , <A> )	<B> を少数部 <A> 桁まで丸める
round ( <A> , <B> )	<A> を少数部 <B> 桁で四捨五入する
round ( <B> , <A> )	<B> を少数部 <A> 桁で四捨五入する
round ( <A> , <B> )	<A> を少数部 <B> 桁まで四捨五入する
round ( <B> , <A> )	<B> を少数部 <A> 桁まで四捨五入する
round ( <A> , <B> )	<A> を少数部 <B> 桁で丸める
round ( <B> , <A> )	<B> を少数部 <A> 桁で丸める
round ( <A> , <B> )	<A> の少数を <B> 桁で四捨五入した自然数
round ( <B> , <A> )	<B> の少数を <A> 桁で四捨五入した自然数
round ( <A> , <B> )	<A> の少数を <B> 桁まで四捨五入した整数値
round ( <B> , <A> )	<B> の少数を <A> 桁まで四捨五入した整数値
round ( <A> , <B> )	<A> の少数部を <B> 桁で四捨五入した整数値
round ( <B> , <A> )	<B> の少数部を <A> 桁で四捨五入した整数値
round ( <A> , <B> )	<A> の少数部を <B> 桁で丸めた整数
round ( <B> , <A> )	<B> の少数部を <A> 桁で丸めた整数
round ( <A> , <B> )	<A> の少数を <B> 桁で四捨五入した整数
round ( <B> , <A> )	<B> の少数を <A> 桁で四捨五入した整数
round ( <A> , <B> )	<A> の少数を <B> 桁まで丸めた整数値
round ( <B> , <A> )	<B> の少数を <A> 桁まで丸めた整数値
round ( <A> , <B> )	<A> の少数を <B> 桁まで丸めた自然数
round ( <B> , <A> )	<B> の少数を <A> 桁まで丸めた自然数
round ( <A> , <B> )	<A> の少数を <B> 桁まで四捨五入した自然数
round ( <B> , <A> )	<B> の少数を <A> 桁まで四捨五入した自然数
round ( <A> , <B> )	<A> の少数を <B> 桁で四捨五入した整数値
round ( <B> , <A> )	<B> の少数を <A> 桁で四捨五入した整数値
round ( <A> , <B> )	<A> の少数部を <B> 桁まで丸めた整数
round ( <B> , <A> )	<B> の少数部を <A> 桁まで丸めた整数
round ( <A> , <B> )	<A> の少数部を <B> 桁で丸めた自然数
round ( <B> , <A> )	<B> の少数部を <A> 桁で丸めた自然数
round ( <A> , <B> )	<A> の少数を <B> 桁まで四捨五入した整数
round ( <B> , <A> )	<B> の少数を <A> 桁まで四捨五入した整数
round ( <A> , <B> )	<A> の少数を <B> 桁で丸めた自然数
round ( <B> , <A> )	<B> の少数を <A> 桁で丸めた自然数
round ( <A> , <B> )	<A> の少数を <B> 桁で丸めた整数値
round ( <B> , <A> )	<B> の少数を <A> 桁で丸めた整数値
round ( <A> , <B> )	<A> の少数部を <B> 桁まで丸めた整数値
round ( <B> , <A> )	<B> の少数部を <A> 桁まで丸めた整数値
round ( <A> , <B> )	<A> の少数部を <B> 桁で四捨五入した整数
round ( <B> , <A> )	<B> の少数部を <A> 桁で四捨五入した整数
math . trunc ( <A> )	<A> の少数を切り捨てる
math . trunc ( <A> )	<A> を切り捨てる
math . trunc ( <A> )	<A> の少数部を切り捨てる
math . trunc ( <A> )	<A> の少数を切り捨てた整数
math . trunc ( <A> )	<A> の少数部を切り捨てた整数
math . trunc ( <A> )	<A> の少数部を切り捨てた整数値
math . trunc ( <A> )	<A> の少数部を切り捨てた自然数
math . trunc ( <A> )	<A> の少数を切り捨てた自然数
math . trunc ( <A> )	<A> を切り捨てた整数
math . trunc ( <A> )	<A> を切り捨てた整数値
math . trunc ( <A> )	<A> の少数を切り捨てた整数値
math . floor ( <A> )	<A> を切り上げる
math . floor ( <A> )	<A> の少数部を切り上げる
math . floor ( <A> )	<A> の少数を切り上げる
math . floor ( <A> )	<A> 以下の最大な自然数
math . floor ( <A> )	<A> 以下の最大の自然数
math . floor ( <A> )	<A> 以下の最大の整数
math . floor ( <A> )	<A> 以下の最大の整数値
math . floor ( <A> )	<A> 以下の最大な整数
math . floor ( <A> )	<A> 以下の最大な整数値
math . floor ( <A> )	<A> の少数を切り上げた整数値
math . floor ( <A> )	<A> の少数部を切り上げた自然数
math . floor ( <A> )	<A> の少数部を切り上げた整数値
math . floor ( <A> )	<A> を切り上げた自然数
math . floor ( <A> )	<A> を切り上げた整数値
math . floor ( <A> )	<A> の少数部を切り上げた整数
math . ceil ( <A> )	<A> の少数を切り捨てる
math . ceil ( <A> )	<A> の少数部を切り捨てる
math . ceil ( <A> )	<A> を切り捨てる
math . ceil ( <A> )	<A> 以上の最小の自然数
math . ceil ( <A> )	<A> 以上の最小な整数
math . ceil ( <A> )	<A> 以上の最小の整数
math . ceil ( <A> )	<A> 以上の最小な整数値
math . ceil ( <A> )	<A> 以上の最小な自然数
math . ceil ( <A> )	<A> 以上の最小の整数値
math . ceil ( <A> )	<A> を切り捨てた整数
math . ceil ( <A> )	<A> を切り捨てた自然数
math . ceil ( <A> )	<A> の少数部を切り捨てた整数
math . ceil ( <A> )	<A> を切り捨てた整数値
math . ceil ( <A> )	<A> の少数を切り捨てた整数値
math . ceil ( <A> )	<A> の少数部を切り捨てた自然数
math . ceil ( <A> )	<A> の少数を切り捨てた整数
ascii ( <A> )	<A> を印字できる文字列にする
ascii ( <A> )	<A> の印字可能な文字列
bin ( <A> )	<A> を 2 進数文字列にする
bin ( <A> )	<A> を 2 進数表記にする
bin ( <A> )	<A> を 2 進数表現にする
bin ( <A> )	<A> の 2 進数文字列
hex ( <A> )	<A> を 16 進数文字列にする
hex ( <A> )	<A> を 16 進数表現にする
hex ( <A> )	<A> を 16 進数表記にする
hex ( <A> )	<A> の 16 進数文字列
oct ( <A> )	<A> を 8 進数表記にする
oct ( <A> )	<A> を 8 進数文字列にする
oct ( <A> )	<A> を 8 進数表現にする
oct ( <A> )	<A> の 8 進数文字列
chr ( <A> )	文字コード <A> の文字
chr ( <A> )	<A> の文字
chr ( <A> )	コードポイント <A> の文字
chr ( <A> )	コードポイント <A> を文字に変換する
chr ( <A> )	<A> を文字にする
chr ( <A> )	文字コード <A> を文字に変換する
chr ( <A> )	コードポイント <A> を文字にする
chr ( <A> )	<A> を文字に変換する
chr ( <A> )	文字コード <A> を文字にする
repr ( <A> )	<A> の印字できる文字列
repr ( <A> )	<A> の印字文字列
repr ( <A> )	<A> の印字可能な文字列
str ( <A> )	<A> を文字列に変換する
str ( <A> )	<A> を文字列にする
str ( <A> )	<A> の文字列
all ( <A> )	<A> の全てが真か
if all ( <A> ) :	もし <A> の全てが真ならば
not all ( <A> )	<A> の全てが真でないか
if all ( <A> ) :	<A> の全てが真ならば
if not all ( <A> ) :	もし <A> の全てが真でないならば
while all ( <A> ) :	<A> の全てが真間
all ( <A> )	<A> が全て真か
if all ( <A> ) :	もし <A> が全て真ならば
not all ( <A> )	<A> が全て真でないか否か
if all ( <A> ) :	<A> が全て真とき
if not all ( <A> ) :	<A> が全て真でなならば
while not all ( <A> ) :	<A> が全て真でな間
any ( <A> )	<A> のいずれかが真か
if any ( <A> ) :	<A> のいずれかが真のとき
not any ( <A> )	<A> のいずれかが真でないか
if any ( <A> ) :	<A> のいずれかが真場合
if not any ( <A> ) :	もし <A> のいずれかが真でないならば
while any ( <A> ) :	<A> のいずれかが真間
while not any ( <A> ) :	<A> のいずれかが真でない間
any ( <A> )	<A> のひとつでも真か
if any ( <A> ) :	<A> のひとつでも真の場合
not any ( <A> )	<A> のひとつでも真でないか
if any ( <A> ) :	もし <A> のひとつでも真とき
if not any ( <A> ) :	もし <A> のひとつでも真でないとき
while any ( <A> ) :	<A> のひとつでも真間
enumerate ( <A> )	<A> を順番付けする
enumerate ( <A> )	<A> を順序付けする
enumerate ( <A> )	<A> を番号付けする
enumerate ( <A> )	<A> の順序付けされた列
enumerate ( <A> )	<A> の順序列
enumerate ( <A> )	<A> の順序を数える
enumerate ( <A> )	<A> の順番を数える
enumerate ( <A> , <B> )	<A> を <B> から順番付けする
enumerate ( <B> , <A> )	<B> を <A> から順番付けする
enumerate ( <A> , <B> )	<A> を <B> から順序付けする
enumerate ( <B> , <A> )	<B> を <A> から順序付けする
enumerate ( <A> , <B> )	<B> から <A> をナンバリングする
enumerate ( <B> , <A> )	<A> から <B> をナンバリングする
enumerate ( <A> , <B> )	<A> を <B> から番号付けする
enumerate ( <B> , <A> )	<B> を <A> から番号付けする
enumerate ( <A> , <B> )	<B> から <A> を順序付けする
enumerate ( <B> , <A> )	<A> から <B> を順序付けする
enumerate ( <A> , <B> )	<A> の <B> から開始する順序列
enumerate ( <B> , <A> )	<B> の <A> から開始する順序列
enumerate ( <A> , <B> )	<A> の <B> から始まる順序列
enumerate ( <B> , <A> )	<B> の <A> から始まる順序列
enumerate ( <A> , <B> )	<A> の <B> から始まる順序付けされた列
enumerate ( <B> , <A> )	<B> の <A> から始まる順序付けされた列
enumerate ( <A> , <B> )	<A> の <B> から開始する順序付けされた列
enumerate ( <B> , <A> )	<B> の <A> から開始する順序付けされた列
enumerate ( <A> , <B> )	<A> の順番を <B> から数える
enumerate ( <B> , <A> )	<B> の順番を <A> から数える
enumerate ( <A> , <B> )	<A> の順序を <B> から数える
enumerate ( <B> , <A> )	<B> の順序を <A> から数える
enumerate ( <A> , <B> )	<A> の <B> から順番を数える
enumerate ( <B> , <A> )	<B> の <A> から順番を数える
enumerate ( <A> , <B> )	<A> の <B> から順序を数える
enumerate ( <B> , <A> )	<B> の <A> から順序を数える
iter ( <A> )	<A> のイテレータ
len ( <A> )	<A> の長さ
len ( <A> )	<A> の要素数
len ( <A> )	<A> のサイズ
len ( <A> ) == 0	<A> が空であるか否か
if len ( <A> ) == 0 :	<A> が空であるとき
len ( <A> ) != 0	<A> が空であるでないかどうか
if len ( <A> ) == 0 :	もし <A> が空である場合
if len ( <A> ) != 0 :	<A> が空であるでないとき
len ( <a> )	文字列 <a> の文字数
len ( <a> )	<a> の文字数
len ( <a> )	<a> 文字列の文字数
list ( <A> )	<A> のリスト
range ( <A> )	0 から <A> までの数列
range ( <A> , <B> )	<A> から <B> までの数列
range ( <B> , <A> )	<B> から <A> までの数列
range ( <A> , <B> , <C> )	<A> から <B> までの <C> 間隔の数列
range ( <C> , <B> , <A> )	<C> から <B> までの <A> 間隔の数列
reversed ( <A> )	<A> を逆順にする
reversed ( <A> )	<A> の逆順
set ( )	空集合
set ( <A> )	<A> の集合
slice ( <A> )	0 から <A> までの部分列
slice ( <A> )	0 から <A> までのスライス
slice ( <A> , <B> )	<A> から <B> までの部分列
slice ( <B> , <A> )	<B> から <A> までの部分列
slice ( <A> , <B> )	<A> から <B> までのスライス
slice ( <B> , <A> )	<B> から <A> までのスライス
slice ( <A> , <B> , <C> )	<A> から <B> までの <C> ごとによるスライス
slice ( <C> , <B> , <A> )	<C> から <B> までの <A> ごとによるスライス
sum ( <A> )	<A> の合計
sum ( <A> )	<A> の総和
sum ( <A> )	数列 <A> の合計値
sum ( <A> ) / len ( <A> )	数列 <A> の平均
sum ( <A> ) / len ( <A> )	<A> の平均値
sum ( <A> ) / len ( <A> )	数列 <A> の平均値
sum ( <A> ) / len ( <A> )	<A> の平均
tuple ( <A> )	<A> のタプル
tuple ( <A> )	<A> の組
zip ( <A> , <B> )	列 <A> と <B> の各要素のペア
zip ( <B> , <A> )	列 <B> と <A> の各要素のペア
<A> ( <B> , <C> )	<B> と <C> を <A> する
<C> ( <B> , <A> )	<B> と <A> を <C> する
zip ( <A> , <B> , <C> )	列 <A> , <B> , <C> の各要素のタプル
zip ( <C> , <B> , <A> )	列 <C> , <B> , <A> の各要素のタプル
zip ( <A> , <B> , <C> )	列 <A> , <B> , <C> の各要素の組
zip ( <C> , <B> , <A> )	列 <C> , <B> , <A> の各要素の組
dict ( <A> )	<A> の辞書
dict ( <A> )	<A> のハッシュ表
<A> [ <B> ]	辞書 <A> の <B> の値
<B> [ <A> ]	辞書 <B> の <A> の値
<A> [ <B> ]	辞書 <A> の <B> 項目名の値
<B> [ <A> ]	辞書 <B> の <A> 項目名の値
<A> [ <B> ]	<A> の <B> 項目名の値
<B> [ <A> ]	<B> の <A> 項目名の値
<A> [ <B> ]	辞書 <A> の <B> キーの値
<B> [ <A> ]	辞書 <B> の <A> キーの値
<A> [ <B> ]	マップ <A> の <B> キーの値
<B> [ <A> ]	マップ <B> の <A> キーの値
<A> [ <B> ]	マップ <A> の <B> の値
<B> [ <A> ]	マップ <B> の <A> の値
<A> [ <B> ]	<A> のキー <B> の値
<B> [ <A> ]	<B> のキー <A> の値
<A> [ <B> ]	辞書 <A> の <B> を参照した値
<B> [ <A> ]	辞書 <B> の <A> を参照した値
<A> [ <B> ]	辞書 <A> の <B> 項目名を参照した値
<B> [ <A> ]	辞書 <B> の <A> 項目名を参照した値
<A> [ <B> ]	<A> の項目名 <B> を参照した値
<B> [ <A> ]	<B> の項目名 <A> を参照した値
<A> [ <B> ]	辞書 <A> のキー <B> を参照した値
<B> [ <A> ]	辞書 <B> のキー <A> を参照した値
<A> [ <B> ]	辞書 <A> の <B> キーを参照した値
<B> [ <A> ]	辞書 <B> の <A> キーを参照した値
<A> [ <B> ]	辞書 <A> の項目名 <B> を参照した値
<B> [ <A> ]	辞書 <B> の項目名 <A> を参照した値
list ( <A> )	辞書 <A> の項目名一覧
list ( <A> )	<A> のキー一覧
list ( <A> )	<A> の項目名一覧
list ( <A> )	マップ <A> の項目名一覧
list ( <A> )	辞書 <A> のキー一覧
len ( <A> )	辞書 <A> の値数
len ( <A> )	マップ <A> の値数
len ( <A> )	辞書 <A> の項目数
len ( <A> )	辞書 <A> のエントリ数
<A> . clear ( )	辞書 <A> の全値を消去する
<A> . clear ( )	辞書 <A> の全エントリを消去する
<A> . clear ( )	辞書 <A> の全項目を消去する
<A> . copy ( )	辞書 <A> のコピー
<A> . copy ( )	辞書 <A> の浅いコピー
<A> . copy ( )	マップ <A> のコピー
<A> . copy ( )	ハッシュ表 <A> の浅いコピー
<A> . get ( <B> )	辞書 <A> から <B> の値を得る
<B> . get ( <A> )	辞書 <B> から <A> の値を得る
<A> . get ( <B> )	辞書 <A> から <B> キーの値を得る
<B> . get ( <A> )	辞書 <B> から <A> キーの値を得る
<A> . get ( <B> )	マップ <A> から項目名 <B> の値を得る
<B> . get ( <A> )	マップ <B> から項目名 <A> の値を得る
<A> . get ( <B> )	辞書 <A> から項目名 <B> の値を得る
<B> . get ( <A> )	辞書 <B> から項目名 <A> の値を得る
<A> . get ( <B> )	<A> から項目名 <B> の値を得る
<B> . get ( <A> )	<B> から項目名 <A> の値を得る
<A> . get ( <B> )	マップ <A> からキー <B> の値を得る
<B> . get ( <A> )	マップ <B> からキー <A> の値を得る
<A> . get ( <B> )	辞書 <A> における <B> ( キー ) に対応した値
<B> . get ( <A> )	辞書 <B> における <A> ( キー ) に対応した値
<A> . get ( <B> )	<A> における <B> ( キー ) に対応した値
<B> . get ( <A> )	<B> における <A> ( キー ) に対応した値
<A> . get ( <B> )	マップ <A> における <B> ( キー ) に対応した値
<B> . get ( <A> )	マップ <B> における <A> ( キー ) に対応した値
<A> . get ( <B> , <C> )	マップ <A> の項目名 <B> の値、もしなければ <C> を得る
<C> . get ( <B> , <A> )	マップ <C> の項目名 <B> の値、もしなければ <A> を得る
<A> . get ( <B> , <C> )	ハッシュ表 <A> のキー <B> の値、もしなければ <C> を得る
<C> . get ( <B> , <A> )	ハッシュ表 <C> のキー <B> の値、もしなければ <A> を得る
<A> . get ( <B> , <C> )	辞書 <A> の <B> の値、もし存在しなければ <C> を得る
<C> . get ( <B> , <A> )	辞書 <C> の <B> の値、もし存在しなければ <A> を得る
<A> . get ( <B> , <C> )	<A> の <B> 項目名の値、もしなければ <C> を得る
<C> . get ( <B> , <A> )	<C> の <B> 項目名の値、もしなければ <A> を得る
<A> . get ( <B> , <C> )	辞書 <A> のキー <B> の値、もしなければ <C> を得る
<C> . get ( <B> , <A> )	辞書 <C> のキー <B> の値、もしなければ <A> を得る
<A> . get ( <B> , <C> )	辞書 <A> の <B> キーの値、もし存在しなければ <C> を得る
<C> . get ( <B> , <A> )	辞書 <C> の <B> キーの値、もし存在しなければ <A> を得る
<A> . get ( <B> , <C> )	ハッシュ表 <A> の <B> の値、もし存在しなければ <C> を得る
<C> . get ( <B> , <A> )	ハッシュ表 <C> の <B> の値、もし存在しなければ <A> を得る
<A> . get ( <B> , <C> )	辞書 <A> の <B> の値、もしなければ <C> を得る
<C> . get ( <B> , <A> )	辞書 <C> の <B> の値、もしなければ <A> を得る
<A> . get ( <B> , <C> )	辞書 <A> のキー <B> の値、もし存在しなければ <C> を得る
<C> . get ( <B> , <A> )	辞書 <C> のキー <B> の値、もし存在しなければ <A> を得る
<A> . items ( )	辞書 <A> の値一覧
<A> . items ( )	辞書 <A> の項目一覧
<A> . items ( )	ハッシュ表 <A> のエントリ一覧
<A> . keys ( )	辞書 <A> のキー一覧
<A> . keys ( )	辞書 <A> の項目名一覧
<A> . pop ( <B> )	辞書 <A> のキー <B> を取り出す
<B> . pop ( <A> )	辞書 <B> のキー <A> を取り出す
<A> . pop ( <B> )	ハッシュ表 <A> の <B> を取り出す
<B> . pop ( <A> )	ハッシュ表 <B> の <A> を取り出す
<A> . pop ( <B> )	辞書 <A> の <B> を取り出す
<B> . pop ( <A> )	辞書 <B> の <A> を取り出す
<A> . pop ( <B> )	辞書 <A> の <B> キーを取り出す
<B> . pop ( <A> )	辞書 <B> の <A> キーを取り出す
<A> . pop ( <B> )	辞書 <A> の項目名 <B> を取り出す
<B> . pop ( <A> )	辞書 <B> の項目名 <A> を取り出す
<A> . pop ( <B> )	辞書 <A> の <B> 項目名を取り出す
<B> . pop ( <A> )	辞書 <B> の <A> 項目名を取り出す
<A> . pop ( <B> )	<A> の <B> を取り出す
<B> . pop ( <A> )	<B> の <A> を取り出す
<A> . popitem ( )	辞書 <A> から最後に追加したエントリを取り出す
<A> . popitem ( )	ハッシュ表 <A> から最後に追加したエントリを取り出す
<A> . setdefault ( <B> , <C> )	<A> 内に <B> エントリがなければ、そのエントリを <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に <B> エントリがなければ、そのエントリを <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に <B> が存在しなければ、そのエントリを <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に <B> が存在しなければ、そのエントリを <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に項目 <B> が存在しなければ、その項目を <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に項目 <B> が存在しなければ、その項目を <A> にする
<A> . setdefault ( <B> , <C> )	<A> 中に <B> がなければ、その値を <C> にする
<C> . setdefault ( <B> , <A> )	<C> 中に <B> がなければ、その値を <A> にする
<A> . setdefault ( <B> , <C> )	<A> 中に <B> 値が存在しなければ、その値を <C> にする
<C> . setdefault ( <B> , <A> )	<C> 中に <B> 値が存在しなければ、その値を <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に <B> 項目が存在しなければ、その項目を <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に <B> 項目が存在しなければ、その項目を <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に <B> がなければ、そのエントリを <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に <B> がなければ、そのエントリを <A> にする
<A> . setdefault ( <B> , <C> )	<A> 中に <B> がなければ、そのエントリを <C> にする
<C> . setdefault ( <B> , <A> )	<C> 中に <B> がなければ、そのエントリを <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に値 <B> が存在しなければ、その値を <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に値 <B> が存在しなければ、その値を <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に <B> が存在しなければ、その項目を <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に <B> が存在しなければ、その項目を <A> にする
<A> . setdefault ( <B> , <C> )	<A> 内に <B> エントリが存在しなければ、そのエントリを <C> にする
<C> . setdefault ( <B> , <A> )	<C> 内に <B> エントリが存在しなければ、そのエントリを <A> にする
<A> . setdefault ( <B> , <C> )	<A> に値 <B> がなければ、その値を <C> にする
<C> . setdefault ( <B> , <A> )	<C> に値 <B> がなければ、その値を <A> にする
<A> . update ( <B> )	ハッシュ表 <A> を <B> でアップデートする
<B> . update ( <A> )	ハッシュ表 <B> を <A> でアップデートする
<A> . update ( <B> )	辞書 <A> を <B> で更新する
<B> . update ( <A> )	辞書 <B> を <A> で更新する
<A> . update ( <B> )	辞書 <A> を <B> でアップデートする
<B> . update ( <A> )	辞書 <B> を <A> でアップデートする
<A> . update ( <B> )	<A> を <B> で更新する
<B> . update ( <A> )	<B> を <A> で更新する
<A> . values ( )	辞書 <A> の値一覧
<A> |  <B>	辞書 <A> と <B> をマージする
<B> |  <A>	辞書 <B> と <A> をマージする
<A> |  <B>	マップ <A> と <B> をマージする
<B> |  <A>	マップ <B> と <A> をマージする
<A> | = <B>	辞書 <A> に辞書 <B> を追加する
<B> | = <A>	辞書 <B> に辞書 <A> を追加する
<A> | = <B>	マップ <B> を <A> マップに追加する
<B> | = <A>	マップ <A> を <B> マップに追加する
<A> | = <B>	辞書 <A> に <B> を追加する
<B> | = <A>	辞書 <B> に <A> を追加する
<A> | = <B>	辞書 <A> に <B> を加える
<B> | = <A>	辞書 <B> に <A> を加える
<A> | = <B>	辞書 <B> を <A> 辞書に加える
<B> | = <A>	辞書 <A> を <B> 辞書に加える
<A> | = <B>	ハッシュ表 <A> に辞書 <B> を追加する
<B> | = <A>	ハッシュ表 <B> に辞書 <A> を追加する
<A> | = <B>	<B> を <A> 辞書に加える
<B> | = <A>	<A> を <B> 辞書に加える
<A> | = <B>	辞書 <B> を <A> に加える
<B> | = <A>	辞書 <A> を <B> に加える
<A> | = <B>	辞書 <B> を <A> に追加する
<B> | = <A>	辞書 <A> を <B> に追加する
bytearray ( <A> )	<A> のバイト配列
bytes ( <A> )	<A> のバイト列
input ( )	入力された文字列
input ( <A> )	<A> に対し、入力された文字列
input ( <A> )	プロンプト <A> に対し、入力された文字列
memoryview ( <A> )	<A> のメモリビュー
open ( <A> )	ファイル名 <A> を開く
open ( <A> )	ファイル名 <A> をオープンする
open ( <A> )	ファイル名 <A> を読み込む
open ( <A> )	<A> を読む
open ( <A> )	<A> を読み込む
with open ( <A> ) as <B> :	<A> をオープンし、 <B> とする
with open ( <B> ) as <A> :	<B> をオープンし、 <A> とする
with open ( <A> ) as <B> :	ファイル名 <A> をオープンし、 <B> とする
with open ( <B> ) as <A> :	ファイル名 <B> をオープンし、 <A> とする
open ( <A> , 'r' )	読み込み用にで <A> ファイル名をオープンする
open ( <A> , 'r' )	ファイル名 <A> を読み込みモードでで開く
open ( <A> , 'r' )	読み込みモードでで <A> ファイル名を開く
open ( <A> , 'r' )	ファイル名 <A> を読み込み用にでオープンする
open ( <A> , 'r' )	読み込みモードででファイル名 <A> を開く
open ( <A> , 'r' )	読み込みモードでで <A> ファイル名をオープンする
open ( <A> , 'r' )	読み込み用にで <A> ファイル名を開く
open ( <A> , 'r' )	<A> を読み込み用にで開く
open ( <A> , 'r' )	読み込みモードでで <A> を開く
open ( <A> , 'r' )	ファイル名 <A> を読み込み用にで開く
open ( <A> , 'r' )	ファイル名 <A> を読み込みモードででオープンする
open ( <A> , <b> )	ファイル名 <A> を <b> モードででオープンする
open ( <B> , <a> )	ファイル名 <B> を <a> モードででオープンする
open ( <A> , <b> )	<b> モードで <A> ファイル名をでオープンする
open ( <B> , <a> )	<a> モードで <B> ファイル名をでオープンする
open ( <A> , <b> )	<b> モードで <A> をでオープンする
open ( <B> , <a> )	<a> モードで <B> をでオープンする
open ( <A> , <b> )	<b> モードでファイル名 <A> をでオープンする
open ( <B> , <a> )	<a> モードでファイル名 <B> をでオープンする
open ( <A> , 'w' )	保存用にファイル名 <A> を開く
open ( <A> , 'w' )	ファイル名 <A> を書き込みモードで開く
open ( <A> , 'w' )	保存用に <A> をオープンする
open ( <A> , 'w' )	保存用に <A> ファイル名を開く
open ( <A> , 'w' )	ファイル名 <A> を書き込み用に開く
open ( <A> , 'w' )	ファイル名 <A> を保存用に開く
open ( <A> , 'w' )	書き込みモードで <A> をオープンする
open ( <A> , 'w' )	<A> を書き込み用にオープンする
open ( <A> , 'w' )	<A> を書き込み用に開く
open ( <A> , 'w' )	<A> を保存用に開く
open ( <A> , 'w' )	書き込みモードで <A> を開く
open ( <A> , 'w' )	ファイル名 <A> を書き込みモードでオープンする
open ( <A> , 'w' )	<A> を書き込みモードでオープンする
open ( <A> , 'w' )	保存用に <A> を開く
open ( <A> , 'a' )	<A> を追加用に開く
open ( <A> , 'a' )	<A> を追加用にオープンする
open ( <A> , 'a' )	ファイル名 <A> を追加用にオープンする
open ( <A> , 'a' )	ファイル名 <A> を追加モードで開く
open ( <A> , 'a' )	追加モードで <A> をオープンする
open ( <A> , 'a' )	ファイル名 <A> を追加用に開く
open ( <A> , 'a' )	追加用にファイル名 <A> を開く
open ( <A> , 'a' )	追加モードでファイル名 <A> を開く
open ( <A> , 'a' )	追加用に <A> ファイル名を開く
open ( <A> , 'a' )	ファイル名 <A> を追加モードでオープンする
open ( <A> , 'b' )	<A> をバイナリモードで開く
open ( <A> , 'b' )	ファイル名 <A> をバイナリモードで開く
open ( <A> , 'b' )	ファイル名 <A> をバイナリ用に開く
open ( <A> , 'b' )	バイナリモードで <A> を開く
open ( <A> , 'b' )	バイナリ用にファイル名 <A> をオープンする
open ( <A> , 'b' )	<A> をバイナリモードでオープンする
open ( <A> , 'b' )	バイナリ用に <A> を開く
open ( <A> , 'b' )	バイナリ用に <A> をオープンする
open ( <A> , 'b' )	バイナリ用に <A> ファイル名を開く
open ( <A> , 'b' )	バイナリモードで <A> をオープンする
print ( )	空行を出力する
print ( )	空行を表示する
print ( <A> )	<A> を出力する
print ( <A> )	<A> を表示する
print ( <A> , <B> )	<A> と順に <B> を表示する
print ( <B> , <A> )	<B> と順に <A> を表示する
print ( <A> , <B> )	<A> と順に <B> を出力する
print ( <B> , <A> )	<B> と順に <A> を出力する
print ( <A> , <B> )	<A> と <B> を順に出力する
print ( <B> , <A> )	<B> と <A> を順に出力する
print ( <A> , <B> )	<A> と <B> を表示する
print ( <B> , <A> )	<B> と <A> を表示する
print ( <A> , <B> )	<A> と <B> をプリントする
print ( <B> , <A> )	<B> と <A> をプリントする
print ( <A> , <B> )	<A> と順に <B> をプリントする
print ( <B> , <A> )	<B> と順に <A> をプリントする
print ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> をプリントする
print ( <C> , <B> , <A> )	<C> 、 <B> 、 <A> をプリントする
print ( <A> , <B> , <C> )	<A> 、 <B> 、順に <C> を出力する
print ( <C> , <B> , <A> )	<C> 、 <B> 、順に <A> を出力する
print ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> を出力する
print ( <C> , <B> , <A> )	<C> 、 <B> 、 <A> を出力する
print ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> を順にプリントする
print ( <C> , <B> , <A> )	<C> 、 <B> 、 <A> を順にプリントする
print ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> を表示する
print ( <C> , <B> , <A> )	<C> 、 <B> 、 <A> を表示する
print ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> を順に出力する
print ( <C> , <B> , <A> )	<C> 、 <B> 、 <A> を順に出力する
print ( <A> , <B> , <C> )	<A> 、 <B> 、 <C> を順に表示する
print ( <C> , <B> , <A> )	<C> 、 <B> 、 <A> を順に表示する
print ( <A> , <B> , <C> )	<A> 、 <B> 、順に <C> を表示する
print ( <C> , <B> , <A> )	<C> 、 <B> 、順に <A> を表示する
print ( <A> , end = '' )	<A> を
print ( <A> , <B> , end = '' )	<A> と <B> を改行なく表示する
print ( <B> , <A> , end = '' )	<B> と <A> を改行なく表示する
print ( <A> , <B> , end = '' )	<A> と <B> を改行せず出力する
print ( <B> , <A> , end = '' )	<B> と <A> を改行せず出力する
print ( <A> , <B> , end = '' )	<A> と <B> を改行せず表示する
print ( <B> , <A> , end = '' )	<B> と <A> を改行せず表示する
print ( <A> , <B> , end = '' )	<A> と <B> を改行なく出力する
print ( <B> , <A> , end = '' )	<B> と <A> を改行なく出力する
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> を表示する
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> を表示する
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> をプリントする
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> をプリントする
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> を出力する
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> を出力する
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> を改行なく出力する
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> を改行なく出力する
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> を改行せず ] [ 順に出力する
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> を改行せず ] [ 順に出力する
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> を改行せず ] [ 順に表示する
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> を改行せず ] [ 順に表示する
print ( <A> , <B> , <C> , end = '' )	<A> 、 <B> 、 <C> を改行なく表示する
print ( <C> , <B> , <A> , end = '' )	<C> 、 <B> 、 <A> を改行なく表示する
callable ( <A> )	<A> が関数か否か
if callable ( <A> ) :	<A> が関数のとき
eval ( <A> )	式 <A> を評価した結果
globals ( )	グローバル変数の一覧
filter ( <A> , <B> )	<A> で <B> の各要素をフィルタする
filter ( <B> , <A> )	<B> で <A> の各要素をフィルタする
filter ( <A> , <B> )	<A> で列 <B> のそれぞれをフィルタする
filter ( <B> , <A> )	<B> で列 <A> のそれぞれをフィルタする
filter ( <A> , <B> )	列 <B> の各要素を <A> 関数でフィルタする
filter ( <B> , <A> )	列 <A> の各要素を <B> 関数でフィルタする
filter ( <A> , <B> )	関数 <A> で <B> の各要素をフィルタする
filter ( <B> , <A> )	関数 <B> で <A> の各要素をフィルタする
filter ( <A> , <B> )	列 <B> のそれぞれを <A> でフィルタする
filter ( <B> , <A> )	列 <A> のそれぞれを <B> でフィルタする
filter ( <A> , <B> )	<B> を <A> でフィルタする
filter ( <B> , <A> )	<A> を <B> でフィルタする
filter ( <A> , <B> )	関数 <A> で <B> のそれぞれをフィルタする
filter ( <B> , <A> )	関数 <B> で <A> のそれぞれをフィルタする
filter ( <A> , <B> )	列 <B> の各要素を関数 <A> でフィルタする
filter ( <B> , <A> )	列 <A> の各要素を関数 <B> でフィルタする
filter ( <A> , <B> )	列 <B> のそれぞれを <A> 関数でフィルタする
filter ( <B> , <A> )	列 <A> のそれぞれを <B> 関数でフィルタする
filter ( <A> , <B> )	<B> のそれぞれを <A> 関数でフィルタする
filter ( <B> , <A> )	<A> のそれぞれを <B> 関数でフィルタする
filter ( <A> , <B> )	<B> を関数 <A> でフィルタする
filter ( <B> , <A> )	<A> を関数 <B> でフィルタする
filter ( <A> , <B> )	<A> で <B> のそれぞれをフィルタする
filter ( <B> , <A> )	<B> で <A> のそれぞれをフィルタする
map ( <A> , <B> )	関数 <A> で <B> 列のそれぞれをマップする
map ( <B> , <A> )	関数 <B> で <A> 列のそれぞれをマップする
map ( <A> , <B> )	<B> のそれぞれを <A> でマップする
map ( <B> , <A> )	<A> のそれぞれを <B> でマップする
map ( <A> , <B> )	<A> で列 <B> の各要素をマップする
map ( <B> , <A> )	<B> で列 <A> の各要素をマップする
map ( <A> , <B> )	関数 <A> で列 <B> のそれぞれをマップする
map ( <B> , <A> )	関数 <B> で列 <A> のそれぞれをマップする
map ( <A> , <B> )	列 <B> を <A> 関数でマップする
map ( <B> , <A> )	列 <A> を <B> 関数でマップする
map ( <A> , <B> )	<B> の各要素を関数 <A> でマップする
map ( <B> , <A> )	<A> の各要素を関数 <B> でマップする
map ( <A> , <B> )	列 <B> を <A> でマップする
map ( <B> , <A> )	列 <A> を <B> でマップする
map ( <A> , <B> )	<B> を <A> でマップする
map ( <B> , <A> )	<A> を <B> でマップする
map ( <A> , <B> )	関数 <A> で <B> の各要素をマップする
map ( <B> , <A> )	関数 <B> で <A> の各要素をマップする
map ( <A> , <B> )	関数 <A> で <B> 列をマップする
map ( <B> , <A> )	関数 <B> で <A> 列をマップする
delattr ( <A> , <B> )	<A> のプロパティ <B> を削除する
delattr ( <B> , <A> )	<B> のプロパティ <A> を削除する
delattr ( <A> , <B> )	オブジェクト <A> のプロパティ <B> を削除する
delattr ( <B> , <A> )	オブジェクト <B> のプロパティ <A> を削除する
delattr ( <A> , <B> )	<A> の <B> プロパティを削除する
delattr ( <B> , <A> )	<B> の <A> プロパティを削除する
delattr ( <A> , <B> )	オブジェクト <A> の <B> 属性を削除する
delattr ( <B> , <A> )	オブジェクト <B> の <A> 属性を削除する
delattr ( <A> , <B> )	オブジェクト <A> の <B> フィールドを削除する
delattr ( <B> , <A> )	オブジェクト <B> の <A> フィールドを削除する
getattr ( <A> , <B> )	<A> のプロパティ <B> の値
getattr ( <B> , <A> )	<B> のプロパティ <A> の値
getattr ( <A> , <B> )	<A> の <B> プロパティの値
getattr ( <B> , <A> )	<B> の <A> プロパティの値
getattr ( <A> , <B> )	<A> の <B> フィールドの値
getattr ( <B> , <A> )	<B> の <A> フィールドの値
getattr ( <A> , <B> )	オブジェクト <A> の <B> プロパティの値
getattr ( <B> , <A> )	オブジェクト <B> の <A> プロパティの値
hasattr ( <A> , <B> )	<A> がプロパティ <B> を持つか否か
hasattr ( <B> , <A> )	<B> がプロパティ <A> を持つか否か
if hasattr ( <A> , <B> ) :	<A> がプロパティ <B> を持つならば
if hasattr ( <B> , <A> ) :	<B> がプロパティ <A> を持つならば
hasattr ( <A> , <B> )	オブジェクト <A> がプロパティ <B> を持つか否か
hasattr ( <B> , <A> )	オブジェクト <B> がプロパティ <A> を持つか否か
if hasattr ( <A> , <B> ) :	オブジェクト <A> がプロパティ <B> を持つのとき
if hasattr ( <B> , <A> ) :	オブジェクト <B> がプロパティ <A> を持つのとき
hasattr ( <A> , <B> )	オブジェクト <A> がフィールド <B> を持つか否か
hasattr ( <B> , <A> )	オブジェクト <B> がフィールド <A> を持つか否か
if hasattr ( <A> , <B> ) :	もしオブジェクト <A> がフィールド <B> を持つならば
if hasattr ( <B> , <A> ) :	もしオブジェクト <B> がフィールド <A> を持つならば
hasattr ( <A> , <B> )	オブジェクト <A> が属性 <B> を持つか
hasattr ( <B> , <A> )	オブジェクト <B> が属性 <A> を持つか
if hasattr ( <A> , <B> ) :	オブジェクト <A> が属性 <B> を持つのとき
if hasattr ( <B> , <A> ) :	オブジェクト <B> が属性 <A> を持つのとき
not hasattr ( <A> , <B> )	<A> がプロパティ <B> を持たないか
not hasattr ( <B> , <A> )	<B> がプロパティ <A> を持たないか
not hasattr ( <A> , <B> )	オブジェクト <A> がプロパティ <B> を持たないか
not hasattr ( <B> , <A> )	オブジェクト <B> がプロパティ <A> を持たないか
not hasattr ( <A> , <B> )	オブジェクト <A> がフィールド <B> を持たないか
not hasattr ( <B> , <A> )	オブジェクト <B> がフィールド <A> を持たないか
not hasattr ( <A> , <B> )	オブジェクト <A> が属性 <B> を持たないか
not hasattr ( <B> , <A> )	オブジェクト <B> が属性 <A> を持たないか
if hasattr ( <A> , <B> ) :	もし <A> がプロパティ <B> を持てば
if hasattr ( <B> , <A> ) :	もし <B> がプロパティ <A> を持てば
if hasattr ( <A> , <B> ) :	オブジェクト <A> がプロパティ <B> を持てば
if hasattr ( <B> , <A> ) :	オブジェクト <B> がプロパティ <A> を持てば
if hasattr ( <A> , <B> ) :	オブジェクト <A> がプロパティ <B> を持ったなら
if hasattr ( <B> , <A> ) :	オブジェクト <B> がプロパティ <A> を持ったなら
if hasattr ( <A> , <B> ) :	もしオブジェクト <A> がフィールド <B> を持てば
if hasattr ( <B> , <A> ) :	もしオブジェクト <B> がフィールド <A> を持てば
if hasattr ( <A> , <B> ) :	オブジェクト <A> がフィールド <B> を持ったら
if hasattr ( <B> , <A> ) :	オブジェクト <B> がフィールド <A> を持ったら
if hasattr ( <A> , <B> ) :	もしオブジェクト <A> が属性 <B> を持てば
if hasattr ( <B> , <A> ) :	もしオブジェクト <B> が属性 <A> を持てば
if hasattr ( <A> , <B> ) :	オブジェクト <A> が属性 <B> を持った場合
if hasattr ( <B> , <A> ) :	オブジェクト <B> が属性 <A> を持った場合
if not hasattr ( <A> , <B> ) :	<A> がプロパティ <B> を持たないとき
if not hasattr ( <B> , <A> ) :	<B> がプロパティ <A> を持たないとき
if not hasattr ( <A> , <B> ) :	もし <A> がプロパティ <B> を持たなければ
if not hasattr ( <B> , <A> ) :	もし <B> がプロパティ <A> を持たなければ
if not hasattr ( <A> , <B> ) :	オブジェクト <A> がプロパティ <B> を持たなければ
if not hasattr ( <B> , <A> ) :	オブジェクト <B> がプロパティ <A> を持たなければ
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> がフィールド <B> を持たない場合
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> がフィールド <A> を持たない場合
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> がフィールド <B> を持たなければ
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> がフィールド <A> を持たなければ
if not hasattr ( <A> , <B> ) :	オブジェクト <A> がフィールド <B> を持たなかったとき
if not hasattr ( <B> , <A> ) :	オブジェクト <B> がフィールド <A> を持たなかったとき
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> が属性 <B> を持たなければ
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> が属性 <A> を持たなければ
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> が属性 <B> を持たなかったなら
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> が属性 <A> を持たなかったなら
while hasattr ( <A> , <B> ) :	オブジェクト <A> がプロパティ <B> を持つ間
while hasattr ( <B> , <A> ) :	オブジェクト <B> がプロパティ <A> を持つ間
while hasattr ( <A> , <B> ) :	オブジェクト <A> がフィールド <B> を持つ間
while hasattr ( <B> , <A> ) :	オブジェクト <B> がフィールド <A> を持つ間
while not hasattr ( <A> , <B> ) :	オブジェクト <A> がプロパティ <B> を持たない間
while not hasattr ( <B> , <A> ) :	オブジェクト <B> がプロパティ <A> を持たない間
while not hasattr ( <A> , <B> ) :	オブジェクト <A> がフィールド <B> を持たない間
while not hasattr ( <B> , <A> ) :	オブジェクト <B> がフィールド <A> を持たない間
hasattr ( <A> , <B> )	オブジェクト <A> が <B> 属性を持つか
hasattr ( <B> , <A> )	オブジェクト <B> が <A> 属性を持つか
if hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> 属性を持つの場合
if hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> 属性を持つの場合
hasattr ( <A> , <B> )	<A> が <B> 属性を持つか否か
hasattr ( <B> , <A> )	<B> が <A> 属性を持つか否か
if hasattr ( <A> , <B> ) :	もし <A> が <B> 属性を持つならば
if hasattr ( <B> , <A> ) :	もし <B> が <A> 属性を持つならば
hasattr ( <A> , <B> )	オブジェクト <A> が <B> プロパティを持つか否か
hasattr ( <B> , <A> )	オブジェクト <B> が <A> プロパティを持つか否か
if hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> プロパティを持つならば
if hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> プロパティを持つならば
hasattr ( <A> , <B> )	<A> が <B> フィールドを持つか
hasattr ( <B> , <A> )	<B> が <A> フィールドを持つか
if hasattr ( <A> , <B> ) :	<A> が <B> フィールドを持つの場合
if hasattr ( <B> , <A> ) :	<B> が <A> フィールドを持つの場合
hasattr ( <A> , <B> )	<A> が <B> プロパティを持つかどうか
hasattr ( <B> , <A> )	<B> が <A> プロパティを持つかどうか
if hasattr ( <A> , <B> ) :	<A> が <B> プロパティを持つのとき
if hasattr ( <B> , <A> ) :	<B> が <A> プロパティを持つのとき
not hasattr ( <A> , <B> )	オブジェクト <A> が <B> 属性を持たないかどうか
not hasattr ( <B> , <A> )	オブジェクト <B> が <A> 属性を持たないかどうか
not hasattr ( <A> , <B> )	<A> が <B> 属性を持たないか
not hasattr ( <B> , <A> )	<B> が <A> 属性を持たないか
not hasattr ( <A> , <B> )	オブジェクト <A> が <B> プロパティを持たないかどうか
not hasattr ( <B> , <A> )	オブジェクト <B> が <A> プロパティを持たないかどうか
not hasattr ( <A> , <B> )	<A> が <B> フィールドを持たないか
not hasattr ( <B> , <A> )	<B> が <A> フィールドを持たないか
not hasattr ( <A> , <B> )	<A> が <B> プロパティを持たないかどうか
not hasattr ( <B> , <A> )	<B> が <A> プロパティを持たないかどうか
if hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> 属性を持てば
if hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> 属性を持てば
if hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> 属性を持ったら
if hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> 属性を持ったら
if hasattr ( <A> , <B> ) :	もし <A> が <B> 属性を持てば
if hasattr ( <B> , <A> ) :	もし <B> が <A> 属性を持てば
if hasattr ( <A> , <B> ) :	もしオブジェクト <A> が <B> プロパティを持てば
if hasattr ( <B> , <A> ) :	もしオブジェクト <B> が <A> プロパティを持てば
if hasattr ( <A> , <B> ) :	もし <A> が <B> フィールドを持つ場合
if hasattr ( <B> , <A> ) :	もし <B> が <A> フィールドを持つ場合
if hasattr ( <A> , <B> ) :	もし <A> が <B> フィールドを持てば
if hasattr ( <B> , <A> ) :	もし <B> が <A> フィールドを持てば
if hasattr ( <A> , <B> ) :	<A> が <B> フィールドを持ったとき
if hasattr ( <B> , <A> ) :	<B> が <A> フィールドを持ったとき
if hasattr ( <A> , <B> ) :	<A> が <B> プロパティを持てば
if hasattr ( <B> , <A> ) :	<B> が <A> プロパティを持てば
if not hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> 属性を持たないならば
if not hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> 属性を持たないならば
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> が <B> 属性を持たなかったとき
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> が <A> 属性を持たなかったとき
if not hasattr ( <A> , <B> ) :	<A> が <B> 属性を持たない場合
if not hasattr ( <B> , <A> ) :	<B> が <A> 属性を持たない場合
if not hasattr ( <A> , <B> ) :	もし <A> が <B> 属性を持たなければ
if not hasattr ( <B> , <A> ) :	もし <B> が <A> 属性を持たなければ
if not hasattr ( <A> , <B> ) :	<A> が <B> 属性を持たなかったら
if not hasattr ( <B> , <A> ) :	<B> が <A> 属性を持たなかったら
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> が <B> プロパティを持たないならば
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> が <A> プロパティを持たないならば
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> が <B> プロパティを持たなければ
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> が <A> プロパティを持たなければ
if not hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> プロパティを持たなかったならば
if not hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> プロパティを持たなかったならば
if not hasattr ( <A> , <B> ) :	もし <A> が <B> フィールドを持たないとき
if not hasattr ( <B> , <A> ) :	もし <B> が <A> フィールドを持たないとき
if not hasattr ( <A> , <B> ) :	<A> が <B> フィールドを持たなければ
if not hasattr ( <B> , <A> ) :	<B> が <A> フィールドを持たなければ
if not hasattr ( <A> , <B> ) :	<A> が <B> フィールドを持たなかったとき
if not hasattr ( <B> , <A> ) :	<B> が <A> フィールドを持たなかったとき
if not hasattr ( <A> , <B> ) :	もし <A> が <B> プロパティを持たなければ
if not hasattr ( <B> , <A> ) :	もし <B> が <A> プロパティを持たなければ
if not hasattr ( <A> , <B> ) :	<A> が <B> プロパティを持たなかったなら
if not hasattr ( <B> , <A> ) :	<B> が <A> プロパティを持たなかったなら
while hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> 属性を持つ間
while hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> 属性を持つ間
while hasattr ( <A> , <B> ) :	<A> が <B> プロパティを持つ間
while hasattr ( <B> , <A> ) :	<B> が <A> プロパティを持つ間
while not hasattr ( <A> , <B> ) :	オブジェクト <A> が <B> 属性を持たない間
while not hasattr ( <B> , <A> ) :	オブジェクト <B> が <A> 属性を持たない間
while not hasattr ( <A> , <B> ) :	<A> が <B> 属性を持たない間
while not hasattr ( <B> , <A> ) :	<B> が <A> 属性を持たない間
while not hasattr ( <A> , <B> ) :	<A> が <B> フィールドを持たない間
while not hasattr ( <B> , <A> ) :	<B> が <A> フィールドを持たない間
while not hasattr ( <A> , <B> ) :	<A> が <B> プロパティを持たない間
while not hasattr ( <B> , <A> ) :	<B> が <A> プロパティを持たない間
hasattr ( <A> , <B> )	オブジェクト <A> にフィールド <B> があるか否か
hasattr ( <B> , <A> )	オブジェクト <B> にフィールド <A> があるか否か
if hasattr ( <A> , <B> ) :	オブジェクト <A> にフィールド <B> があるならば
if hasattr ( <B> , <A> ) :	オブジェクト <B> にフィールド <A> があるならば
hasattr ( <A> , <B> )	<A> にプロパティ <B> があるか
hasattr ( <B> , <A> )	<B> にプロパティ <A> があるか
if hasattr ( <A> , <B> ) :	<A> にプロパティ <B> があるならば
if hasattr ( <B> , <A> ) :	<B> にプロパティ <A> があるならば
hasattr ( <A> , <B> )	オブジェクト <A> にプロパティ <B> があるか
hasattr ( <B> , <A> )	オブジェクト <B> にプロパティ <A> があるか
if hasattr ( <A> , <B> ) :	オブジェクト <A> にプロパティ <B> があるならば
if hasattr ( <B> , <A> ) :	オブジェクト <B> にプロパティ <A> があるならば
hasattr ( <A> , <B> )	<A> に属性 <B> があるかどうか
hasattr ( <B> , <A> )	<B> に属性 <A> があるかどうか
if hasattr ( <A> , <B> ) :	もし <A> に属性 <B> があるならば
if hasattr ( <B> , <A> ) :	もし <B> に属性 <A> があるならば
not hasattr ( <A> , <B> )	オブジェクト <A> にフィールド <B> があらないかどうか
not hasattr ( <B> , <A> )	オブジェクト <B> にフィールド <A> があらないかどうか
not hasattr ( <A> , <B> )	<A> にプロパティ <B> があらないか否か
not hasattr ( <B> , <A> )	<B> にプロパティ <A> があらないか否か
not hasattr ( <A> , <B> )	オブジェクト <A> にプロパティ <B> があらないか否か
not hasattr ( <B> , <A> )	オブジェクト <B> にプロパティ <A> があらないか否か
not hasattr ( <A> , <B> )	<A> に属性 <B> があらないか否か
not hasattr ( <B> , <A> )	<B> に属性 <A> があらないか否か
if hasattr ( <A> , <B> ) :	オブジェクト <A> にフィールド <B> があれば
if hasattr ( <B> , <A> ) :	オブジェクト <B> にフィールド <A> があれば
if hasattr ( <A> , <B> ) :	もし <A> にプロパティ <B> があれば
if hasattr ( <B> , <A> ) :	もし <B> にプロパティ <A> があれば
if hasattr ( <A> , <B> ) :	もし <A> にプロパティ <B> があったならば
if hasattr ( <B> , <A> ) :	もし <B> にプロパティ <A> があったならば
if hasattr ( <A> , <B> ) :	オブジェクト <A> にプロパティ <B> があれば
if hasattr ( <B> , <A> ) :	オブジェクト <B> にプロパティ <A> があれば
if hasattr ( <A> , <B> ) :	もしオブジェクト <A> にプロパティ <B> があったら
if hasattr ( <B> , <A> ) :	もしオブジェクト <B> にプロパティ <A> があったら
if hasattr ( <A> , <B> ) :	<A> に属性 <B> があるとき
if hasattr ( <B> , <A> ) :	<B> に属性 <A> があるとき
if hasattr ( <A> , <B> ) :	もし <A> に属性 <B> があれば
if hasattr ( <B> , <A> ) :	もし <B> に属性 <A> があれば
if hasattr ( <A> , <B> ) :	もし <A> に属性 <B> があったなら
if hasattr ( <B> , <A> ) :	もし <B> に属性 <A> があったなら
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> にフィールド <B> があらないならば
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> にフィールド <A> があらないならば
if not hasattr ( <A> , <B> ) :	<A> にプロパティ <B> があれば
if not hasattr ( <B> , <A> ) :	<B> にプロパティ <A> があれば
if not hasattr ( <A> , <B> ) :	<A> にプロパティ <B> があったなら
if not hasattr ( <B> , <A> ) :	<B> にプロパティ <A> があったなら
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> にプロパティ <B> があらな場合
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> にプロパティ <A> があらな場合
if not hasattr ( <A> , <B> ) :	<A> に属性 <B> があれば
if not hasattr ( <B> , <A> ) :	<B> に属性 <A> があれば
if not hasattr ( <A> , <B> ) :	<A> に属性 <B> があったら
if not hasattr ( <B> , <A> ) :	<B> に属性 <A> があったら
while hasattr ( <A> , <B> ) :	オブジェクト <A> にフィールド <B> がある間
while hasattr ( <B> , <A> ) :	オブジェクト <B> にフィールド <A> がある間
while hasattr ( <A> , <B> ) :	<A> にプロパティ <B> がある間
while hasattr ( <B> , <A> ) :	<B> にプロパティ <A> がある間
while hasattr ( <A> , <B> ) :	オブジェクト <A> にプロパティ <B> がある間
while hasattr ( <B> , <A> ) :	オブジェクト <B> にプロパティ <A> がある間
while not hasattr ( <A> , <B> ) :	<A> にプロパティ <B> があらな間
while not hasattr ( <B> , <A> ) :	<B> にプロパティ <A> があらな間
while not hasattr ( <A> , <B> ) :	<A> に属性 <B> があらな間
while not hasattr ( <B> , <A> ) :	<B> に属性 <A> があらな間
hasattr ( <A> , <B> )	<A> に <B> プロパティがあるかどうか
hasattr ( <B> , <A> )	<B> に <A> プロパティがあるかどうか
if hasattr ( <A> , <B> ) :	<A> に <B> プロパティがある場合
if hasattr ( <B> , <A> ) :	<B> に <A> プロパティがある場合
hasattr ( <A> , <B> )	<A> に <B> フィールドがあるかどうか
hasattr ( <B> , <A> )	<B> に <A> フィールドがあるかどうか
if hasattr ( <A> , <B> ) :	もし <A> に <B> フィールドがあるならば
if hasattr ( <B> , <A> ) :	もし <B> に <A> フィールドがあるならば
hasattr ( <A> , <B> )	オブジェクト <A> に <B> プロパティがあるかどうか
hasattr ( <B> , <A> )	オブジェクト <B> に <A> プロパティがあるかどうか
if hasattr ( <A> , <B> ) :	オブジェクト <A> に <B> プロパティがある場合
if hasattr ( <B> , <A> ) :	オブジェクト <B> に <A> プロパティがある場合
not hasattr ( <A> , <B> )	<A> に <B> プロパティがあらないか
not hasattr ( <B> , <A> )	<B> に <A> プロパティがあらないか
not hasattr ( <A> , <B> )	<A> に <B> フィールドがあらないかどうか
not hasattr ( <B> , <A> )	<B> に <A> フィールドがあらないかどうか
not hasattr ( <A> , <B> )	オブジェクト <A> に <B> プロパティがあらないか
not hasattr ( <B> , <A> )	オブジェクト <B> に <A> プロパティがあらないか
if hasattr ( <A> , <B> ) :	<A> に <B> プロパティがある場合
if hasattr ( <B> , <A> ) :	<B> に <A> プロパティがある場合
if hasattr ( <A> , <B> ) :	もし <A> に <B> プロパティがあった場合
if hasattr ( <B> , <A> ) :	もし <B> に <A> プロパティがあった場合
if hasattr ( <A> , <B> ) :	もし <A> に <B> フィールドがあるとき
if hasattr ( <B> , <A> ) :	もし <B> に <A> フィールドがあるとき
if hasattr ( <A> , <B> ) :	<A> に <B> フィールドがあれば
if hasattr ( <B> , <A> ) :	<B> に <A> フィールドがあれば
if hasattr ( <A> , <B> ) :	もし <A> に <B> フィールドがあったとき
if hasattr ( <B> , <A> ) :	もし <B> に <A> フィールドがあったとき
if hasattr ( <A> , <B> ) :	もしオブジェクト <A> に <B> プロパティがあるとき
if hasattr ( <B> , <A> ) :	もしオブジェクト <B> に <A> プロパティがあるとき
if hasattr ( <A> , <B> ) :	オブジェクト <A> に <B> プロパティがあれば
if hasattr ( <B> , <A> ) :	オブジェクト <B> に <A> プロパティがあれば
if not hasattr ( <A> , <B> ) :	<A> に <B> プロパティがあらなければ
if not hasattr ( <B> , <A> ) :	<B> に <A> プロパティがあらなければ
if not hasattr ( <A> , <B> ) :	もし <A> に <B> プロパティがあらなかったなら
if not hasattr ( <B> , <A> ) :	もし <B> に <A> プロパティがあらなかったなら
if not hasattr ( <A> , <B> ) :	<A> に <B> フィールドがあらなければ
if not hasattr ( <B> , <A> ) :	<B> に <A> フィールドがあらなければ
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> に <B> プロパティがあらないならば
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> に <A> プロパティがあらないならば
if not hasattr ( <A> , <B> ) :	もしオブジェクト <A> に <B> プロパティがあらなければ
if not hasattr ( <B> , <A> ) :	もしオブジェクト <B> に <A> プロパティがあらなければ
if not hasattr ( <A> , <B> ) :	オブジェクト <A> に <B> プロパティがあらなかった場合
if not hasattr ( <B> , <A> ) :	オブジェクト <B> に <A> プロパティがあらなかった場合
while hasattr ( <A> , <B> ) :	<A> に <B> プロパティがある間
while hasattr ( <B> , <A> ) :	<B> に <A> プロパティがある間
while not hasattr ( <A> , <B> ) :	<A> に <B> プロパティがあらない間
while not hasattr ( <B> , <A> ) :	<B> に <A> プロパティがあらない間
while not hasattr ( <A> , <B> ) :	オブジェクト <A> に <B> プロパティがあらない間
while not hasattr ( <B> , <A> ) :	オブジェクト <B> に <A> プロパティがあらない間
setattr ( <A> , <B> , <C> )	<A> のフィールド <B> の値を <C> にする
setattr ( <C> , <B> , <A> )	<C> のフィールド <B> の値を <A> にする
setattr ( <A> , <B> , <C> )	オブジェクト <A> のプロパティ <B> の値を <C> に設定する +
setattr ( <C> , <B> , <A> )	オブジェクト <C> のプロパティ <B> の値を <A> に設定する +
setattr ( <A> , <B> , <C> )	<A> のプロパティ <B> の値を <C> に設定する +
setattr ( <C> , <B> , <A> )	<C> のプロパティ <B> の値を <A> に設定する +
setattr ( <A> , <B> , <C> )	<A> のプロパティ <B> の値を <C> にする
setattr ( <C> , <B> , <A> )	<C> のプロパティ <B> の値を <A> にする
setattr ( <A> , <B> , <C> )	<A> の属性 <B> の値を <C> に設定する +
setattr ( <C> , <B> , <A> )	<C> の属性 <B> の値を <A> に設定する +
setattr ( <A> , <B> , <C> )	オブジェクト <A> のプロパティ <B> の値を <C> にする
setattr ( <C> , <B> , <A> )	オブジェクト <C> のプロパティ <B> の値を <A> にする
setattr ( <A> , <B> , <C> )	<A> のフィールド <B> の値を <C> に設定する +
setattr ( <C> , <B> , <A> )	<C> のフィールド <B> の値を <A> に設定する +
setattr ( <A> , <B> , <C> )	オブジェクト <A> の属性 <B> の値を <C> に設定する +
setattr ( <C> , <B> , <A> )	オブジェクト <C> の属性 <B> の値を <A> に設定する +
setattr ( <A> , <B> , <C> )	オブジェクト <A> のフィールド <B> の値を <C> にする
setattr ( <C> , <B> , <A> )	オブジェクト <C> のフィールド <B> の値を <A> にする
setattr ( <A> , <B> , <C> )	オブジェクト <A> の <B> プロパティの値を <C> にする
setattr ( <C> , <B> , <A> )	オブジェクト <C> の <B> プロパティの値を <A> にする
setattr ( <A> , <B> , <C> )	<A> の <B> プロパティの値を <C> に設定する +
setattr ( <C> , <B> , <A> )	<C> の <B> プロパティの値を <A> に設定する +
setattr ( <A> , <B> , <C> )	オブジェクト <A> の <B> 属性の値を <C> に設定する +
setattr ( <C> , <B> , <A> )	オブジェクト <C> の <B> 属性の値を <A> に設定する +
setattr ( <A> , <B> , <C> )	<A> の <B> 属性の値を <C> にする
setattr ( <C> , <B> , <A> )	<C> の <B> 属性の値を <A> にする
setattr ( <A> , <B> , <C> )	オブジェクト <A> の <B> プロパティの値を <C> に設定する +
setattr ( <C> , <B> , <A> )	オブジェクト <C> の <B> プロパティの値を <A> に設定する +
hash ( <A> )	<A> のハッシュ値
isinstance ( <A> , <B> )	<A> が <B> のインスタンスか否か
isinstance ( <B> , <A> )	<B> が <A> のインスタンスか否か
if isinstance ( <A> , <B> ) :	<A> が <B> のインスタンスの場合
if isinstance ( <B> , <A> ) :	<B> が <A> のインスタンスの場合
isinstance ( <A> , <B> )	オブジェクト <A> が <B> か
isinstance ( <B> , <A> )	オブジェクト <B> が <A> か
if isinstance ( <A> , <B> ) :	オブジェクト <A> が <B> のとき
if isinstance ( <B> , <A> ) :	オブジェクト <B> が <A> のとき
isinstance ( <A> , <B> )	オブジェクト <A> が <B> のインスタンスか
isinstance ( <B> , <A> )	オブジェクト <B> が <A> のインスタンスか
if isinstance ( <A> , <B> ) :	もしオブジェクト <A> が <B> のインスタンスならば
if isinstance ( <B> , <A> ) :	もしオブジェクト <B> が <A> のインスタンスならば
isinstance ( <A> , <B> )	<A> が <B> か
isinstance ( <B> , <A> )	<B> が <A> か
if isinstance ( <A> , <B> ) :	<A> が <B> ならば
if isinstance ( <B> , <A> ) :	<B> が <A> ならば
not isinstance ( <A> , <B> )	<A> が <B> のインスタンスでないか否か
not isinstance ( <B> , <A> )	<B> が <A> のインスタンスでないか否か
not isinstance ( <A> , <B> )	オブジェクト <A> が <B> でないかどうか
not isinstance ( <B> , <A> )	オブジェクト <B> が <A> でないかどうか
not isinstance ( <A> , <B> )	オブジェクト <A> が <B> のインスタンスでないか
not isinstance ( <B> , <A> )	オブジェクト <B> が <A> のインスタンスでないか
not isinstance ( <A> , <B> )	<A> が <B> でないか
not isinstance ( <B> , <A> )	<B> が <A> でないか
if isinstance ( <A> , <B> ) :	<A> が <B> のインスタンス場合
if isinstance ( <B> , <A> ) :	<B> が <A> のインスタンス場合
if isinstance ( <A> , <B> ) :	オブジェクト <A> が <B> とき
if isinstance ( <B> , <A> ) :	オブジェクト <B> が <A> とき
if isinstance ( <A> , <B> ) :	もしオブジェクト <A> が <B> のインスタンス場合
if isinstance ( <B> , <A> ) :	もしオブジェクト <B> が <A> のインスタンス場合
if isinstance ( <A> , <B> ) :	<A> が <B> 場合
if isinstance ( <B> , <A> ) :	<B> が <A> 場合
if not isinstance ( <A> , <B> ) :	もし <A> が <B> のインスタンスでなならば
if not isinstance ( <B> , <A> ) :	もし <B> が <A> のインスタンスでなならば
if not isinstance ( <A> , <B> ) :	オブジェクト <A> が <B> でないとき
if not isinstance ( <B> , <A> ) :	オブジェクト <B> が <A> でないとき
if not isinstance ( <A> , <B> ) :	もしオブジェクト <A> が <B> のインスタンスでないならば
if not isinstance ( <B> , <A> ) :	もしオブジェクト <B> が <A> のインスタンスでないならば
if not isinstance ( <A> , <B> ) :	<A> が <B> でないとき
if not isinstance ( <B> , <A> ) :	<B> が <A> でないとき
isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> また <C> か
isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> また <A> か
if isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> また <C> ならば
if isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> また <A> ならば
isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> あるいは <C> か
isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> あるいは <A> か
if isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> あるいは <C> の場合
if isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> あるいは <A> の場合
isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> または <C> のインスタンスかどうか
isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> または <A> のインスタンスかどうか
if isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> または <C> のインスタンスのとき
if isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> または <A> のインスタンスのとき
isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> または <C> か否か
isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> または <A> か否か
if isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> または <C> の場合
if isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> または <A> の場合
isinstance ( <A> , ( <B> , <C> ) )	<A> が <B> または <C> か
isinstance ( <C> , ( <B> , <A> ) )	<C> が <B> または <A> か
if isinstance ( <A> , ( <B> , <C> ) ) :	<A> が <B> または <C> の場合
if isinstance ( <C> , ( <B> , <A> ) ) :	<C> が <B> または <A> の場合
isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> また <C> のインスタンスか否か
isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> また <A> のインスタンスか否か
if isinstance ( <A> , ( <B> , <C> ) ) :	もしオブジェクト <A> が <B> また <C> のインスタンスならば
if isinstance ( <C> , ( <B> , <A> ) ) :	もしオブジェクト <C> が <B> また <A> のインスタンスならば
isinstance ( <A> , ( <B> , <C> ) )	<A> が <B> または <C> のインスタンスか
isinstance ( <C> , ( <B> , <A> ) )	<C> が <B> または <A> のインスタンスか
if isinstance ( <A> , ( <B> , <C> ) ) :	<A> が <B> または <C> のインスタンスのとき
if isinstance ( <C> , ( <B> , <A> ) ) :	<C> が <B> または <A> のインスタンスのとき
not isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> また <C> でないか否か
not isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> また <A> でないか否か
not isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> あるいは <C> でないか
not isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> あるいは <A> でないか
not isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> または <C> のインスタンスでないか
not isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> または <A> のインスタンスでないか
not isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> または <C> でないかどうか
not isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> または <A> でないかどうか
not isinstance ( <A> , ( <B> , <C> ) )	<A> が <B> または <C> でないか
not isinstance ( <C> , ( <B> , <A> ) )	<C> が <B> または <A> でないか
not isinstance ( <A> , ( <B> , <C> ) )	オブジェクト <A> が <B> また <C> のインスタンスでないかどうか
not isinstance ( <C> , ( <B> , <A> ) )	オブジェクト <C> が <B> また <A> のインスタンスでないかどうか
not isinstance ( <A> , ( <B> , <C> ) )	<A> が <B> または <C> のインスタンスでないかどうか
not isinstance ( <C> , ( <B> , <A> ) )	<C> が <B> または <A> のインスタンスでないかどうか
if isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> また <C> 場合
if isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> また <A> 場合
if isinstance ( <A> , ( <B> , <C> ) ) :	もしオブジェクト <A> が <B> あるいは <C> ならば
if isinstance ( <C> , ( <B> , <A> ) ) :	もしオブジェクト <C> が <B> あるいは <A> ならば
if isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> または <C> のインスタンスならば
if isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> または <A> のインスタンスならば
if isinstance ( <A> , ( <B> , <C> ) ) :	もしオブジェクト <A> が <B> または <C> 場合
if isinstance ( <C> , ( <B> , <A> ) ) :	もしオブジェクト <C> が <B> または <A> 場合
if isinstance ( <A> , ( <B> , <C> ) ) :	もし <A> が <B> または <C> とき
if isinstance ( <C> , ( <B> , <A> ) ) :	もし <C> が <B> または <A> とき
if isinstance ( <A> , ( <B> , <C> ) ) :	もしオブジェクト <A> が <B> また <C> のインスタンスならば
if isinstance ( <C> , ( <B> , <A> ) ) :	もしオブジェクト <C> が <B> また <A> のインスタンスならば
if isinstance ( <A> , ( <B> , <C> ) ) :	もし <A> が <B> または <C> のインスタンス場合
if isinstance ( <C> , ( <B> , <A> ) ) :	もし <C> が <B> または <A> のインスタンス場合
if not isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> また <C> でなならば
if not isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> また <A> でなならば
if not isinstance ( <A> , ( <B> , <C> ) ) :	もしオブジェクト <A> が <B> あるいは <C> でないとき
if not isinstance ( <C> , ( <B> , <A> ) ) :	もしオブジェクト <C> が <B> あるいは <A> でないとき
if not isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> または <C> のインスタンスでない場合
if not isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> または <A> のインスタンスでない場合
if not isinstance ( <A> , ( <B> , <C> ) ) :	オブジェクト <A> が <B> または <C> でないならば
if not isinstance ( <C> , ( <B> , <A> ) ) :	オブジェクト <C> が <B> または <A> でないならば
if not isinstance ( <A> , ( <B> , <C> ) ) :	<A> が <B> または <C> でない場合
if not isinstance ( <C> , ( <B> , <A> ) ) :	<C> が <B> または <A> でない場合
if not isinstance ( <A> , ( <B> , <C> ) ) :	もしオブジェクト <A> が <B> また <C> のインスタンスでない場合
if not isinstance ( <C> , ( <B> , <A> ) ) :	もしオブジェクト <C> が <B> また <A> のインスタンスでない場合
if not isinstance ( <A> , ( <B> , <C> ) ) :	<A> が <B> または <C> のインスタンスでない場合
if not isinstance ( <C> , ( <B> , <A> ) ) :	<C> が <B> または <A> のインスタンスでない場合
isinstance ( <A> , int )	<A> が整数値か否か
if isinstance ( <A> , int ) :	<A> が整数値の場合
isinstance ( <A> , int )	オブジェクト <A> が自然数か否か
if isinstance ( <A> , int ) :	もしオブジェクト <A> が自然数ならば
isinstance ( <A> , int )	<A> が整数か否か
if isinstance ( <A> , int ) :	<A> が整数の場合
isinstance ( <A> , int )	<A> が自然数か
if isinstance ( <A> , int ) :	<A> が自然数ならば
not isinstance ( <A> , int )	<A> が整数値でないか
not isinstance ( <A> , int )	オブジェクト <A> が自然数でないか否か
not isinstance ( <A> , int )	<A> が整数でないかどうか
not isinstance ( <A> , int )	<A> が自然数でないか
if isinstance ( <A> , int ) :	もし <A> が整数値ならば
if isinstance ( <A> , int ) :	オブジェクト <A> が自然数ならば
if isinstance ( <A> , int ) :	もし <A> が整数ならば
if isinstance ( <A> , int ) :	<A> が自然数とき
if not isinstance ( <A> , int ) :	もし <A> が整数値でない場合
if not isinstance ( <A> , int ) :	オブジェクト <A> が自然数でなとき
if not isinstance ( <A> , int ) :	<A> が整数でないならば
if not isinstance ( <A> , int ) :	<A> が自然数でないならば
isinstance ( <A> , float )	<A> が小数点数か否か
if isinstance ( <A> , float ) :	<A> が小数点数ならば
isinstance ( <A> , float )	オブジェクト <A> が小数点数か
if isinstance ( <A> , float ) :	オブジェクト <A> が小数点数のとき
isinstance ( <A> , float )	<A> が浮動小数点数か否か
if isinstance ( <A> , float ) :	<A> が浮動小数点数ならば
isinstance ( <A> , float )	オブジェクト <A> が数かどうか
if isinstance ( <A> , float ) :	もしオブジェクト <A> が数ならば
isinstance ( <A> , float )	オブジェクト <A> が浮動小数点数か
if isinstance ( <A> , float ) :	オブジェクト <A> が浮動小数点数のとき
isinstance ( <A> , float )	<A> が実数か
if isinstance ( <A> , float ) :	もし <A> が実数ならば
not isinstance ( <A> , float )	<A> が小数点数でないか
not isinstance ( <A> , float )	オブジェクト <A> が小数点数でないかどうか
not isinstance ( <A> , float )	<A> が浮動小数点数でないかどうか
not isinstance ( <A> , float )	オブジェクト <A> が数でないか
not isinstance ( <A> , float )	オブジェクト <A> が浮動小数点数でないかどうか
not isinstance ( <A> , float )	<A> が実数でないか
if isinstance ( <A> , float ) :	もし <A> が小数点数とき
if isinstance ( <A> , float ) :	オブジェクト <A> が小数点数とき
if isinstance ( <A> , float ) :	もし <A> が浮動小数点数場合
if isinstance ( <A> , float ) :	オブジェクト <A> が数とき
if isinstance ( <A> , float ) :	オブジェクト <A> が浮動小数点数とき
if isinstance ( <A> , float ) :	もし <A> が実数とき
if not isinstance ( <A> , float ) :	<A> が小数点数でない場合
if not isinstance ( <A> , float ) :	オブジェクト <A> が小数点数でないとき
if not isinstance ( <A> , float ) :	もし <A> が浮動小数点数でないとき
if not isinstance ( <A> , float ) :	もしオブジェクト <A> が数でない場合
if not isinstance ( <A> , float ) :	もしオブジェクト <A> が浮動小数点数でない場合
if not isinstance ( <A> , float ) :	もし <A> が実数でないならば
isinstance ( <A> , str )	オブジェクト <A> が文字列か否か
if isinstance ( <A> , str ) :	もしオブジェクト <A> が文字列ならば
isinstance ( <A> , str )	<A> が文字列か
if isinstance ( <A> , str ) :	<A> が文字列のとき
not isinstance ( <A> , str )	オブジェクト <A> が文字列でないかどうか
not isinstance ( <A> , str )	<A> が文字列でないかどうか
if isinstance ( <A> , str ) :	もしオブジェクト <A> が文字列ならば
if isinstance ( <A> , str ) :	<A> が文字列ならば
if not isinstance ( <A> , str ) :	オブジェクト <A> が文字列でないとき
if not isinstance ( <A> , str ) :	<A> が文字列でないならば
isinstance ( <A> , list )	オブジェクト <A> がリストか
if isinstance ( <A> , list ) :	オブジェクト <A> がリストの場合
isinstance ( <A> , list )	<A> がリストか否か
if isinstance ( <A> , list ) :	<A> がリストのとき
not isinstance ( <A> , list )	オブジェクト <A> がリストでないか
not isinstance ( <A> , list )	<A> がリストでないか
if isinstance ( <A> , list ) :	もしオブジェクト <A> がリスト場合
if isinstance ( <A> , list ) :	もし <A> がリストならば
if not isinstance ( <A> , list ) :	もしオブジェクト <A> がリストでないとき
if not isinstance ( <A> , list ) :	もし <A> がリストでないとき
isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストまたはタプルか
if isinstance ( <A> , ( list , tuple ) ) :	もしオブジェクト <A> がリストまたはタプルならば
isinstance ( <A> , ( list , tuple ) )	<A> がリストまたタプルか
if isinstance ( <A> , ( list , tuple ) ) :	<A> がリストまたタプルの場合
isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストまた組か否か
if isinstance ( <A> , ( list , tuple ) ) :	オブジェクト <A> がリストまた組の場合
isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストまたは組かどうか
if isinstance ( <A> , ( list , tuple ) ) :	オブジェクト <A> がリストまたは組の場合
isinstance ( <A> , ( list , tuple ) )	<A> がリストあるいはタプルか
if isinstance ( <A> , ( list , tuple ) ) :	<A> がリストあるいはタプルの場合
isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストあるいは組かどうか
if isinstance ( <A> , ( list , tuple ) ) :	もしオブジェクト <A> がリストあるいは組ならば
isinstance ( <A> , ( list , tuple ) )	<A> がリストまたはタプルか
if isinstance ( <A> , ( list , tuple ) ) :	もし <A> がリストまたはタプルならば
isinstance ( <A> , ( list , tuple ) )	<A> がリストあるいは組かどうか
if isinstance ( <A> , ( list , tuple ) ) :	<A> がリストあるいは組のとき
not isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストまたはタプルでないかどうか
not isinstance ( <A> , ( list , tuple ) )	<A> がリストまたタプルでないか
not isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストまた組でないか
not isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストまたは組でないか
not isinstance ( <A> , ( list , tuple ) )	<A> がリストあるいはタプルでないか否か
not isinstance ( <A> , ( list , tuple ) )	オブジェクト <A> がリストあるいは組でないかどうか
not isinstance ( <A> , ( list , tuple ) )	<A> がリストまたはタプルでないか否か
not isinstance ( <A> , ( list , tuple ) )	<A> がリストあるいは組でないかどうか
if isinstance ( <A> , ( list , tuple ) ) :	オブジェクト <A> がリストまたはタプルとき
if isinstance ( <A> , ( list , tuple ) ) :	<A> がリストまたタプルならば
if isinstance ( <A> , ( list , tuple ) ) :	オブジェクト <A> がリストまた組とき
if isinstance ( <A> , ( list , tuple ) ) :	もしオブジェクト <A> がリストまたは組とき
if isinstance ( <A> , ( list , tuple ) ) :	もし <A> がリストあるいはタプルとき
if isinstance ( <A> , ( list , tuple ) ) :	もしオブジェクト <A> がリストあるいは組場合
if isinstance ( <A> , ( list , tuple ) ) :	もし <A> がリストまたはタプル場合
if isinstance ( <A> , ( list , tuple ) ) :	もし <A> がリストあるいは組場合
if not isinstance ( <A> , ( list , tuple ) ) :	もしオブジェクト <A> がリストまたはタプルでないならば
if not isinstance ( <A> , ( list , tuple ) ) :	<A> がリストまたタプルでない場合
if not isinstance ( <A> , ( list , tuple ) ) :	もしオブジェクト <A> がリストまた組でないならば
if not isinstance ( <A> , ( list , tuple ) ) :	オブジェクト <A> がリストまたは組でないならば
if not isinstance ( <A> , ( list , tuple ) ) :	もし <A> がリストあるいはタプルでなとき
if not isinstance ( <A> , ( list , tuple ) ) :	オブジェクト <A> がリストあるいは組でないとき
if not isinstance ( <A> , ( list , tuple ) ) :	もし <A> がリストまたはタプルでな場合
if not isinstance ( <A> , ( list , tuple ) ) :	<A> がリストあるいは組でない場合
issubclass ( class1 , <A> )	クラス class が <A> のサブクラスか
if issubclass ( class1 , <A> ) :	クラス class が <A> のサブクラスのとき
issubclass ( class1 , <A> )	class が <A> のサブクラスかどうか
if issubclass ( class1 , <A> ) :	class が <A> のサブクラスのとき
not issubclass ( class1 , <A> )	クラス class が <A> のサブクラスでないか
not issubclass ( class1 , <A> )	class が <A> のサブクラスでないか
if issubclass ( class1 , <A> ) :	もしクラス class が <A> のサブクラスとき
if issubclass ( class1 , <A> ) :	class が <A> のサブクラス場合
if not issubclass ( class1 , <A> ) :	クラス class が <A> のサブクラスでないとき
if not issubclass ( class1 , <A> ) :	class が <A> のサブクラスでないとき
id ( <A> )	<A> のオブジェクト識別子
id ( <A> )	<A> のオブジェクト ID
id ( <A> )	<A> のユニークな識別値
id ( <A> )	<A> のポインタ
type ( <A> )	<A> の型
type ( <A> )	<A> のクラス
type ( <A> )	<A> の種類
<A> . bit_length ( )	整数 <A> のビット長
<A> . bit_length ( )	整数値 <A> のビット長
<A> . bit_length ( )	<A> のビット数
<A> . bit_length ( )	整数 <A> のビット数
<A> . bit_length ( )	<A> のビット長
<A> . bit_length ( )	整数値 <A> のビット数
<A> . to_bytes ( <B> )	整数 <A> を <B> ビット長のバイト列に変換する
<B> . to_bytes ( <A> )	整数 <B> を <A> ビット長のバイト列に変換する
<A> . to_bytes ( <B> )	整数値 <A> を <B> ビット長のバイト列にする
<B> . to_bytes ( <A> )	整数値 <B> を <A> ビット長のバイト列にする
<A> . to_bytes ( <B> )	<A> を <B> ビット長のバイト列に変換する
<B> . to_bytes ( <A> )	<B> を <A> ビット長のバイト列に変換する
<A> . to_bytes ( <B> )	整数 <A> を <B> ビット長のバイト列にする
<B> . to_bytes ( <A> )	整数 <B> を <A> ビット長のバイト列にする
<A> . to_bytes ( <B> )	自然数 <A> を <B> ビット長のバイト列にする
<B> . to_bytes ( <A> )	自然数 <B> を <A> ビット長のバイト列にする
<A> . to_bytes ( <B> )	<A> の <B> ビット長バイト列
<B> . to_bytes ( <A> )	<B> の <A> ビット長バイト列
<A> . to_bytes ( <B> )	整数値 <A> の <B> ビット長バイト列
<B> . to_bytes ( <A> )	整数値 <B> の <A> ビット長バイト列
<A> . to_bytes ( <B> )	整数 <A> の <B> ビット長バイト列
<B> . to_bytes ( <A> )	整数 <B> の <A> ビット長バイト列
<A> . to_bytes ( <B> )	自然数 <A> の <B> ビット長バイト列
<B> . to_bytes ( <A> )	自然数 <B> の <A> ビット長バイト列
int . from_bytes ( bytes )	バイト列 bytesbytes から自然数に変換する
int . from_bytes ( bytes )	bytesbytes から整数に変換する
int . from_bytes ( bytes )	bytesbytes から整数値に変換する
int . from_bytes ( bytes )	bytesbytes から自然数に変換する
int . from_bytes ( bytes )	バイト列 bytesbytes から整数に変換する
<A> . is_integer ( )	小数点数 <A> が整数か
if <A> . is_integer ( ) :	もし小数点数 <A> が整数ならば
<A> . is_integer ( )	<A> が整数か
if <A> . is_integer ( ) :	<A> が整数のとき
<A> . is_integer ( )	<A> が整数値か
if <A> . is_integer ( ) :	<A> が整数値のとき
<A> . is_integer ( )	小数点数 <A> が整数値かどうか
if <A> . is_integer ( ) :	もし小数点数 <A> が整数値ならば
<A> . is_integer ( )	数 <A> が自然数か否か
if <A> . is_integer ( ) :	数 <A> が自然数ならば
<A> . is_integer ( )	実数 <A> が整数か
if <A> . is_integer ( ) :	もし実数 <A> が整数ならば
not <A> . is_integer ( )	小数点数 <A> が整数でないかどうか
not <A> . is_integer ( )	<A> が整数でないかどうか
not <A> . is_integer ( )	<A> が整数値でないか
not <A> . is_integer ( )	小数点数 <A> が整数値でないか
not <A> . is_integer ( )	数 <A> が自然数でないか
not <A> . is_integer ( )	実数 <A> が整数でないか
if <A> . is_integer ( ) :	もし小数点数 <A> が整数場合
if <A> . is_integer ( ) :	もし <A> が整数場合
if <A> . is_integer ( ) :	もし <A> が整数値とき
if <A> . is_integer ( ) :	もし小数点数 <A> が整数値ならば
if <A> . is_integer ( ) :	もし数 <A> が自然数場合
if <A> . is_integer ( ) :	もし実数 <A> が整数とき
if not <A> . is_integer ( ) :	小数点数 <A> が整数でない場合
if not <A> . is_integer ( ) :	もし <A> が整数でないとき
if not <A> . is_integer ( ) :	<A> が整数値でない場合
if not <A> . is_integer ( ) :	小数点数 <A> が整数値でない場合
if not <A> . is_integer ( ) :	数 <A> が自然数でない場合
if not <A> . is_integer ( ) :	実数 <A> が整数でないならば
<A> . hex ( )	小数点数 <A> を 16 進文字列にする
<A> . hex ( )	16 進文字列に小数点数 <A> をする
<A> . hex ( )	小数点数 <A> を 16 進文字列に変換する
<A> . hex ( )	16 進文字列に <A> 数をする
<A> . hex ( )	16 進文字列に <A> をする
<A> . hex ( )	<A> を 16 進文字列に変換する
<A> . hex ( )	16 進文字列に <A> を変換する
<A> . hex ( )	<A> を 16 進文字列にする
<A> . hex ( )	実数 <A> を 16 進文字列にする
<A> . hex ( )	16 進文字列に実数 <A> を変換する
<A> . hex ( )	浮動小数点数 <A> を 16 進文字列に変換する
<A> . hex ( )	16 進文字列に <A> 実数をする
<A> . hex ( )	小数点数 <A> の 16 進文字列表現
<A> . hex ( )	浮動小数点数 <A> の 16 進文字列表現
<A> . hex ( )	<A> の 16 進文字列表現
float . fromhex ( <A> )	16 進数文字列 <A> から浮動小数点数に変換する
float . fromhex ( <A> )	16 進数文字列 <A> から小数点数にする
float . fromhex ( <A> )	<A> から数にする
float . fromhex ( <A> )	16 進数文字列 <A> から実数に変換する
float . fromhex ( <A> )	<A> から実数に変換する
float . fromhex ( <A> )	<A> から数に変換する
float . fromhex ( <A> )	16 進数文字列 <A> から数にする
float . fromhex ( <A> )	<A> から浮動小数点数にする
float . fromhex ( <A> )	<A> から小数点数に変換する
float . fromhex ( <A> )	<A> から実数にする
float . fromhex ( <A> )	<A> から浮動小数点数に変換する
float . fromhex ( <A> )	16 進数文字列 <A> から数に変換する
string . ascii_letters	全アルファベット
string . ascii_lowercase	全英小文字
string . ascii_uppercase	全英大文字
string . digits	全数字
string . hexdigits	全 16 進文字列
string . octdigits	全 8 進文字列
string . punctuation	全記号
string . printable	全印刷可能な ASCII 文字
string . whitespace	全空白文字
<A> . capitalize ( )	<A> をキャピタライズする
<A> . capitalize ( )	文字列 <A> をキャピタライズする
<A> . casefold ( )	文字列 <A> をケースフォルドする
<A> . casefold ( )	<A> をケースフォルドする
<A> . center ( <B> )	幅 <B> で文字列 <A> をセンタリングする
<B> . center ( <A> )	幅 <A> で文字列 <B> をセンタリングする
<A> . center ( <B> )	<A> を幅 <B> でセンタリングする
<B> . center ( <A> )	<B> を幅 <A> でセンタリングする
<A> . center ( <B> )	文字列 <A> を幅 <B> で中央寄せする
<B> . center ( <A> )	文字列 <B> を幅 <A> で中央寄せする
<A> . center ( <B> )	<A> を幅 <B> で中央寄せする
<B> . center ( <A> )	<B> を幅 <A> で中央寄せする
<A> . center ( <B> )	幅 <B> で文字列 <A> を中央寄せする
<B> . center ( <A> )	幅 <A> で文字列 <B> を中央寄せする
<A> . ljust ( <B> )	<A> を幅 <B> で右寄せする
<B> . ljust ( <A> )	<B> を幅 <A> で右寄せする
<A> . ljust ( <B> )	幅 <B> で文字列 <A> を右寄せする
<B> . ljust ( <A> )	幅 <A> で文字列 <B> を右寄せする
<A> . ljust ( <B> )	幅 <B> で <A> 文字列を右寄せする
<B> . ljust ( <A> )	幅 <A> で <B> 文字列を右寄せする
<A> . ljust ( <B> )	幅 <B> で <A> を右寄せする
<B> . ljust ( <A> )	幅 <A> で <B> を右寄せする
<A> . ljust ( <B> )	文字列 <A> を幅 <B> で右寄せする
<B> . ljust ( <A> )	文字列 <B> を幅 <A> で右寄せする
<A> . rjust ( <B> )	幅 <B> で <A> を左寄せする
<B> . rjust ( <A> )	幅 <A> で <B> を左寄せする
<A> . rjust ( <B> )	幅 <B> で文字列 <A> を左寄せする
<B> . rjust ( <A> )	幅 <A> で文字列 <B> を左寄せする
<A> . rjust ( <B> )	<A> を幅 <B> で左寄せする
<B> . rjust ( <A> )	<B> を幅 <A> で左寄せする
<A> . rjust ( <B> )	文字列 <A> を幅 <B> で左寄せする
<B> . rjust ( <A> )	文字列 <B> を幅 <A> で左寄せする
<A> . rjust ( <B> )	幅 <B> で <A> 文字列を左寄せする
<B> . rjust ( <A> )	幅 <A> で <B> 文字列を左寄せする
<A> . count ( <B> )	<A> 内の <B> の数をカウントする
<B> . count ( <A> )	<B> 内の <A> の数をカウントする
<A> . count ( <B> )	<A> に現れる <B> の数をカウントする
<B> . count ( <A> )	<B> に現れる <A> の数をカウントする
<A> . count ( <B> )	<A> 内に現れる <B> の数をカウントする
<B> . count ( <A> )	<B> 内に現れる <A> の数をカウントする
<A> . count ( <B> )	文字列 <A> 中の <B> を数える
<B> . count ( <A> )	文字列 <B> 中の <A> を数える
<A> . count ( <B> )	文字列 <A> に含まれる <B> の数をカウントする
<B> . count ( <A> )	文字列 <B> に含まれる <A> の数をカウントする
<A> . count ( <B> )	文字列 <A> 内の <B> の数をカウントする
<B> . count ( <A> )	文字列 <B> 内の <A> の数をカウントする
<A> . count ( <B> )	<A> の <B> の数をカウントする
<B> . count ( <A> )	<B> の <A> の数をカウントする
<A> . count ( <B> )	<A> 内に含まれる <B> の数を数える
<B> . count ( <A> )	<B> 内に含まれる <A> の数を数える
<A> . count ( <B> )	<A> に含まれる <B> の数を数える
<B> . count ( <A> )	<B> に含まれる <A> の数を数える
<A> . count ( <B> )	<A> に現れる <B> の数を数える
<B> . count ( <A> )	<B> に現れる <A> の数を数える
<A> . count ( <B> )	文字列 <A> 中の <B> をカウントする
<B> . count ( <A> )	文字列 <B> 中の <A> をカウントする
<A> . count ( <B> )	<A> 中に含まれる <B> の数を数える
<B> . count ( <A> )	<B> 中に含まれる <A> の数を数える
<A> . count ( <B> )	<A> 中の <B> の数を数える
<B> . count ( <A> )	<B> 中の <A> の数を数える
<A> . count ( <B> )	文字列 <A> 内に現れる <B> の数を数える
<B> . count ( <A> )	文字列 <B> 内に現れる <A> の数を数える
<A> . count ( <B> )	<A> の <B> を数える
<B> . count ( <A> )	<B> の <A> を数える
<A> . count ( <B> )	文字列 <A> 中に現れる <B> をカウントする
<B> . count ( <A> )	文字列 <B> 中に現れる <A> をカウントする
<A> . count ( <B> )	<A> に含まれる <B> を数える
<B> . count ( <A> )	<B> に含まれる <A> を数える
<A> . count ( <B> )	<A> 中に含まれる <B> を数える
<B> . count ( <A> )	<B> 中に含まれる <A> を数える
<A> . count ( <B> )	文字列 <A> 内の <B> をカウントする
<B> . count ( <A> )	文字列 <B> 内の <A> をカウントする
<A> . count ( <B> )	<A> 中の <B> の数をカウントする
<B> . count ( <A> )	<B> 中の <A> の数をカウントする
<A> . count ( <B> )	文字列 <A> 内に含まれる <B> の数をカウントする
<B> . count ( <A> )	文字列 <B> 内に含まれる <A> の数をカウントする
<A> . count ( <B> )	<A> 内に含まれる <B> をカウントする
<B> . count ( <A> )	<B> 内に含まれる <A> をカウントする
<A> . count ( <B> )	<A> 内の <B> の出現回数
<B> . count ( <A> )	<B> 内の <A> の出現回数
<A> . count ( <B> )	文字列 <A> 中の <B> の出現回数
<B> . count ( <A> )	文字列 <B> 中の <A> の出現回数
<A> . count ( <B> )	文字列 <A> 内の <B> の出現回数
<B> . count ( <A> )	文字列 <B> 内の <A> の出現回数
<A> . count ( <B> )	文字列 <A> の <B> の出現回数
<B> . count ( <A> )	文字列 <B> の <A> の出現回数
<A> . count ( <B> )	<A> の <B> の出現回数
<B> . count ( <A> )	<B> の <A> の出現回数
<A> . encode ( )	文字列 <A> をバイト列にする
<A> . encode ( )	<A> をバイト列にする
<A> . encode ( )	文字列 <A> をバイト列に変換する
<A> . encode ( )	<A> をバイト列に変換する
<A> . encode ( <B> )	<A> を <B> 文字コードでバイト列に変換する
<B> . encode ( <A> )	<B> を <A> 文字コードでバイト列に変換する
<A> . encode ( <B> )	文字コード <B> で <A> 文字列をバイト列に変換する
<B> . encode ( <A> )	文字コード <A> で <B> 文字列をバイト列に変換する
<A> . encode ( <B> )	<B> で <A> をバイト列に変換する
<B> . encode ( <A> )	<A> で <B> をバイト列に変換する
<A> . encode ( <B> )	文字コード <B> で <A> をバイト列に変換する
<B> . encode ( <A> )	文字コード <A> で <B> をバイト列に変換する
<A> . encode ( <B> )	<A> を文字コード <B> でバイト列にする
<B> . encode ( <A> )	<B> を文字コード <A> でバイト列にする
<A> . encode ( <B> )	文字列 <A> を <B> 文字コードでバイト列にする
<B> . encode ( <A> )	文字列 <B> を <A> 文字コードでバイト列にする
<A> . encode ( <B> )	<A> を <B> でバイト列にする
<B> . encode ( <A> )	<B> を <A> でバイト列にする
<A> . encode ( <B> )	文字列 <A> を文字コード <B> でバイト列に変換する
<B> . encode ( <A> )	文字列 <B> を文字コード <A> でバイト列に変換する
<A> . encode ( <B> )	文字列 <A> を <B> でバイト列にする
<B> . encode ( <A> )	文字列 <B> を <A> でバイト列にする
<A> . encode ( <B> )	<B> で文字列 <A> をバイト列にする
<B> . encode ( <A> )	<A> で文字列 <B> をバイト列にする
<A> . encode ( <B> )	<B> で <A> 文字列をバイト列にする
<B> . encode ( <A> )	<A> で <B> 文字列をバイト列にする
<A> . encode ( 'shift-jis' )	文字列 <A> を SJIS コードでバイト列にする
<A> . encode ( 'shift-jis' )	SJIS で <A> 文字列をバイト列に変換する
<A> . encode ( 'shift-jis' )	SJIS で文字列 <A> をバイト列にする
<A> . encode ( 'shift-jis' )	<A> を SJIS でバイト列にする
<A> . encode ( 'shift-jis' )	文字列 <A> を SJIS でバイト列にする
<A> . encode ( 'shift-jis' )	SJIS コードで <A> 文字列をバイト列にする
<A> . encode ( 'shift-jis' )	<A> を SJIS コードでバイト列に変換する
<A> . encode ( 'shift-jis' )	SJIS コードで <A> をバイト列に変換する
<A> . startswith ( <B> )	<A> が <B> で開始するか否か
<B> . startswith ( <A> )	<B> が <A> で開始するか否か
if <A> . startswith ( <B> ) :	もし <A> が <B> で開始するならば
if <B> . startswith ( <A> ) :	もし <B> が <A> で開始するならば
<A> . startswith ( <B> )	文字列 <A> が <B> で開始するか
<B> . startswith ( <A> )	文字列 <B> が <A> で開始するか
if <A> . startswith ( <B> ) :	文字列 <A> が <B> で開始するとき
if <B> . startswith ( <A> ) :	文字列 <B> が <A> で開始するとき
<A> . startswith ( <B> )	<A> が <B> で始まるかどうか
<B> . startswith ( <A> )	<B> が <A> で始まるかどうか
if <A> . startswith ( <B> ) :	<A> が <B> で始まる場合
if <B> . startswith ( <A> ) :	<B> が <A> で始まる場合
<A> . startswith ( <B> )	文字列 <A> が <B> で始まるかどうか
<B> . startswith ( <A> )	文字列 <B> が <A> で始まるかどうか
if <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まるならば
if <B> . startswith ( <A> ) :	文字列 <B> が <A> で始まるならば
not <A> . startswith ( <B> )	<A> が <B> で開始しないか
not <B> . startswith ( <A> )	<B> が <A> で開始しないか
not <A> . startswith ( <B> )	文字列 <A> が <B> で開始しないかどうか
not <B> . startswith ( <A> )	文字列 <B> が <A> で開始しないかどうか
not <A> . startswith ( <B> )	<A> が <B> で始まらないか
not <B> . startswith ( <A> )	<B> が <A> で始まらないか
not <A> . startswith ( <B> )	文字列 <A> が <B> で始まらないか
not <B> . startswith ( <A> )	文字列 <B> が <A> で始まらないか
if <A> . startswith ( <B> ) :	<A> が <B> で開始すれば
if <B> . startswith ( <A> ) :	<B> が <A> で開始すれば
if <A> . startswith ( <B> ) :	もし <A> が <B> で開始した場合
if <B> . startswith ( <A> ) :	もし <B> が <A> で開始した場合
if <A> . startswith ( <B> ) :	文字列 <A> が <B> で開始すれば
if <B> . startswith ( <A> ) :	文字列 <B> が <A> で開始すれば
if <A> . startswith ( <B> ) :	もし <A> が <B> で始まれば
if <B> . startswith ( <A> ) :	もし <B> が <A> で始まれば
if <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まれば
if <B> . startswith ( <A> ) :	文字列 <B> が <A> で始まれば
if <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まったならば
if <B> . startswith ( <A> ) :	文字列 <B> が <A> で始まったならば
if not <A> . startswith ( <B> ) :	もし <A> が <B> で開始しなかったなら
if not <B> . startswith ( <A> ) :	もし <B> が <A> で開始しなかったなら
if not <A> . startswith ( <B> ) :	もし文字列 <A> が <B> で開始しない場合
if not <B> . startswith ( <A> ) :	もし文字列 <B> が <A> で開始しない場合
if not <A> . startswith ( <B> ) :	文字列 <A> が <B> で開始しなければ
if not <B> . startswith ( <A> ) :	文字列 <B> が <A> で開始しなければ
if not <A> . startswith ( <B> ) :	文字列 <A> が <B> で開始しなかった場合
if not <B> . startswith ( <A> ) :	文字列 <B> が <A> で開始しなかった場合
if not <A> . startswith ( <B> ) :	もし <A> が <B> で始まらないならば
if not <B> . startswith ( <A> ) :	もし <B> が <A> で始まらないならば
if not <A> . startswith ( <B> ) :	もし <A> が <B> で始まらなければ
if not <B> . startswith ( <A> ) :	もし <B> が <A> で始まらなければ
if not <A> . startswith ( <B> ) :	もし <A> が <B> で始まらなかったなら
if not <B> . startswith ( <A> ) :	もし <B> が <A> で始まらなかったなら
if not <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まらなかったら
if not <B> . startswith ( <A> ) :	文字列 <B> が <A> で始まらなかったら
while <A> . startswith ( <B> ) :	文字列 <A> が <B> で開始する間
while <B> . startswith ( <A> ) :	文字列 <B> が <A> で開始する間
while <A> . startswith ( <B> ) :	<A> が <B> で始まる間
while <B> . startswith ( <A> ) :	<B> が <A> で始まる間
while <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まる間
while <B> . startswith ( <A> ) :	文字列 <B> が <A> で始まる間
while not <A> . startswith ( <B> ) :	<A> が <B> で開始しない間
while not <B> . startswith ( <A> ) :	<B> が <A> で開始しない間
while not <A> . startswith ( <B> ) :	文字列 <A> が <B> で始まらない間
while not <B> . startswith ( <A> ) :	文字列 <B> が <A> で始まらない間
<A> . startswith ( prefix )	<A> の接頭辞が suffix であるか否か
if <A> . startswith ( prefix ) :	<A> の接頭辞が suffix である場合
<A> . startswith ( prefix )	文字列 <A> の先頭が suffix か
if <A> . startswith ( prefix ) :	もし文字列 <A> の先頭が suffix ならば
<A> . startswith ( prefix )	<A> の接頭辞が suffix か
if <A> . startswith ( prefix ) :	<A> の接頭辞が suffix ならば
<A> . startswith ( prefix )	文字列 <A> の始端が suffix か
if <A> . startswith ( prefix ) :	文字列 <A> の始端が suffix のとき
<A> . startswith ( prefix )	文字列 <A> の始まりが suffix か
if <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix のとき
<A> . startswith ( prefix )	文字列 <A> の接頭辞が suffix か否か
if <A> . startswith ( prefix ) :	文字列 <A> の接頭辞が suffix のとき
<A> . startswith ( prefix )	<A> の始まりが suffix か否か
if <A> . startswith ( prefix ) :	もし <A> の始まりが suffix ならば
<A> . startswith ( prefix )	文字列 <A> のプレフィックスが suffix であるかどうか
if <A> . startswith ( prefix ) :	文字列 <A> のプレフィックスが suffix であるとき
<A> . startswith ( prefix )	文字列 <A> の始まりが suffix であるか
if <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix であるとき
not <A> . startswith ( prefix )	<A> の接頭辞が suffix であるでないか
not <A> . startswith ( prefix )	文字列 <A> の先頭が suffix でないか
not <A> . startswith ( prefix )	<A> の接頭辞が suffix でないか
not <A> . startswith ( prefix )	文字列 <A> の始端が suffix でないか
not <A> . startswith ( prefix )	文字列 <A> の始まりが suffix でないかどうか
not <A> . startswith ( prefix )	文字列 <A> の接頭辞が suffix でないか
not <A> . startswith ( prefix )	<A> の始まりが suffix でないか否か
not <A> . startswith ( prefix )	文字列 <A> のプレフィックスが suffix であるでないか
not <A> . startswith ( prefix )	文字列 <A> の始まりが suffix であるでないか否か
if <A> . startswith ( prefix ) :	<A> の接頭辞が suffix である場合
if <A> . startswith ( prefix ) :	文字列 <A> の先頭が suffix 場合
if <A> . startswith ( prefix ) :	<A> の接頭辞が suffix ならば
if <A> . startswith ( prefix ) :	文字列 <A> の始端が suffix 場合
if <A> . startswith ( prefix ) :	もし文字列 <A> の始まりが suffix とき
if <A> . startswith ( prefix ) :	文字列 <A> の接頭辞が suffix ならば
if <A> . startswith ( prefix ) :	もし <A> の始まりが suffix 場合
if <A> . startswith ( prefix ) :	文字列 <A> のプレフィックスが suffix であるとき
if <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix であるならば
if not <A> . startswith ( prefix ) :	もし <A> の接頭辞が suffix であるでないとき
if not <A> . startswith ( prefix ) :	文字列 <A> の先頭が suffix でない場合
if not <A> . startswith ( prefix ) :	もし <A> の接頭辞が suffix でないならば
if not <A> . startswith ( prefix ) :	もし文字列 <A> の始端が suffix でないならば
if not <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix でないならば
if not <A> . startswith ( prefix ) :	もし文字列 <A> の接頭辞が suffix でないならば
if not <A> . startswith ( prefix ) :	もし <A> の始まりが suffix でなならば
if not <A> . startswith ( prefix ) :	文字列 <A> のプレフィックスが suffix であるでない場合
if not <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix であるでな場合
while <A> . startswith ( prefix ) :	<A> の接頭辞が suffix である間
while <A> . startswith ( prefix ) :	文字列 <A> の接頭辞が suffix 間
while <A> . startswith ( prefix ) :	<A> の始まりが suffix 間
while <A> . startswith ( prefix ) :	文字列 <A> のプレフィックスが suffix である間
while <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix である間
while not <A> . startswith ( prefix ) :	文字列 <A> の先頭が suffix でない間
while not <A> . startswith ( prefix ) :	文字列 <A> の始端が suffix でない間
while not <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix でない間
while not <A> . startswith ( prefix ) :	文字列 <A> の接頭辞が suffix でない間
while not <A> . startswith ( prefix ) :	<A> の始まりが suffix でな間
while not <A> . startswith ( prefix ) :	文字列 <A> の始まりが suffix であるでな間
<A> . endswith ( <B> )	<A> が <B> で終わるかどうか
<B> . endswith ( <A> )	<B> が <A> で終わるかどうか
if <A> . endswith ( <B> ) :	もし <A> が <B> で終わるならば
if <B> . endswith ( <A> ) :	もし <B> が <A> で終わるならば
<A> . endswith ( <B> )	文字列 <A> が <B> で終了するかどうか
<B> . endswith ( <A> )	文字列 <B> が <A> で終了するかどうか
if <A> . endswith ( <B> ) :	文字列 <A> が <B> で終了するならば
if <B> . endswith ( <A> ) :	文字列 <B> が <A> で終了するならば
<A> . endswith ( <B> )	文字列 <A> が <B> で終わるか否か
<B> . endswith ( <A> )	文字列 <B> が <A> で終わるか否か
if <A> . endswith ( <B> ) :	文字列 <A> が <B> で終わるとき
if <B> . endswith ( <A> ) :	文字列 <B> が <A> で終わるとき
not <A> . endswith ( <B> )	<A> が <B> で終わらないか
not <B> . endswith ( <A> )	<B> が <A> で終わらないか
not <A> . endswith ( <B> )	文字列 <A> が <B> で終了しないか
not <B> . endswith ( <A> )	文字列 <B> が <A> で終了しないか
not <A> . endswith ( <B> )	文字列 <A> が <B> で終わらないか
not <B> . endswith ( <A> )	文字列 <B> が <A> で終わらないか
if <A> . endswith ( <B> ) :	<A> が <B> で終われば
if <B> . endswith ( <A> ) :	<B> が <A> で終われば
if <A> . endswith ( <B> ) :	もし <A> が <B> で終わったならば
if <B> . endswith ( <A> ) :	もし <B> が <A> で終わったならば
if <A> . endswith ( <B> ) :	もし文字列 <A> が <B> で終われば
if <B> . endswith ( <A> ) :	もし文字列 <B> が <A> で終われば
if <A> . endswith ( <B> ) :	文字列 <A> が <B> で終わったとき
if <B> . endswith ( <A> ) :	文字列 <B> が <A> で終わったとき
if not <A> . endswith ( <B> ) :	<A> が <B> で終わらないならば
if not <B> . endswith ( <A> ) :	<B> が <A> で終わらないならば
if not <A> . endswith ( <B> ) :	もし <A> が <B> で終わらなければ
if not <B> . endswith ( <A> ) :	もし <B> が <A> で終わらなければ
if not <A> . endswith ( <B> ) :	<A> が <B> で終わらなかったならば
if not <B> . endswith ( <A> ) :	<B> が <A> で終わらなかったならば
if not <A> . endswith ( <B> ) :	もし文字列 <A> が <B> で終了しないとき
if not <B> . endswith ( <A> ) :	もし文字列 <B> が <A> で終了しないとき
if not <A> . endswith ( <B> ) :	もし文字列 <A> が <B> で終わらないならば
if not <B> . endswith ( <A> ) :	もし文字列 <B> が <A> で終わらないならば
if not <A> . endswith ( <B> ) :	文字列 <A> が <B> で終わらなければ
if not <B> . endswith ( <A> ) :	文字列 <B> が <A> で終わらなければ
if not <A> . endswith ( <B> ) :	文字列 <A> が <B> で終わらなかったなら
if not <B> . endswith ( <A> ) :	文字列 <B> が <A> で終わらなかったなら
while <A> . endswith ( <B> ) :	<A> が <B> で終わる間
while <B> . endswith ( <A> ) :	<B> が <A> で終わる間
while <A> . endswith ( <B> ) :	文字列 <A> が <B> で終了する間
while <B> . endswith ( <A> ) :	文字列 <B> が <A> で終了する間
while not <A> . endswith ( <B> ) :	<A> が <B> で終わらない間
while not <B> . endswith ( <A> ) :	<B> が <A> で終わらない間
while not <A> . endswith ( <B> ) :	文字列 <A> が <B> で終了しない間
while not <B> . endswith ( <A> ) :	文字列 <B> が <A> で終了しない間
while not <A> . endswith ( <B> ) :	文字列 <A> が <B> で終わらない間
while not <B> . endswith ( <A> ) :	文字列 <B> が <A> で終わらない間
<A> . endswith ( <B> )	<A> のサフィックスが <B> であるか
<B> . endswith ( <A> )	<B> のサフィックスが <A> であるか
if <A> . endswith ( <B> ) :	もし <A> のサフィックスが <B> であるならば
if <B> . endswith ( <A> ) :	もし <B> のサフィックスが <A> であるならば
<A> . endswith ( <B> )	<A> の接尾辞が <B> であるか
<B> . endswith ( <A> )	<B> の接尾辞が <A> であるか
if <A> . endswith ( <B> ) :	<A> の接尾辞が <B> であるならば
if <B> . endswith ( <A> ) :	<B> の接尾辞が <A> であるならば
<A> . endswith ( <B> )	文字列 <A> の末尾が <B> か
<B> . endswith ( <A> )	文字列 <B> の末尾が <A> か
if <A> . endswith ( <B> ) :	文字列 <A> の末尾が <B> ならば
if <B> . endswith ( <A> ) :	文字列 <B> の末尾が <A> ならば
<A> . endswith ( <B> )	文字列 <A> の終端が <B> であるか
<B> . endswith ( <A> )	文字列 <B> の終端が <A> であるか
if <A> . endswith ( <B> ) :	文字列 <A> の終端が <B> である場合
if <B> . endswith ( <A> ) :	文字列 <B> の終端が <A> である場合
<A> . endswith ( <B> )	<A> の末尾が <B> か否か
<B> . endswith ( <A> )	<B> の末尾が <A> か否か
if <A> . endswith ( <B> ) :	<A> の末尾が <B> のとき
if <B> . endswith ( <A> ) :	<B> の末尾が <A> のとき
<A> . endswith ( <B> )	<A> の終わりが <B> かどうか
<B> . endswith ( <A> )	<B> の終わりが <A> かどうか
if <A> . endswith ( <B> ) :	<A> の終わりが <B> ならば
if <B> . endswith ( <A> ) :	<B> の終わりが <A> ならば
<A> . endswith ( <B> )	<A> の終端が <B> か否か
<B> . endswith ( <A> )	<B> の終端が <A> か否か
if <A> . endswith ( <B> ) :	<A> の終端が <B> ならば
if <B> . endswith ( <A> ) :	<B> の終端が <A> ならば
<A> . endswith ( <B> )	文字列 <A> のサフィックスが <B> であるか
<B> . endswith ( <A> )	文字列 <B> のサフィックスが <A> であるか
if <A> . endswith ( <B> ) :	文字列 <A> のサフィックスが <B> である場合
if <B> . endswith ( <A> ) :	文字列 <B> のサフィックスが <A> である場合
<A> . endswith ( <B> )	<A> の末尾が <B> であるか
<B> . endswith ( <A> )	<B> の末尾が <A> であるか
if <A> . endswith ( <B> ) :	<A> の末尾が <B> である場合
if <B> . endswith ( <A> ) :	<B> の末尾が <A> である場合
<A> . endswith ( <B> )	文字列 <A> の接尾辞が <B> か
<B> . endswith ( <A> )	文字列 <B> の接尾辞が <A> か
if <A> . endswith ( <B> ) :	もし文字列 <A> の接尾辞が <B> ならば
if <B> . endswith ( <A> ) :	もし文字列 <B> の接尾辞が <A> ならば
<A> . endswith ( <B> )	文字列 <A> の終端が <B> かどうか
<B> . endswith ( <A> )	文字列 <B> の終端が <A> かどうか
if <A> . endswith ( <B> ) :	もし文字列 <A> の終端が <B> ならば
if <B> . endswith ( <A> ) :	もし文字列 <B> の終端が <A> ならば
<A> . endswith ( <B> )	文字列 <A> の末尾が <B> であるかどうか
<B> . endswith ( <A> )	文字列 <B> の末尾が <A> であるかどうか
if <A> . endswith ( <B> ) :	文字列 <A> の末尾が <B> であるとき
if <B> . endswith ( <A> ) :	文字列 <B> の末尾が <A> であるとき
<A> . endswith ( <B> )	<A> のサフィックスが <B> か
<B> . endswith ( <A> )	<B> のサフィックスが <A> か
if <A> . endswith ( <B> ) :	<A> のサフィックスが <B> ならば
if <B> . endswith ( <A> ) :	<B> のサフィックスが <A> ならば
not <A> . endswith ( <B> )	<A> のサフィックスが <B> であるでないか
not <B> . endswith ( <A> )	<B> のサフィックスが <A> であるでないか
not <A> . endswith ( <B> )	<A> の接尾辞が <B> であるでないか
not <B> . endswith ( <A> )	<B> の接尾辞が <A> であるでないか
not <A> . endswith ( <B> )	文字列 <A> の末尾が <B> でないか
not <B> . endswith ( <A> )	文字列 <B> の末尾が <A> でないか
not <A> . endswith ( <B> )	文字列 <A> の終端が <B> であるでないかどうか
not <B> . endswith ( <A> )	文字列 <B> の終端が <A> であるでないかどうか
not <A> . endswith ( <B> )	<A> の末尾が <B> でないか
not <B> . endswith ( <A> )	<B> の末尾が <A> でないか
not <A> . endswith ( <B> )	<A> の終わりが <B> でないか
not <B> . endswith ( <A> )	<B> の終わりが <A> でないか
not <A> . endswith ( <B> )	<A> の終端が <B> でないか
not <B> . endswith ( <A> )	<B> の終端が <A> でないか
not <A> . endswith ( <B> )	文字列 <A> のサフィックスが <B> であるでないか否か
not <B> . endswith ( <A> )	文字列 <B> のサフィックスが <A> であるでないか否か
not <A> . endswith ( <B> )	<A> の末尾が <B> であるでないか
not <B> . endswith ( <A> )	<B> の末尾が <A> であるでないか
not <A> . endswith ( <B> )	文字列 <A> の接尾辞が <B> でないか否か
not <B> . endswith ( <A> )	文字列 <B> の接尾辞が <A> でないか否か
not <A> . endswith ( <B> )	文字列 <A> の終端が <B> でないか
not <B> . endswith ( <A> )	文字列 <B> の終端が <A> でないか
not <A> . endswith ( <B> )	文字列 <A> の末尾が <B> であるでないかどうか
not <B> . endswith ( <A> )	文字列 <B> の末尾が <A> であるでないかどうか
not <A> . endswith ( <B> )	<A> のサフィックスが <B> でないか
not <B> . endswith ( <A> )	<B> のサフィックスが <A> でないか
if <A> . endswith ( <B> ) :	<A> のサフィックスが <B> であるならば
if <B> . endswith ( <A> ) :	<B> のサフィックスが <A> であるならば
if <A> . endswith ( <B> ) :	もし <A> の接尾辞が <B> である場合
if <B> . endswith ( <A> ) :	もし <B> の接尾辞が <A> である場合
if <A> . endswith ( <B> ) :	文字列 <A> の末尾が <B> とき
if <B> . endswith ( <A> ) :	文字列 <B> の末尾が <A> とき
if <A> . endswith ( <B> ) :	もし文字列 <A> の終端が <B> であるならば
if <B> . endswith ( <A> ) :	もし文字列 <B> の終端が <A> であるならば
if <A> . endswith ( <B> ) :	もし <A> の末尾が <B> とき
if <B> . endswith ( <A> ) :	もし <B> の末尾が <A> とき
if <A> . endswith ( <B> ) :	もし <A> の終わりが <B> 場合
if <B> . endswith ( <A> ) :	もし <B> の終わりが <A> 場合
if <A> . endswith ( <B> ) :	<A> の終端が <B> 場合
if <B> . endswith ( <A> ) :	<B> の終端が <A> 場合
if <A> . endswith ( <B> ) :	文字列 <A> のサフィックスが <B> であるとき
if <B> . endswith ( <A> ) :	文字列 <B> のサフィックスが <A> であるとき
if <A> . endswith ( <B> ) :	<A> の末尾が <B> である場合
if <B> . endswith ( <A> ) :	<B> の末尾が <A> である場合
if <A> . endswith ( <B> ) :	文字列 <A> の接尾辞が <B> とき
if <B> . endswith ( <A> ) :	文字列 <B> の接尾辞が <A> とき
if <A> . endswith ( <B> ) :	文字列 <A> の終端が <B> ならば
if <B> . endswith ( <A> ) :	文字列 <B> の終端が <A> ならば
if <A> . endswith ( <B> ) :	もし文字列 <A> の末尾が <B> である場合
if <B> . endswith ( <A> ) :	もし文字列 <B> の末尾が <A> である場合
if <A> . endswith ( <B> ) :	<A> のサフィックスが <B> ならば
if <B> . endswith ( <A> ) :	<B> のサフィックスが <A> ならば
if not <A> . endswith ( <B> ) :	もし <A> のサフィックスが <B> であるでないならば
if not <B> . endswith ( <A> ) :	もし <B> のサフィックスが <A> であるでないならば
if not <A> . endswith ( <B> ) :	もし <A> の接尾辞が <B> であるでないとき
if not <B> . endswith ( <A> ) :	もし <B> の接尾辞が <A> であるでないとき
if not <A> . endswith ( <B> ) :	文字列 <A> の末尾が <B> でないとき
if not <B> . endswith ( <A> ) :	文字列 <B> の末尾が <A> でないとき
if not <A> . endswith ( <B> ) :	もし文字列 <A> の終端が <B> であるでない場合
if not <B> . endswith ( <A> ) :	もし文字列 <B> の終端が <A> であるでない場合
if not <A> . endswith ( <B> ) :	<A> の末尾が <B> でない場合
if not <B> . endswith ( <A> ) :	<B> の末尾が <A> でない場合
if not <A> . endswith ( <B> ) :	もし <A> の終わりが <B> でないとき
if not <B> . endswith ( <A> ) :	もし <B> の終わりが <A> でないとき
if not <A> . endswith ( <B> ) :	もし <A> の終端が <B> でない場合
if not <B> . endswith ( <A> ) :	もし <B> の終端が <A> でない場合
if not <A> . endswith ( <B> ) :	文字列 <A> のサフィックスが <B> であるでなならば
if not <B> . endswith ( <A> ) :	文字列 <B> のサフィックスが <A> であるでなならば
if not <A> . endswith ( <B> ) :	もし <A> の末尾が <B> であるでないとき
if not <B> . endswith ( <A> ) :	もし <B> の末尾が <A> であるでないとき
if not <A> . endswith ( <B> ) :	文字列 <A> の接尾辞が <B> でなならば
if not <B> . endswith ( <A> ) :	文字列 <B> の接尾辞が <A> でなならば
if not <A> . endswith ( <B> ) :	文字列 <A> の終端が <B> でない場合
if not <B> . endswith ( <A> ) :	文字列 <B> の終端が <A> でない場合
if not <A> . endswith ( <B> ) :	もし文字列 <A> の末尾が <B> であるでない場合
if not <B> . endswith ( <A> ) :	もし文字列 <B> の末尾が <A> であるでない場合
if not <A> . endswith ( <B> ) :	<A> のサフィックスが <B> でないならば
if not <B> . endswith ( <A> ) :	<B> のサフィックスが <A> でないならば
while <A> . endswith ( <B> ) :	<A> のサフィックスが <B> である間
while <B> . endswith ( <A> ) :	<B> のサフィックスが <A> である間
while <A> . endswith ( <B> ) :	<A> の末尾が <B> 間
while <B> . endswith ( <A> ) :	<B> の末尾が <A> 間
while <A> . endswith ( <B> ) :	文字列 <A> の終端が <B> 間
while <B> . endswith ( <A> ) :	文字列 <B> の終端が <A> 間
while <A> . endswith ( <B> ) :	<A> のサフィックスが <B> 間
while <B> . endswith ( <A> ) :	<B> のサフィックスが <A> 間
while not <A> . endswith ( <B> ) :	<A> の接尾辞が <B> であるでない間
while not <B> . endswith ( <A> ) :	<B> の接尾辞が <A> であるでない間
while not <A> . endswith ( <B> ) :	文字列 <A> の末尾が <B> でない間
while not <B> . endswith ( <A> ) :	文字列 <B> の末尾が <A> でない間
while not <A> . endswith ( <B> ) :	文字列 <A> の終端が <B> であるでない間
while not <B> . endswith ( <A> ) :	文字列 <B> の終端が <A> であるでない間
while not <A> . endswith ( <B> ) :	<A> の終わりが <B> でない間
while not <B> . endswith ( <A> ) :	<B> の終わりが <A> でない間
while not <A> . endswith ( <B> ) :	文字列 <A> のサフィックスが <B> であるでな間
while not <B> . endswith ( <A> ) :	文字列 <B> のサフィックスが <A> であるでな間
while not <A> . endswith ( <B> ) :	<A> の末尾が <B> であるでない間
while not <B> . endswith ( <A> ) :	<B> の末尾が <A> であるでない間
while not <A> . endswith ( <B> ) :	文字列 <A> の接尾辞が <B> でな間
while not <B> . endswith ( <A> ) :	文字列 <B> の接尾辞が <A> でな間
while not <A> . endswith ( <B> ) :	文字列 <A> の終端が <B> でない間
while not <B> . endswith ( <A> ) :	文字列 <B> の終端が <A> でない間
<A> . expandtabs ( )	空白で文字列 <A> のタブを置換する
<A> . expandtabs ( )	文字列 <A> のタブ記号を空白で置き換える
<A> . expandtabs ( )	文字列 <A> の TAB を空白で置換する
<A> . expandtabs ( )	<A> の TAB を空白で置換する
<A> . expandtabs ( )	空白で <A> のタブ記号を置き換える
<A> . expandtabs ( )	文字列 <A> のタブ記号を空白で置換する
<A> . expandtabs ( )	空白で <A> 文字列のタブを置換する
<A> . expandtabs ( )	空白で文字列 <A> のタブ記号を置き換える
<A> . expandtabs ( )	<A> のタブを空白で置換する
<A> . expandtabs ( )	空白で <A> の TAB を置換する
<A> . expandtabs ( )	文字列 <A> のタブを空白で置き換える
<A> . expandtabs ( )	空白で文字列 <A> のタブを置き換える
<A> . expandtabs ( )	文字列 <A> のタブを空白で置換する
<A> . expandtabs ( )	空白で <A> のタブを置換する
<A> . expandtabs ( )	文字列 <A> の TAB を空白で置き換える
<A> . expandtabs ( <B> )	<A> 中のタブ記号を <B> 文字の空白で置き換える
<B> . expandtabs ( <A> )	<B> 中のタブ記号を <A> 文字の空白で置き換える
<A> . expandtabs ( <B> )	<A> 内の TAB を <B> 文字の空白で置き換える
<B> . expandtabs ( <A> )	<B> 内の TAB を <A> 文字の空白で置き換える
<A> . expandtabs ( <B> )	<B> 文字の空白で <A> 中の TAB を置換する
<B> . expandtabs ( <A> )	<A> 文字の空白で <B> 中の TAB を置換する
<A> . expandtabs ( <B> )	文字列 <A> 内のタブを <B> 文字の空白で置換する
<B> . expandtabs ( <A> )	文字列 <B> 内のタブを <A> 文字の空白で置換する
<A> . expandtabs ( <B> )	文字列 <A> 内の TAB を <B> 文字の空白で置き換える
<B> . expandtabs ( <A> )	文字列 <B> 内の TAB を <A> 文字の空白で置き換える
<A> . expandtabs ( <B> )	文字列 <A> 内のタブを <B> 文字の空白で置き換える
<B> . expandtabs ( <A> )	文字列 <B> 内のタブを <A> 文字の空白で置き換える
<A> . expandtabs ( <B> )	<B> 文字の空白で文字列 <A> 内のタブ記号を置き換える
<B> . expandtabs ( <A> )	<A> 文字の空白で文字列 <B> 内のタブ記号を置き換える
<A> . expandtabs ( <B> )	<B> 文字の空白で <A> 文字列中の TAB を置き換える
<B> . expandtabs ( <A> )	<A> 文字の空白で <B> 文字列中の TAB を置き換える
<A> . expandtabs ( <B> )	<A> 中のタブを <B> 文字の空白で置換する
<B> . expandtabs ( <A> )	<B> 中のタブを <A> 文字の空白で置換する
<A> . expandtabs ( <B> )	<B> 文字の空白で文字列 <A> 中の TAB を置換する
<B> . expandtabs ( <A> )	<A> 文字の空白で文字列 <B> 中の TAB を置換する
<A> . expandtabs ( <B> )	<B> 文字の空白で <A> 中のタブを置換する
<B> . expandtabs ( <A> )	<A> 文字の空白で <B> 中のタブを置換する
<A> . expandtabs ( <B> )	<A> 中の TAB を <B> 文字の空白で置き換える
<B> . expandtabs ( <A> )	<B> 中の TAB を <A> 文字の空白で置き換える
<A> . find ( <B> ) >= 0	<B> が <A> 文字列内にあるか否か
<B> . find ( <A> ) >= 0	<A> が <B> 文字列内にあるか否か
if <A> . find ( <B> ) >= 0 :	<B> が <A> 文字列内にあるとき
if <B> . find ( <A> ) >= 0 :	<A> が <B> 文字列内にあるとき
<A> . find ( <B> ) >= 0	<A> 内に <B> があるか否か
<B> . find ( <A> ) >= 0	<B> 内に <A> があるか否か
if <A> . find ( <B> ) >= 0 :	<A> 内に <B> がある場合
if <B> . find ( <A> ) >= 0 :	<B> 内に <A> がある場合
<A> . find ( <B> ) >= 0	<B> が <A> 内にあるか否か
<B> . find ( <A> ) >= 0	<A> が <B> 内にあるか否か
if <A> . find ( <B> ) >= 0 :	<B> が <A> 内にあるとき
if <B> . find ( <A> ) >= 0 :	<A> が <B> 内にあるとき
<A> . find ( <B> ) >= 0	<A> に <B> があるか
<B> . find ( <A> ) >= 0	<B> に <A> があるか
if <A> . find ( <B> ) >= 0 :	<A> に <B> があるならば
if <B> . find ( <A> ) >= 0 :	<B> に <A> があるならば
<A> . find ( <B> ) >= 0	<B> が <A> 文字列中にあるかどうか
<B> . find ( <A> ) >= 0	<A> が <B> 文字列中にあるかどうか
if <A> . find ( <B> ) >= 0 :	<B> が <A> 文字列中にあるならば
if <B> . find ( <A> ) >= 0 :	<A> が <B> 文字列中にあるならば
<A> . find ( <B> ) >= 0	<B> が文字列 <A> 内にあるか
<B> . find ( <A> ) >= 0	<A> が文字列 <B> 内にあるか
if <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> 内にあるとき
if <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> 内にあるとき
<A> . find ( <B> ) >= 0	<B> が <A> にあるか
<B> . find ( <A> ) >= 0	<A> が <B> にあるか
if <A> . find ( <B> ) >= 0 :	<B> が <A> にある場合
if <B> . find ( <A> ) >= 0 :	<A> が <B> にある場合
<A> . find ( <B> ) >= 0	<B> が <A> 中にあるか
<B> . find ( <A> ) >= 0	<A> が <B> 中にあるか
if <A> . find ( <B> ) >= 0 :	<B> が <A> 中にある場合
if <B> . find ( <A> ) >= 0 :	<A> が <B> 中にある場合
<A> . find ( <B> ) >= 0	文字列 <A> 内に <B> があるか
<B> . find ( <A> ) >= 0	文字列 <B> 内に <A> があるか
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内に <B> がある場合
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内に <A> がある場合
<A> . find ( <B> ) >= 0	<B> が文字列 <A> 中にあるか否か
<B> . find ( <A> ) >= 0	<A> が文字列 <B> 中にあるか否か
if <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> 中にあるとき
if <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> 中にあるとき
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 文字列内にあったなら
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 文字列内にあったなら
if <A> . find ( <B> ) >= 0 :	<A> 内に <B> がある場合
if <B> . find ( <A> ) >= 0 :	<B> 内に <A> がある場合
if <A> . find ( <B> ) >= 0 :	<A> 内に <B> があれば
if <B> . find ( <A> ) >= 0 :	<B> 内に <A> があれば
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 内にあれば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 内にあれば
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 内にあった場合
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 内にあった場合
if <A> . find ( <B> ) >= 0 :	もし <A> に <B> があれば
if <B> . find ( <A> ) >= 0 :	もし <B> に <A> があれば
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 文字列中にあるとき
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 文字列中にあるとき
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 文字列中にあれば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 文字列中にあれば
if <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> 内にあるならば
if <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> 内にあるならば
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> 内にあれば
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> 内にあれば
if <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> 内にあったなら
if <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> 内にあったなら
if <A> . find ( <B> ) >= 0 :	<B> が <A> にあるとき
if <B> . find ( <A> ) >= 0 :	<A> が <B> にあるとき
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> にあれば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> にあれば
if <A> . find ( <B> ) >= 0 :	<B> が <A> 中にある場合
if <B> . find ( <A> ) >= 0 :	<A> が <B> 中にある場合
if <A> . find ( <B> ) >= 0 :	<B> が <A> 中にあれば
if <B> . find ( <A> ) >= 0 :	<A> が <B> 中にあれば
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内に <B> があれば
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内に <A> があれば
if <A> . find ( <B> ) >= 0 :	もし文字列 <A> 内に <B> があったならば
if <B> . find ( <A> ) >= 0 :	もし文字列 <B> 内に <A> があったならば
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> 中にあれば
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> 中にあれば
while <A> . find ( <B> ) >= 0 :	<B> が <A> 文字列内にある間
while <B> . find ( <A> ) >= 0 :	<A> が <B> 文字列内にある間
while <A> . find ( <B> ) >= 0 :	<B> が <A> 文字列中にある間
while <B> . find ( <A> ) >= 0 :	<A> が <B> 文字列中にある間
while <A> . find ( <B> ) >= 0 :	<B> が <A> 中にある間
while <B> . find ( <A> ) >= 0 :	<A> が <B> 中にある間
while <A> . find ( <B> ) >= 0 :	文字列 <A> 内に <B> がある間
while <B> . find ( <A> ) >= 0 :	文字列 <B> 内に <A> がある間
while <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> 中にある間
while <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> 中にある間
<A> . find ( <B> ) >= 0	<B> が <A> 中で出現するか否か
<B> . find ( <A> ) >= 0	<A> が <B> 中で出現するか否か
if <A> . find ( <B> ) >= 0 :	<B> が <A> 中で出現する場合
if <B> . find ( <A> ) >= 0 :	<A> が <B> 中で出現する場合
<A> . find ( <B> ) >= 0	文字列 <A> 内で <B> が出現するか
<B> . find ( <A> ) >= 0	文字列 <B> 内で <A> が出現するか
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内で <B> が出現する場合
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内で <A> が出現する場合
<A> . find ( <B> ) >= 0	<B> が <A> 中で発見されるか
<B> . find ( <A> ) >= 0	<A> が <B> 中で発見されるか
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 中で発見されるならば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 中で発見されるならば
<A> . find ( <B> ) >= 0	<A> で <B> が出現するか
<B> . find ( <A> ) >= 0	<B> で <A> が出現するか
if <A> . find ( <B> ) >= 0 :	<A> で <B> が出現するならば
if <B> . find ( <A> ) >= 0 :	<B> で <A> が出現するならば
<A> . find ( <B> ) >= 0	<A> 中で <B> が出現するか否か
<B> . find ( <A> ) >= 0	<B> 中で <A> が出現するか否か
if <A> . find ( <B> ) >= 0 :	<A> 中で <B> が出現するとき
if <B> . find ( <A> ) >= 0 :	<B> 中で <A> が出現するとき
<A> . find ( <B> ) >= 0	<A> 内で <B> が発見されるか
<B> . find ( <A> ) >= 0	<B> 内で <A> が発見されるか
if <A> . find ( <B> ) >= 0 :	<A> 内で <B> が発見されるとき
if <B> . find ( <A> ) >= 0 :	<B> 内で <A> が発見されるとき
<A> . find ( <B> ) >= 0	<B> が <A> 中で見つかるかどうか
<B> . find ( <A> ) >= 0	<A> が <B> 中で見つかるかどうか
if <A> . find ( <B> ) >= 0 :	<B> が <A> 中で見つかるならば
if <B> . find ( <A> ) >= 0 :	<A> が <B> 中で見つかるならば
<A> . find ( <B> ) >= 0	<B> が文字列 <A> で出現するか
<B> . find ( <A> ) >= 0	<A> が文字列 <B> で出現するか
if <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> で出現するとき
if <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> で出現するとき
<A> . find ( <B> ) >= 0	文字列 <A> 内で <B> が発見されるか
<B> . find ( <A> ) >= 0	文字列 <B> 内で <A> が発見されるか
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内で <B> が発見される場合
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内で <A> が発見される場合
<A> . find ( <B> ) >= 0	<A> 内で <B> が見つかるか否か
<B> . find ( <A> ) >= 0	<B> 内で <A> が見つかるか否か
if <A> . find ( <B> ) >= 0 :	もし <A> 内で <B> が見つかるならば
if <B> . find ( <A> ) >= 0 :	もし <B> 内で <A> が見つかるならば
<A> . find ( <B> ) >= 0	<A> 中で <B> が発見されるか
<B> . find ( <A> ) >= 0	<B> 中で <A> が発見されるか
if <A> . find ( <B> ) >= 0 :	<A> 中で <B> が発見される場合
if <B> . find ( <A> ) >= 0 :	<B> 中で <A> が発見される場合
<A> . find ( <B> ) >= 0	<B> が <A> 内で見つかるか
<B> . find ( <A> ) >= 0	<A> が <B> 内で見つかるか
if <A> . find ( <B> ) >= 0 :	<B> が <A> 内で見つかるとき
if <B> . find ( <A> ) >= 0 :	<A> が <B> 内で見つかるとき
<A> . find ( <B> ) >= 0	<B> が文字列 <A> で発見されるか
<B> . find ( <A> ) >= 0	<A> が文字列 <B> で発見されるか
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> で発見されるならば
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> で発見されるならば
<A> . find ( <B> ) >= 0	文字列 <A> 中で <B> が出現するか否か
<B> . find ( <A> ) >= 0	文字列 <B> 中で <A> が出現するか否か
if <A> . find ( <B> ) >= 0 :	文字列 <A> 中で <B> が出現するとき
if <B> . find ( <A> ) >= 0 :	文字列 <B> 中で <A> が出現するとき
<A> . find ( <B> ) >= 0	<B> が <A> 文字列中で出現するかどうか
<B> . find ( <A> ) >= 0	<A> が <B> 文字列中で出現するかどうか
if <A> . find ( <B> ) >= 0 :	<B> が <A> 文字列中で出現する場合
if <B> . find ( <A> ) >= 0 :	<A> が <B> 文字列中で出現する場合
<A> . find ( <B> ) >= 0	<B> が文字列 <A> 中で出現するか
<B> . find ( <A> ) >= 0	<A> が文字列 <B> 中で出現するか
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> 中で出現するならば
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> 中で出現するならば
<A> . find ( <B> ) >= 0	文字列 <A> 中で <B> が見つかるか
<B> . find ( <A> ) >= 0	文字列 <B> 中で <A> が見つかるか
if <A> . find ( <B> ) >= 0 :	文字列 <A> 中で <B> が見つかるとき
if <B> . find ( <A> ) >= 0 :	文字列 <B> 中で <A> が見つかるとき
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 中で出現する場合
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 中で出現する場合
if <A> . find ( <B> ) >= 0 :	<B> が <A> 中で出現すれば
if <B> . find ( <A> ) >= 0 :	<A> が <B> 中で出現すれば
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内で <B> が出現すれば
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内で <A> が出現すれば
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内で <B> が出現した場合
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内で <A> が出現した場合
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 中で発見されれば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 中で発見されれば
if <A> . find ( <B> ) >= 0 :	もし <A> で <B> が出現すれば
if <B> . find ( <A> ) >= 0 :	もし <B> で <A> が出現すれば
if <A> . find ( <B> ) >= 0 :	もし <A> で <B> が出現したとき
if <B> . find ( <A> ) >= 0 :	もし <B> で <A> が出現したとき
if <A> . find ( <B> ) >= 0 :	もし <A> 中で <B> が出現する場合
if <B> . find ( <A> ) >= 0 :	もし <B> 中で <A> が出現する場合
if <A> . find ( <B> ) >= 0 :	もし <A> 中で <B> が出現すれば
if <B> . find ( <A> ) >= 0 :	もし <B> 中で <A> が出現すれば
if <A> . find ( <B> ) >= 0 :	<A> 中で <B> が出現したならば
if <B> . find ( <A> ) >= 0 :	<B> 中で <A> が出現したならば
if <A> . find ( <B> ) >= 0 :	<A> 内で <B> が発見される場合
if <B> . find ( <A> ) >= 0 :	<B> 内で <A> が発見される場合
if <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> で出現した場合
if <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> で出現した場合
if <A> . find ( <B> ) >= 0 :	もし文字列 <A> 内で <B> が発見されるとき
if <B> . find ( <A> ) >= 0 :	もし文字列 <B> 内で <A> が発見されるとき
if <A> . find ( <B> ) >= 0 :	文字列 <A> 内で <B> が発見されれば
if <B> . find ( <A> ) >= 0 :	文字列 <B> 内で <A> が発見されれば
if <A> . find ( <B> ) >= 0 :	もし <A> 内で <B> が見つかれば
if <B> . find ( <A> ) >= 0 :	もし <B> 内で <A> が見つかれば
if <A> . find ( <B> ) >= 0 :	<A> 中で <B> が発見されれば
if <B> . find ( <A> ) >= 0 :	<B> 中で <A> が発見されれば
if <A> . find ( <B> ) >= 0 :	<A> 中で <B> が発見されたとき
if <B> . find ( <A> ) >= 0 :	<B> 中で <A> が発見されたとき
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 内で見つかるならば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 内で見つかるならば
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> で発見されるならば
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> で発見されるならば
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> で発見されれば
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> で発見されれば
if <A> . find ( <B> ) >= 0 :	文字列 <A> 中で <B> が出現する場合
if <B> . find ( <A> ) >= 0 :	文字列 <B> 中で <A> が出現する場合
if <A> . find ( <B> ) >= 0 :	文字列 <A> 中で <B> が出現すれば
if <B> . find ( <A> ) >= 0 :	文字列 <B> 中で <A> が出現すれば
if <A> . find ( <B> ) >= 0 :	もし <B> が <A> 文字列中で出現すれば
if <B> . find ( <A> ) >= 0 :	もし <A> が <B> 文字列中で出現すれば
if <A> . find ( <B> ) >= 0 :	もし <B> が文字列 <A> 中で出現したら
if <B> . find ( <A> ) >= 0 :	もし <A> が文字列 <B> 中で出現したら
if <A> . find ( <B> ) >= 0 :	文字列 <A> 中で <B> が見つかる場合
if <B> . find ( <A> ) >= 0 :	文字列 <B> 中で <A> が見つかる場合
if <A> . find ( <B> ) >= 0 :	文字列 <A> 中で <B> が見つかったなら
if <B> . find ( <A> ) >= 0 :	文字列 <B> 中で <A> が見つかったなら
while <A> . find ( <B> ) >= 0 :	文字列 <A> 内で <B> が出現する間
while <B> . find ( <A> ) >= 0 :	文字列 <B> 内で <A> が出現する間
while <A> . find ( <B> ) >= 0 :	<B> が <A> 中で発見される間
while <B> . find ( <A> ) >= 0 :	<A> が <B> 中で発見される間
while <A> . find ( <B> ) >= 0 :	<A> で <B> が出現する間
while <B> . find ( <A> ) >= 0 :	<B> で <A> が出現する間
while <A> . find ( <B> ) >= 0 :	<A> 中で <B> が出現する間
while <B> . find ( <A> ) >= 0 :	<B> 中で <A> が出現する間
while <A> . find ( <B> ) >= 0 :	<A> 内で <B> が発見される間
while <B> . find ( <A> ) >= 0 :	<B> 内で <A> が発見される間
while <A> . find ( <B> ) >= 0 :	<A> 内で <B> が見つかる間
while <B> . find ( <A> ) >= 0 :	<B> 内で <A> が見つかる間
while <A> . find ( <B> ) >= 0 :	<A> 中で <B> が発見される間
while <B> . find ( <A> ) >= 0 :	<B> 中で <A> が発見される間
while <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> で発見される間
while <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> で発見される間
while <A> . find ( <B> ) >= 0 :	<B> が <A> 文字列中で出現する間
while <B> . find ( <A> ) >= 0 :	<A> が <B> 文字列中で出現する間
while <A> . find ( <B> ) >= 0 :	<B> が文字列 <A> 中で出現する間
while <B> . find ( <A> ) >= 0 :	<A> が文字列 <B> 中で出現する間
<A> . find ( <B> ) == -1	<B> が <A> 文字列内にないかどうか
<B> . find ( <A> ) == -1	<A> が <B> 文字列内にないかどうか
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 文字列内にないならば
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 文字列内にないならば
<A> . find ( <B> ) == -1	<B> が <A> 文字列中にないか否か
<B> . find ( <A> ) == -1	<A> が <B> 文字列中にないか否か
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列中にないならば
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列中にないならば
<A> . find ( <B> ) == -1	<A> 内に <B> がないか否か
<B> . find ( <A> ) == -1	<B> 内に <A> がないか否か
if <A> . find ( <B> ) == -1 :	もし <A> 内に <B> がないならば
if <B> . find ( <A> ) == -1 :	もし <B> 内に <A> がないならば
<A> . find ( <B> ) == -1	<B> が <A> 内にないか否か
<B> . find ( <A> ) == -1	<A> が <B> 内にないか否か
if <A> . find ( <B> ) == -1 :	<B> が <A> 内にない場合
if <B> . find ( <A> ) == -1 :	<A> が <B> 内にない場合
<A> . find ( <B> ) == -1	<B> が文字列 <A> 中にないか
<B> . find ( <A> ) == -1	<A> が文字列 <B> 中にないか
if <A> . find ( <B> ) == -1 :	<B> が文字列 <A> 中にないとき
if <B> . find ( <A> ) == -1 :	<A> が文字列 <B> 中にないとき
<A> . find ( <B> ) == -1	文字列 <A> 内に <B> がないか
<B> . find ( <A> ) == -1	文字列 <B> 内に <A> がないか
if <A> . find ( <B> ) == -1 :	もし文字列 <A> 内に <B> がないならば
if <B> . find ( <A> ) == -1 :	もし文字列 <B> 内に <A> がないならば
<A> . find ( <B> ) == -1	文字列 <A> 中に <B> がないか否か
<B> . find ( <A> ) == -1	文字列 <B> 中に <A> がないか否か
if <A> . find ( <B> ) == -1 :	文字列 <A> 中に <B> がない場合
if <B> . find ( <A> ) == -1 :	文字列 <B> 中に <A> がない場合
<A> . find ( <B> ) == -1	<A> に <B> がないかどうか
<B> . find ( <A> ) == -1	<B> に <A> がないかどうか
if <A> . find ( <B> ) == -1 :	<A> に <B> がないとき
if <B> . find ( <A> ) == -1 :	<B> に <A> がないとき
<A> . find ( <B> ) == -1	文字列 <A> に <B> がないか
<B> . find ( <A> ) == -1	文字列 <B> に <A> がないか
if <A> . find ( <B> ) == -1 :	文字列 <A> に <B> がないとき
if <B> . find ( <A> ) == -1 :	文字列 <B> に <A> がないとき
<A> . find ( <B> ) == -1	<B> が <A> 中にないか否か
<B> . find ( <A> ) == -1	<A> が <B> 中にないか否か
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 中にないならば
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 中にないならば
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 文字列内になくなければ
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 文字列内になくなければ
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列内になくなかったならば
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列内になくなかったならば
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列中になくなかった場合
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列中になくなかった場合
if <A> . find ( <B> ) == -1 :	<A> 内に <B> がないとき
if <B> . find ( <A> ) == -1 :	<B> 内に <A> がないとき
if <A> . find ( <B> ) == -1 :	<A> 内に <B> がなくなかったとき
if <B> . find ( <A> ) == -1 :	<B> 内に <A> がなくなかったとき
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 内になくなかったならば
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 内になくなかったならば
if <A> . find ( <B> ) == -1 :	もし <B> が文字列 <A> 中にない場合
if <B> . find ( <A> ) == -1 :	もし <A> が文字列 <B> 中にない場合
if <A> . find ( <B> ) == -1 :	もし <B> が文字列 <A> 中になくなかったとき
if <B> . find ( <A> ) == -1 :	もし <A> が文字列 <B> 中になくなかったとき
if <A> . find ( <B> ) == -1 :	文字列 <A> 内に <B> がないとき
if <B> . find ( <A> ) == -1 :	文字列 <B> 内に <A> がないとき
if <A> . find ( <B> ) == -1 :	文字列 <A> 内に <B> がなくなければ
if <B> . find ( <A> ) == -1 :	文字列 <B> 内に <A> がなくなければ
if <A> . find ( <B> ) == -1 :	文字列 <A> 中に <B> がないとき
if <B> . find ( <A> ) == -1 :	文字列 <B> 中に <A> がないとき
if <A> . find ( <B> ) == -1 :	文字列 <A> 中に <B> がなくなければ
if <B> . find ( <A> ) == -1 :	文字列 <B> 中に <A> がなくなければ
if <A> . find ( <B> ) == -1 :	文字列 <A> 中に <B> がなくなかったなら
if <B> . find ( <A> ) == -1 :	文字列 <B> 中に <A> がなくなかったなら
if <A> . find ( <B> ) == -1 :	もし <A> に <B> がなくなければ
if <B> . find ( <A> ) == -1 :	もし <B> に <A> がなくなければ
if <A> . find ( <B> ) == -1 :	もし <A> に <B> がなくなかったならば
if <B> . find ( <A> ) == -1 :	もし <B> に <A> がなくなかったならば
if <A> . find ( <B> ) == -1 :	もし文字列 <A> に <B> がなくなかったなら
if <B> . find ( <A> ) == -1 :	もし文字列 <B> に <A> がなくなかったなら
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 中にないならば
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 中にないならば
if <A> . find ( <B> ) == -1 :	<B> が <A> 中になくなければ
if <B> . find ( <A> ) == -1 :	<A> が <B> 中になくなければ
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 中になくなかったとき
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 中になくなかったとき
while <A> . find ( <B> ) == -1 :	<B> が <A> 文字列中にない間
while <B> . find ( <A> ) == -1 :	<A> が <B> 文字列中にない間
while <A> . find ( <B> ) == -1 :	<A> 内に <B> がない間
while <B> . find ( <A> ) == -1 :	<B> 内に <A> がない間
while <A> . find ( <B> ) == -1 :	<B> が <A> 内にない間
while <B> . find ( <A> ) == -1 :	<A> が <B> 内にない間
while <A> . find ( <B> ) == -1 :	文字列 <A> 内に <B> がない間
while <B> . find ( <A> ) == -1 :	文字列 <B> 内に <A> がない間
while <A> . find ( <B> ) == -1 :	<A> に <B> がない間
while <B> . find ( <A> ) == -1 :	<B> に <A> がない間
<A> . find ( <B> ) == -1	<B> が <A> で見つからないかどうか
<B> . find ( <A> ) == -1	<A> が <B> で見つからないかどうか
if <A> . find ( <B> ) == -1 :	<B> が <A> で見つからない場合
if <B> . find ( <A> ) == -1 :	<A> が <B> で見つからない場合
<A> . find ( <B> ) == -1	文字列 <A> 内で <B> が見つからないか否か
<B> . find ( <A> ) == -1	文字列 <B> 内で <A> が見つからないか否か
if <A> . find ( <B> ) == -1 :	文字列 <A> 内で <B> が見つからないとき
if <B> . find ( <A> ) == -1 :	文字列 <B> 内で <A> が見つからないとき
<A> . find ( <B> ) == -1	文字列 <A> 中で <B> が見つからないか否か
<B> . find ( <A> ) == -1	文字列 <B> 中で <A> が見つからないか否か
if <A> . find ( <B> ) == -1 :	もし文字列 <A> 中で <B> が見つからないならば
if <B> . find ( <A> ) == -1 :	もし文字列 <B> 中で <A> が見つからないならば
<A> . find ( <B> ) == -1	<B> が文字列 <A> で見つからないか
<B> . find ( <A> ) == -1	<A> が文字列 <B> で見つからないか
if <A> . find ( <B> ) == -1 :	もし <B> が文字列 <A> で見つからないならば
if <B> . find ( <A> ) == -1 :	もし <A> が文字列 <B> で見つからないならば
<A> . find ( <B> ) == -1	文字列 <A> で <B> が見つからないかどうか
<B> . find ( <A> ) == -1	文字列 <B> で <A> が見つからないかどうか
if <A> . find ( <B> ) == -1 :	もし文字列 <A> で <B> が見つからないならば
if <B> . find ( <A> ) == -1 :	もし文字列 <B> で <A> が見つからないならば
<A> . find ( <B> ) == -1	<A> 中で <B> が見つからないか否か
<B> . find ( <A> ) == -1	<B> 中で <A> が見つからないか否か
if <A> . find ( <B> ) == -1 :	<A> 中で <B> が見つからないとき
if <B> . find ( <A> ) == -1 :	<B> 中で <A> が見つからないとき
<A> . find ( <B> ) == -1	<A> 内で <B> が見つからないか
<B> . find ( <A> ) == -1	<B> 内で <A> が見つからないか
if <A> . find ( <B> ) == -1 :	<A> 内で <B> が見つからない場合
if <B> . find ( <A> ) == -1 :	<B> 内で <A> が見つからない場合
<A> . find ( <B> ) == -1	<B> が <A> 中で見つからないか否か
<B> . find ( <A> ) == -1	<A> が <B> 中で見つからないか否か
if <A> . find ( <B> ) == -1 :	<B> が <A> 中で見つからないとき
if <B> . find ( <A> ) == -1 :	<A> が <B> 中で見つからないとき
<A> . find ( <B> ) == -1	<B> が <A> 文字列中で見つからないか
<B> . find ( <A> ) == -1	<A> が <B> 文字列中で見つからないか
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列中で見つからない場合
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列中で見つからない場合
<A> . find ( <B> ) == -1	<B> が文字列 <A> 内で見つからないか
<B> . find ( <A> ) == -1	<A> が文字列 <B> 内で見つからないか
if <A> . find ( <B> ) == -1 :	<B> が文字列 <A> 内で見つからないとき
if <B> . find ( <A> ) == -1 :	<A> が文字列 <B> 内で見つからないとき
<A> . find ( <B> ) == -1	<B> が <A> 内で見つからないか
<B> . find ( <A> ) == -1	<A> が <B> 内で見つからないか
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 内で見つからないならば
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 内で見つからないならば
<A> . find ( <B> ) == -1	<B> が <A> 文字列で見つからないか否か
<B> . find ( <A> ) == -1	<A> が <B> 文字列で見つからないか否か
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列で見つからないとき
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列で見つからないとき
<A> . find ( <B> ) == -1	<A> で <B> が見つからないかどうか
<B> . find ( <A> ) == -1	<B> で <A> が見つからないかどうか
if <A> . find ( <B> ) == -1 :	<A> で <B> が見つからないならば
if <B> . find ( <A> ) == -1 :	<B> で <A> が見つからないならば
if <A> . find ( <B> ) == -1 :	<B> が <A> で見つからないならば
if <B> . find ( <A> ) == -1 :	<A> が <B> で見つからないならば
if <A> . find ( <B> ) == -1 :	<B> が <A> で見つからなければ
if <B> . find ( <A> ) == -1 :	<A> が <B> で見つからなければ
if <A> . find ( <B> ) == -1 :	もし <B> が <A> で見つからなかったら
if <B> . find ( <A> ) == -1 :	もし <A> が <B> で見つからなかったら
if <A> . find ( <B> ) == -1 :	文字列 <A> 内で <B> が見つからなかった場合
if <B> . find ( <A> ) == -1 :	文字列 <B> 内で <A> が見つからなかった場合
if <A> . find ( <B> ) == -1 :	文字列 <A> 中で <B> が見つからなかったら
if <B> . find ( <A> ) == -1 :	文字列 <B> 中で <A> が見つからなかったら
if <A> . find ( <B> ) == -1 :	もし <B> が文字列 <A> で見つからなければ
if <B> . find ( <A> ) == -1 :	もし <A> が文字列 <B> で見つからなければ
if <A> . find ( <B> ) == -1 :	<B> が文字列 <A> で見つからなかったならば
if <B> . find ( <A> ) == -1 :	<A> が文字列 <B> で見つからなかったならば
if <A> . find ( <B> ) == -1 :	文字列 <A> で <B> が見つからない場合
if <B> . find ( <A> ) == -1 :	文字列 <B> で <A> が見つからない場合
if <A> . find ( <B> ) == -1 :	もし文字列 <A> で <B> が見つからなければ
if <B> . find ( <A> ) == -1 :	もし文字列 <B> で <A> が見つからなければ
if <A> . find ( <B> ) == -1 :	文字列 <A> で <B> が見つからなかった場合
if <B> . find ( <A> ) == -1 :	文字列 <B> で <A> が見つからなかった場合
if <A> . find ( <B> ) == -1 :	もし <A> 中で <B> が見つからなかったなら
if <B> . find ( <A> ) == -1 :	もし <B> 中で <A> が見つからなかったなら
if <A> . find ( <B> ) == -1 :	<A> 内で <B> が見つからないとき
if <B> . find ( <A> ) == -1 :	<B> 内で <A> が見つからないとき
if <A> . find ( <B> ) == -1 :	<A> 内で <B> が見つからなければ
if <B> . find ( <A> ) == -1 :	<B> 内で <A> が見つからなければ
if <A> . find ( <B> ) == -1 :	<A> 内で <B> が見つからなかったならば
if <B> . find ( <A> ) == -1 :	<B> 内で <A> が見つからなかったならば
if <A> . find ( <B> ) == -1 :	<B> が <A> 中で見つからなかったら
if <B> . find ( <A> ) == -1 :	<A> が <B> 中で見つからなかったら
if <A> . find ( <B> ) == -1 :	<B> が文字列 <A> 内で見つからなかったとき
if <B> . find ( <A> ) == -1 :	<A> が文字列 <B> 内で見つからなかったとき
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 内で見つからないとき
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 内で見つからないとき
if <A> . find ( <B> ) == -1 :	もし <B> が <A> 内で見つからなければ
if <B> . find ( <A> ) == -1 :	もし <A> が <B> 内で見つからなければ
if <A> . find ( <B> ) == -1 :	<B> が <A> 内で見つからなかったなら
if <B> . find ( <A> ) == -1 :	<A> が <B> 内で見つからなかったなら
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列で見つからない場合
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列で見つからない場合
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列で見つからなければ
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列で見つからなければ
if <A> . find ( <B> ) == -1 :	<B> が <A> 文字列で見つからなかったならば
if <B> . find ( <A> ) == -1 :	<A> が <B> 文字列で見つからなかったならば
if <A> . find ( <B> ) == -1 :	もし <A> で <B> が見つからなかった場合
if <B> . find ( <A> ) == -1 :	もし <B> で <A> が見つからなかった場合
while <A> . find ( <B> ) == -1 :	<B> が文字列 <A> で見つからない間
while <B> . find ( <A> ) == -1 :	<A> が文字列 <B> で見つからない間
while <A> . find ( <B> ) == -1 :	<A> 中で <B> が見つからない間
while <B> . find ( <A> ) == -1 :	<B> 中で <A> が見つからない間
while <A> . find ( <B> ) == -1 :	<B> が <A> 内で見つからない間
while <B> . find ( <A> ) == -1 :	<A> が <B> 内で見つからない間
while <A> . find ( <B> ) == -1 :	<B> が <A> 文字列で見つからない間
while <B> . find ( <A> ) == -1 :	<A> が <B> 文字列で見つからない間
while <A> . find ( <B> ) == -1 :	<A> で <B> が見つからない間
while <B> . find ( <A> ) == -1 :	<B> で <A> が見つからない間
<A> . find ( <B> )	部分文字列 <B> の位置を <A> 中で探す
<B> . find ( <A> )	部分文字列 <A> の位置を <B> 中で探す
<A> . find ( <B> )	文字列 <A> 内で部分文字列 <B> の位置を探す
<B> . find ( <A> )	文字列 <B> 内で部分文字列 <A> の位置を探す
<A> . find ( <B> )	文字列 <A> 内で <B> 部分文字列を探す
<B> . find ( <A> )	文字列 <B> 内で <A> 部分文字列を探す
<A> . find ( <B> )	部分文字列 <B> を <A> 文字列中で探す
<B> . find ( <A> )	部分文字列 <A> を <B> 文字列中で探す
<A> . find ( <B> )	部分文字列 <B> の位置を <A> 文字列内で探す
<B> . find ( <A> )	部分文字列 <A> の位置を <B> 文字列内で探す
<A> . find ( <B> )	<B> を <A> で探す
<B> . find ( <A> )	<A> を <B> で探す
<A> . find ( <B> )	<A> 内で部分文字列 <B> の位置を探す
<B> . find ( <A> )	<B> 内で部分文字列 <A> の位置を探す
<A> . find ( <B> )	文字列 <A> で <B> を探す
<B> . find ( <A> )	文字列 <B> で <A> を探す
<A> . find ( <B> )	<B> の位置を文字列 <A> 内で探す
<B> . find ( <A> )	<A> の位置を文字列 <B> 内で探す
<A> . find ( <B> )	<A> で部分文字列 <B> を探す
<B> . find ( <A> )	<B> で部分文字列 <A> を探す
<A> . find ( <B> )	<A> で <B> の位置を探す
<B> . find ( <A> )	<B> で <A> の位置を探す
<A> . find ( <B> )	文字列 <A> 中で <B> 部分文字列を探す
<B> . find ( <A> )	文字列 <B> 中で <A> 部分文字列を探す
<A> . find ( <B> )	部分文字列 <B> の位置を文字列 <A> で探す
<B> . find ( <A> )	部分文字列 <A> の位置を文字列 <B> で探す
<A> . find ( <B> )	文字列 <A> 内で <B> 部分文字列の位置を探す
<B> . find ( <A> )	文字列 <B> 内で <A> 部分文字列の位置を探す
<A> . find ( <B> )	<B> を文字列 <A> 内で探す
<B> . find ( <A> )	<A> を文字列 <B> 内で探す
<A> . find ( <B> )	部分文字列 <B> を文字列 <A> 中で探す
<B> . find ( <A> )	部分文字列 <A> を文字列 <B> 中で探す
<A> . find ( <B> )	<A> 内で <B> を探す
<B> . find ( <A> )	<B> 内で <A> を探す
<A> . find ( <B> )	文字列 <A> 中で部分文字列 <B> の位置を探す
<B> . find ( <A> )	文字列 <B> 中で部分文字列 <A> の位置を探す
<A> . find ( <B> )	部分文字列 <B> を文字列 <A> 内で探す
<B> . find ( <A> )	部分文字列 <A> を文字列 <B> 内で探す
<A> . find ( <B> )	文字列 <A> 内で部分文字列 <B> を探す
<B> . find ( <A> )	文字列 <B> 内で部分文字列 <A> を探す
<A> . find ( <B> , <C> )	<A> 中で部分文字列 <B> を <C> から探す
<C> . find ( <B> , <A> )	<C> 中で部分文字列 <B> を <A> から探す
<A> . find ( <B> , <C> )	<A> 中で <B> の位置を <C> から探す
<C> . find ( <B> , <A> )	<C> 中で <B> の位置を <A> から探す
<A> . find ( <B> , <C> )	<C> から <B> 部分文字列を文字列 <A> 中で探す
<C> . find ( <B> , <A> )	<A> から <B> 部分文字列を文字列 <C> 中で探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <B> 部分文字列を <C> から探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <B> 部分文字列を <A> から探す
<A> . find ( <B> , <C> )	<B> の位置を文字列 <A> 内で <C> から探す
<C> . find ( <B> , <A> )	<B> の位置を文字列 <C> 内で <A> から探す
<A> . find ( <B> , <C> )	部分文字列 <B> を <A> 中で <C> から探す
<C> . find ( <B> , <A> )	部分文字列 <B> を <C> 中で <A> から探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を <C> から文字列 <A> 中で探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を <A> から文字列 <C> 中で探す
<A> . find ( <B> , <C> )	部分文字列 <B> を <C> から <A> で探す
<C> . find ( <B> , <A> )	部分文字列 <B> を <A> から <C> で探す
<A> . find ( <B> , <C> )	<C> から部分文字列 <B> の位置を <A> 内で探す
<C> . find ( <B> , <A> )	<A> から部分文字列 <B> の位置を <C> 内で探す
<A> . find ( <B> , <C> )	<A> で <B> を <C> から探す
<C> . find ( <B> , <A> )	<C> で <B> を <A> から探す
<A> . find ( <B> , <C> )	<B> を <C> から <A> 文字列内で探す
<C> . find ( <B> , <A> )	<B> を <A> から <C> 文字列内で探す
<A> . find ( <B> , <C> )	<C> から <B> を文字列 <A> 内で探す
<C> . find ( <B> , <A> )	<A> から <B> を文字列 <C> 内で探す
<A> . find ( <B> , <C> )	<C> から <B> 部分文字列を <A> 文字列中で探す
<C> . find ( <B> , <A> )	<A> から <B> 部分文字列を <C> 文字列中で探す
<A> . find ( <B> , <C> )	文字列 <A> 中で部分文字列 <B> の位置を <C> から探す
<C> . find ( <B> , <A> )	文字列 <C> 中で部分文字列 <B> の位置を <A> から探す
<A> . find ( <B> , <C> )	<B> の位置を <C> から文字列 <A> で探す
<C> . find ( <B> , <A> )	<B> の位置を <A> から文字列 <C> で探す
<A> . find ( <B> , <C> )	<B> を文字列 <A> で <C> から探す
<C> . find ( <B> , <A> )	<B> を文字列 <C> で <A> から探す
<A> . find ( <B> , <C> )	<B> の位置を <A> で <C> から探す
<C> . find ( <B> , <A> )	<B> の位置を <C> で <A> から探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <C> から <B> 部分文字列の位置を探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <A> から <B> 部分文字列の位置を探す
<A> . find ( <B> , <C> )	<B> の位置を <A> 内で <C> から探す
<C> . find ( <B> , <A> )	<B> の位置を <C> 内で <A> から探す
<A> . find ( <B> , <C> )	<C> から部分文字列 <B> の位置を文字列 <A> 中で探す
<C> . find ( <B> , <A> )	<A> から部分文字列 <B> の位置を文字列 <C> 中で探す
<A> . find ( <B> , <C> )	文字列 <A> 中で <B> の位置を <C> から探す
<C> . find ( <B> , <A> )	文字列 <C> 中で <B> の位置を <A> から探す
<A> . find ( <B> , <C> )	<B> の位置を <A> 文字列中で <C> から探す
<C> . find ( <B> , <A> )	<B> の位置を <C> 文字列中で <A> から探す
<A> . find ( <B> , <C> )	文字列 <A> で <C> から <B> を探す
<C> . find ( <B> , <A> )	文字列 <C> で <A> から <B> を探す
<A> . find ( <B> , <C> )	<C> から <A> 文字列内で部分文字列 <B> の位置を探す
<C> . find ( <B> , <A> )	<A> から <C> 文字列内で部分文字列 <B> の位置を探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を <C> から <A> 文字列で探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を <A> から <C> 文字列で探す
<A> . find ( <B> , <C> )	<A> 内で <B> を <C> から探す
<C> . find ( <B> , <A> )	<C> 内で <B> を <A> から探す
<A> . find ( <B> , <C> )	<B> の位置を <C> から <A> 文字列中で探す
<C> . find ( <B> , <A> )	<B> の位置を <A> から <C> 文字列中で探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を <C> から <A> 文字列中で探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を <A> から <C> 文字列中で探す
<A> . find ( <B> , <C> )	部分文字列 <B> を <A> 文字列内で <C> から探す
<C> . find ( <B> , <A> )	部分文字列 <B> を <C> 文字列内で <A> から探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <C> から <B> の位置を探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <A> から <B> の位置を探す
<A> . find ( <B> , <C> )	文字列 <A> 中で <C> から <B> を探す
<C> . find ( <B> , <A> )	文字列 <C> 中で <A> から <B> を探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <B> 部分文字列の位置を <C> から探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <B> 部分文字列の位置を <A> から探す
<A> . find ( <B> , <C> )	<C> から文字列 <A> で部分文字列 <B> の位置を探す
<C> . find ( <B> , <A> )	<A> から文字列 <C> で部分文字列 <B> の位置を探す
<A> . find ( <B> , <C> )	<C> から <A> 中で部分文字列 <B> の位置を探す
<C> . find ( <B> , <A> )	<A> から <C> 中で部分文字列 <B> の位置を探す
<A> . find ( <B> , <C> )	<A> 中で <C> から <B> の位置を探す
<C> . find ( <B> , <A> )	<C> 中で <A> から <B> の位置を探す
<A> . find ( <B> , <C> )	<C> から <A> 中で <B> 部分文字列の位置を探す
<C> . find ( <B> , <A> )	<A> から <C> 中で <B> 部分文字列の位置を探す
<A> . find ( <B> , <C> )	<B> の位置を <C> から <A> 文字列内で探す
<C> . find ( <B> , <A> )	<B> の位置を <A> から <C> 文字列内で探す
<A> . find ( <B> , <C> )	<B> を <C> から <A> 内で探す
<C> . find ( <B> , <A> )	<B> を <A> から <C> 内で探す
<A> . find ( <B> , <C> )	<A> 内で部分文字列 <B> の位置を <C> から探す
<C> . find ( <B> , <A> )	<C> 内で部分文字列 <B> の位置を <A> から探す
<A> . find ( <B> , <C> )	<C> から <A> 文字列中で部分文字列 <B> を探す
<C> . find ( <B> , <A> )	<A> から <C> 文字列中で部分文字列 <B> を探す
<A> . find ( <B> , <C> )	<C> から部分文字列 <B> の位置を <A> 文字列内で探す
<C> . find ( <B> , <A> )	<A> から部分文字列 <B> の位置を <C> 文字列内で探す
<A> . find ( <B> , <C> )	<B> を <A> で <C> から探す
<C> . find ( <B> , <A> )	<B> を <C> で <A> から探す
<A> . find ( <B> , <C> )	<C> から <A> 文字列内で <B> を探す
<C> . find ( <B> , <A> )	<A> から <C> 文字列内で <B> を探す
<A> . find ( <B> , <C> )	文字列 <A> 中で <B> 部分文字列を <C> から探す
<C> . find ( <B> , <A> )	文字列 <C> 中で <B> 部分文字列を <A> から探す
<A> . find ( <B> , <C> )	部分文字列 <B> を <A> 内で <C> から end まで探す
<C> . find ( <B> , <A> )	部分文字列 <B> を <C> 内で <A> から end まで探す
<A> . find ( <B> , <C> )	<C> から <A> 文字列内で部分文字列 <B> の位置を end まで探す
<C> . find ( <B> , <A> )	<A> から <C> 文字列内で部分文字列 <B> の位置を end まで探す
<A> . find ( <B> , <C> )	文字列 <A> で <B> の位置を <C> から end まで探す
<C> . find ( <B> , <A> )	文字列 <C> で <B> の位置を <A> から end まで探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を文字列 <A> で <C> から end まで探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を文字列 <C> で <A> から end まで探す
<A> . find ( <B> , <C> )	<B> の位置を <C> から <A> 中で end まで探す
<C> . find ( <B> , <A> )	<B> の位置を <A> から <C> 中で end まで探す
<A> . find ( <B> , <C> )	<C> から <A> 中で <B> を end まで探す
<C> . find ( <B> , <A> )	<A> から <C> 中で <B> を end まで探す
<A> . find ( <B> , <C> )	<C> から <B> の位置を文字列 <A> 中で end まで探す
<C> . find ( <B> , <A> )	<A> から <B> の位置を文字列 <C> 中で end まで探す
<A> . find ( <B> , <C> )	<C> から部分文字列 <B> を文字列 <A> で end まで探す
<C> . find ( <B> , <A> )	<A> から部分文字列 <B> を文字列 <C> で end まで探す
<A> . find ( <B> , <C> )	<C> から文字列 <A> 中で <B> の位置を end まで探す
<C> . find ( <B> , <A> )	<A> から文字列 <C> 中で <B> の位置を end まで探す
<A> . find ( <B> , <C> )	<A> 内で <C> から <B> 部分文字列の位置を end まで探す
<C> . find ( <B> , <A> )	<C> 内で <A> から <B> 部分文字列の位置を end まで探す
<A> . find ( <B> , <C> )	<C> から文字列 <A> 内で <B> を end まで探す
<C> . find ( <B> , <A> )	<A> から文字列 <C> 内で <B> を end まで探す
<A> . find ( <B> , <C> )	<B> を <C> から <A> 文字列内で end まで探す
<C> . find ( <B> , <A> )	<B> を <A> から <C> 文字列内で end まで探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <C> から部分文字列 <B> の位置を end まで探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <A> から部分文字列 <B> の位置を end まで探す
<A> . find ( <B> , <C> )	文字列 <A> 内で部分文字列 <B> の位置を <C> から end まで探す
<C> . find ( <B> , <A> )	文字列 <C> 内で部分文字列 <B> の位置を <A> から end まで探す
<A> . find ( <B> , <C> )	<C> から部分文字列 <B> の位置を <A> 文字列で end まで探す
<C> . find ( <B> , <A> )	<A> から部分文字列 <B> の位置を <C> 文字列で end まで探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <C> から <B> 部分文字列を end まで探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <A> から <B> 部分文字列を end まで探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <C> から <B> を end まで探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <A> から <B> を end まで探す
<A> . find ( <B> , <C> )	<C> から文字列 <A> 内で <B> の位置を end まで探す
<C> . find ( <B> , <A> )	<A> から文字列 <C> 内で <B> の位置を end まで探す
<A> . find ( <B> , <C> )	<C> から <A> 内で <B> の位置を end まで探す
<C> . find ( <B> , <A> )	<A> から <C> 内で <B> の位置を end まで探す
<A> . find ( <B> , <C> )	<A> で <C> から部分文字列 <B> の位置を end まで探す
<C> . find ( <B> , <A> )	<C> で <A> から部分文字列 <B> の位置を end まで探す
<A> . find ( <B> , <C> )	<B> の位置を <A> 文字列で <C> から end まで探す
<C> . find ( <B> , <A> )	<B> の位置を <C> 文字列で <A> から end まで探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を <C> から <A> 文字列内で end まで探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を <A> から <C> 文字列内で end まで探す
<A> . find ( <B> , <C> )	<A> で <B> 部分文字列の位置を <C> から end まで探す
<C> . find ( <B> , <A> )	<C> で <B> 部分文字列の位置を <A> から end まで探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を <C> から <A> 中で end まで探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を <A> から <C> 中で end まで探す
<A> . find ( <B> , <C> )	<C> から <B> 部分文字列の位置を <A> 中で end まで探す
<C> . find ( <B> , <A> )	<A> から <B> 部分文字列の位置を <C> 中で end まで探す
<A> . find ( <B> , <C> )	<C> から <A> 文字列内で部分文字列 <B> を end まで探す
<C> . find ( <B> , <A> )	<A> から <C> 文字列内で部分文字列 <B> を end まで探す
<A> . find ( <B> , <C> )	<C> から部分文字列 <B> を <A> 中で end まで探す
<C> . find ( <B> , <A> )	<A> から部分文字列 <B> を <C> 中で end まで探す
<A> . find ( <B> , <C> )	部分文字列 <B> を <C> から <A> で end まで探す
<C> . find ( <B> , <A> )	部分文字列 <B> を <A> から <C> で end まで探す
<A> . find ( <B> , <C> )	<C> から <B> を <A> 中で end まで探す
<C> . find ( <B> , <A> )	<A> から <B> を <C> 中で end まで探す
<A> . find ( <B> , <C> )	<A> で <B> を <C> から end まで探す
<C> . find ( <B> , <A> )	<C> で <B> を <A> から end まで探す
<A> . find ( <B> , <C> )	文字列 <A> 内で <C> から部分文字列 <B> を end まで探す
<C> . find ( <B> , <A> )	文字列 <C> 内で <A> から部分文字列 <B> を end まで探す
<A> . find ( <B> , <C> )	<A> 内で <B> の位置を <C> から end まで探す
<C> . find ( <B> , <A> )	<C> 内で <B> の位置を <A> から end まで探す
<A> . find ( <B> , <C> )	<B> の位置を <A> 文字列中で <C> から end まで探す
<C> . find ( <B> , <A> )	<B> の位置を <C> 文字列中で <A> から end まで探す
<A> . find ( <B> , <C> )	<B> の位置を <C> から文字列 <A> 内で end まで探す
<C> . find ( <B> , <A> )	<B> の位置を <A> から文字列 <C> 内で end まで探す
<A> . find ( <B> , <C> )	<C> から <A> で <B> を end まで探す
<C> . find ( <B> , <A> )	<A> から <C> で <B> を end まで探す
<A> . find ( <B> , <C> )	部分文字列 <B> の位置を文字列 <A> 中で <C> から end まで探す
<C> . find ( <B> , <A> )	部分文字列 <B> の位置を文字列 <C> 中で <A> から end まで探す
<A> . find ( <B> , <C> )	<C> から <B> の位置を <A> で end まで探す
<C> . find ( <B> , <A> )	<A> から <B> の位置を <C> で end まで探す
<A> . find ( <B> , <C> )	<B> を <A> 文字列内で <C> から end まで探す
<C> . find ( <B> , <A> )	<B> を <C> 文字列内で <A> から end まで探す
<A> . find ( <B> , <C> )	<B> を <C> から <A> 中で end まで探す
<C> . find ( <B> , <A> )	<B> を <A> から <C> 中で end まで探す
<A> . find ( <B> , <C> )	<B> を <A> 内で <C> から end まで探す
<C> . find ( <B> , <A> )	<B> を <C> 内で <A> から end まで探す
<A> . rfind ( <B> )	末尾から文字列 <A> で <B> の位置を探す
<B> . rfind ( <A> )	末尾から文字列 <B> で <A> の位置を探す
<A> . rfind ( <B> )	後ろから <A> で <B> の位置を探す
<B> . rfind ( <A> )	後ろから <B> で <A> の位置を探す
<A> . rfind ( <B> )	<B> を末尾から <A> 中で探す
<B> . rfind ( <A> )	<A> を末尾から <B> 中で探す
<A> . rfind ( <B> )	末尾から <A> で部分文字列 <B> の位置を探す
<B> . rfind ( <A> )	末尾から <B> で部分文字列 <A> の位置を探す
<A> . rfind ( <B> )	部分文字列 <B> を右から <A> 文字列で探す
<B> . rfind ( <A> )	部分文字列 <A> を右から <B> 文字列で探す
<A> . rfind ( <B> )	後ろから <A> 文字列内で部分文字列 <B> を探す
<B> . rfind ( <A> )	後ろから <B> 文字列内で部分文字列 <A> を探す
<A> . rfind ( <B> )	右から <B> 部分文字列を文字列 <A> 内で探す
<B> . rfind ( <A> )	右から <A> 部分文字列を文字列 <B> 内で探す
<A> . rfind ( <B> )	右から <A> 内で <B> 部分文字列の位置を探す
<B> . rfind ( <A> )	右から <B> 内で <A> 部分文字列の位置を探す
<A> . rfind ( <B> )	文字列 <A> 中で <B> の位置を右から探す
<B> . rfind ( <A> )	文字列 <B> 中で <A> の位置を右から探す
<A> . rfind ( <B> )	右から部分文字列 <B> の位置を文字列 <A> 中で探す
<B> . rfind ( <A> )	右から部分文字列 <A> の位置を文字列 <B> 中で探す
<A> . rfind ( <B> )	文字列 <A> 内で末尾から <B> の位置を探す
<B> . rfind ( <A> )	文字列 <B> 内で末尾から <A> の位置を探す
<A> . rfind ( <B> )	右から <A> 内で <B> の位置を探す
<B> . rfind ( <A> )	右から <B> 内で <A> の位置を探す
<A> . rfind ( <B> )	文字列 <A> 中で後ろから部分文字列 <B> の位置を探す
<B> . rfind ( <A> )	文字列 <B> 中で後ろから部分文字列 <A> の位置を探す
<A> . rfind ( <B> )	<B> の位置を末尾から <A> 内で探す
<B> . rfind ( <A> )	<A> の位置を末尾から <B> 内で探す
<A> . rfind ( <B> )	<B> を後ろから <A> 内で探す
<B> . rfind ( <A> )	<A> を後ろから <B> 内で探す
<A> . rfind ( <B> )	<B> を後ろから <A> 文字列で探す
<B> . rfind ( <A> )	<A> を後ろから <B> 文字列で探す
<A> . rfind ( <B> )	右から文字列 <A> 内で <B> 部分文字列を探す
<B> . rfind ( <A> )	右から文字列 <B> 内で <A> 部分文字列を探す
<A> . rfind ( <B> )	文字列 <A> 内で部分文字列 <B> の位置を後ろから探す
<B> . rfind ( <A> )	文字列 <B> 内で部分文字列 <A> の位置を後ろから探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を右から <A> 文字列内で探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を右から <B> 文字列内で探す
<A> . rfind ( <B> )	<A> 内で末尾から <B> 部分文字列の位置を探す
<B> . rfind ( <A> )	<B> 内で末尾から <A> 部分文字列の位置を探す
<A> . rfind ( <B> )	右から <A> 内で <B> を探す
<B> . rfind ( <A> )	右から <B> 内で <A> を探す
<A> . rfind ( <B> )	<B> の位置を右から <A> 内で探す
<B> . rfind ( <A> )	<A> の位置を右から <B> 内で探す
<A> . rfind ( <B> )	<A> 内で右から <B> を探す
<B> . rfind ( <A> )	<B> 内で右から <A> を探す
<A> . rfind ( <B> )	部分文字列 <B> を右から文字列 <A> 中で探す
<B> . rfind ( <A> )	部分文字列 <A> を右から文字列 <B> 中で探す
<A> . rfind ( <B> )	文字列 <A> 内で部分文字列 <B> を右から探す
<B> . rfind ( <A> )	文字列 <B> 内で部分文字列 <A> を右から探す
<A> . rfind ( <B> )	<B> の位置を右から文字列 <A> で探す
<B> . rfind ( <A> )	<A> の位置を右から文字列 <B> で探す
<A> . rfind ( <B> )	<A> 内で <B> 部分文字列を末尾から探す
<B> . rfind ( <A> )	<B> 内で <A> 部分文字列を末尾から探す
<A> . rfind ( <B> )	文字列 <A> で <B> 部分文字列を末尾から探す
<B> . rfind ( <A> )	文字列 <B> で <A> 部分文字列を末尾から探す
<A> . rfind ( <B> )	<B> の位置を後ろから <A> 文字列中で探す
<B> . rfind ( <A> )	<A> の位置を後ろから <B> 文字列中で探す
<A> . rfind ( <B> )	<A> 内で <B> 部分文字列を後ろから探す
<B> . rfind ( <A> )	<B> 内で <A> 部分文字列を後ろから探す
<A> . rfind ( <B> )	<A> 内で部分文字列 <B> の位置を後ろから探す
<B> . rfind ( <A> )	<B> 内で部分文字列 <A> の位置を後ろから探す
<A> . rfind ( <B> )	文字列 <A> で部分文字列 <B> を末尾から探す
<B> . rfind ( <A> )	文字列 <B> で部分文字列 <A> を末尾から探す
<A> . rfind ( <B> )	部分文字列 <B> を右から <A> 内で探す
<B> . rfind ( <A> )	部分文字列 <A> を右から <B> 内で探す
<A> . rfind ( <B> )	文字列 <A> 内で末尾から <B> を探す
<B> . rfind ( <A> )	文字列 <B> 内で末尾から <A> を探す
<A> . rfind ( <B> )	<A> 中で末尾から部分文字列 <B> の位置を探す
<B> . rfind ( <A> )	<B> 中で末尾から部分文字列 <A> の位置を探す
<A> . rfind ( <B> )	文字列 <A> 内で後ろから <B> の位置を探す
<B> . rfind ( <A> )	文字列 <B> 内で後ろから <A> の位置を探す
<A> . rfind ( <B> )	文字列 <A> 内で <B> の位置を末尾から探す
<B> . rfind ( <A> )	文字列 <B> 内で <A> の位置を末尾から探す
<A> . rfind ( <B> )	後ろから <A> 文字列で <B> の位置を探す
<B> . rfind ( <A> )	後ろから <B> 文字列で <A> の位置を探す
<A> . rfind ( <B> )	<A> 中で右から <B> の位置を探す
<B> . rfind ( <A> )	<B> 中で右から <A> の位置を探す
<A> . rfind ( <B> )	<A> 内で部分文字列 <B> を右から探す
<B> . rfind ( <A> )	<B> 内で部分文字列 <A> を右から探す
<A> . rfind ( <B> )	<B> を <A> 文字列内で末尾から探す
<B> . rfind ( <A> )	<A> を <B> 文字列内で末尾から探す
<A> . rfind ( <B> )	文字列 <A> で <B> の位置を右から探す
<B> . rfind ( <A> )	文字列 <B> で <A> の位置を右から探す
<A> . rfind ( <B> )	<B> の位置を後ろから <A> 文字列内で探す
<B> . rfind ( <A> )	<A> の位置を後ろから <B> 文字列内で探す
<A> . rfind ( <B> )	<B> の位置を右から <A> で探す
<B> . rfind ( <A> )	<A> の位置を右から <B> で探す
<A> . rfind ( <B> )	末尾から部分文字列 <B> を <A> 内で探す
<B> . rfind ( <A> )	末尾から部分文字列 <A> を <B> 内で探す
<A> . rfind ( <B> )	右から <B> を <A> 文字列で探す
<B> . rfind ( <A> )	右から <A> を <B> 文字列で探す
<A> . rfind ( <B> )	<B> を <A> 文字列内で右から探す
<B> . rfind ( <A> )	<A> を <B> 文字列内で右から探す
<A> . rfind ( <B> )	文字列 <A> 内で右から <B> 部分文字列の位置を探す
<B> . rfind ( <A> )	文字列 <B> 内で右から <A> 部分文字列の位置を探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を <A> 文字列内で後ろから探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を <B> 文字列内で後ろから探す
<A> . rfind ( <B> )	末尾から <B> 部分文字列を <A> 中で探す
<B> . rfind ( <A> )	末尾から <A> 部分文字列を <B> 中で探す
<A> . rfind ( <B> )	後ろから <A> 内で部分文字列 <B> の位置を探す
<B> . rfind ( <A> )	後ろから <B> 内で部分文字列 <A> の位置を探す
<A> . rfind ( <B> )	<A> 内で後ろから <B> の位置を探す
<B> . rfind ( <A> )	<B> 内で後ろから <A> の位置を探す
<A> . rfind ( <B> )	<A> 内で末尾から <B> の位置を探す
<B> . rfind ( <A> )	<B> 内で末尾から <A> の位置を探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を後ろから <A> 文字列中で探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を後ろから <B> 文字列中で探す
<A> . rfind ( <B> )	文字列 <A> で <B> 部分文字列を右から探す
<B> . rfind ( <A> )	文字列 <B> で <A> 部分文字列を右から探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を <A> 中で末尾から探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を <B> 中で末尾から探す
<A> . rfind ( <B> )	部分文字列 <B> を後ろから <A> 中で探す
<B> . rfind ( <A> )	部分文字列 <A> を後ろから <B> 中で探す
<A> . rfind ( <B> )	<B> の位置を文字列 <A> 中で末尾から探す
<B> . rfind ( <A> )	<A> の位置を文字列 <B> 中で末尾から探す
<A> . rfind ( <B> )	右から文字列 <A> 内で <B> 部分文字列の位置を探す
<B> . rfind ( <A> )	右から文字列 <B> 内で <A> 部分文字列の位置を探す
<A> . rfind ( <B> )	右から <A> 文字列内で <B> 部分文字列を探す
<B> . rfind ( <A> )	右から <B> 文字列内で <A> 部分文字列を探す
<A> . rfind ( <B> )	文字列 <A> 内で <B> を右から探す
<B> . rfind ( <A> )	文字列 <B> 内で <A> を右から探す
<A> . rfind ( <B> )	後ろから <B> 部分文字列を <A> 文字列中で探す
<B> . rfind ( <A> )	後ろから <A> 部分文字列を <B> 文字列中で探す
<A> . rfind ( <B> )	右から <A> 文字列内で <B> を探す
<B> . rfind ( <A> )	右から <B> 文字列内で <A> を探す
<A> . rfind ( <B> )	<B> の位置を <A> 文字列で後ろから探す
<B> . rfind ( <A> )	<A> の位置を <B> 文字列で後ろから探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を <A> 文字列中で右から探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を <B> 文字列中で右から探す
<A> . rfind ( <B> )	<B> を <A> 中で右から探す
<B> . rfind ( <A> )	<A> を <B> 中で右から探す
<A> . rfind ( <B> )	文字列 <A> 中で <B> を末尾から探す
<B> . rfind ( <A> )	文字列 <B> 中で <A> を末尾から探す
<A> . rfind ( <B> )	<B> を <A> 文字列中で右から探す
<B> . rfind ( <A> )	<A> を <B> 文字列中で右から探す
<A> . rfind ( <B> )	末尾から <B> 部分文字列を <A> 内で探す
<B> . rfind ( <A> )	末尾から <A> 部分文字列を <B> 内で探す
<A> . rfind ( <B> )	右から <B> 部分文字列を <A> 内で探す
<B> . rfind ( <A> )	右から <A> 部分文字列を <B> 内で探す
<A> . rfind ( <B> )	右から <A> 文字列内で <B> の位置を探す
<B> . rfind ( <A> )	右から <B> 文字列内で <A> の位置を探す
<A> . rfind ( <B> )	後ろから文字列 <A> 内で部分文字列 <B> を探す
<B> . rfind ( <A> )	後ろから文字列 <B> 内で部分文字列 <A> を探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を右から文字列 <A> 内で探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を右から文字列 <B> 内で探す
<A> . rfind ( <B> )	<A> 内で <B> 部分文字列の位置を末尾から探す
<B> . rfind ( <A> )	<B> 内で <A> 部分文字列の位置を末尾から探す
<A> . rfind ( <B> )	末尾から部分文字列 <B> を文字列 <A> 内で探す
<B> . rfind ( <A> )	末尾から部分文字列 <A> を文字列 <B> 内で探す
<A> . rfind ( <B> )	部分文字列 <B> を <A> 内で右から探す
<B> . rfind ( <A> )	部分文字列 <A> を <B> 内で右から探す
<A> . rfind ( <B> )	部分文字列 <B> の位置を <A> 内で右から探す
<B> . rfind ( <A> )	部分文字列 <A> の位置を <B> 内で右から探す
<A> . rfind ( <B> )	文字列 <A> で末尾から部分文字列 <B> を探す
<B> . rfind ( <A> )	文字列 <B> で末尾から部分文字列 <A> を探す
<A> . rfind ( <B> )	文字列 <A> 内で末尾から部分文字列 <B> の位置を探す
<B> . rfind ( <A> )	文字列 <B> 内で末尾から部分文字列 <A> の位置を探す
<A> . rfind ( <B> )	<A> 内で末尾から <B> 部分文字列を探す
<B> . rfind ( <A> )	<B> 内で末尾から <A> 部分文字列を探す
<A> . rfind ( <B> , <C> )	末尾から <B> の位置を <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <B> の位置を <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から部分文字列 <B> の位置を <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から部分文字列 <B> の位置を <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	<A> で後ろから <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> で後ろから <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	<B> の位置を末尾から <A> 文字列中で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> の位置を末尾から <C> 文字列中で <A> まで探す
<A> . rfind ( <B> , <C> )	<B> を後ろから <A> 文字列内で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> を後ろから <C> 文字列内で <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 内で <B> を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 内で <B> を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を後ろから <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を後ろから <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	<B> の位置を <A> 文字列で右から <C> まで探す
<C> . rfind ( <B> , <A> )	<B> の位置を <C> 文字列で右から <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 中で <B> を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 中で <B> を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <A> で <B> 部分文字列を <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <C> で <B> 部分文字列を <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <B> の位置を文字列 <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <B> の位置を文字列 <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> を右から <A> 文字列で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> を右から <C> 文字列で <A> まで探す
<A> . rfind ( <B> , <C> )	右から文字列 <A> 中で部分文字列 <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	右から文字列 <C> 中で部分文字列 <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を後ろから <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を後ろから <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	後ろから <B> を <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	後ろから <B> を <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	右から <A> で部分文字列 <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	右から <C> で部分文字列 <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を <A> 文字列中で末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を <C> 文字列中で末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 内で <B> の位置を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 内で <B> の位置を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <A> 内で部分文字列 <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <C> 内で部分文字列 <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	<B> の位置を右から <A> 文字列中で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> の位置を右から <C> 文字列中で <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を <A> 内で右から <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を <C> 内で右から <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 内で <B> を末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 内で <B> を末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を右から <A> で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を右から <C> で <A> まで探す
<A> . rfind ( <B> , <C> )	<B> の位置を末尾から <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> の位置を末尾から <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	<A> で <B> の位置を末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	<C> で <B> の位置を末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> を末尾から <A> 文字列中で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> を末尾から <C> 文字列中で <A> まで探す
<A> . rfind ( <B> , <C> )	右から <B> 部分文字列の位置を <A> 文字列で <C> まで探す
<C> . rfind ( <B> , <A> )	右から <B> 部分文字列の位置を <C> 文字列で <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 中で右から <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 中で右から <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	<B> の位置を <A> 中で末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	<B> の位置を <C> 中で末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <A> 内で <B> 部分文字列を <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <C> 内で <B> 部分文字列を <A> まで探す
<A> . rfind ( <B> , <C> )	右から文字列 <A> で <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	右から文字列 <C> で <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> で末尾から <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> で末尾から <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を後ろから文字列 <A> で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を後ろから文字列 <C> で <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を末尾から <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を末尾から <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 中で後ろから <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 中で後ろから <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 内で後ろから <B> 部分文字列の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 内で後ろから <B> 部分文字列の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で部分文字列 <B> の位置を右から <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で部分文字列 <B> の位置を右から <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を <A> 文字列内で末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を <C> 文字列内で末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 内で <B> 部分文字列の位置を末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 内で <B> 部分文字列の位置を末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	右から <A> 文字列内で <B> 部分文字列の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	右から <C> 文字列内で <B> 部分文字列の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> で後ろから <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> で後ろから <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	<B> を <A> 文字列で後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	<B> を <C> 文字列で後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <B> を <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <B> を <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	後ろから <B> 部分文字列の位置を文字列 <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	後ろから <B> 部分文字列の位置を文字列 <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	後ろから部分文字列 <B> を文字列 <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	後ろから部分文字列 <B> を文字列 <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	右から <A> 文字列中で <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	右から <C> 文字列中で <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 内で部分文字列 <B> を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 内で部分文字列 <B> を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 内で右から <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 内で右から <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	後ろから <B> 部分文字列を <A> で <C> まで探す
<C> . rfind ( <B> , <A> )	後ろから <B> 部分文字列を <C> で <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <B> の位置を <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <B> の位置を <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	右から <B> を文字列 <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	右から <B> を文字列 <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> を右から <A> で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> を右から <C> で <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 中で後ろから <B> 部分文字列を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 中で後ろから <B> 部分文字列を <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 内で末尾から部分文字列 <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 内で末尾から部分文字列 <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	後ろから <A> 内で部分文字列 <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	後ろから <C> 内で部分文字列 <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 中で <B> を右から <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 中で <B> を右から <A> まで探す
<A> . rfind ( <B> , <C> )	<B> の位置を後ろから <A> 文字列中で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> の位置を後ろから <C> 文字列中で <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 内で <B> 部分文字列の位置を右から <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 内で <B> 部分文字列の位置を右から <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で部分文字列 <B> の位置を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で部分文字列 <B> の位置を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を右から <A> 文字列内で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を右から <C> 文字列内で <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 中で後ろから <B> 部分文字列の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 中で後ろから <B> 部分文字列の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から文字列 <A> で <B> 部分文字列の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から文字列 <C> で <B> 部分文字列の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	後ろから文字列 <A> 中で <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	後ろから文字列 <C> 中で <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <A> 文字列で <B> 部分文字列の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <C> 文字列で <B> 部分文字列の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	<B> を末尾から <A> 中で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> を末尾から <C> 中で <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> の位置を <A> 中で末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> の位置を <C> 中で末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	末尾から <A> 文字列内で <B> の位置を <C> まで探す
<C> . rfind ( <B> , <A> )	末尾から <C> 文字列内で <B> の位置を <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で部分文字列 <B> の位置を末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で部分文字列 <B> の位置を末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で <B> を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で <B> を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	<B> を <A> 文字列中で右から <C> まで探す
<C> . rfind ( <B> , <A> )	<B> を <C> 文字列中で右から <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> を後ろから <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> を後ろから <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で <B> を右から <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で <B> を右から <A> まで探す
<A> . rfind ( <B> , <C> )	<A> で <B> の位置を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	<C> で <B> の位置を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	部分文字列 <B> を <A> 文字列で右から <C> まで探す
<C> . rfind ( <B> , <A> )	部分文字列 <B> を <C> 文字列で右から <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 内で <B> の位置を末尾から <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 内で <B> の位置を末尾から <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 内で部分文字列 <B> を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 内で部分文字列 <B> を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で <B> 部分文字列を後ろから <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で <B> 部分文字列を後ろから <A> まで探す
<A> . rfind ( <B> , <C> )	文字列 <A> 中で <B> の位置を右から <C> まで探す
<C> . rfind ( <B> , <A> )	文字列 <C> 中で <B> の位置を右から <A> まで探す
<A> . rfind ( <B> , <C> )	<A> 内で末尾から部分文字列 <B> を <C> まで探す
<C> . rfind ( <B> , <A> )	<C> 内で末尾から部分文字列 <B> を <A> まで探す
<A> . rfind ( <B> , <C> )	<B> を末尾から文字列 <A> 内で <C> まで探す
<C> . rfind ( <B> , <A> )	<B> を末尾から文字列 <C> 内で <A> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> 部分文字列を <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> 部分文字列を <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> で <B> を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> で <C> を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> の位置を <A> 文字列内で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> の位置を <D> 文字列内で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> 中で部分文字列 <B> を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> 中で部分文字列 <C> を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> 中で <B> 部分文字列を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> 中で <C> 部分文字列を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 中で <D> から <B> を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 中で <A> から <C> を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> の位置を文字列 <A> 中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> の位置を文字列 <D> 中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> を文字列 <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> を文字列 <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> を <D> から <A> 中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> を <A> から <D> 中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> 内で <B> 部分文字列の位置を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> 内で <C> 部分文字列の位置を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 中で <B> を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 中で <C> を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> を <D> から <A> 文字列で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> を <A> から <D> 文字列で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から部分文字列 <B> を文字列 <A> 中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から部分文字列 <C> を文字列 <D> 中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> で部分文字列 <B> を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> で部分文字列 <C> を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> 文字列で部分文字列 <B> の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> 文字列で部分文字列 <C> の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> で <B> の位置を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> で <C> の位置を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> で <B> 部分文字列の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> で <C> 部分文字列の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> 部分文字列を文字列 <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> 部分文字列を文字列 <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> の位置を <D> から <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> の位置を <A> から <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> 内で <B> を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> 内で <C> を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> の位置を <D> から <A> 文字列で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> の位置を <A> から <D> 文字列で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から文字列 <A> で <B> 部分文字列の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から文字列 <D> で <C> 部分文字列の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> の位置を <A> 文字列中で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> の位置を <D> 文字列中で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 内で <B> の位置を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 内で <C> の位置を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> を文字列 <A> 内で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> を文字列 <D> 内で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から部分文字列 <B> の位置を <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から部分文字列 <C> の位置を <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> 内で <D> から <B> 部分文字列の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> 内で <A> から <C> 部分文字列の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> 部分文字列を <A> で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> 部分文字列を <D> で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> を <D> から <A> 文字列内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> を <A> から <D> 文字列内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 内で部分文字列 <B> の位置を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 内で部分文字列 <C> の位置を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> の位置を文字列 <A> 中で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> の位置を文字列 <D> 中で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から部分文字列 <B> の位置を <A> で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から部分文字列 <C> の位置を <D> で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> を <A> 中で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> を <D> 中で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 内で <D> から部分文字列 <B> を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 内で <A> から部分文字列 <C> を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> 中で <D> から <B> を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> 中で <A> から <C> を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> の位置を <A> 文字列で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> の位置を <D> 文字列で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> の位置を <A> 文字列内で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> の位置を <D> 文字列内で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> を <D> から <A> 文字列で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> を <A> から <D> 文字列で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> 文字列で部分文字列 <B> を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> 文字列で部分文字列 <C> を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 内で <B> を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 内で <C> を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> 内で部分文字列 <B> を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> 内で部分文字列 <C> を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> を文字列 <A> で <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> を文字列 <D> で <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <A> で <B> の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <D> で <C> の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> の位置を <A> 文字列中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> の位置を <D> 文字列中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> を <D> から <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> を <A> から <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> で <D> から <B> の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> で <A> から <C> の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から部分文字列 <B> を <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から部分文字列 <C> を <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> の位置を <D> から文字列 <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> の位置を <A> から文字列 <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> の位置を <D> から <A> 文字列中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> の位置を <A> から <D> 文字列中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	部分文字列 <B> の位置を <D> から <A> 内で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	部分文字列 <C> の位置を <A> から <D> 内で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> 中で <B> を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> 中で <C> を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> 内で <B> の位置を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> 内で <C> の位置を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> を <D> から <A> 中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> を <A> から <D> 中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<A> で <D> から <B> の位置を <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<D> で <A> から <C> の位置を <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<B> の位置を <D> から文字列 <A> で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<C> の位置を <A> から文字列 <D> で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	文字列 <A> で <B> 部分文字列を <D> から <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	文字列 <D> で <C> 部分文字列を <A> から <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> を <A> 文字列中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> を <D> 文字列中で <B> まで探す
<A> . rfind ( <B> , <C> , <D> )	<D> から <B> の位置を <A> 中で <C> まで探す
<D> . rfind ( <C> , <B> , <A> )	<A> から <C> の位置を <D> 中で <B> まで探す
<A> . index ( <B> )	<A> 中で <B> が最初に見つかった位置
<B> . index ( <A> )	<B> 中で <A> が最初に見つかった位置
<A> . index ( <B> )	<B> が <A> 内で見つかった位置
<B> . index ( <A> )	<A> が <B> 内で見つかった位置
<A> . index ( <B> )	<B> が <A> で見つかった位置
<B> . index ( <A> )	<A> が <B> で見つかった位置
<A> . index ( <B> )	<B> が文字列 <A> 中で最初に見つかった位置
<B> . index ( <A> )	<A> が文字列 <B> 中で最初に見つかった位置
<A> . index ( <B> )	<B> が <A> 文字列中で見つかった位置
<B> . index ( <A> )	<A> が <B> 文字列中で見つかった位置
<A> . index ( <B> )	文字列 <A> 中で <B> が見つかった位置
<B> . index ( <A> )	文字列 <B> 中で <A> が見つかった位置
<A> . index ( <B> )	<A> 中で <B> が見つかった位置
<B> . index ( <A> )	<B> 中で <A> が見つかった位置
<A> . rindex ( <B> )	文字列 <A> 中で <B> が最後に見つかった位置
<B> . rindex ( <A> )	文字列 <B> 中で <A> が最後に見つかった位置
<A> . rindex ( <B> )	<A> 中で <B> が最後に見つかった位置
<B> . rindex ( <A> )	<B> 中で <A> が最後に見つかった位置
<A> . rindex ( <B> )	文字列 <A> で <B> が最後に見つかった位置
<B> . rindex ( <A> )	文字列 <B> で <A> が最後に見つかった位置
<A> . rindex ( <B> )	文字列 <A> 内で <B> が最後に見つかった位置
<B> . rindex ( <A> )	文字列 <B> 内で <A> が最後に見つかった位置
<A> . rindex ( <B> )	<B> が <A> 内で最後に見つかった位置
<B> . rindex ( <A> )	<A> が <B> 内で最後に見つかった位置
<A> . rindex ( <B> )	<A> 内で <B> が最後に見つかった位置
<B> . rindex ( <A> )	<B> 内で <A> が最後に見つかった位置
<A> . rindex ( <B> )	<A> で <B> が最後に見つかった位置
<B> . rindex ( <A> )	<B> で <A> が最後に見つかった位置
<A> . rindex ( <B> )	<B> が <A> で最後に見つかった位置
<B> . rindex ( <A> )	<A> が <B> で最後に見つかった位置
<A> . format ( <B> )	<B> で <A> ( テンプレを整形する
<B> . format ( <A> )	<A> で <B> ( テンプレを整形する
<A> . format ( <B> )	<B> で <A> ( テンプレをフォーマットする
<B> . format ( <A> )	<A> で <B> ( テンプレをフォーマットする
<A> . format ( <B> )	<A> ( テンプレを <B> でフォーマットする
<B> . format ( <A> )	<B> ( テンプレを <A> でフォーマットする
<A> . format ( <B> , <C> )	<B> と <C> でテンプレート <A> をフォーマットする
<C> . format ( <B> , <A> )	<B> と <A> でテンプレート <C> をフォーマットする
<A> . format ( <B> , <C> )	<A> を <B> と <C> でフォーマットする
<C> . format ( <B> , <A> )	<C> を <B> と <A> でフォーマットする
<A> . format ( <B> , <C> )	<B> と <C> で <A> 書式をフォーマットする
<C> . format ( <B> , <A> )	<B> と <A> で <C> 書式をフォーマットする
<A> . format ( <B> , <C> )	書式 <A> を <B> と <C> でフォーマットする
<C> . format ( <B> , <A> )	書式 <C> を <B> と <A> でフォーマットする
<A> . format ( <B> , <C> )	テンプレ <A> を <B> と <C> で整形する
<C> . format ( <B> , <A> )	テンプレ <C> を <B> と <A> で整形する
<A> . format ( <B> , <C> )	テンプレ <A> を <B> と <C> でフォーマットする
<C> . format ( <B> , <A> )	テンプレ <C> を <B> と <A> でフォーマットする
<A> . format ( <B> , <C> , <D> )	<B> , <C> , <D> で書式 <A> をフォーマットする
<D> . format ( <C> , <B> , <A> )	<C> , <B> , <A> で書式 <D> をフォーマットする
<A> . format ( <B> , <C> , <D> )	書式 <A> を <B> , <C> , <D> で整形する
<D> . format ( <C> , <B> , <A> )	書式 <D> を <C> , <B> , <A> で整形する
<A> . format ( <B> , <C> , <D> )	<B> , <C> , <D> で <A> をフォーマットする
<D> . format ( <C> , <B> , <A> )	<C> , <B> , <A> で <D> をフォーマットする
<A> . format ( <B> , <C> , <D> )	<B> , <C> , <D> で <A> 書式をフォーマットする
<D> . format ( <C> , <B> , <A> )	<C> , <B> , <A> で <D> 書式をフォーマットする
<A> . format ( <B> , <C> , <D> )	<B> , <C> , <D> でテンプレート <A> を整形する
<D> . format ( <C> , <B> , <A> )	<C> , <B> , <A> でテンプレート <D> を整形する
<A> . format ( <B> , <C> , <D> )	テンプレ <A> を <B> , <C> , <D> でフォーマットする
<D> . format ( <C> , <B> , <A> )	テンプレ <D> を <C> , <B> , <A> でフォーマットする
<A> . format ( <B> , <C> , <D> )	<A> を <B> , <C> , <D> でフォーマットする
<D> . format ( <C> , <B> , <A> )	<D> を <C> , <B> , <A> でフォーマットする
<A> . isalnum ( )	文字列 <A> が英数字か
if <A> . isalnum ( ) :	文字列 <A> が英数字の場合
<A> . isalnum ( )	<A> が英数字か否か
if <A> . isalnum ( ) :	もし <A> が英数字ならば
not <A> . isalnum ( )	文字列 <A> が英数字でないか
not <A> . isalnum ( )	<A> が英数字でないか
if <A> . isalnum ( ) :	もし文字列 <A> が英数字とき
if <A> . isalnum ( ) :	<A> が英数字場合
if not <A> . isalnum ( ) :	文字列 <A> が英数字でないとき
if not <A> . isalnum ( ) :	<A> が英数字でないとき
<A> . isalpha ( )	文字列 <A> が英字か
if <A> . isalpha ( ) :	文字列 <A> が英字のとき
<A> . isalpha ( )	<A> がアルファベットかどうか
if <A> . isalpha ( ) :	<A> がアルファベットならば
<A> . isalpha ( )	文字列 <A> がアルファベットか否か
if <A> . isalpha ( ) :	文字列 <A> がアルファベットのとき
<A> . isalpha ( )	<A> が英字か
if <A> . isalpha ( ) :	<A> が英字ならば
not <A> . isalpha ( )	文字列 <A> が英字でないかどうか
not <A> . isalpha ( )	<A> がアルファベットでないかどうか
not <A> . isalpha ( )	文字列 <A> がアルファベットでないか
not <A> . isalpha ( )	<A> が英字でないか
if <A> . isalpha ( ) :	文字列 <A> が英字とき
if <A> . isalpha ( ) :	<A> がアルファベット場合
if <A> . isalpha ( ) :	もし文字列 <A> がアルファベットならば
if <A> . isalpha ( ) :	<A> が英字とき
if not <A> . isalpha ( ) :	もし文字列 <A> が英字でない場合
if not <A> . isalpha ( ) :	もし <A> がアルファベットでないならば
if not <A> . isalpha ( ) :	文字列 <A> がアルファベットでないとき
if not <A> . isalpha ( ) :	<A> が英字でないとき
<A> . isascii ( )	文字列 <A> が ASCII 文字か
if <A> . isascii ( ) :	文字列 <A> が ASCII 文字ならば
<A> . isascii ( )	<A> が ASCII 文字か
if <A> . isascii ( ) :	<A> が ASCII 文字のとき
not <A> . isascii ( )	文字列 <A> が ASCII 文字でないか
not <A> . isascii ( )	<A> が ASCII 文字でないかどうか
if <A> . isascii ( ) :	文字列 <A> が ASCII 文字場合
if <A> . isascii ( ) :	<A> が ASCII 文字ならば
if not <A> . isascii ( ) :	もし文字列 <A> が ASCII 文字でないとき
if not <A> . isascii ( ) :	もし <A> が ASCII 文字でない場合
<A> . isdecimal ( )	<A> が数字か否か
if <A> . isdecimal ( ) :	<A> が数字の場合
<A> . isdecimal ( )	文字列 <A> が数字か
if <A> . isdecimal ( ) :	文字列 <A> が数字の場合
not <A> . isdecimal ( )	<A> が数字でないか
not <A> . isdecimal ( )	文字列 <A> が数字でないか否か
if <A> . isdecimal ( ) :	もし <A> が数字ならば
if <A> . isdecimal ( ) :	もし文字列 <A> が数字とき
if not <A> . isdecimal ( ) :	<A> が数字でないならば
if not <A> . isdecimal ( ) :	文字列 <A> が数字でな場合
<A> . isdigit ( )	文字列 <A> が数字かどうか
if <A> . isdigit ( ) :	文字列 <A> が数字の場合
<A> . isdigit ( )	<A> が数字か否か
if <A> . isdigit ( ) :	<A> が数字の場合
not <A> . isdigit ( )	文字列 <A> が数字でないか
not <A> . isdigit ( )	<A> が数字でないか
if <A> . isdigit ( ) :	文字列 <A> が数字ならば
if <A> . isdigit ( ) :	もし <A> が数字ならば
if not <A> . isdigit ( ) :	もし文字列 <A> が数字でないとき
if not <A> . isdigit ( ) :	もし <A> が数字でないとき
<A> . isidentifier ( )	文字列 <A> が識別子文字か否か
if <A> . isidentifier ( ) :	もし文字列 <A> が識別子文字ならば
<A> . isidentifier ( )	<A> が識別子文字か否か
if <A> . isidentifier ( ) :	<A> が識別子文字の場合
not <A> . isidentifier ( )	文字列 <A> が識別子文字でないか
not <A> . isidentifier ( )	<A> が識別子文字でないか否か
if <A> . isidentifier ( ) :	文字列 <A> が識別子文字場合
if <A> . isidentifier ( ) :	もし <A> が識別子文字ならば
if not <A> . isidentifier ( ) :	もし文字列 <A> が識別子文字でない場合
if not <A> . isidentifier ( ) :	もし <A> が識別子文字でな場合
<A> . islower ( )	<A> が英小文字か
if <A> . islower ( ) :	<A> が英小文字の場合
<A> . islower ( )	文字列 <A> が小文字か
if <A> . islower ( ) :	文字列 <A> が小文字のとき
<A> . islower ( )	<A> が小文字か
if <A> . islower ( ) :	もし <A> が小文字ならば
not <A> . islower ( )	<A> が英小文字でないか否か
not <A> . islower ( )	文字列 <A> が小文字でないか
not <A> . islower ( )	<A> が小文字でないか
if <A> . islower ( ) :	もし <A> が英小文字ならば
if <A> . islower ( ) :	文字列 <A> が小文字とき
if <A> . islower ( ) :	<A> が小文字場合
if not <A> . islower ( ) :	<A> が英小文字でなとき
if not <A> . islower ( ) :	文字列 <A> が小文字でないとき
if not <A> . islower ( ) :	<A> が小文字でない場合
<A> . isnumeric ( )	文字列 <A> が数字かどうか
if <A> . isnumeric ( ) :	もし文字列 <A> が数字ならば
<A> . isnumeric ( )	<A> が数字か否か
if <A> . isnumeric ( ) :	もし <A> が数字ならば
not <A> . isnumeric ( )	文字列 <A> が数字でないか
not <A> . isnumeric ( )	<A> が数字でないかどうか
if <A> . isnumeric ( ) :	もし文字列 <A> が数字ならば
if <A> . isnumeric ( ) :	<A> が数字ならば
if not <A> . isnumeric ( ) :	もし文字列 <A> が数字でないならば
if not <A> . isnumeric ( ) :	もし <A> が数字でないならば
<A> . isprintable ( )	<A> が印字可能か
if <A> . isprintable ( ) :	<A> が印字可能の場合
<A> . isprintable ( )	文字列 <A> が印字可能か
if <A> . isprintable ( ) :	文字列 <A> が印字可能ならば
<A> . isprintable ( )	<A> が印字できるか
if <A> . isprintable ( ) :	<A> が印字できるとき
<A> . isprintable ( )	文字列 <A> が印字できるか
if <A> . isprintable ( ) :	文字列 <A> が印字できるとき
not <A> . isprintable ( )	<A> が印字可能でないか
not <A> . isprintable ( )	文字列 <A> が印字可能でないかどうか
not <A> . isprintable ( )	<A> が印字できないか
not <A> . isprintable ( )	文字列 <A> が印字できないか否か
if <A> . isprintable ( ) :	もし <A> が印字可能場合
if <A> . isprintable ( ) :	もし文字列 <A> が印字可能とき
if <A> . isprintable ( ) :	<A> が印字できた場合
if <A> . isprintable ( ) :	文字列 <A> が印字できる場合
if <A> . isprintable ( ) :	文字列 <A> が印字できたとき
if not <A> . isprintable ( ) :	<A> が印字可能でない場合
if not <A> . isprintable ( ) :	もし文字列 <A> が印字可能でないならば
if not <A> . isprintable ( ) :	もし <A> が印字できない場合
if not <A> . isprintable ( ) :	もし <A> が印字できなければ
if not <A> . isprintable ( ) :	もし <A> が印字できなかったら
if not <A> . isprintable ( ) :	もし文字列 <A> が印字できな場合
if not <A> . isprintable ( ) :	もし文字列 <A> が印字できれば
if not <A> . isprintable ( ) :	文字列 <A> が印字できたならば
<A> . isspace ( )	<A> が空白か
if <A> . isspace ( ) :	<A> が空白の場合
<A> . isspace ( )	文字列 <A> が空白か
if <A> . isspace ( ) :	文字列 <A> が空白のとき
not <A> . isspace ( )	<A> が空白でないか否か
not <A> . isspace ( )	文字列 <A> が空白でないか
if <A> . isspace ( ) :	もし <A> が空白とき
if <A> . isspace ( ) :	もし文字列 <A> が空白ならば
if not <A> . isspace ( ) :	もし <A> が空白でなとき
if not <A> . isspace ( ) :	もし文字列 <A> が空白でないならば
<A> . istitle ( )	文字列 <A> がタイトルケース文字列か
if <A> . istitle ( ) :	もし文字列 <A> がタイトルケース文字列ならば
<A> . istitle ( )	<A> がタイトルケース文字列か
if <A> . istitle ( ) :	<A> がタイトルケース文字列ならば
not <A> . istitle ( )	文字列 <A> がタイトルケース文字列でないかどうか
not <A> . istitle ( )	<A> がタイトルケース文字列でないかどうか
if <A> . istitle ( ) :	もし文字列 <A> がタイトルケース文字列場合
if <A> . istitle ( ) :	もし <A> がタイトルケース文字列とき
if not <A> . istitle ( ) :	文字列 <A> がタイトルケース文字列でないならば
if not <A> . istitle ( ) :	もし <A> がタイトルケース文字列でないとき
<A> . isupper ( )	<A> が英大文字か
if <A> . isupper ( ) :	<A> が英大文字のとき
<A> . isupper ( )	<A> が大文字か
if <A> . isupper ( ) :	<A> が大文字のとき
<A> . isupper ( )	文字列 <A> が英大文字かどうか
if <A> . isupper ( ) :	文字列 <A> が英大文字のとき
not <A> . isupper ( )	<A> が英大文字でないか
not <A> . isupper ( )	<A> が大文字でないか否か
not <A> . isupper ( )	文字列 <A> が英大文字でないか否か
if <A> . isupper ( ) :	もし <A> が英大文字場合
if <A> . isupper ( ) :	<A> が大文字ならば
if <A> . isupper ( ) :	もし文字列 <A> が英大文字ならば
if not <A> . isupper ( ) :	<A> が英大文字でないとき
if not <A> . isupper ( ) :	<A> が大文字でなならば
if not <A> . isupper ( ) :	文字列 <A> が英大文字でなならば
<A> . join ( <B> )	文字列 <A> で <B> リストの各要素を連結する
<B> . join ( <A> )	文字列 <B> で <A> リストの各要素を連結する
<A> . join ( <B> )	<B> の各要素を文字列 <A> で結合する
<B> . join ( <A> )	<A> の各要素を文字列 <B> で結合する
<A> . join ( <B> )	リスト <B> のそれぞれを <A> で連結する
<B> . join ( <A> )	リスト <A> のそれぞれを <B> で連結する
<A> . join ( <B> )	<A> でリスト <B> のそれぞれを連結する
<B> . join ( <A> )	<B> でリスト <A> のそれぞれを連結する
<A> . join ( <B> )	<A> で <B> リストのそれぞれを結合する
<B> . join ( <A> )	<B> で <A> リストのそれぞれを結合する
<A> . join ( <B> )	<A> で <B> リストの各要素を結合する
<B> . join ( <A> )	<B> で <A> リストの各要素を結合する
<A> . join ( <B> )	リスト <B> の各要素を <A> でジョインする
<B> . join ( <A> )	リスト <A> の各要素を <B> でジョインする
<A> . join ( <B> )	リスト <B> の各要素を <A> で連結する
<B> . join ( <A> )	リスト <A> の各要素を <B> で連結する
<A> . join ( <B> )	<B> のそれぞれを <A> 文字列で連結する
<B> . join ( <A> )	<A> のそれぞれを <B> 文字列で連結する
<A> . join ( <B> )	<A> で <B> の各要素を連結する
<B> . join ( <A> )	<B> で <A> の各要素を連結する
<A> . join ( <B> )	文字列 <A> で <B> の各要素をジョインする
<B> . join ( <A> )	文字列 <B> で <A> の各要素をジョインする
<A> . join ( <B> )	<A> で <B> の各要素を結合する
<B> . join ( <A> )	<B> で <A> の各要素を結合する
<A> . join ( <B> )	<A> で <B> のそれぞれを結合する
<B> . join ( <A> )	<B> で <A> のそれぞれを結合する
<A> . join ( <B> )	リスト <B> のそれぞれを文字列 <A> で連結する
<B> . join ( <A> )	リスト <A> のそれぞれを文字列 <B> で連結する
<A> . join ( <B> )	<B> の各要素を <A> 文字列で結合する
<B> . join ( <A> )	<A> の各要素を <B> 文字列で結合する
<A> . join ( <B> )	文字列 <A> でリスト <B> のそれぞれをジョインする
<B> . join ( <A> )	文字列 <B> でリスト <A> のそれぞれをジョインする
<A> . join ( <B> )	<B> のそれぞれを <A> で結合する
<B> . join ( <A> )	<A> のそれぞれを <B> で結合する
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、文字列 <A> で連結する
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、文字列 <B> で連結する
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、 <A> 文字列で結合する
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、 <B> 文字列で結合する
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、文字列 <A> で結合する
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、文字列 <B> で結合する
<A> . join ( str ( x ) for x in <B> )	リスト <B> のそれぞれを文字列に変換し、 <A> で結合する
<B> . join ( str ( x ) for x in <A> )	リスト <A> のそれぞれを文字列に変換し、 <B> で結合する
<A> . join ( str ( x ) for x in <B> )	リスト <B> のそれぞれを文字列に変換し、文字列 <A> で結合する
<B> . join ( str ( x ) for x in <A> )	リスト <A> のそれぞれを文字列に変換し、文字列 <B> で結合する
<A> . join ( str ( x ) for x in <B> )	リスト <B> の各要素を文字列に変換し、 <A> で連結する
<B> . join ( str ( x ) for x in <A> )	リスト <A> の各要素を文字列に変換し、 <B> で連結する
<A> . join ( str ( x ) for x in <B> )	<B> の各要素を文字列に変換し、文字列 <A> で連結する
<B> . join ( str ( x ) for x in <A> )	<A> の各要素を文字列に変換し、文字列 <B> で連結する
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、 <A> で連結する
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、 <B> で連結する
<A> . join ( str ( x ) for x in <B> )	リスト <B> のそれぞれを文字列に変換し、 <A> 文字列で結合する
<B> . join ( str ( x ) for x in <A> )	リスト <A> のそれぞれを文字列に変換し、 <B> 文字列で結合する
<A> . join ( str ( x ) for x in <B> )	リスト <B> のそれぞれを文字列に変換し、文字列 <A> でジョインする
<B> . join ( str ( x ) for x in <A> )	リスト <A> のそれぞれを文字列に変換し、文字列 <B> でジョインする
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、 <A> でジョインする
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、 <B> でジョインする
<A> . join ( str ( x ) for x in <B> )	リスト <B> の各要素を文字列に変換し、文字列 <A> で結合する
<B> . join ( str ( x ) for x in <A> )	リスト <A> の各要素を文字列に変換し、文字列 <B> で結合する
<A> . join ( str ( x ) for x in <B> )	リスト <B> の各要素を文字列に変換し、 <A> でジョインする
<B> . join ( str ( x ) for x in <A> )	リスト <A> の各要素を文字列に変換し、 <B> でジョインする
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、 <A> で結合する
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、 <B> で結合する
<A> . join ( str ( x ) for x in <B> )	リスト <B> の各要素を文字列に変換し、 <A> 文字列で結合する
<B> . join ( str ( x ) for x in <A> )	リスト <A> の各要素を文字列に変換し、 <B> 文字列で結合する
<A> . join ( str ( x ) for x in <B> )	<B> のそれぞれを文字列に変換し、 <A> 文字列でジョインする
<B> . join ( str ( x ) for x in <A> )	<A> のそれぞれを文字列に変換し、 <B> 文字列でジョインする
'' . join ( x )	リスト a のそれぞれを文字列に変換し、結合する
'' . join ( x )	a の各要素を文字列に変換し、結合する
'' . join ( x )	リスト a の各要素を文字列に変換し、連結する
'' . join ( x )	リスト a の各要素を文字列に変換し、ジョインする
'' . join ( x )	a の各要素を文字列に変換し、連結する
'' . join ( x )	a のそれぞれを文字列に変換し、連結する
'' . join ( x )	リスト a のそれぞれを文字列に変換し、ジョインする
'' . join ( x )	a のそれぞれを文字列に変換し、結合する
<A> . lower ( )	文字列 <A> を小文字化する
<A> . lower ( )	<A> を英小文字化する
<A> . lower ( )	文字列 <A> を英小文字化する
<A> . lower ( )	<A> を小文字化する
<A> . upper ( )	<A> を英大文字化する
<A> . upper ( )	文字列 <A> を英大文字化する
<A> . upper ( )	<A> を大文字化する
<A> . upper ( )	文字列 <A> を大文字化する
<A> . lstrip ( )	文字列 <A> の空白を前から削除する
<A> . lstrip ( )	文字列 <A> の不要な空白を最初から取り除く
<A> . lstrip ( )	文字列 <A> の先頭から余分な空白を消す
<A> . lstrip ( )	文字列 <A> の余分な空白を最初から取り除く
<A> . lstrip ( )	文字列 <A> の空白を前から取り除く
<A> . lstrip ( )	文字列 <A> の空白を先頭から消す
<A> . lstrip ( )	<A> の不要な空白を前から取り除く
<A> . lstrip ( )	文字列 <A> の余分な空白を前から除去する
<A> . lstrip ( )	<A> の前から空白を除去する
<A> . lstrip ( )	<A> の空白を先頭から取り除く
<A> . lstrip ( )	文字列 <A> の最初から空白を取り除く
<A> . lstrip ( )	文字列 <A> の先頭から不要な空白を除去する
<A> . lstrip ( )	<A> の不要な空白を最初から消す
<A> . lstrip ( )	文字列 <A> の空白を先頭から除去する
<A> . lstrip ( )	<A> の空白を最初から消す
<A> . lstrip ( )	文字列 <A> の不要な空白を先頭から取り除く
<A> . lstrip ( )	<A> の前から空白を取り除く
<A> . lstrip ( )	<A> の不要な空白を先頭から取り除く
<A> . lstrip ( )	<A> の先頭から余分な空白を除去する
<A> . lstrip ( )	文字列 <A> の先頭から空白を削除する
<A> . lstrip ( )	文字列 <A> の空白を先頭から取り除く
<A> . lstrip ( )	文字列 <A> の空白を最初から消す
<A> . lstrip ( )	文字列 <A> の最初から空白を削除する
<A> . lstrip ( )	<A> の前から空白を削除する
<A> . lstrip ( )	文字列 <A> の空白を最初から削除する
<A> . lstrip ( <B> )	文字列 <A> の <B> を先頭から消す
<B> . lstrip ( <A> )	文字列 <B> の <A> を先頭から消す
<A> . lstrip ( <B> )	<A> の前から <B> を削除する
<B> . lstrip ( <A> )	<B> の前から <A> を削除する
<A> . lstrip ( <B> )	<A> の先頭から <B> を除去する
<B> . lstrip ( <A> )	<B> の先頭から <A> を除去する
<A> . lstrip ( <B> )	<A> の <B> を前から消す
<B> . lstrip ( <A> )	<B> の <A> を前から消す
<A> . lstrip ( <B> )	文字列 <A> の <B> を最初から取り除く
<B> . lstrip ( <A> )	文字列 <B> の <A> を最初から取り除く
<A> . lstrip ( <B> )	文字列 <A> の <B> を前から除去する
<B> . lstrip ( <A> )	文字列 <B> の <A> を前から除去する
<A> . lstrip ( <B> )	文字列 <A> の最初から <B> を削除する
<B> . lstrip ( <A> )	文字列 <B> の最初から <A> を削除する
<A> . lstrip ( <B> )	文字列 <A> の最初から <B> を除去する
<B> . lstrip ( <A> )	文字列 <B> の最初から <A> を除去する
<A> . lstrip ( <B> )	文字列 <A> の最初から <B> を消す
<B> . lstrip ( <A> )	文字列 <B> の最初から <A> を消す
<A> . lstrip ( <B> )	文字列 <A> の前から <B> を取り除く
<B> . lstrip ( <A> )	文字列 <B> の前から <A> を取り除く
<A> . lstrip ( <B> )	文字列 <A> の先頭から <B> を取り除く
<B> . lstrip ( <A> )	文字列 <B> の先頭から <A> を取り除く
<A> . lstrip ( <B> )	文字列 <A> の <B> を前から消す
<B> . lstrip ( <A> )	文字列 <B> の <A> を前から消す
<A> . lstrip ( <B> )	<A> の <B> を最初から取り除く
<B> . lstrip ( <A> )	<B> の <A> を最初から取り除く
<A> . lstrip ( <B> )	<A> の前から <B> を取り除く
<B> . lstrip ( <A> )	<B> の前から <A> を取り除く
<A> . lstrip ( <B> )	<A> の先頭から <B> を削除する
<B> . lstrip ( <A> )	<B> の先頭から <A> を削除する
<A> . lstrip ( <B> )	文字列 <A> の <B> を最初から削除する
<B> . lstrip ( <A> )	文字列 <B> の <A> を最初から削除する
<A> . lstrip ( <B> )	<A> の前から <B> を消す
<B> . lstrip ( <A> )	<B> の前から <A> を消す
<A> . lstrip ( <B> )	文字列 <A> の最初から <B> を取り除く
<B> . lstrip ( <A> )	文字列 <B> の最初から <A> を取り除く
<A> . lstrip ( <B> )	<A> の先頭から <B> を取り除く
<B> . lstrip ( <A> )	<B> の先頭から <A> を取り除く
<A> . rstrip ( )	文字列 <A> の後ろから空白を取り除く
<A> . rstrip ( )	文字列 <A> の空白を最後から取り除く
<A> . rstrip ( )	<A> の空白を後ろから取り除く
<A> . rstrip ( )	文字列 <A> の末尾から空白を除去する
<A> . rstrip ( )	文字列 <A> の後ろから空白を除去する
<A> . rstrip ( )	文字列 <A> の最後から空白を除去する
<A> . rstrip ( )	文字列 <A> の最後から空白を取り除く
<A> . rstrip ( )	文字列 <A> の空白を末尾から取り除く
<A> . rstrip ( )	<A> の後ろから空白を削除する
<A> . rstrip ( )	<A> の末尾から空白を削除する
<A> . rstrip ( )	文字列 <A> の空白を後ろから削除する
<A> . rstrip ( )	文字列 <A> の空白を後ろから取り除く
<A> . rstrip ( )	<A> の最後から空白を除去する
<A> . rstrip ( )	<A> の末尾から空白を取り除く
<A> . rstrip ( <B> )	<A> の <B> を最後から除去する
<B> . rstrip ( <A> )	<B> の <A> を最後から除去する
<A> . rstrip ( <B> )	<A> の <B> を後ろから取り除く
<B> . rstrip ( <A> )	<B> の <A> を後ろから取り除く
<A> . rstrip ( <B> )	文字列 <A> の末尾から <B> を取り除く
<B> . rstrip ( <A> )	文字列 <B> の末尾から <A> を取り除く
<A> . rstrip ( <B> )	文字列 <A> の後ろから <B> を取り除く
<B> . rstrip ( <A> )	文字列 <B> の後ろから <A> を取り除く
<A> . rstrip ( <B> )	文字列 <A> の <B> を後ろから取り除く
<B> . rstrip ( <A> )	文字列 <B> の <A> を後ろから取り除く
<A> . rstrip ( <B> )	<A> の最後から <B> を取り除く
<B> . rstrip ( <A> )	<B> の最後から <A> を取り除く
<A> . rstrip ( <B> )	文字列 <A> の <B> を最後から取り除く
<B> . rstrip ( <A> )	文字列 <B> の <A> を最後から取り除く
<A> . rstrip ( <B> )	<A> の最後から <B> を削除する
<B> . rstrip ( <A> )	<B> の最後から <A> を削除する
<A> . rstrip ( <B> )	文字列 <A> の最後から <B> を取り除く
<B> . rstrip ( <A> )	文字列 <B> の最後から <A> を取り除く
<A> . rstrip ( <B> )	<A> の後ろから <B> を除去する
<B> . rstrip ( <A> )	<B> の後ろから <A> を除去する
<A> . rstrip ( <B> )	文字列 <A> の後ろから <B> を消す
<B> . rstrip ( <A> )	文字列 <B> の後ろから <A> を消す
<A> . rstrip ( <B> )	文字列 <A> の末尾から <B> を消す
<B> . rstrip ( <A> )	文字列 <B> の末尾から <A> を消す
<A> . rstrip ( <B> )	文字列 <A> の <B> を末尾から削除する
<B> . rstrip ( <A> )	文字列 <B> の <A> を末尾から削除する
<A> . rstrip ( <B> )	<A> の末尾から <B> を消す
<B> . rstrip ( <A> )	<B> の末尾から <A> を消す
<A> . strip ( )	<A> の前と空白を後ろから除去する
<A> . strip ( )	文字列 <A> の最初と末尾から空白を消す
<A> . strip ( )	文字列 <A> の前と後ろから空白を除去する
<A> . strip ( )	<A> の前と最後から空白を削除する
<A> . strip ( )	<A> の最初と後ろから空白を取り除く
<A> . strip ( )	<A> の最初と空白を最後から取り除く
<A> . strip ( )	文字列 <A> の最初と末尾から空白を取り除く
<A> . strip ( )	文字列 <A> の最初と後ろから余分な空白を削除する
<A> . strip ( )	文字列 <A> の前と空白を末尾から削除する
<A> . strip ( )	<A> の前と末尾から空白を取り除く
<A> . strip ( )	<A> の先頭と不要な空白を後ろから取り除く
<A> . strip ( )	<A> の前と空白を末尾から取り除く
<A> . strip ( )	<A> の先頭と最後から空白を消す
<A> . strip ( )	<A> の最初と最後から空白を消す
<A> . strip ( )	文字列 <A> の先頭と後ろから余分な空白を取り除く
<A> . strip ( )	文字列 <A> の前と空白を後ろから消す
<A> . strip ( )	文字列 <A> の前と末尾から空白を削除する
<A> . strip ( )	<A> の最初と空白を最後から除去する
<A> . strip ( )	<A> の先頭と空白を最後から除去する
<A> . strip ( )	<A> の先頭と最後から空白を除去する
<A> . strip ( )	文字列 <A> の先頭と末尾から空白を削除する
<A> . strip ( )	文字列 <A> の先頭と後ろから空白を取り除く
<A> . strip ( )	<A> の前と末尾から空白を削除する
<A> . strip ( )	<A> の最初と余分な空白を最後から消す
<A> . strip ( )	<A> の先頭と空白を末尾から取り除く
<A> . strip ( )	文字列 <A> の前と最後から空白を取り除く
<A> . strip ( )	文字列 <A> の前と空白を後ろから取り除く
<A> . strip ( )	<A> の先頭と空白を後ろから消す
<A> . strip ( )	文字列 <A> の先頭と空白を最後から取り除く
<A> . strip ( )	文字列 <A> の先頭と不要な空白を最後から取り除く
<A> . strip ( )	<A> の先頭と空白を最後から消す
<A> . strip ( )	<A> の最初と空白を後ろから削除する
<A> . strip ( )	文字列 <A> の前と後ろから空白を取り除く
<A> . strip ( )	文字列 <A> の最初と最後から空白を消す
<A> . strip ( )	文字列 <A> の前と空白を後ろから削除する
<A> . strip ( )	<A> の先頭と末尾から不要な空白を消す
<A> . strip ( )	<A> の前と最後から空白を除去する
<A> . strip ( )	<A> の前と末尾から空白を除去する
<A> . strip ( )	<A> の最初と空白を末尾から取り除く
<A> . strip ( )	文字列 <A> の最初と空白を末尾から取り除く
<A> . strip ( )	<A> の先頭と末尾から不要な空白を取り除く
<A> . strip ( )	文字列 <A> の最初と不要な空白を末尾から消す
<A> . strip ( )	文字列 <A> の最初と不要な空白を最後から削除する
<A> . strip ( )	文字列 <A> の先頭と末尾から空白を取り除く
<A> . strip ( )	文字列 <A> の先頭と余分な空白を末尾から消す
<A> . strip ( )	文字列 <A> の先頭と末尾から余分な空白を消す
<A> . strip ( )	文字列 <A> の最初と不要な空白を末尾から取り除く
<A> . strip ( )	<A> の先頭と末尾から空白を取り除く
<A> . strip ( )	文字列 <A> の先頭と後ろから空白を削除する
<A> . strip ( )	<A> の最初と空白を後ろから除去する
<A> . strip ( )	文字列 <A> の前と空白を最後から取り除く
<A> . strip ( )	文字列 <A> の先頭と空白を末尾から削除する
<A> . strip ( )	<A> から空白を取り除く
<A> . strip ( )	空白を文字列 <A> から削除する
<A> . strip ( )	不要な空白を <A> から除去する
<A> . strip ( )	文字列 <A> から不要な空白を消す
<A> . strip ( )	空白を <A> 文字列から除去する
<A> . strip ( )	余分な空白を <A> 文字列から消す
<A> . strip ( )	空白を <A> から取り除く
<A> . strip ( )	<A> から不要な空白を削除する
<A> . strip ( )	文字列 <A> から余分な空白を消す
<A> . strip ( )	余分な空白を <A> 文字列から除去する
<A> . strip ( )	文字列 <A> から不要な空白を除去する
<A> . strip ( )	空白を <A> 文字列から削除する
<A> . strip ( )	不要な空白を <A> 文字列から取り除く
<A> . strip ( )	<A> から空白を除去する
<A> . strip ( )	文字列 <A> から空白を削除する
<A> . strip ( )	文字列 <A> から空白を取り除く
<A> . strip ( )	文字列 <A> から空白を除去する
<A> . strip ( )	<A> から空白を消す
<A> . strip ( <B> )	文字列 <A> の先頭と最後から <B> を取り除く
<B> . strip ( <A> )	文字列 <B> の先頭と最後から <A> を取り除く
<A> . strip ( <B> )	<A> の先頭と <B> を最後から取り除く
<B> . strip ( <A> )	<B> の先頭と <A> を最後から取り除く
<A> . strip ( <B> )	文字列 <A> の先頭と <B> を末尾から取り除く
<B> . strip ( <A> )	文字列 <B> の先頭と <A> を末尾から取り除く
<A> . strip ( <B> )	文字列 <A> の前と末尾から <B> を消す
<B> . strip ( <A> )	文字列 <B> の前と末尾から <A> を消す
<A> . strip ( <B> )	文字列 <A> の前と <B> を後ろから取り除く
<B> . strip ( <A> )	文字列 <B> の前と <A> を後ろから取り除く
<A> . strip ( <B> )	<A> の先頭と <B> を最後から削除する
<B> . strip ( <A> )	<B> の先頭と <A> を最後から削除する
<A> . strip ( <B> )	<A> の先頭と末尾から <B> を消す
<B> . strip ( <A> )	<B> の先頭と末尾から <A> を消す
<A> . strip ( <B> )	<A> の最初と末尾から <B> を取り除く
<B> . strip ( <A> )	<B> の最初と末尾から <A> を取り除く
<A> . strip ( <B> )	文字列 <A> の最初と <B> を末尾から削除する
<B> . strip ( <A> )	文字列 <B> の最初と <A> を末尾から削除する
<A> . strip ( <B> )	<A> の前と末尾から <B> を取り除く
<B> . strip ( <A> )	<B> の前と末尾から <A> を取り除く
<A> . strip ( <B> )	<A> の前と <B> を末尾から除去する
<B> . strip ( <A> )	<B> の前と <A> を末尾から除去する
<A> . strip ( <B> )	文字列 <A> の前と <B> を最後から取り除く
<B> . strip ( <A> )	文字列 <B> の前と <A> を最後から取り除く
<A> . strip ( <B> )	<A> の最初と <B> を最後から除去する
<B> . strip ( <A> )	<B> の最初と <A> を最後から除去する
<A> . strip ( <B> )	文字列 <A> の前と <B> を後ろから削除する
<B> . strip ( <A> )	文字列 <B> の前と <A> を後ろから削除する
<A> . strip ( <B> )	<A> の最初と末尾から <B> を除去する
<B> . strip ( <A> )	<B> の最初と末尾から <A> を除去する
<A> . strip ( <B> )	文字列 <A> の最初と後ろから <B> を除去する
<B> . strip ( <A> )	文字列 <B> の最初と後ろから <A> を除去する
<A> . strip ( <B> )	文字列 <A> の先頭と <B> を末尾から除去する
<B> . strip ( <A> )	文字列 <B> の先頭と <A> を末尾から除去する
<A> . strip ( <B> )	文字列 <A> の先頭と <B> を後ろから取り除く
<B> . strip ( <A> )	文字列 <B> の先頭と <A> を後ろから取り除く
<A> . strip ( <B> )	文字列 <A> の最初と <B> を末尾から取り除く
<B> . strip ( <A> )	文字列 <B> の最初と <A> を末尾から取り除く
<A> . strip ( <B> )	文字列 <A> の最初と末尾から <B> を消す
<B> . strip ( <A> )	文字列 <B> の最初と末尾から <A> を消す
<A> . strip ( <B> )	<A> の前と <B> を後ろから除去する
<B> . strip ( <A> )	<B> の前と <A> を後ろから除去する
<A> . strip ( <B> )	<A> の前と最後から <B> を消す
<B> . strip ( <A> )	<B> の前と最後から <A> を消す
<A> . strip ( <B> )	文字列 <A> の先頭と <B> を最後から削除する
<B> . strip ( <A> )	文字列 <B> の先頭と <A> を最後から削除する
<A> . strip ( <B> )	文字列 <A> の前と最後から <B> を取り除く
<B> . strip ( <A> )	文字列 <B> の前と最後から <A> を取り除く
<A> . strip ( <B> )	<A> の前と <B> を最後から削除する
<B> . strip ( <A> )	<B> の前と <A> を最後から削除する
<A> . strip ( <B> )	文字列 <A> の先頭と末尾から <B> を除去する
<B> . strip ( <A> )	文字列 <B> の先頭と末尾から <A> を除去する
<A> . strip ( <B> )	<A> の最初と <B> を末尾から取り除く
<B> . strip ( <A> )	<B> の最初と <A> を末尾から取り除く
<A> . strip ( <B> )	<A> の先頭と <B> を後ろから削除する
<B> . strip ( <A> )	<B> の先頭と <A> を後ろから削除する
<A> . strip ( <B> )	文字列 <A> の最初と末尾から <B> を取り除く
<B> . strip ( <A> )	文字列 <B> の最初と末尾から <A> を取り除く
<A> . strip ( <B> )	<A> の先頭と最後から <B> を消す
<B> . strip ( <A> )	<B> の先頭と最後から <A> を消す
<A> . strip ( <B> )	文字列 <A> の最初と <B> を最後から消す
<B> . strip ( <A> )	文字列 <B> の最初と <A> を最後から消す
<A> . strip ( <B> )	<A> の先頭と後ろから <B> を消す
<B> . strip ( <A> )	<B> の先頭と後ろから <A> を消す
<A> . strip ( <B> )	<A> の前と末尾から <B> を消す
<B> . strip ( <A> )	<B> の前と末尾から <A> を消す
<A> . strip ( <B> )	文字列 <A> の最初と <B> を後ろから削除する
<B> . strip ( <A> )	文字列 <B> の最初と <A> を後ろから削除する
<A> . partition ( <B> )	<B> で文字列 <A> を区切る
<B> . partition ( <A> )	<A> で文字列 <B> を区切る
<A> . partition ( <B> )	<B> で <A> を区切る
<B> . partition ( <A> )	<A> で <B> を区切る
<A> . partition ( <B> )	文字列 <A> を <B> で分割する
<B> . partition ( <A> )	文字列 <B> を <A> で分割する
<A> . partition ( <B> )	<A> を <B> で区切る
<B> . partition ( <A> )	<B> を <A> で区切る
<A> . partition ( <B> )	<B> で文字列 <A> を分割する
<B> . partition ( <A> )	<A> で文字列 <B> を分割する
<A> . partition ( <B> )	文字列 <A> を <B> で区切る
<B> . partition ( <A> )	文字列 <B> を <A> で区切る
<A> . partition ( <B> )	文字列 <A> を <B> でパーティションする
<B> . partition ( <A> )	文字列 <B> を <A> でパーティションする
<A> . removeprefix ( <B> )	文字列 <A> から接頭辞 <B> を除去する
<B> . removeprefix ( <A> )	文字列 <B> から接頭辞 <A> を除去する
<A> . removeprefix ( <B> )	文字列 <A> から接頭辞 <B> を消す
<B> . removeprefix ( <A> )	文字列 <B> から接頭辞 <A> を消す
<A> . removeprefix ( <B> )	<A> から接頭辞 <B> を取り除く
<B> . removeprefix ( <A> )	<B> から接頭辞 <A> を取り除く
<A> . removeprefix ( <B> )	文字列 <A> から接頭辞 <B> を削除する
<B> . removeprefix ( <A> )	文字列 <B> から接頭辞 <A> を削除する
<A> . removeprefix ( <B> )	文字列 <A> から接頭辞 <B> を取り除く
<B> . removeprefix ( <A> )	文字列 <B> から接頭辞 <A> を取り除く
<A> . removeprefix ( <B> )	<A> から接頭辞 <B> を削除する
<B> . removeprefix ( <A> )	<B> から接頭辞 <A> を削除する
<A> . removeprefix ( <B> )	<A> の先頭から <B> 文字列を取り除く
<B> . removeprefix ( <A> )	<B> の先頭から <A> 文字列を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の前から文字列 <B> を消す
<B> . removeprefix ( <A> )	文字列 <B> の前から文字列 <A> を消す
<A> . removeprefix ( <B> )	文字列 <A> の最初から <B> 文字列を取り除く
<B> . removeprefix ( <A> )	文字列 <B> の最初から <A> 文字列を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の先頭から <B> 文字列を除去する
<B> . removeprefix ( <A> )	文字列 <B> の先頭から <A> 文字列を除去する
<A> . removeprefix ( <B> )	文字列 <A> の先頭から文字列 <B> を除去する
<B> . removeprefix ( <A> )	文字列 <B> の先頭から文字列 <A> を除去する
<A> . removeprefix ( <B> )	<A> の先頭から <B> 文字列を除去する
<B> . removeprefix ( <A> )	<B> の先頭から <A> 文字列を除去する
<A> . removeprefix ( <B> )	<A> の最初から <B> 文字列を消す
<B> . removeprefix ( <A> )	<B> の最初から <A> 文字列を消す
<A> . removeprefix ( <B> )	<A> の先頭から文字列 <B> を削除する
<B> . removeprefix ( <A> )	<B> の先頭から文字列 <A> を削除する
<A> . removeprefix ( <B> )	文字列 <A> の最初から文字列 <B> を取り除く
<B> . removeprefix ( <A> )	文字列 <B> の最初から文字列 <A> を取り除く
<A> . removeprefix ( <B> )	<A> の最初から <B> を消す
<B> . removeprefix ( <A> )	<B> の最初から <A> を消す
<A> . removeprefix ( <B> )	文字列 <A> の最初から <B> を取り除く
<B> . removeprefix ( <A> )	文字列 <B> の最初から <A> を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の先頭から <B> 文字列を取り除く
<B> . removeprefix ( <A> )	文字列 <B> の先頭から <A> 文字列を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の最初から文字列 <B> を除去する
<B> . removeprefix ( <A> )	文字列 <B> の最初から文字列 <A> を除去する
<A> . removeprefix ( <B> )	<A> の先頭から <B> を取り除く
<B> . removeprefix ( <A> )	<B> の先頭から <A> を取り除く
<A> . removeprefix ( <B> )	<A> の先頭から文字列 <B> を取り除く
<B> . removeprefix ( <A> )	<B> の先頭から文字列 <A> を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の前から <B> を取り除く
<B> . removeprefix ( <A> )	文字列 <B> の前から <A> を取り除く
<A> . removeprefix ( <B> )	<A> の前から文字列 <B> を取り除く
<B> . removeprefix ( <A> )	<B> の前から文字列 <A> を取り除く
<A> . removeprefix ( <B> )	<A> の最初から文字列 <B> を取り除く
<B> . removeprefix ( <A> )	<B> の最初から文字列 <A> を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の前から文字列 <B> を削除する
<B> . removeprefix ( <A> )	文字列 <B> の前から文字列 <A> を削除する
<A> . removeprefix ( <B> )	文字列 <A> の最初から文字列 <B> を削除する
<B> . removeprefix ( <A> )	文字列 <B> の最初から文字列 <A> を削除する
<A> . removeprefix ( <B> )	<A> の前から <B> を取り除く
<B> . removeprefix ( <A> )	<B> の前から <A> を取り除く
<A> . removeprefix ( <B> )	文字列 <A> の最初から文字列 <B> を消す
<B> . removeprefix ( <A> )	文字列 <B> の最初から文字列 <A> を消す
<A> . removeprefix ( <B> )	文字列 <A> の前から文字列 <B> を除去する
<B> . removeprefix ( <A> )	文字列 <B> の前から文字列 <A> を除去する
<A> . removeprefix ( <B> )	文字列 <A> の先頭から文字列 <B> を消す
<B> . removeprefix ( <A> )	文字列 <B> の先頭から文字列 <A> を消す
<A> . removesuffix ( <B> )	文字列 <A> から接尾辞 <B> を取り除く
<B> . removesuffix ( <A> )	文字列 <B> から接尾辞 <A> を取り除く
<A> . removesuffix ( <B> )	<A> から接尾辞 <B> を除去する
<B> . removesuffix ( <A> )	<B> から接尾辞 <A> を除去する
<A> . removesuffix ( <B> )	<A> から接尾辞 <B> を削除する
<B> . removesuffix ( <A> )	<B> から接尾辞 <A> を削除する
<A> . removesuffix ( <B> )	文字列 <A> から接尾辞 <B> を削除する
<B> . removesuffix ( <A> )	文字列 <B> から接尾辞 <A> を削除する
<A> . removesuffix ( <B> )	文字列 <A> から接尾辞 <B> を消す
<B> . removesuffix ( <A> )	文字列 <B> から接尾辞 <A> を消す
<A> . removesuffix ( <B> )	<A> から接尾辞 <B> を取り除く
<B> . removesuffix ( <A> )	<B> から接尾辞 <A> を取り除く
<A> . removesuffix ( <B> )	<A> から接尾辞 <B> を消す
<B> . removesuffix ( <A> )	<B> から接尾辞 <A> を消す
<A> . removesuffix ( <B> )	文字列 <A> から接尾辞 <B> を除去する
<B> . removesuffix ( <A> )	文字列 <B> から接尾辞 <A> を除去する
<A> . removesuffix ( <B> )	<A> の最後から <B> を消す
<B> . removesuffix ( <A> )	<B> の最後から <A> を消す
<A> . removesuffix ( <B> )	文字列 <A> の後ろから <B> を取り除く
<B> . removesuffix ( <A> )	文字列 <B> の後ろから <A> を取り除く
<A> . removesuffix ( <B> )	<A> の後ろから <B> を除去する
<B> . removesuffix ( <A> )	<B> の後ろから <A> を除去する
<A> . removesuffix ( <B> )	文字列 <A> の末尾から <B> を取り除く
<B> . removesuffix ( <A> )	文字列 <B> の末尾から <A> を取り除く
<A> . removesuffix ( <B> )	文字列 <A> の最後から <B> を取り除く
<B> . removesuffix ( <A> )	文字列 <B> の最後から <A> を取り除く
<A> . removesuffix ( <B> )	<A> の末尾から <B> を取り除く
<B> . removesuffix ( <A> )	<B> の末尾から <A> を取り除く
<A> . removesuffix ( <B> )	<A> の末尾から <B> を消す
<B> . removesuffix ( <A> )	<B> の末尾から <A> を消す
<A> . removesuffix ( <B> )	文字列 <A> の後ろから <B> を削除する
<B> . removesuffix ( <A> )	文字列 <B> の後ろから <A> を削除する
<A> . removesuffix ( <B> )	<A> の最後から <B> を取り除く
<B> . removesuffix ( <A> )	<B> の最後から <A> を取り除く
<A> . removesuffix ( <B> )	文字列 <A> の末尾から <B> を除去する
<B> . removesuffix ( <A> )	文字列 <B> の末尾から <A> を除去する
<A> . replace ( <B> , s2 )	<A> 中の <B> を全て
<B> . replace ( <A> , s2 )	<B> 中の <A> を全て
<A> . replace ( <B> , s2 )	<A> 中の <B> を
<B> . replace ( <A> , s2 )	<B> 中の <A> を
<A> . replace ( <B> , s2 )	<A> 内の <B> を
<B> . replace ( <A> , s2 )	<B> 内の <A> を
<A> . replace ( <B> , s2 )	文字列 <A> 内の <B> を全て
<B> . replace ( <A> , s2 )	文字列 <B> 内の <A> を全て
<A> . replace ( <B> , s2 )	<A> の <B> を全て
<B> . replace ( <A> , s2 )	<B> の <A> を全て
<A> . replace ( <B> , s2 )	文字列 <A> 内の <B> を
<B> . replace ( <A> , s2 )	文字列 <B> 内の <A> を
<A> . replace ( <B> , s2 )	文字列 <A> 中の <B> を
<B> . replace ( <A> , s2 )	文字列 <B> 中の <A> を
<A> . replace ( <B> , s2 )	文字列 <A> の <B> を
<B> . replace ( <A> , s2 )	文字列 <B> の <A> を
<A> . replace ( <B> , '' )	文字列 <A> 中の <B> を
<B> . replace ( <A> , '' )	文字列 <B> 中の <A> を
<A> . replace ( <B> , '' )	<A> 内の <B> を
<B> . replace ( <A> , '' )	<B> 内の <A> を
<A> . replace ( <B> , '' )	<A> の <B> を
<B> . replace ( <A> , '' )	<B> の <A> を
<A> . replace ( <B> , '' )	文字列 <A> 内の <B> を
<B> . replace ( <A> , '' )	文字列 <B> 内の <A> を
<A> . replace ( <B> , '' )	文字列 <A> の <B> を
<B> . replace ( <A> , '' )	文字列 <B> の <A> を
<A> . replace ( <B> , '' )	<A> 中の <B> を
<B> . replace ( <A> , '' )	<B> 中の <A> を
<A> . split ( )	空白で文字列 <A> を分割する
<A> . split ( )	空白で <A> をスプリットする
<A> . split ( )	<A> を空白でスプリットする
<A> . split ( )	文字列 <A> を空白で区切る
<A> . split ( )	空白で <A> 文字列を区切る
<A> . split ( )	空白で <A> 文字列をスプリットする
<A> . split ( )	空白で文字列 <A> を分ける
<A> . split ( )	空白で文字列 <A> をスプリットする
<A> . split ( )	<A> を空白で分ける
<A> . split ( )	空白で <A> を分割する
<A> . split ( )	<A> を空白で分割する
<A> . split ( )	空白で区切って文字列 <A> をリストにする
<A> . split ( )	空白で区切って <A> 文字列をリストにする
<A> . split ( )	<A> を空白で区切ってリストにする
<A> . split ( )	文字列 <A> を空白で区切ってリストにする
<A> . split ( <B> )	区切り文字 <B> で <A> 文字列をスプリットする
<B> . split ( <A> )	区切り文字 <A> で <B> 文字列をスプリットする
<A> . split ( <B> )	セパレータ <B> で <A> を分ける
<B> . split ( <A> )	セパレータ <A> で <B> を分ける
<A> . split ( <B> )	<B> で文字列 <A> を分ける
<B> . split ( <A> )	<A> で文字列 <B> を分ける
<A> . split ( <B> )	<B> で <A> 文字列を分ける
<B> . split ( <A> )	<A> で <B> 文字列を分ける
<A> . split ( <B> )	<A> を <B> 区切り文字でスプリットする
<B> . split ( <A> )	<B> を <A> 区切り文字でスプリットする
<A> . split ( <B> )	<B> で <A> 文字列をスプリットする
<B> . split ( <A> )	<A> で <B> 文字列をスプリットする
<A> . split ( <B> )	<B> で <A> を分ける
<B> . split ( <A> )	<A> で <B> を分ける
<A> . split ( <B> )	区切り文字 <B> で <A> 文字列を分割する
<B> . split ( <A> )	区切り文字 <A> で <B> 文字列を分割する
<A> . split ( <B> )	<A> を <B> 区切り文字で分割する
<B> . split ( <A> )	<B> を <A> 区切り文字で分割する
<A> . split ( <B> )	文字列 <A> をセパレータ <B> で分ける
<B> . split ( <A> )	文字列 <B> をセパレータ <A> で分ける
<A> . split ( <B> )	区切り記号 <B> で文字列 <A> を区切る
<B> . split ( <A> )	区切り記号 <A> で文字列 <B> を区切る
<A> . split ( <B> )	区切り文字 <B> で <A> をスプリットする
<B> . split ( <A> )	区切り文字 <A> で <B> をスプリットする
<A> . split ( <B> )	区切り文字 <B> で文字列 <A> を分割する
<B> . split ( <A> )	区切り文字 <A> で文字列 <B> を分割する
<A> . split ( <B> )	<B> で文字列 <A> を分割する
<B> . split ( <A> )	<A> で文字列 <B> を分割する
<A> . split ( <B> )	文字列 <A> を区切り記号 <B> で区切る
<B> . split ( <A> )	文字列 <B> を区切り記号 <A> で区切る
<A> . split ( <B> )	<A> をセパレータ <B> で区切る
<B> . split ( <A> )	<B> をセパレータ <A> で区切る
<A> . split ( <B> )	区切り記号 <B> で <A> を区切る
<B> . split ( <A> )	区切り記号 <A> で <B> を区切る
<A> . split ( <B> )	セパレータ <B> で <A> を分割する
<B> . split ( <A> )	セパレータ <A> で <B> を分割する
<A> . split ( <B> )	文字列 <A> をセパレータ <B> で分割する
<B> . split ( <A> )	文字列 <B> をセパレータ <A> で分割する
<A> . split ( <B> )	文字列 <A> を <B> で分割する
<B> . split ( <A> )	文字列 <B> を <A> で分割する
<A> . split ( <B> )	区切り文字 <B> で <A> を分割する
<B> . split ( <A> )	区切り文字 <A> で <B> を分割する
<A> . split ( <B> )	文字列 <A> を <B> 区切り文字で分ける
<B> . split ( <A> )	文字列 <B> を <A> 区切り文字で分ける
<A> . split ( <B> )	文字列 <A> を <B> で区切る
<B> . split ( <A> )	文字列 <B> を <A> で区切る
<A> . split ( <B> )	<A> を区切り文字 <B> で分ける
<B> . split ( <A> )	<B> を区切り文字 <A> で分ける
<A> . split ( <B> )	区切り文字 <B> で文字列 <A> を区切る
<B> . split ( <A> )	区切り文字 <A> で文字列 <B> を区切る
<A> . split ( <B> )	文字列 <A> を <B> セパレータで区切る
<B> . split ( <A> )	文字列 <B> を <A> セパレータで区切る
<A> . split ( <B> )	文字列 <A> を <B> セパレータでスプリットする
<B> . split ( <A> )	文字列 <B> を <A> セパレータでスプリットする
<A> . split ( <B> )	<A> をセパレータ <B> で分割する
<B> . split ( <A> )	<B> をセパレータ <A> で分割する
<A> . split ( <B> )	<A> を <B> で分割する
<B> . split ( <A> )	<B> を <A> で分割する
<A> . split ( <B> )	文字列 <A> を <B> で区切ってリストにする
<B> . split ( <A> )	文字列 <B> を <A> で区切ってリストにする
<A> . split ( <B> )	<B> で区切って <A> 文字列をリストにする
<B> . split ( <A> )	<A> で区切って <B> 文字列をリストにする
<A> . split ( <B> )	<A> を <B> で区切ってリストにする
<B> . split ( <A> )	<B> を <A> で区切ってリストにする
<A> . split ( <B> )	<B> で区切って文字列 <A> をリストにする
<B> . split ( <A> )	<A> で区切って文字列 <B> をリストにする
<A> . rsplit ( <B> )	区切り文字 <B> で <A> 文字列を右スプリットする
<B> . rsplit ( <A> )	区切り文字 <A> で <B> 文字列を右スプリットする
<A> . rsplit ( <B> )	文字列 <A> を <B> で右分割する
<B> . rsplit ( <A> )	文字列 <B> を <A> で右分割する
<A> . rsplit ( <B> )	セパレータ <B> で <A> 文字列を右スプリットする
<B> . rsplit ( <A> )	セパレータ <A> で <B> 文字列を右スプリットする
<A> . rsplit ( <B> )	<A> をセパレータ <B> で右分割する
<B> . rsplit ( <A> )	<B> をセパレータ <A> で右分割する
<A> . rsplit ( <B> )	文字列 <A> を区切り文字 <B> で右スプリットする
<B> . rsplit ( <A> )	文字列 <B> を区切り文字 <A> で右スプリットする
<A> . rsplit ( <B> )	<A> を区切り文字 <B> で右から分ける
<B> . rsplit ( <A> )	<B> を区切り文字 <A> で右から分ける
<A> . rsplit ( <B> )	セパレータ <B> で <A> を右から分ける
<B> . rsplit ( <A> )	セパレータ <A> で <B> を右から分ける
<A> . rsplit ( <B> )	文字列 <A> を区切り記号 <B> で右分割する
<B> . rsplit ( <A> )	文字列 <B> を区切り記号 <A> で右分割する
<A> . rsplit ( <B> )	文字列 <A> を <B> 区切り文字で右から区切る
<B> . rsplit ( <A> )	文字列 <B> を <A> 区切り文字で右から区切る
<A> . rsplit ( <B> )	区切り文字 <B> で <A> 文字列を右から区切る
<B> . rsplit ( <A> )	区切り文字 <A> で <B> 文字列を右から区切る
<A> . rsplit ( <B> )	区切り文字 <B> で <A> 文字列を右分割する
<B> . rsplit ( <A> )	区切り文字 <A> で <B> 文字列を右分割する
<A> . rsplit ( <B> )	<B> で <A> を右分割する
<B> . rsplit ( <A> )	<A> で <B> を右分割する
<A> . rsplit ( <B> )	<A> を <B> で右から区切る
<B> . rsplit ( <A> )	<B> を <A> で右から区切る
<A> . rsplit ( <B> )	区切り文字 <B> で <A> を右スプリットする
<B> . rsplit ( <A> )	区切り文字 <A> で <B> を右スプリットする
<A> . rsplit ( <B> )	文字列 <A> をセパレータ <B> で右スプリットする
<B> . rsplit ( <A> )	文字列 <B> をセパレータ <A> で右スプリットする
<A> . rsplit ( <B> )	文字列 <A> を区切り記号 <B> で右から分ける
<B> . rsplit ( <A> )	文字列 <B> を区切り記号 <A> で右から分ける
<A> . rsplit ( <B> )	区切り文字 <B> で <A> 文字列を右から分ける
<B> . rsplit ( <A> )	区切り文字 <A> で <B> 文字列を右から分ける
<A> . rsplit ( <B> )	セパレータ <B> で <A> を右分割する
<B> . rsplit ( <A> )	セパレータ <A> で <B> を右分割する
<A> . rsplit ( <B> )	区切り文字 <B> で <A> を右から分ける
<B> . rsplit ( <A> )	区切り文字 <A> で <B> を右から分ける
<A> . rsplit ( <B> )	セパレータ <B> で <A> 文字列を右から区切る
<B> . rsplit ( <A> )	セパレータ <A> で <B> 文字列を右から区切る
<A> . rsplit ( <B> )	文字列 <A> を <B> で右から分ける
<B> . rsplit ( <A> )	文字列 <B> を <A> で右から分ける
<A> . rsplit ( <B> )	<B> で <A> 文字列を右から区切る
<B> . rsplit ( <A> )	<A> で <B> 文字列を右から区切る
<A> . rsplit ( <B> )	セパレータ <B> で <A> 文字列を右分割する
<B> . rsplit ( <A> )	セパレータ <A> で <B> 文字列を右分割する
<A> . rsplit ( <B> )	<B> で <A> を右スプリットする
<B> . rsplit ( <A> )	<A> で <B> を右スプリットする
<A> . rsplit ( <B> )	文字列 <A> を <B> 区切り記号で右分割する
<B> . rsplit ( <A> )	文字列 <B> を <A> 区切り記号で右分割する
<A> . rsplit ( <B> )	文字列 <A> を区切り文字 <B> で右から分ける
<B> . rsplit ( <A> )	文字列 <B> を区切り文字 <A> で右から分ける
<A> . rsplit ( <B> )	文字列 <A> を <B> セパレータで右から分ける
<B> . rsplit ( <A> )	文字列 <B> を <A> セパレータで右から分ける
<A> . rsplit ( <B> )	区切り記号 <B> で <A> を右から分ける
<B> . rsplit ( <A> )	区切り記号 <A> で <B> を右から分ける
<A> . rsplit ( <B> )	区切り文字 <B> で文字列 <A> を右から区切る
<B> . rsplit ( <A> )	区切り文字 <A> で文字列 <B> を右から区切る
<A> . rsplit ( <B> )	文字列 <A> を <B> 区切り文字で右スプリットする
<B> . rsplit ( <A> )	文字列 <B> を <A> 区切り文字で右スプリットする
<A> . rsplit ( <B> )	区切り記号 <B> で <A> を右から区切る
<B> . rsplit ( <A> )	区切り記号 <A> で <B> を右から区切る
<A> . rsplit ( <B> )	<A> を <B> 区切り文字で右から分ける
<B> . rsplit ( <A> )	<B> を <A> 区切り文字で右から分ける
<A> . rsplit ( <B> )	<A> を <B> 区切り文字で右分割する
<B> . rsplit ( <A> )	<B> を <A> 区切り文字で右分割する
<A> . rsplit ( <B> )	<A> を区切り記号 <B> で右分割する
<B> . rsplit ( <A> )	<B> を区切り記号 <A> で右分割する
<A> . split ( ) [ 0 ]	文字列 <A> を空白で区切った最初の部分
<A> . split ( ) [ 0 ]	<A> を空白で区切った最初の文字列
<A> . split ( ) [ 0 ]	文字列 <A> を空白で区切った最初の文字列
<A> . split ( ) [ 0 ]	<A> を空白で区切った最初の部分
<A> . split ( ) [ -1 ]	<A> を空白で区切った最後の文字列
<A> . split ( ) [ -1 ]	<A> を空白で区切った最後の部分
<A> . split ( ) [ -1 ]	文字列 <A> を空白で区切った最後の部分
<A> . split ( ) [ -1 ]	文字列 <A> を空白で区切った最後の文字列
<A> . split ( <B> ) [ 0 ]	文字列 <A> を <B> で区切った最初の部分
<B> . split ( <A> ) [ 0 ]	文字列 <B> を <A> で区切った最初の部分
<A> . split ( <B> ) [ 0 ]	文字列 <A> を区切り文字 <B> で区切った最初の部分
<B> . split ( <A> ) [ 0 ]	文字列 <B> を区切り文字 <A> で区切った最初の部分
<A> . split ( <B> ) [ 0 ]	<A> をセパレータ <B> で区切った最初の部分
<B> . split ( <A> ) [ 0 ]	<B> をセパレータ <A> で区切った最初の部分
<A> . split ( <B> ) [ 0 ]	文字列 <A> を <B> 区切り記号で区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	文字列 <B> を <A> 区切り記号で区切った最初の文字列
<A> . split ( <B> ) [ 0 ]	<A> を <B> 区切り文字で区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	<B> を <A> 区切り文字で区切った最初の文字列
<A> . split ( <B> ) [ 0 ]	文字列 <A> を <B> で区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	文字列 <B> を <A> で区切った最初の文字列
<A> . split ( <B> ) [ 0 ]	<A> を <B> で区切った最初の部分
<B> . split ( <A> ) [ 0 ]	<B> を <A> で区切った最初の部分
<A> . split ( <B> ) [ 0 ]	<A> を <B> セパレータで区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	<B> を <A> セパレータで区切った最初の文字列
<A> . split ( <B> ) [ 0 ]	<A> を区切り記号 <B> で区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	<B> を区切り記号 <A> で区切った最初の文字列
<A> . split ( <B> ) [ 0 ]	<A> を <B> で区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	<B> を <A> で区切った最初の文字列
<A> . split ( <B> ) [ 0 ]	<A> をセパレータ <B> で区切った最初の文字列
<B> . split ( <A> ) [ 0 ]	<B> をセパレータ <A> で区切った最初の文字列
<A> . split ( <B> ) [ -1 ]	<A> を <B> で区切った最後の部分
<B> . split ( <A> ) [ -1 ]	<B> を <A> で区切った最後の部分
<A> . split ( <B> ) [ -1 ]	<A> を <B> 区切り文字で区切った最後の文字列
<B> . split ( <A> ) [ -1 ]	<B> を <A> 区切り文字で区切った最後の文字列
<A> . split ( <B> ) [ -1 ]	<A> を <B> セパレータで区切った最後の文字列
<B> . split ( <A> ) [ -1 ]	<B> を <A> セパレータで区切った最後の文字列
<A> . split ( <B> ) [ -1 ]	<A> を <B> で区切った最後の文字列
<B> . split ( <A> ) [ -1 ]	<B> を <A> で区切った最後の文字列
<A> . split ( <B> ) [ -1 ]	文字列 <A> をセパレータ <B> で区切った最後の部分
<B> . split ( <A> ) [ -1 ]	文字列 <B> をセパレータ <A> で区切った最後の部分
<A> . split ( <B> ) [ -1 ]	文字列 <A> を <B> で区切った最後の部分
<B> . split ( <A> ) [ -1 ]	文字列 <B> を <A> で区切った最後の部分
<A> . split ( <B> ) [ -1 ]	<A> を <B> 区切り記号で区切った最後の部分
<B> . split ( <A> ) [ -1 ]	<B> を <A> 区切り記号で区切った最後の部分
@option maxsplit = <A>	さらに、最大分割回数は <A> とする
<A> . translate ( <B> )	変換表 <B> で <A> を変換する
<B> . translate ( <A> )	変換表 <A> で <B> を変換する
<A> . translate ( <B> )	変換表 <B> で <A> の文字を変換する
<B> . translate ( <A> )	変換表 <A> で <B> の文字を変換する
<A> . translate ( <B> )	変換表 <B> で文字列 <A> の文字を変換する
<B> . translate ( <A> )	変換表 <A> で文字列 <B> の文字を変換する
<A> . translate ( <B> )	<A> を <B> で変換する
<B> . translate ( <A> )	<B> を <A> で変換する
<A> . translate ( <B> )	<B> で <A> の文字を変換する
<B> . translate ( <A> )	<A> で <B> の文字を変換する
<A> . translate ( <B> )	<B> で <A> を変換する
<B> . translate ( <A> )	<A> で <B> を変換する
<A> . translate ( <B> )	<B> で文字列 <A> の文字を変換する
<B> . translate ( <A> )	<A> で文字列 <B> の文字を変換する
<A> . translate ( <B> )	<A> を変換表 <B> で変換する
<B> . translate ( <A> )	<B> を変換表 <A> で変換する
<A> . translate ( <B> )	<B> で <A> 文字列の文字を翻訳する
<B> . translate ( <A> )	<A> で <B> 文字列の文字を翻訳する
<A> . translate ( <B> )	文字列 <A> を <B> 変換表で変換する
<B> . translate ( <A> )	文字列 <B> を <A> 変換表で変換する
<A> . translate ( <B> )	<B> で <A> 文字列の文字を変換する
<B> . translate ( <A> )	<A> で <B> 文字列の文字を変換する
<A> . translate ( <B> )	<A> を <B> で翻訳する
<B> . translate ( <A> )	<B> を <A> で翻訳する
<A> . translate ( <B> )	<B> で <A> 文字列を翻訳する
<B> . translate ( <A> )	<A> で <B> 文字列を翻訳する
<A> . zfill ( <B> )	文字列 <A> の大きさを <B> にする
<B> . zfill ( <A> )	文字列 <B> の大きさを <A> にする
<A> . zfill ( <B> )	文字列 <A> の長さを <B> にする
<B> . zfill ( <A> )	文字列 <B> の長さを <A> にする
<A> . zfill ( <B> )	<A> の長さを <B> にする
<B> . zfill ( <A> )	<B> の長さを <A> にする
<A> . zfill ( <B> )	文字列 <A> のサイズを <B> にする
<B> . zfill ( <A> )	文字列 <B> のサイズを <A> にする
<A> . zfill ( <B> )	<A> のサイズを <B> にする
<B> . zfill ( <A> )	<B> のサイズを <A> にする
<A> . zfill ( <B> )	文字列 <A> を長さ <B> になるように '0' 文字で埋める
<B> . zfill ( <A> )	文字列 <B> を長さ <A> になるように '0' 文字で埋める
<A> . zfill ( <B> )	文字列 <A> を幅 <B> になるように '0' 文字で埋める
<B> . zfill ( <A> )	文字列 <B> を幅 <A> になるように '0' 文字で埋める
<A> . zfill ( <B> )	長さ <B> になるように <A> を '0' 文字で埋める
<B> . zfill ( <A> )	長さ <A> になるように <B> を '0' 文字で埋める
<A> . zfill ( <B> )	幅 <B> になるように文字列 <A> を '0' 文字で埋める
<B> . zfill ( <A> )	幅 <A> になるように文字列 <B> を '0' 文字で埋める
<A> . zfill ( <B> )	長さ <B> になるように文字列 <A> を '0' 文字で埋める
<B> . zfill ( <A> )	長さ <A> になるように文字列 <B> を '0' 文字で埋める
<A> . zfill ( <B> )	<A> を幅 <B> になるように '0' 文字で埋める
<B> . zfill ( <A> )	<B> を幅 <A> になるように '0' 文字で埋める
<A> . zfill ( <B> )	幅 <B> になるように <A> を '0' 文字で埋める
<B> . zfill ( <A> )	幅 <A> になるように <B> を '0' 文字で埋める
random . random ( )	乱数を生成する
random . choice ( <A> )	リスト <A> からひとつランダムに選ぶ
random . choice ( <A> )	<A> からひとつランダムに選ぶ
random . shuffle ( <A> )	リスト <A> をランダムにシャッフルする
random . shuffle ( <A> )	リスト <A> をシャッフルする
random . shuffle ( <A> )	<A> リストをシャッフルする
random . shuffle ( <A> )	<A> をランダムにシャッフルする
random . shuffle ( <A> )	<A> をシャッフルする
random . shuffle ( <A> )	ランダムにリスト <A> をシャッフルする
random . sample ( <A> )	リスト <A> からサンプルを選ぶ
random . sample ( <A> )	<A> からサンプルを選ぶ
random . sample ( <A> , <B> )	リスト <A> から <B> 個、サンプルを選ぶ
random . sample ( <B> , <A> )	リスト <B> から <A> 個、サンプルを選ぶ
random . sample ( <A> , <B> )	<A> から <B> 個、サンプリングする
random . sample ( <B> , <A> )	<B> から <A> 個、サンプリングする
random . sample ( <A> , <B> )	リスト <A> から <B> 個、サンプリングする
random . sample ( <B> , <A> )	リスト <B> から <A> 個、サンプリングする
random . sample ( <A> , <B> )	<A> から <B> 個、サンプルを選ぶ
random . sample ( <B> , <A> )	<B> から <A> 個、サンプルを選ぶ
random . sample ( <A> , <B> )	<A> から <B> 個、ランダムに選ぶ
random . sample ( <B> , <A> )	<B> から <A> 個、ランダムに選ぶ
random . sample ( <A> , <B> )	リスト <A> から <B> 個、ランダムに選ぶ
random . sample ( <B> , <A> )	リスト <B> から <A> 個、ランダムに選ぶ
random . randrange ( <A> )	0 から <A> 未満までのランダムな整数
random . randrange ( <A> )	0 から <A> 未満までのランダム整数
random . randrange ( <A> , <B> )	<A> から <B> までのランダムな整数
random . randrange ( <B> , <A> )	<B> から <A> までのランダムな整数
random . randrange ( <A> , <B> )	<A> から <B> までの整数乱数
random . randrange ( <B> , <A> )	<B> から <A> までの整数乱数
random . randrange ( <A> , <B> )	<A> から <B> 未満までのランダム整数
random . randrange ( <B> , <A> )	<B> から <A> 未満までのランダム整数
random . randrange ( <A> , <B> )	<A> から <B> までのランダム整数
random . randrange ( <B> , <A> )	<B> から <A> までのランダム整数
random . randrange ( <A> , <B> )	<A> から <B> 未満までのランダムな整数
random . randrange ( <B> , <A> )	<B> から <A> 未満までのランダムな整数
random . randrange ( <A> , <B> )	<A> から <B> 未満までの整数乱数
random . randrange ( <B> , <A> )	<B> から <A> 未満までの整数乱数
random . randint ( <A> , <B> )	<A> から <B> までの整数乱数
random . randint ( <B> , <A> )	<B> から <A> までの整数乱数
random . randint ( <A> , <B> )	<A> から <B> までのランダムな整数
random . randint ( <B> , <A> )	<B> から <A> までのランダムな整数
random . randint ( <A> , <B> )	<A> から <B> までのランダム整数
random . randint ( <B> , <A> )	<B> から <A> までのランダム整数
random . seed ( )	乱数シードを初期化する
random . seed ( <A> )	乱数シードを <A> で初期化する
random . seed ( <A> )	乱数生成を <A> で初期化する
math . ceil ( <A> )	<A> の切り上げ整数値
math . comb ( <A> )	<A> のコンビネーション
math . copysign ( <A> , <B> )	<A> の符号を <B> と同じにする
math . copysign ( <B> , <A> )	<B> の符号を <A> と同じにする
math . fabs ( <A> )	浮動小数点数 <A> の絶対値
math . factorial ( <A> )	<A> の階乗
math . floor ( <A> )	<A> の切り捨て整数値
math . frexp ( <A> ) [ 0 ]	<A> の仮数部
math . frexp ( <A> ) [ 1 ]	<A> の指数部
math . gcd ( <A> , <B> )	<A> と <B> の最大公約数
math . gcd ( <B> , <A> )	<B> と <A> の最大公約数
math . lcm ( <A> , <B> )	<A> と <B> の最小公倍数
math . lcm ( <B> , <A> )	<B> と <A> の最小公倍数
math . isclose ( <A> , <B> )	<A> と <B> が近いか否か
math . isclose ( <B> , <A> )	<B> と <A> が近いか否か
if math . isclose ( <A> , <B> ) :	<A> と <B> が近いとき
if math . isclose ( <B> , <A> ) :	<B> と <A> が近いとき
math . isclose ( <A> , <B> )	<A> と <B> がほぼ等しいか
math . isclose ( <B> , <A> )	<B> と <A> がほぼ等しいか
if math . isclose ( <A> , <B> ) :	<A> と <B> がほぼ等しい場合
if math . isclose ( <B> , <A> ) :	<B> と <A> がほぼ等しい場合
math . isclose ( <A> , <B> )	<A> と <B> が等しいとみなせるか
math . isclose ( <B> , <A> )	<B> と <A> が等しいとみなせるか
if math . isclose ( <A> , <B> ) :	もし <A> と <B> が等しいとみなせるならば
if math . isclose ( <B> , <A> ) :	もし <B> と <A> が等しいとみなせるならば
math . isclose ( <A> , <B> )	<A> と <B> が十分に近いかどうか
math . isclose ( <B> , <A> )	<B> と <A> が十分に近いかどうか
if math . isclose ( <A> , <B> ) :	<A> と <B> が十分に近いとき
if math . isclose ( <B> , <A> ) :	<B> と <A> が十分に近いとき
math . isclose ( <A> , <B> )	<A> と <B> が近似できるかどうか
math . isclose ( <B> , <A> )	<B> と <A> が近似できるかどうか
if math . isclose ( <A> , <B> ) :	<A> と <B> が近似できる場合
if math . isclose ( <B> , <A> ) :	<B> と <A> が近似できる場合
not math . isclose ( <A> , <B> )	<A> と <B> が近くないか
not math . isclose ( <B> , <A> )	<B> と <A> が近くないか
not math . isclose ( <A> , <B> )	<A> と <B> がほぼ等しくないか
not math . isclose ( <B> , <A> )	<B> と <A> がほぼ等しくないか
not math . isclose ( <A> , <B> )	<A> と <B> が等しいとみなせないか
not math . isclose ( <B> , <A> )	<B> と <A> が等しいとみなせないか
not math . isclose ( <A> , <B> )	<A> と <B> が十分に近くないかどうか
not math . isclose ( <B> , <A> )	<B> と <A> が十分に近くないかどうか
not math . isclose ( <A> , <B> )	<A> と <B> が近似できないかどうか
not math . isclose ( <B> , <A> )	<B> と <A> が近似できないかどうか
if math . isclose ( <A> , <B> ) :	もし <A> と <B> が近いとき
if math . isclose ( <B> , <A> ) :	もし <B> と <A> が近いとき
if math . isclose ( <A> , <B> ) :	もし <A> と <B> が近ければ
if math . isclose ( <B> , <A> ) :	もし <B> と <A> が近ければ
if math . isclose ( <A> , <B> ) :	<A> と <B> が近かったとき
if math . isclose ( <B> , <A> ) :	<B> と <A> が近かったとき
if math . isclose ( <A> , <B> ) :	もし <A> と <B> がほぼ等しい場合
if math . isclose ( <B> , <A> ) :	もし <B> と <A> がほぼ等しい場合
if math . isclose ( <A> , <B> ) :	<A> と <B> がほぼ等しければ
if math . isclose ( <B> , <A> ) :	<B> と <A> がほぼ等しければ
if math . isclose ( <A> , <B> ) :	もし <A> と <B> がほぼ等しかったら
if math . isclose ( <B> , <A> ) :	もし <B> と <A> がほぼ等しかったら
if math . isclose ( <A> , <B> ) :	もし <A> と <B> が等しいとみなせれば
if math . isclose ( <B> , <A> ) :	もし <B> と <A> が等しいとみなせれば
if math . isclose ( <A> , <B> ) :	もし <A> と <B> が十分に近ければ
if math . isclose ( <B> , <A> ) :	もし <B> と <A> が十分に近ければ
if math . isclose ( <A> , <B> ) :	<A> と <B> が十分に近かったなら
if math . isclose ( <B> , <A> ) :	<B> と <A> が十分に近かったなら
if math . isclose ( <A> , <B> ) :	もし <A> と <B> が近似できれば
if math . isclose ( <B> , <A> ) :	もし <B> と <A> が近似できれば
if math . isclose ( <A> , <B> ) :	<A> と <B> が近似できたなら
if math . isclose ( <B> , <A> ) :	<B> と <A> が近似できたなら
if not math . isclose ( <A> , <B> ) :	<A> と <B> が近くないとき
if not math . isclose ( <B> , <A> ) :	<B> と <A> が近くないとき
if not math . isclose ( <A> , <B> ) :	<A> と <B> が近くなければ
if not math . isclose ( <B> , <A> ) :	<B> と <A> が近くなければ
if not math . isclose ( <A> , <B> ) :	もし <A> と <B> がほぼ等しくない場合
if not math . isclose ( <B> , <A> ) :	もし <B> と <A> がほぼ等しくない場合
if not math . isclose ( <A> , <B> ) :	もし <A> と <B> がほぼ等しくなければ
if not math . isclose ( <B> , <A> ) :	もし <B> と <A> がほぼ等しくなければ
if not math . isclose ( <A> , <B> ) :	<A> と <B> がほぼ等しくなかった場合
if not math . isclose ( <B> , <A> ) :	<B> と <A> がほぼ等しくなかった場合
if not math . isclose ( <A> , <B> ) :	もし <A> と <B> が等しいとみなせない場合
if not math . isclose ( <B> , <A> ) :	もし <B> と <A> が等しいとみなせない場合
if not math . isclose ( <A> , <B> ) :	<A> と <B> が等しいとみなせなければ
if not math . isclose ( <B> , <A> ) :	<B> と <A> が等しいとみなせなければ
if not math . isclose ( <A> , <B> ) :	もし <A> と <B> が近似できないならば
if not math . isclose ( <B> , <A> ) :	もし <B> と <A> が近似できないならば
if not math . isclose ( <A> , <B> ) :	もし <A> と <B> が近似できなければ
if not math . isclose ( <B> , <A> ) :	もし <B> と <A> が近似できなければ
if not math . isclose ( <A> , <B> ) :	<A> と <B> が近似できなかったとき
if not math . isclose ( <B> , <A> ) :	<B> と <A> が近似できなかったとき
while math . isclose ( <A> , <B> ) :	<A> と <B> が近い間
while math . isclose ( <B> , <A> ) :	<B> と <A> が近い間
while math . isclose ( <A> , <B> ) :	<A> と <B> が等しいとみなせる間
while math . isclose ( <B> , <A> ) :	<B> と <A> が等しいとみなせる間
while math . isclose ( <A> , <B> ) :	<A> と <B> が近似できる間
while math . isclose ( <B> , <A> ) :	<B> と <A> が近似できる間
while not math . isclose ( <A> , <B> ) :	<A> と <B> がほぼ等しくない間
while not math . isclose ( <B> , <A> ) :	<B> と <A> がほぼ等しくない間
while not math . isclose ( <A> , <B> ) :	<A> と <B> が等しいとみなせない間
while not math . isclose ( <B> , <A> ) :	<B> と <A> が等しいとみなせない間
while not math . isclose ( <A> , <B> ) :	<A> と <B> が近似できない間
while not math . isclose ( <B> , <A> ) :	<B> と <A> が近似できない間
math . isclose ( <A> , <B> )	<A> が <B> に近いか否か
math . isclose ( <B> , <A> )	<B> が <A> に近いか否か
if math . isclose ( <A> , <B> ) :	<A> が <B> に近い場合
if math . isclose ( <B> , <A> ) :	<B> が <A> に近い場合
math . isclose ( <A> , <B> )	<A> が <B> に近似できるか
math . isclose ( <B> , <A> )	<B> が <A> に近似できるか
if math . isclose ( <A> , <B> ) :	もし <A> が <B> に近似できるならば
if math . isclose ( <B> , <A> ) :	もし <B> が <A> に近似できるならば
math . isclose ( <A> , <B> )	<A> が <B> にほぼ等しいか否か
math . isclose ( <B> , <A> )	<B> が <A> にほぼ等しいか否か
if math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しいとき
if math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しいとき
math . isclose ( <A> , <B> )	<A> が <B> に等しいとみなせるか否か
math . isclose ( <B> , <A> )	<B> が <A> に等しいとみなせるか否か
if math . isclose ( <A> , <B> ) :	<A> が <B> に等しいとみなせる場合
if math . isclose ( <B> , <A> ) :	<B> が <A> に等しいとみなせる場合
math . isclose ( <A> , <B> )	<A> が <B> に十分に近いか否か
math . isclose ( <B> , <A> )	<B> が <A> に十分に近いか否か
if math . isclose ( <A> , <B> ) :	<A> が <B> に十分に近いとき
if math . isclose ( <B> , <A> ) :	<B> が <A> に十分に近いとき
not math . isclose ( <A> , <B> )	<A> が <B> に近くないか
not math . isclose ( <B> , <A> )	<B> が <A> に近くないか
not math . isclose ( <A> , <B> )	<A> が <B> に近似できないか
not math . isclose ( <B> , <A> )	<B> が <A> に近似できないか
not math . isclose ( <A> , <B> )	<A> が <B> にほぼ等しくないかどうか
not math . isclose ( <B> , <A> )	<B> が <A> にほぼ等しくないかどうか
not math . isclose ( <A> , <B> )	<A> が <B> に等しいとみなせないか
not math . isclose ( <B> , <A> )	<B> が <A> に等しいとみなせないか
not math . isclose ( <A> , <B> )	<A> が <B> に十分に近くないかどうか
not math . isclose ( <B> , <A> )	<B> が <A> に十分に近くないかどうか
if math . isclose ( <A> , <B> ) :	<A> が <B> に近似できるとき
if math . isclose ( <B> , <A> ) :	<B> が <A> に近似できるとき
if math . isclose ( <A> , <B> ) :	<A> が <B> に近似できた場合
if math . isclose ( <B> , <A> ) :	<B> が <A> に近似できた場合
if math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しいとき
if math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しいとき
if math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しければ
if math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しければ
if math . isclose ( <A> , <B> ) :	もし <A> が <B> にほぼ等しかったら
if math . isclose ( <B> , <A> ) :	もし <B> が <A> にほぼ等しかったら
if math . isclose ( <A> , <B> ) :	もし <A> が <B> に等しいとみなせれば
if math . isclose ( <B> , <A> ) :	もし <B> が <A> に等しいとみなせれば
if math . isclose ( <A> , <B> ) :	もし <A> が <B> に十分に近かった場合
if math . isclose ( <B> , <A> ) :	もし <B> が <A> に十分に近かった場合
if not math . isclose ( <A> , <B> ) :	もし <A> が <B> に近くない場合
if not math . isclose ( <B> , <A> ) :	もし <B> が <A> に近くない場合
if not math . isclose ( <A> , <B> ) :	<A> が <B> に近くなければ
if not math . isclose ( <B> , <A> ) :	<B> が <A> に近くなければ
if not math . isclose ( <A> , <B> ) :	<A> が <B> に近くなかった場合
if not math . isclose ( <B> , <A> ) :	<B> が <A> に近くなかった場合
if not math . isclose ( <A> , <B> ) :	<A> が <B> に近似できないならば
if not math . isclose ( <B> , <A> ) :	<B> が <A> に近似できないならば
if not math . isclose ( <A> , <B> ) :	<A> が <B> に近似できなければ
if not math . isclose ( <B> , <A> ) :	<B> が <A> に近似できなければ
if not math . isclose ( <A> , <B> ) :	<A> が <B> に近似できなかったら
if not math . isclose ( <B> , <A> ) :	<B> が <A> に近似できなかったら
if not math . isclose ( <A> , <B> ) :	もし <A> が <B> にほぼ等しくない場合
if not math . isclose ( <B> , <A> ) :	もし <B> が <A> にほぼ等しくない場合
if not math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しくなければ
if not math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しくなければ
if not math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しくなかったならば
if not math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しくなかったならば
if not math . isclose ( <A> , <B> ) :	<A> が <B> に等しいとみなせなければ
if not math . isclose ( <B> , <A> ) :	<B> が <A> に等しいとみなせなければ
if not math . isclose ( <A> , <B> ) :	もし <A> が <B> に等しいとみなせなかったならば
if not math . isclose ( <B> , <A> ) :	もし <B> が <A> に等しいとみなせなかったならば
if not math . isclose ( <A> , <B> ) :	<A> が <B> に十分に近くなかったならば
if not math . isclose ( <B> , <A> ) :	<B> が <A> に十分に近くなかったならば
while math . isclose ( <A> , <B> ) :	<A> が <B> に近い間
while math . isclose ( <B> , <A> ) :	<B> が <A> に近い間
while math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しい間
while math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しい間
while not math . isclose ( <A> , <B> ) :	<A> が <B> に近くない間
while not math . isclose ( <B> , <A> ) :	<B> が <A> に近くない間
while not math . isclose ( <A> , <B> ) :	<A> が <B> にほぼ等しくない間
while not math . isclose ( <B> , <A> ) :	<B> が <A> にほぼ等しくない間
while not math . isclose ( <A> , <B> ) :	<A> が <B> に等しいとみなせない間
while not math . isclose ( <B> , <A> ) :	<B> が <A> に等しいとみなせない間
math . isfinite ( <A> )	<A> が有限か否か
if math . isfinite ( <A> ) :	<A> が有限のとき
not math . isfinite ( <A> )	<A> が有限でないかどうか
if math . isfinite ( <A> ) :	もし <A> が有限とき
if not math . isfinite ( <A> ) :	<A> が有限でないとき
while math . isfinite ( <A> ) :	<A> が有限間
while not math . isfinite ( <A> ) :	<A> が有限でない間
math . isinf ( <A> )	<A> が無限大か
if math . isinf ( <A> ) :	<A> が無限大ならば
not math . isinf ( <A> )	<A> が無限大でないか
if math . isinf ( <A> ) :	もし <A> が無限大とき
if not math . isinf ( <A> ) :	もし <A> が無限大でないとき
while math . isinf ( <A> ) :	<A> が無限大間
math . isnan ( <A> )	<A> が NaN かどうか
if math . isnan ( <A> ) :	<A> が NaN の場合
math . isnan ( <A> )	<A> が非数か否か
if math . isnan ( <A> ) :	<A> が非数の場合
not math . isnan ( <A> )	<A> が NaN でないか
not math . isnan ( <A> )	<A> が非数でないか
if math . isnan ( <A> ) :	もし <A> が NaN 場合
if math . isnan ( <A> ) :	もし <A> が非数場合
if not math . isnan ( <A> ) :	もし <A> が NaN でないならば
if not math . isnan ( <A> ) :	もし <A> が非数でないならば
while math . isnan ( <A> ) :	<A> が NaN 間
while math . isnan ( <A> ) :	<A> が非数間
while not math . isnan ( <A> ) :	<A> が NaN でない間
math . modf ( <A> )	<A> の小数部と整数部
math . modf ( <A> ) [ 0 ]	<A> の小数部
math . modf ( <A> ) [ 1 ]	<A> の整数部
math . remainder ( <A> , <B> )	<A> を <B> で割った余り
math . remainder ( <B> , <A> )	<B> を <A> で割った余り
math . remainder ( <A> , <B> )	<A> を <B> で割った剰余
math . remainder ( <B> , <A> )	<B> を <A> で割った剰余
math . remainder ( <A> , <B> )	<A> を <B> で割った余りを表示する
math . remainder ( <B> , <A> )	<B> を <A> で割った余りを表示する
math . remainder ( <A> , <B> )	<A> を <B> で割った剰余を表示する
math . remainder ( <B> , <A> )	<B> を <A> で割った剰余を表示する
math . exp ( <A> )	e の <A> 乗
math . exp ( <A> )	e の <A> 乗を見る
math . log ( <A> )	<A> の自然対数
math . log ( <A> )	<A> の自然対数を見る
math . log ( <A> , <B> )	<B> を底とする <A> の対数
math . log ( <B> , <A> )	<A> を底とする <B> の対数
math . log ( <A> , <B> )	<B> を底とする <A> の対数を確認する
math . log ( <B> , <A> )	<A> を底とする <B> の対数を確認する
math . log2 ( <A> )	2 を底とする <A> の対数
math . log2 ( <A> )	2 を底とする <A> の対数を表示する
math . log10 ( <A> )	<A> の常用対数
math . log10 ( <A> )	<A> の常用対数を調べる
math . sqrt ( <A> )	<A> の平方根
math . sqrt ( <A> )	<A> の平方根を表示する
math . cos ( <A> )	<A> のコサイン
math . cos ( <A> )	<A> の余弦
math . cos ( <A> )	<A> のコサインを確認する
math . cos ( <A> )	<A> の余弦を見る
math . dist ( <A> )	<A> のユークリッド距離
math . dist ( <A> )	<A> のユークリッド距離を見る
math . hypot ( <A> , <B> )	<A> と <B> のノルム
math . hypot ( <B> , <A> )	<B> と <A> のノルム
math . hypot ( <A> , <B> )	<A> と <B> のノルムを見る
math . hypot ( <B> , <A> )	<B> と <A> のノルムを見る
math . sin ( <A> )	<A> のサイン
math . sin ( <A> )	<A> の正弦
math . sin ( <A> )	<A> のサインを表示する
math . sin ( <A> )	<A> の正弦を表示する
math . tan ( <A> )	<A> の正接
math . tan ( <A> )	<A> のタンジェント
math . tan ( <A> )	<A> の正接を調べる
math . tan ( <A> )	<A> のタンジェントを表示する
math . degrees ( <A> )	<A> の角度
math . degrees ( <A> )	<A> の角度を調べる
math . radians ( <A> )	<A> のラジアン
math . radians ( <A> )	<A> のラジアンを見る
math . acosh ( <A> )	<A> の逆双曲線余弦
math . acosh ( <A> )	<A> の逆双曲線余弦を調べる
math . asinh ( <A> )	<A> の逆双曲線正弦
math . asinh ( <A> )	<A> の逆双曲線正弦を調べる
math . atanh ( <A> )	<A> の逆双曲線正接
math . atanh ( <A> )	<A> の逆双曲線正接を調べる
math . cosh ( <A> )	<A> の双曲線余弦
math . cosh ( <A> )	<A> の双曲線余弦を確認する
math . sinh ( <A> )	<A> の双曲線正弦
math . sinh ( <A> )	<A> の双曲線正弦を見る
math . tanh ( <A> )	<A> の双曲線正接
math . tanh ( <A> )	<A> の双曲線正接を表示する
math . gamma ( <A> )	<A> のガンマ関数
math . gamma ( <A> )	<A> のガンマ関数を確認する
math . lgamma ( <A> )	<A> のガンマ関数の絶対値の自然対数
math . lgamma ( <A> )	<A> のガンマ関数の絶対値の自然対数を見る
math . pi	円周率
math . pi	π
math . e	ネイピア数
math . e	自然対数の底
math . inf	無限大
math . inf	∞
math . inf	無限大を調べる
math . inf	∞を確認する
math . nan	NaN
math . nan	数でない
math . nan	非数
re . search ( <A> , <B> )	文字列 <B> に <A> 正規表現がマッチする最初の位置
re . search ( <B> , <A> )	文字列 <A> に <B> 正規表現がマッチする最初の位置
re . search ( <A> , <B> )	<B> に正規表現 <A> がマッチする最初の位置
re . search ( <B> , <A> )	<A> に正規表現 <B> がマッチする最初の位置
re . search ( <A> , <B> )	<B> に <A> がマッチする最初の位置
re . search ( <B> , <A> )	<A> に <B> がマッチする最初の位置
re . search ( <A> , <B> )	<B> に <A> 正規表現がマッチする最初の位置
re . search ( <B> , <A> )	<A> に <B> 正規表現がマッチする最初の位置
re . search ( <A> , <B> )	文字列 <B> に正規表現 <A> がマッチする最初の位置
re . search ( <B> , <A> )	文字列 <A> に正規表現 <B> がマッチする最初の位置
re . match ( <A> , <B> )	<B> に <A> 正規表現がマッチするかどうか
re . match ( <B> , <A> )	<A> に <B> 正規表現がマッチするかどうか
if re . match ( <A> , <B> ) :	<B> に <A> 正規表現がマッチする場合
if re . match ( <B> , <A> ) :	<A> に <B> 正規表現がマッチする場合
re . match ( <A> , <B> )	正規表現 <A> が <B> 文字列にマッチするかどうか
re . match ( <B> , <A> )	正規表現 <B> が <A> 文字列にマッチするかどうか
if re . match ( <A> , <B> ) :	もし正規表現 <A> が <B> 文字列にマッチするならば
if re . match ( <B> , <A> ) :	もし正規表現 <B> が <A> 文字列にマッチするならば
re . match ( <A> , <B> )	文字列 <B> に正規表現 <A> がマッチするか
re . match ( <B> , <A> )	文字列 <A> に正規表現 <B> がマッチするか
if re . match ( <A> , <B> ) :	文字列 <B> に正規表現 <A> がマッチする場合
if re . match ( <B> , <A> ) :	文字列 <A> に正規表現 <B> がマッチする場合
re . match ( <A> , <B> )	<A> が <B> にマッチするか
re . match ( <B> , <A> )	<B> が <A> にマッチするか
if re . match ( <A> , <B> ) :	<A> が <B> にマッチするならば
if re . match ( <B> , <A> ) :	<B> が <A> にマッチするならば
re . match ( <A> , <B> )	<B> に正規表現 <A> がマッチするか
re . match ( <B> , <A> )	<A> に正規表現 <B> がマッチするか
if re . match ( <A> , <B> ) :	<B> に正規表現 <A> がマッチするとき
if re . match ( <B> , <A> ) :	<A> に正規表現 <B> がマッチするとき
re . match ( <A> , <B> )	<B> に <A> がマッチするか
re . match ( <B> , <A> )	<A> に <B> がマッチするか
if re . match ( <A> , <B> ) :	<B> に <A> がマッチする場合
if re . match ( <B> , <A> ) :	<A> に <B> がマッチする場合
re . match ( <A> , <B> )	文字列 <B> に <A> 正規表現がマッチするか否か
re . match ( <B> , <A> )	文字列 <A> に <B> 正規表現がマッチするか否か
if re . match ( <A> , <B> ) :	もし文字列 <B> に <A> 正規表現がマッチするならば
if re . match ( <B> , <A> ) :	もし文字列 <A> に <B> 正規表現がマッチするならば
re . match ( <A> , <B> )	正規表現 <A> が文字列 <B> にマッチするか
re . match ( <B> , <A> )	正規表現 <B> が文字列 <A> にマッチするか
if re . match ( <A> , <B> ) :	正規表現 <A> が文字列 <B> にマッチする場合
if re . match ( <B> , <A> ) :	正規表現 <B> が文字列 <A> にマッチする場合
not re . match ( <A> , <B> )	<B> に <A> 正規表現がマッチしないかどうか
not re . match ( <B> , <A> )	<A> に <B> 正規表現がマッチしないかどうか
not re . match ( <A> , <B> )	正規表現 <A> が <B> 文字列にマッチしないか
not re . match ( <B> , <A> )	正規表現 <B> が <A> 文字列にマッチしないか
not re . match ( <A> , <B> )	文字列 <B> に正規表現 <A> がマッチしないか
not re . match ( <B> , <A> )	文字列 <A> に正規表現 <B> がマッチしないか
not re . match ( <A> , <B> )	<A> が <B> にマッチしないか
not re . match ( <B> , <A> )	<B> が <A> にマッチしないか
not re . match ( <A> , <B> )	<B> に正規表現 <A> がマッチしないか
not re . match ( <B> , <A> )	<A> に正規表現 <B> がマッチしないか
not re . match ( <A> , <B> )	<B> に <A> がマッチしないか
not re . match ( <B> , <A> )	<A> に <B> がマッチしないか
not re . match ( <A> , <B> )	文字列 <B> に <A> 正規表現がマッチしないかどうか
not re . match ( <B> , <A> )	文字列 <A> に <B> 正規表現がマッチしないかどうか
not re . match ( <A> , <B> )	正規表現 <A> が文字列 <B> にマッチしないか
not re . match ( <B> , <A> )	正規表現 <B> が文字列 <A> にマッチしないか
if re . match ( <A> , <B> ) :	<B> に <A> 正規表現がマッチするならば
if re . match ( <B> , <A> ) :	<A> に <B> 正規表現がマッチするならば
if re . match ( <A> , <B> ) :	<B> に <A> 正規表現がマッチしたら
if re . match ( <B> , <A> ) :	<A> に <B> 正規表現がマッチしたら
if re . match ( <A> , <B> ) :	もし正規表現 <A> が <B> 文字列にマッチするならば
if re . match ( <B> , <A> ) :	もし正規表現 <B> が <A> 文字列にマッチするならば
if re . match ( <A> , <B> ) :	正規表現 <A> が <B> 文字列にマッチしたとき
if re . match ( <B> , <A> ) :	正規表現 <B> が <A> 文字列にマッチしたとき
if re . match ( <A> , <B> ) :	もし文字列 <B> に正規表現 <A> がマッチするならば
if re . match ( <B> , <A> ) :	もし文字列 <A> に正規表現 <B> がマッチするならば
if re . match ( <A> , <B> ) :	文字列 <B> に正規表現 <A> がマッチすれば
if re . match ( <B> , <A> ) :	文字列 <A> に正規表現 <B> がマッチすれば
if re . match ( <A> , <B> ) :	<A> が <B> にマッチした場合
if re . match ( <B> , <A> ) :	<B> が <A> にマッチした場合
if re . match ( <A> , <B> ) :	もし <B> に正規表現 <A> がマッチすれば
if re . match ( <B> , <A> ) :	もし <A> に正規表現 <B> がマッチすれば
if re . match ( <A> , <B> ) :	<B> に正規表現 <A> がマッチしたなら
if re . match ( <B> , <A> ) :	<A> に正規表現 <B> がマッチしたなら
if re . match ( <A> , <B> ) :	もし <B> に <A> がマッチするならば
if re . match ( <B> , <A> ) :	もし <A> に <B> がマッチするならば
if re . match ( <A> , <B> ) :	<B> に <A> がマッチすれば
if re . match ( <B> , <A> ) :	<A> に <B> がマッチすれば
if re . match ( <A> , <B> ) :	<B> に <A> がマッチしたら
if re . match ( <B> , <A> ) :	<A> に <B> がマッチしたら
if re . match ( <A> , <B> ) :	文字列 <B> に <A> 正規表現がマッチする場合
if re . match ( <B> , <A> ) :	文字列 <A> に <B> 正規表現がマッチする場合
if re . match ( <A> , <B> ) :	もし文字列 <B> に <A> 正規表現がマッチすれば
if re . match ( <B> , <A> ) :	もし文字列 <A> に <B> 正規表現がマッチすれば
if re . match ( <A> , <B> ) :	もし文字列 <B> に <A> 正規表現がマッチしたとき
if re . match ( <B> , <A> ) :	もし文字列 <A> に <B> 正規表現がマッチしたとき
if re . match ( <A> , <B> ) :	もし正規表現 <A> が文字列 <B> にマッチする場合
if re . match ( <B> , <A> ) :	もし正規表現 <B> が文字列 <A> にマッチする場合
if re . match ( <A> , <B> ) :	正規表現 <A> が文字列 <B> にマッチすれば
if re . match ( <B> , <A> ) :	正規表現 <B> が文字列 <A> にマッチすれば
if not re . match ( <A> , <B> ) :	<B> に <A> 正規表現がマッチしなければ
if not re . match ( <B> , <A> ) :	<A> に <B> 正規表現がマッチしなければ
if not re . match ( <A> , <B> ) :	もし <B> に <A> 正規表現がマッチしなかったとき
if not re . match ( <B> , <A> ) :	もし <A> に <B> 正規表現がマッチしなかったとき
if not re . match ( <A> , <B> ) :	正規表現 <A> が <B> 文字列にマッチしないとき
if not re . match ( <B> , <A> ) :	正規表現 <B> が <A> 文字列にマッチしないとき
if not re . match ( <A> , <B> ) :	正規表現 <A> が <B> 文字列にマッチしなければ
if not re . match ( <B> , <A> ) :	正規表現 <B> が <A> 文字列にマッチしなければ
if not re . match ( <A> , <B> ) :	正規表現 <A> が <B> 文字列にマッチしなかったなら
if not re . match ( <B> , <A> ) :	正規表現 <B> が <A> 文字列にマッチしなかったなら
if not re . match ( <A> , <B> ) :	もし文字列 <B> に正規表現 <A> がマッチしない場合
if not re . match ( <B> , <A> ) :	もし文字列 <A> に正規表現 <B> がマッチしない場合
if not re . match ( <A> , <B> ) :	もし <A> が <B> にマッチしなかった場合
if not re . match ( <B> , <A> ) :	もし <B> が <A> にマッチしなかった場合
if not re . match ( <A> , <B> ) :	<B> に正規表現 <A> がマッチしない場合
if not re . match ( <B> , <A> ) :	<A> に正規表現 <B> がマッチしない場合
if not re . match ( <A> , <B> ) :	<B> に正規表現 <A> がマッチしなかったならば
if not re . match ( <B> , <A> ) :	<A> に正規表現 <B> がマッチしなかったならば
if not re . match ( <A> , <B> ) :	もし <B> に <A> がマッチしないならば
if not re . match ( <B> , <A> ) :	もし <A> に <B> がマッチしないならば
if not re . match ( <A> , <B> ) :	文字列 <B> に <A> 正規表現がマッチしないとき
if not re . match ( <B> , <A> ) :	文字列 <A> に <B> 正規表現がマッチしないとき
if not re . match ( <A> , <B> ) :	もし文字列 <B> に <A> 正規表現がマッチしなければ
if not re . match ( <B> , <A> ) :	もし文字列 <A> に <B> 正規表現がマッチしなければ
if not re . match ( <A> , <B> ) :	もし文字列 <B> に <A> 正規表現がマッチしなかった場合
if not re . match ( <B> , <A> ) :	もし文字列 <A> に <B> 正規表現がマッチしなかった場合
if not re . match ( <A> , <B> ) :	もし正規表現 <A> が文字列 <B> にマッチしなければ
if not re . match ( <B> , <A> ) :	もし正規表現 <B> が文字列 <A> にマッチしなければ
if not re . match ( <A> , <B> ) :	正規表現 <A> が文字列 <B> にマッチしなかったならば
if not re . match ( <B> , <A> ) :	正規表現 <B> が文字列 <A> にマッチしなかったならば
re . fullmatch ( <A> , <B> )	<A> が <B> 全体にマッチするか
re . fullmatch ( <B> , <A> )	<B> が <A> 全体にマッチするか
if re . fullmatch ( <A> , <B> ) :	もし <A> が <B> 全体にマッチするならば
if re . fullmatch ( <B> , <A> ) :	もし <B> が <A> 全体にマッチするならば
re . fullmatch ( <A> , <B> )	文字列 <B> 全体に正規表現 <A> がマッチするかどうか
re . fullmatch ( <B> , <A> )	文字列 <A> 全体に正規表現 <B> がマッチするかどうか
if re . fullmatch ( <A> , <B> ) :	文字列 <B> 全体に正規表現 <A> がマッチするとき
if re . fullmatch ( <B> , <A> ) :	文字列 <A> 全体に正規表現 <B> がマッチするとき
re . fullmatch ( <A> , <B> )	<B> 全体に正規表現 <A> がマッチするか
re . fullmatch ( <B> , <A> )	<A> 全体に正規表現 <B> がマッチするか
if re . fullmatch ( <A> , <B> ) :	もし <B> 全体に正規表現 <A> がマッチするならば
if re . fullmatch ( <B> , <A> ) :	もし <A> 全体に正規表現 <B> がマッチするならば
re . fullmatch ( <A> , <B> )	正規表現 <A> が <B> 文字列全体にマッチするかどうか
re . fullmatch ( <B> , <A> )	正規表現 <B> が <A> 文字列全体にマッチするかどうか
if re . fullmatch ( <A> , <B> ) :	正規表現 <A> が <B> 文字列全体にマッチするとき
if re . fullmatch ( <B> , <A> ) :	正規表現 <B> が <A> 文字列全体にマッチするとき
re . fullmatch ( <A> , <B> )	正規表現 <A> が <B> 全体にマッチするか
re . fullmatch ( <B> , <A> )	正規表現 <B> が <A> 全体にマッチするか
if re . fullmatch ( <A> , <B> ) :	正規表現 <A> が <B> 全体にマッチするならば
if re . fullmatch ( <B> , <A> ) :	正規表現 <B> が <A> 全体にマッチするならば
re . fullmatch ( <A> , <B> )	<B> 全体に <A> 正規表現がマッチするかどうか
re . fullmatch ( <B> , <A> )	<A> 全体に <B> 正規表現がマッチするかどうか
if re . fullmatch ( <A> , <B> ) :	<B> 全体に <A> 正規表現がマッチする場合
if re . fullmatch ( <B> , <A> ) :	<A> 全体に <B> 正規表現がマッチする場合
re . fullmatch ( <A> , <B> )	<A> が <B> 文字列全体にマッチするか否か
re . fullmatch ( <B> , <A> )	<B> が <A> 文字列全体にマッチするか否か
if re . fullmatch ( <A> , <B> ) :	もし <A> が <B> 文字列全体にマッチするならば
if re . fullmatch ( <B> , <A> ) :	もし <B> が <A> 文字列全体にマッチするならば
re . fullmatch ( <A> , <B> )	文字列 <B> 全体に <A> がマッチするか
re . fullmatch ( <B> , <A> )	文字列 <A> 全体に <B> がマッチするか
if re . fullmatch ( <A> , <B> ) :	文字列 <B> 全体に <A> がマッチするならば
if re . fullmatch ( <B> , <A> ) :	文字列 <A> 全体に <B> がマッチするならば
re . fullmatch ( <A> , <B> )	文字列 <B> 全体に <A> 正規表現がマッチするか
re . fullmatch ( <B> , <A> )	文字列 <A> 全体に <B> 正規表現がマッチするか
if re . fullmatch ( <A> , <B> ) :	文字列 <B> 全体に <A> 正規表現がマッチするならば
if re . fullmatch ( <B> , <A> ) :	文字列 <A> 全体に <B> 正規表現がマッチするならば
not re . fullmatch ( <A> , <B> )	<A> が <B> 全体にマッチしないか
not re . fullmatch ( <B> , <A> )	<B> が <A> 全体にマッチしないか
not re . fullmatch ( <A> , <B> )	文字列 <B> 全体に正規表現 <A> がマッチしないか
not re . fullmatch ( <B> , <A> )	文字列 <A> 全体に正規表現 <B> がマッチしないか
not re . fullmatch ( <A> , <B> )	<B> 全体に正規表現 <A> がマッチしないかどうか
not re . fullmatch ( <B> , <A> )	<A> 全体に正規表現 <B> がマッチしないかどうか
not re . fullmatch ( <A> , <B> )	正規表現 <A> が <B> 文字列全体にマッチしないか否か
not re . fullmatch ( <B> , <A> )	正規表現 <B> が <A> 文字列全体にマッチしないか否か
not re . fullmatch ( <A> , <B> )	正規表現 <A> が <B> 全体にマッチしないかどうか
not re . fullmatch ( <B> , <A> )	正規表現 <B> が <A> 全体にマッチしないかどうか
not re . fullmatch ( <A> , <B> )	<B> 全体に <A> 正規表現がマッチしないか
not re . fullmatch ( <B> , <A> )	<A> 全体に <B> 正規表現がマッチしないか
not re . fullmatch ( <A> , <B> )	<A> が <B> 文字列全体にマッチしないかどうか
not re . fullmatch ( <B> , <A> )	<B> が <A> 文字列全体にマッチしないかどうか
not re . fullmatch ( <A> , <B> )	文字列 <B> 全体に <A> がマッチしないかどうか
not re . fullmatch ( <B> , <A> )	文字列 <A> 全体に <B> がマッチしないかどうか
not re . fullmatch ( <A> , <B> )	文字列 <B> 全体に <A> 正規表現がマッチしないか
not re . fullmatch ( <B> , <A> )	文字列 <A> 全体に <B> 正規表現がマッチしないか
if re . fullmatch ( <A> , <B> ) :	もし <A> が <B> 全体にマッチする場合
if re . fullmatch ( <B> , <A> ) :	もし <B> が <A> 全体にマッチする場合
if re . fullmatch ( <A> , <B> ) :	<A> が <B> 全体にマッチすれば
if re . fullmatch ( <B> , <A> ) :	<B> が <A> 全体にマッチすれば
if re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に正規表現 <A> がマッチしたならば
if re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に正規表現 <B> がマッチしたならば
if re . fullmatch ( <A> , <B> ) :	もし <B> 全体に正規表現 <A> がマッチするならば
if re . fullmatch ( <B> , <A> ) :	もし <A> 全体に正規表現 <B> がマッチするならば
if re . fullmatch ( <A> , <B> ) :	もし <B> 全体に正規表現 <A> がマッチしたら
if re . fullmatch ( <B> , <A> ) :	もし <A> 全体に正規表現 <B> がマッチしたら
if re . fullmatch ( <A> , <B> ) :	正規表現 <A> が <B> 文字列全体にマッチする場合
if re . fullmatch ( <B> , <A> ) :	正規表現 <B> が <A> 文字列全体にマッチする場合
if re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 文字列全体にマッチすれば
if re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 文字列全体にマッチすれば
if re . fullmatch ( <A> , <B> ) :	正規表現 <A> が <B> 文字列全体にマッチしたとき
if re . fullmatch ( <B> , <A> ) :	正規表現 <B> が <A> 文字列全体にマッチしたとき
if re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 全体にマッチするとき
if re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 全体にマッチするとき
if re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 全体にマッチすれば
if re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 全体にマッチすれば
if re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 全体にマッチしたなら
if re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 全体にマッチしたなら
if re . fullmatch ( <A> , <B> ) :	もし <B> 全体に <A> 正規表現がマッチする場合
if re . fullmatch ( <B> , <A> ) :	もし <A> 全体に <B> 正規表現がマッチする場合
if re . fullmatch ( <A> , <B> ) :	<B> 全体に <A> 正規表現がマッチすれば
if re . fullmatch ( <B> , <A> ) :	<A> 全体に <B> 正規表現がマッチすれば
if re . fullmatch ( <A> , <B> ) :	もし <A> が <B> 文字列全体にマッチすれば
if re . fullmatch ( <B> , <A> ) :	もし <B> が <A> 文字列全体にマッチすれば
if re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に <A> がマッチすれば
if re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に <B> がマッチすれば
if re . fullmatch ( <A> , <B> ) :	文字列 <B> 全体に <A> がマッチしたならば
if re . fullmatch ( <B> , <A> ) :	文字列 <A> 全体に <B> がマッチしたならば
if re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に <A> 正規表現がマッチする場合
if re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に <B> 正規表現がマッチする場合
if re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に <A> 正規表現がマッチすれば
if re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に <B> 正規表現がマッチすれば
if re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に <A> 正規表現がマッチしたら
if re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に <B> 正規表現がマッチしたら
if not re . fullmatch ( <A> , <B> ) :	もし <A> が <B> 全体にマッチしなければ
if not re . fullmatch ( <B> , <A> ) :	もし <B> が <A> 全体にマッチしなければ
if not re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に正規表現 <A> がマッチしなかったとき
if not re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に正規表現 <B> がマッチしなかったとき
if not re . fullmatch ( <A> , <B> ) :	<B> 全体に正規表現 <A> がマッチしなかったならば
if not re . fullmatch ( <B> , <A> ) :	<A> 全体に正規表現 <B> がマッチしなかったならば
if not re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 文字列全体にマッチすれば
if not re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 文字列全体にマッチすれば
if not re . fullmatch ( <A> , <B> ) :	正規表現 <A> が <B> 全体にマッチしない場合
if not re . fullmatch ( <B> , <A> ) :	正規表現 <B> が <A> 全体にマッチしない場合
if not re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 全体にマッチしなければ
if not re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 全体にマッチしなければ
if not re . fullmatch ( <A> , <B> ) :	もし正規表現 <A> が <B> 全体にマッチしなかったら
if not re . fullmatch ( <B> , <A> ) :	もし正規表現 <B> が <A> 全体にマッチしなかったら
if not re . fullmatch ( <A> , <B> ) :	もし <B> 全体に <A> 正規表現がマッチしなかった場合
if not re . fullmatch ( <B> , <A> ) :	もし <A> 全体に <B> 正規表現がマッチしなかった場合
if not re . fullmatch ( <A> , <B> ) :	<A> が <B> 文字列全体にマッチしなければ
if not re . fullmatch ( <B> , <A> ) :	<B> が <A> 文字列全体にマッチしなければ
if not re . fullmatch ( <A> , <B> ) :	もし <A> が <B> 文字列全体にマッチしなかったら
if not re . fullmatch ( <B> , <A> ) :	もし <B> が <A> 文字列全体にマッチしなかったら
if not re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に <A> がマッチしなければ
if not re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に <B> がマッチしなければ
if not re . fullmatch ( <A> , <B> ) :	もし文字列 <B> 全体に <A> がマッチしなかった場合
if not re . fullmatch ( <B> , <A> ) :	もし文字列 <A> 全体に <B> がマッチしなかった場合
if not re . fullmatch ( <A> , <B> ) :	文字列 <B> 全体に <A> 正規表現がマッチしなければ
if not re . fullmatch ( <B> , <A> ) :	文字列 <A> 全体に <B> 正規表現がマッチしなければ
re . split ( <A> , <B> )	<B> において、正規表現 <A> で分ける
re . split ( <B> , <A> )	<A> において、正規表現 <B> で分ける
re . split ( <A> , <B> )	文字列 <B> について、正規表現 <A> で分ける
re . split ( <B> , <A> )	文字列 <A> について、正規表現 <B> で分ける
re . split ( <A> , <B> )	<B> について、 <A> で分割する
re . split ( <B> , <A> )	<A> について、 <B> で分割する
re . split ( <A> , <B> )	<B> に対し、正規表現 <A> で分ける
re . split ( <B> , <A> )	<A> に対し、正規表現 <B> で分ける
re . split ( <A> , <B> )	<B> において、 <A> 正規表現で区切る
re . split ( <B> , <A> )	<A> において、 <B> 正規表現で区切る
re . split ( <A> , <B> )	<B> に対し、正規表現 <A> で区切る
re . split ( <B> , <A> )	<A> に対し、正規表現 <B> で区切る
re . split ( <A> , <B> )	<B> について、正規表現 <A> でスプリットする
re . split ( <B> , <A> )	<A> について、正規表現 <B> でスプリットする
re . split ( <A> , <B> )	<B> において、正規表現 <A> でスプリットする
re . split ( <B> , <A> )	<A> において、正規表現 <B> でスプリットする
re . split ( <A> , <B> )	<B> において、 <A> 正規表現でスプリットする
re . split ( <B> , <A> )	<A> において、 <B> 正規表現でスプリットする
re . split ( <A> , <B> )	<B> について、 <A> で区切る
re . split ( <B> , <A> )	<A> について、 <B> で区切る
re . split ( <A> , <B> )	<B> について、正規表現 <A> で区切る
re . split ( <B> , <A> )	<A> について、正規表現 <B> で区切る
re . split ( <A> , <B> )	文字列 <B> について、 <A> 正規表現で分ける
re . split ( <B> , <A> )	文字列 <A> について、 <B> 正規表現で分ける
re . split ( <A> , <B> )	文字列 <B> について、 <A> で分割する
re . split ( <B> , <A> )	文字列 <A> について、 <B> で分割する
re . split ( <A> , <B> )	文字列 <B> に対し、 <A> で分ける
re . split ( <B> , <A> )	文字列 <A> に対し、 <B> で分ける
re . split ( <A> , <B> )	文字列 <B> に対し、 <A> 正規表現でスプリットする
re . split ( <B> , <A> )	文字列 <A> に対し、 <B> 正規表現でスプリットする
re . split ( <A> , <B> )	文字列 <B> に対し、 <A> でスプリットする
re . split ( <B> , <A> )	文字列 <A> に対し、 <B> でスプリットする
re . split ( <A> , <B> )	文字列 <B> において、 <A> 正規表現で分ける
re . split ( <B> , <A> )	文字列 <A> において、 <B> 正規表現で分ける
re . split ( <A> , <B> )	文字列 <B> において、 <A> で分ける
re . split ( <B> , <A> )	文字列 <A> において、 <B> で分ける
re . split ( <A> , <B> )	<B> に対し、 <A> で分割する
re . split ( <B> , <A> )	<A> に対し、 <B> で分割する
re . split ( <A> , <B> )	文字列 <B> に対し、正規表現 <A> で区切る
re . split ( <B> , <A> )	文字列 <A> に対し、正規表現 <B> で区切る
re . split ( <A> , <B> )	文字列 <B> において、 <A> でスプリットする
re . split ( <B> , <A> )	文字列 <A> において、 <B> でスプリットする
re . split ( <A> , <B> )	文字列 <B> において、 <A> で分割する
re . split ( <B> , <A> )	文字列 <A> において、 <B> で分割する
re . split ( <A> , <B> )	<B> に対し、正規表現 <A> で分割する
re . split ( <B> , <A> )	<A> に対し、正規表現 <B> で分割する
re . split ( <A> , <B> )	文字列 <B> において、正規表現 <A> で分ける
re . split ( <B> , <A> )	文字列 <A> において、正規表現 <B> で分ける
re . split ( <A> , <B> )	文字列 <B> において、正規表現 <A> で分割する
re . split ( <B> , <A> )	文字列 <A> において、正規表現 <B> で分割する
re . split ( <A> , <B> )	<B> に対し、 <A> 正規表現で分ける
re . split ( <B> , <A> )	<A> に対し、 <B> 正規表現で分ける
re . split ( <A> , <B> )	<B> において、 <A> で分ける
re . split ( <B> , <A> )	<A> において、 <B> で分ける
re . split ( <A> , <B> )	文字列 <B> について、 <A> 正規表現でスプリットする
re . split ( <B> , <A> )	文字列 <A> について、 <B> 正規表現でスプリットする
re . split ( <A> , <B> )	正規表現 <A> で文字列 <B> をスプリットする
re . split ( <B> , <A> )	正規表現 <B> で文字列 <A> をスプリットする
re . split ( <A> , <B> )	正規表現 <A> で <B> 文字列を区切る
re . split ( <B> , <A> )	正規表現 <B> で <A> 文字列を区切る
re . split ( <A> , <B> )	正規表現 <A> で <B> 文字列をスプリットする
re . split ( <B> , <A> )	正規表現 <B> で <A> 文字列をスプリットする
re . split ( <A> , <B> )	<A> で <B> 文字列をスプリットする
re . split ( <B> , <A> )	<B> で <A> 文字列をスプリットする
re . split ( <A> , <B> )	<A> で文字列 <B> を分割する
re . split ( <B> , <A> )	<B> で文字列 <A> を分割する
re . split ( <A> , <B> )	正規表現 <A> で <B> をスプリットする
re . split ( <B> , <A> )	正規表現 <B> で <A> をスプリットする
re . split ( <A> , <B> )	正規表現 <A> で文字列 <B> を区切る
re . split ( <B> , <A> )	正規表現 <B> で文字列 <A> を区切る
re . split ( <A> , <B> )	<A> で <B> を分ける
re . split ( <B> , <A> )	<B> で <A> を分ける
re . split ( <A> , <B> )	正規表現 <A> で <B> 文字列を分ける
re . split ( <B> , <A> )	正規表現 <B> で <A> 文字列を分ける
re . split ( <A> , <B> )	<A> で <B> を分割する
re . split ( <B> , <A> )	<B> で <A> を分割する
re . split ( <A> , <B> )	正規表現 <A> で <B> を分割する
re . split ( <B> , <A> )	正規表現 <B> で <A> を分割する
re . split ( <A> , <B> )	<A> で <B> 文字列を分割する
re . split ( <B> , <A> )	<B> で <A> 文字列を分割する
re . sub ( <A> , <B> , <C> )	文字列 <B> において、正規表現 <A> でマッチした部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	文字列 <B> において、正規表現 <C> でマッチした部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	文字列 <B> において、正規表現 <A> でマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	文字列 <B> において、正規表現 <C> でマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> において、 <A> 正規表現でマッチした部分文字列を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> において、 <C> 正規表現でマッチした部分文字列を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> に対し、正規表現 <A> でマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> に対し、正規表現 <C> でマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> に対し、正規表現 <A> でマッチした部分を <C> に置換する
re . sub ( <C> , <B> , <A> )	<B> に対し、正規表現 <C> でマッチした部分を <A> に置換する
re . sub ( <A> , <B> , <C> )	<B> において、 <A> でマッチした箇所を <C> に置換する
re . sub ( <C> , <B> , <A> )	<B> において、 <C> でマッチした箇所を <A> に置換する
re . sub ( <A> , <B> , <C> )	文字列 <B> について、 <A> でマッチした部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	文字列 <B> について、 <C> でマッチした部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> において、 <A> 正規表現でマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> において、 <C> 正規表現でマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> に対し、正規表現 <A> でマッチした箇所を <C> に置換する
re . sub ( <C> , <B> , <A> )	<B> に対し、正規表現 <C> でマッチした箇所を <A> に置換する
re . sub ( <A> , <B> , <C> )	<B> について、正規表現 <A> でマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> について、正規表現 <C> でマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> に対し、正規表現 <A> でマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> に対し、正規表現 <C> でマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	文字列 <B> に対し、 <A> でマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	文字列 <B> に対し、 <C> でマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	文字列 <B> に対し、 <A> でマッチした部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	文字列 <B> に対し、 <C> でマッチした部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	文字列 <B> について、 <A> 正規表現でマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	文字列 <B> について、 <C> 正規表現でマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	文字列 <B> に対し、 <A> 正規表現でマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	文字列 <B> に対し、 <C> 正規表現でマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> について、 <A> 正規表現でマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> について、 <C> 正規表現でマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> において、 <A> でマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> において、 <C> でマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	文字列 <B> に対し、 <A> 正規表現でマッチした箇所を <C> に置換する
re . sub ( <C> , <B> , <A> )	文字列 <B> に対し、 <C> 正規表現でマッチした箇所を <A> に置換する
re . sub ( <A> , <B> , <C> )	文字列 <B> において、 <A> でマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	文字列 <B> において、 <C> でマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> において、正規表現 <A> でマッチした部分文字列を <C> に置換する
re . sub ( <C> , <B> , <A> )	<B> において、正規表現 <C> でマッチした部分文字列を <A> に置換する
re . sub ( <A> , <B> , <C> )	<B> において、 <A> 正規表現でマッチした部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> において、 <C> 正規表現でマッチした部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	文字列 <B> において、正規表現 <A> でマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	文字列 <B> において、正規表現 <C> でマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> において、正規表現 <A> でマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> において、正規表現 <C> でマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> について、 <A> でマッチした部分を <C> に置換する
re . sub ( <C> , <B> , <A> )	<B> について、 <C> でマッチした部分を <A> に置換する
re . sub ( <A> , <B> , <C> )	<B> において、 <A> でマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> において、 <C> でマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> に対し、 <A> でマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> に対し、 <C> でマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> において、 <A> 正規表現でマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<B> において、 <C> 正規表現でマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> について、 <A> でマッチした部分文字列を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> について、 <C> でマッチした部分文字列を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	文字列 <B> において、 <A> 正規表現でマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	文字列 <B> において、 <C> 正規表現でマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<B> において、 <A> でマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<B> において、 <C> でマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	文字列 <B> について、正規表現 <A> でマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	文字列 <B> について、正規表現 <C> でマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<B> について、 <A> でマッチした部分文字列を <C> に置換する
re . sub ( <C> , <B> , <A> )	<B> について、 <C> でマッチした部分文字列を <A> に置換する
re . sub ( <A> , <B> , <C> )	文字列 <B> について、 <A> でマッチした部分文字列を <C> に置換する
re . sub ( <C> , <B> , <A> )	文字列 <B> について、 <C> でマッチした部分文字列を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> で文字列 <B> のマッチした箇所を <C> に置換する
re . sub ( <C> , <B> , <A> )	<C> で文字列 <B> のマッチした箇所を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> で文字列 <B> のマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> で文字列 <B> のマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	正規表現 <A> で <B> 文字列のマッチした箇所を <C> に置き換える
re . sub ( <C> , <B> , <A> )	正規表現 <C> で <B> 文字列のマッチした箇所を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<A> で <B> のマッチした部分文字列を <C> に置換する
re . sub ( <C> , <B> , <A> )	<C> で <B> のマッチした部分文字列を <A> に置換する
re . sub ( <A> , <B> , <C> )	正規表現 <A> で文字列 <B> のマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	正規表現 <C> で文字列 <B> のマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> で <B> のマッチした部分文字列を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<C> で <B> のマッチした部分文字列を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> で <B> のマッチした部分を <C> に置換する
re . sub ( <C> , <B> , <A> )	<C> で <B> のマッチした部分を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> で <B> のマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<C> で <B> のマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> で <B> 文字列のマッチした箇所を <C> に置換する
re . sub ( <C> , <B> , <A> )	<C> で <B> 文字列のマッチした箇所を <A> に置換する
re . sub ( <A> , <B> , <C> )	正規表現 <A> で文字列 <B> のマッチした部分を <C> に置換する
re . sub ( <C> , <B> , <A> )	正規表現 <C> で文字列 <B> のマッチした部分を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> で文字列 <B> のマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> で文字列 <B> のマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	正規表現 <A> で文字列 <B> のマッチした部分文字列を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	正規表現 <C> で文字列 <B> のマッチした部分文字列を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> で <B> 文字列のマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> で <B> 文字列のマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	正規表現 <A> で <B> のマッチした部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	正規表現 <C> で <B> のマッチした部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<A> で文字列 <B> のマッチした箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<C> で文字列 <B> のマッチした箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	正規表現 <A> で文字列 <B> のマッチした部分文字列を <C> に置換する
re . sub ( <C> , <B> , <A> )	正規表現 <C> で文字列 <B> のマッチした部分文字列を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> で <B> のマッチした部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> で <B> のマッチした部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	正規表現 <A> で <B> 文字列のマッチした部分を <C> に置換する
re . sub ( <C> , <B> , <A> )	正規表現 <C> で <B> 文字列のマッチした部分を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> で <B> 文字列のマッチした部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<C> で <B> 文字列のマッチした部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> で文字列 <B> のマッチした部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> で文字列 <B> のマッチした部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<A> にマッチした <B> の部分文字列を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> にマッチした <B> の部分文字列を <A> に置き換える
re . sub ( <A> , <B> , <C> )	正規表現 <A> にマッチした <B> の部分を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	正規表現 <C> にマッチした <B> の部分を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	正規表現 <A> にマッチした <B> の部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	正規表現 <C> にマッチした <B> の部分を <A> に置き換える
re . sub ( <A> , <B> , <C> )	<A> にマッチした <B> の部分文字列を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	<C> にマッチした <B> の部分文字列を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> にマッチした <B> の箇所を <C> に置換する
re . sub ( <C> , <B> , <A> )	<C> にマッチした <B> の箇所を <A> に置換する
re . sub ( <A> , <B> , <C> )	正規表現 <A> にマッチした <B> の箇所を <C> にリプレースする
re . sub ( <C> , <B> , <A> )	正規表現 <C> にマッチした <B> の箇所を <A> にリプレースする
re . sub ( <A> , <B> , <C> )	<A> にマッチした <B> の部分を <C> に置換する
re . sub ( <C> , <B> , <A> )	<C> にマッチした <B> の部分を <A> に置換する
re . sub ( <A> , <B> , <C> )	<A> にマッチした <B> の部分を <C> に置き換える
re . sub ( <C> , <B> , <A> )	<C> にマッチした <B> の部分を <A> に置き換える
re . subn ( <A> , <B> , <C> )	<B> において、 <A> 正規表現にマッチした部分文字列を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<B> において、 <C> 正規表現にマッチした部分文字列を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	文字列 <B> について、 <A> 正規表現にマッチした箇所を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> について、 <C> 正規表現にマッチした箇所を <A> に置換する
re . subn ( <A> , <B> , <C> )	<B> について、 <A> にマッチした部分文字列を <C> に置換する
re . subn ( <C> , <B> , <A> )	<B> について、 <C> にマッチした部分文字列を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> において、 <A> 正規表現にマッチした部分文字列を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> において、 <C> 正規表現にマッチした部分文字列を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> において、正規表現 <A> にマッチした箇所を <C> に置き換える
re . subn ( <C> , <B> , <A> )	文字列 <B> において、正規表現 <C> にマッチした箇所を <A> に置き換える
re . subn ( <A> , <B> , <C> )	文字列 <B> について、 <A> にマッチした部分を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	文字列 <B> について、 <C> にマッチした部分を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	<B> において、正規表現 <A> にマッチした箇所を <C> に置換する
re . subn ( <C> , <B> , <A> )	<B> において、正規表現 <C> にマッチした箇所を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> について、正規表現 <A> にマッチした部分文字列を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> について、正規表現 <C> にマッチした部分文字列を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> に対し、 <A> にマッチした部分文字列を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> に対し、 <C> にマッチした部分文字列を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> において、 <A> 正規表現にマッチした部分文字列を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	文字列 <B> において、 <C> 正規表現にマッチした部分文字列を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	文字列 <B> において、 <A> にマッチした箇所を <C> に置き換える
re . subn ( <C> , <B> , <A> )	文字列 <B> において、 <C> にマッチした箇所を <A> に置き換える
re . subn ( <A> , <B> , <C> )	<B> について、 <A> 正規表現にマッチした部分文字列を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<B> について、 <C> 正規表現にマッチした部分文字列を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	文字列 <B> について、 <A> にマッチした部分文字列を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> について、 <C> にマッチした部分文字列を <A> に置換する
re . subn ( <A> , <B> , <C> )	<B> について、 <A> にマッチした部分文字列を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<B> について、 <C> にマッチした部分文字列を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	<B> について、 <A> 正規表現にマッチした部分を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<B> について、 <C> 正規表現にマッチした部分を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	文字列 <B> において、正規表現 <A> にマッチした部分を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> において、正規表現 <C> にマッチした部分を <A> に置換する
re . subn ( <A> , <B> , <C> )	<B> において、 <A> にマッチした部分を <C> に置き換える
re . subn ( <C> , <B> , <A> )	<B> において、 <C> にマッチした部分を <A> に置き換える
re . subn ( <A> , <B> , <C> )	<B> に対し、 <A> 正規表現にマッチした部分を <C> に置換する
re . subn ( <C> , <B> , <A> )	<B> に対し、 <C> 正規表現にマッチした部分を <A> に置換する
re . subn ( <A> , <B> , <C> )	<B> について、 <A> にマッチした箇所を <C> に置換する
re . subn ( <C> , <B> , <A> )	<B> について、 <C> にマッチした箇所を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> に対し、 <A> 正規表現にマッチした部分を <C> に置き換える
re . subn ( <C> , <B> , <A> )	文字列 <B> に対し、 <C> 正規表現にマッチした部分を <A> に置き換える
re . subn ( <A> , <B> , <C> )	<B> において、 <A> にマッチした部分文字列を <C> に置き換える
re . subn ( <C> , <B> , <A> )	<B> において、 <C> にマッチした部分文字列を <A> に置き換える
re . subn ( <A> , <B> , <C> )	文字列 <B> において、 <A> 正規表現にマッチした部分を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	文字列 <B> において、 <C> 正規表現にマッチした部分を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	<B> において、 <A> にマッチした部分文字列を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<B> において、 <C> にマッチした部分文字列を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	<B> に対し、正規表現 <A> にマッチした箇所を <C> に置き換える
re . subn ( <C> , <B> , <A> )	<B> に対し、正規表現 <C> にマッチした箇所を <A> に置き換える
re . subn ( <A> , <B> , <C> )	<B> について、 <A> 正規表現にマッチした箇所を <C> に置換する
re . subn ( <C> , <B> , <A> )	<B> について、 <C> 正規表現にマッチした箇所を <A> に置換する
re . subn ( <A> , <B> , <C> )	<B> に対し、 <A> にマッチした部分を <C> に置換する
re . subn ( <C> , <B> , <A> )	<B> に対し、 <C> にマッチした部分を <A> に置換する
re . subn ( <A> , <B> , <C> )	<B> において、正規表現 <A> にマッチした部分を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<B> において、正規表現 <C> にマッチした部分を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	文字列 <B> について、 <A> にマッチした部分を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> について、 <C> にマッチした部分を <A> に置換する
re . subn ( <A> , <B> , <C> )	文字列 <B> において、 <A> にマッチした箇所を <C> に置換する
re . subn ( <C> , <B> , <A> )	文字列 <B> において、 <C> にマッチした箇所を <A> に置換する
re . subn ( <A> , <B> , <C> )	正規表現 <A> でマッチした <B> の部分を <C> に置換する
re . subn ( <C> , <B> , <A> )	正規表現 <C> でマッチした <B> の部分を <A> に置換する
re . subn ( <A> , <B> , <C> )	正規表現 <A> でマッチした <B> の部分を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	正規表現 <C> でマッチした <B> の部分を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	<A> でマッチした <B> の部分文字列を <C> に置換する
re . subn ( <C> , <B> , <A> )	<C> でマッチした <B> の部分文字列を <A> に置換する
re . subn ( <A> , <B> , <C> )	<A> でマッチした <B> の部分を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<C> でマッチした <B> の部分を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	正規表現 <A> でマッチした <B> の部分文字列を <C> に置き換える
re . subn ( <C> , <B> , <A> )	正規表現 <C> でマッチした <B> の部分文字列を <A> に置き換える
re . subn ( <A> , <B> , <C> )	正規表現 <A> でマッチした <B> の箇所を <C> に置換する
re . subn ( <C> , <B> , <A> )	正規表現 <C> でマッチした <B> の箇所を <A> に置換する
re . subn ( <A> , <B> , <C> )	<A> でマッチした <B> の箇所を <C> にリプレースする
re . subn ( <C> , <B> , <A> )	<C> でマッチした <B> の箇所を <A> にリプレースする
re . subn ( <A> , <B> , <C> )	<A> でマッチした <B> の箇所を <C> に置き換える
re . subn ( <C> , <B> , <A> )	<C> でマッチした <B> の箇所を <A> に置き換える
re . subn ( <A> , <B> , <C> )	<A> でマッチした <B> の部分を <C> に置換する
re . subn ( <C> , <B> , <A> )	<C> でマッチした <B> の部分を <A> に置換する
re . subn ( <A> , <B> , <C> )	<A> でマッチした <B> の部分を <C> に置き換える
re . subn ( <C> , <B> , <A> )	<C> でマッチした <B> の部分を <A> に置き換える
re . subn ( <A> , <B> , <C> )	正規表現 <A> でマッチした <B> の箇所を <C> に置き換える
re . subn ( <C> , <B> , <A> )	正規表現 <C> でマッチした <B> の箇所を <A> に置き換える
re . findall ( <A> , <B> )	<B> に対し、 <A> でマッチした部分を抽出する
re . findall ( <B> , <A> )	<A> に対し、 <B> でマッチした部分を抽出する
re . findall ( <A> , <B> )	<B> に対し、正規表現 <A> でマッチした箇所を抽出する
re . findall ( <B> , <A> )	<A> に対し、正規表現 <B> でマッチした箇所を抽出する
re . findall ( <A> , <B> )	<B> において、 <A> でマッチした箇所を抽出する
re . findall ( <B> , <A> )	<A> において、 <B> でマッチした箇所を抽出する
re . findall ( <A> , <B> )	文字列 <B> に対し、正規表現 <A> でマッチした部分を抽出する
re . findall ( <B> , <A> )	文字列 <A> に対し、正規表現 <B> でマッチした部分を抽出する
re . findall ( <A> , <B> )	<B> に対し、 <A> でマッチした部分文字列をリストにする
re . findall ( <B> , <A> )	<A> に対し、 <B> でマッチした部分文字列をリストにする
re . findall ( <A> , <B> )	<B> において、正規表現 <A> でマッチした部分文字列をリストにする
re . findall ( <B> , <A> )	<A> において、正規表現 <B> でマッチした部分文字列をリストにする
re . findall ( <A> , <B> )	文字列 <B> において、 <A> 正規表現でマッチした部分文字列をリストにする
re . findall ( <B> , <A> )	文字列 <A> において、 <B> 正規表現でマッチした部分文字列をリストにする
re . findall ( <A> , <B> )	<B> に対し、 <A> でマッチした部分をリストにする
re . findall ( <B> , <A> )	<A> に対し、 <B> でマッチした部分をリストにする
re . findall ( <A> , <B> )	<B> に対し、正規表現 <A> でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	<A> に対し、正規表現 <B> でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	<B> について、 <A> 正規表現でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	<A> について、 <B> 正規表現でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	<B> について、 <A> でマッチした部分を抽出する
re . findall ( <B> , <A> )	<A> について、 <B> でマッチした部分を抽出する
re . findall ( <A> , <B> )	文字列 <B> に対し、 <A> でマッチした箇所を抽出する
re . findall ( <B> , <A> )	文字列 <A> に対し、 <B> でマッチした箇所を抽出する
re . findall ( <A> , <B> )	<B> において、 <A> 正規表現でマッチした箇所を抽出する
re . findall ( <B> , <A> )	<A> において、 <B> 正規表現でマッチした箇所を抽出する
re . findall ( <A> , <B> )	文字列 <B> について、正規表現 <A> でマッチした部分をリストにする
re . findall ( <B> , <A> )	文字列 <A> について、正規表現 <B> でマッチした部分をリストにする
re . findall ( <A> , <B> )	文字列 <B> に対し、 <A> でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	文字列 <A> に対し、 <B> でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	<B> に対し、 <A> でマッチした箇所をリストにする
re . findall ( <B> , <A> )	<A> に対し、 <B> でマッチした箇所をリストにする
re . findall ( <A> , <B> )	文字列 <B> について、 <A> 正規表現でマッチした箇所を抽出する
re . findall ( <B> , <A> )	文字列 <A> について、 <B> 正規表現でマッチした箇所を抽出する
re . findall ( <A> , <B> )	<B> について、正規表現 <A> でマッチした部分をリストにする
re . findall ( <B> , <A> )	<A> について、正規表現 <B> でマッチした部分をリストにする
re . findall ( <A> , <B> )	文字列 <B> について、 <A> 正規表現でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	文字列 <A> について、 <B> 正規表現でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	<B> について、 <A> でマッチした部分をリストにする
re . findall ( <B> , <A> )	<A> について、 <B> でマッチした部分をリストにする
re . findall ( <A> , <B> )	文字列 <B> に対し、 <A> でマッチした部分を抽出する
re . findall ( <B> , <A> )	文字列 <A> に対し、 <B> でマッチした部分を抽出する
re . findall ( <A> , <B> )	文字列 <B> において、 <A> 正規表現でマッチした箇所を抽出する
re . findall ( <B> , <A> )	文字列 <A> において、 <B> 正規表現でマッチした箇所を抽出する
re . findall ( <A> , <B> )	<B> において、 <A> でマッチした箇所をリストにする
re . findall ( <B> , <A> )	<A> において、 <B> でマッチした箇所をリストにする
re . findall ( <A> , <B> )	<B> に対し、 <A> 正規表現でマッチした箇所を抽出する
re . findall ( <B> , <A> )	<A> に対し、 <B> 正規表現でマッチした箇所を抽出する
re . findall ( <A> , <B> )	<B> において、 <A> 正規表現でマッチした部分をリストにする
re . findall ( <B> , <A> )	<A> において、 <B> 正規表現でマッチした部分をリストにする
re . findall ( <A> , <B> )	<B> について、正規表現 <A> でマッチした部分を抽出する
re . findall ( <B> , <A> )	<A> について、正規表現 <B> でマッチした部分を抽出する
re . findall ( <A> , <B> )	文字列 <B> に対し、 <A> でマッチした部分をリストにする
re . findall ( <B> , <A> )	文字列 <A> に対し、 <B> でマッチした部分をリストにする
re . findall ( <A> , <B> )	<B> について、 <A> 正規表現でマッチした部分を抽出する
re . findall ( <B> , <A> )	<A> について、 <B> 正規表現でマッチした部分を抽出する
re . findall ( <A> , <B> )	文字列 <B> に対し、正規表現 <A> でマッチした部分文字列をリストにする
re . findall ( <B> , <A> )	文字列 <A> に対し、正規表現 <B> でマッチした部分文字列をリストにする
re . findall ( <A> , <B> )	<B> において、 <A> 正規表現でマッチした箇所をリストにする
re . findall ( <B> , <A> )	<A> において、 <B> 正規表現でマッチした箇所をリストにする
re . findall ( <A> , <B> )	文字列 <B> において、 <A> 正規表現でマッチした部分をリストにする
re . findall ( <B> , <A> )	文字列 <A> において、 <B> 正規表現でマッチした部分をリストにする
re . findall ( <A> , <B> )	<B> において、 <A> 正規表現でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	<A> において、 <B> 正規表現でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	文字列 <B> に対し、正規表現 <A> でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	文字列 <A> に対し、正規表現 <B> でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	文字列 <B> において、 <A> 正規表現でマッチした部分文字列を抽出する
re . findall ( <B> , <A> )	文字列 <A> において、 <B> 正規表現でマッチした部分文字列を抽出する
re . findall ( <A> , <B> )	文字列 <B> に対し、正規表現 <A> でマッチした部分をリストにする
re . findall ( <B> , <A> )	文字列 <A> に対し、正規表現 <B> でマッチした部分をリストにする
re . findall ( <A> , <B> )	正規表現 <A> にマッチした <B> の部分文字列をリストにする
re . findall ( <B> , <A> )	正規表現 <B> にマッチした <A> の部分文字列をリストにする
re . findall ( <A> , <B> )	<A> にマッチした <B> の部分文字列を抽出する
re . findall ( <B> , <A> )	<B> にマッチした <A> の部分文字列を抽出する
re . findall ( <A> , <B> )	<A> にマッチした <B> の部分をリストにする
re . findall ( <B> , <A> )	<B> にマッチした <A> の部分をリストにする
re . findall ( <A> , <B> )	正規表現 <A> にマッチした <B> の部分をリストにする
re . findall ( <B> , <A> )	正規表現 <B> にマッチした <A> の部分をリストにする
re . findall ( <A> , <B> )	正規表現 <A> にマッチした <B> の箇所を抽出する
re . findall ( <B> , <A> )	正規表現 <B> にマッチした <A> の箇所を抽出する
re . findall ( <A> , <B> )	<A> にマッチした <B> の部分を抽出する
re . findall ( <B> , <A> )	<B> にマッチした <A> の部分を抽出する
re . compile ( <A> )	正規表現 <A> をコンパイルする
re . compile ( <A> )	<A> をコンパイルする
sys . exit ( )	正常に Python を終了する
sys . exit ( )	Python を適切に終了する
sys . exit ( )	適切にプログラムを終了する
sys . exit ( )	正しくプログラムを終了する
sys . exit ( )	適切に Python を終了する
sys . exit ( )	正しく Python を終了する
sys . exit ( )	正常にプログラムを終了する
sys . exit ( 0 )	プログラムを正常終了する
sys . exit ( 0 )	Python を正常終了する
sys . exit ( 1 )	Python を異常終了する
sys . exit ( 1 )	プログラムを異常終了する
sys . setrecursionlimit ( <a> )	再帰の上限を <a> にする
sys . setrecursionlimit ( 1000000 )	再帰エラーを防ぎたい
sys . setrecursionlimit ( 1000000 )	再帰の上限を上げる
sys . argv [ 0 ]	スクリプト名
sys . argv [ 1 ]	コマンドの第一引数
sys . argv [ 1 : ]	コマンド引数のリスト
sys . path . append ( <a> )	Python パスに <a> を追加する
sys . stdin . read ( <a> )	標準入力から <a> 文字だけ読む
sys . stdin . read ( <a> )	標準入力から <a> 文字読む
sys . stdout	標準出力
sys . stdout . flush ( )	標準出力をフラッシュする
sys . version	Python のバージョン
sys . version	Python のバージョンを表示する
sys . float_info . max	数の最大値
sys . float_info . max	浮動小数点数の最大値
sys . float_info . max	小数点数の最大値
sys . float_info . max	実数の最大値
sys . float_info . min	浮動小数点数の最小値
sys . float_info . min	数の最小値
sys . float_info . min	小数点数の最小値
sys . float_info . min	実数の最小値
sys . float_info . epsilon	計算機イプシロン
os . mkdir ( <a> )	<a> のフォルダを新たに作る
os . mkdir ( <a> )	新しく <a> のディレクトリを作る
os . mkdir ( <a> )	新規に <a> のディレクトリを作る
os . mkdir ( <a> )	新たに <a> のディレクトリを作る
os . mkdir ( <a> )	<a> のフォルダを新規に作る
os . mkdir ( <a> )	新たに <a> のフォルダを作る
os . makedirs ( <a> , exist_ok = True )	<a> のフォルダを再帰的に作る
os . makedirs ( <a> , exist_ok = True )	<a> のフォルダを階層的に作る
os . makedirs ( <a> , exist_ok = True )	<a> のディレクトリを階層的に作る
os . listdir ( <a> )	<a> のファイル一覧
os . listdir ( <a> )	パス <a> のファイル一覧
os . path . exists ( <A> )	<A> があるか
if os . path . exists ( <A> ) :	<A> がある場合
os . path . exists ( <A> )	パス <A> があるか
if os . path . exists ( <A> ) :	もしパス <A> があるならば
os . path . exists ( <A> )	ファイルパス <A> が存在するか
if os . path . exists ( <A> ) :	ファイルパス <A> が存在するとき
os . path . exists ( <A> )	<A> が存在するか
if os . path . exists ( <A> ) :	<A> が存在するとき
not os . path . exists ( <A> )	<A> があらないか
not os . path . exists ( <A> )	パス <A> があらないかどうか
not os . path . exists ( <A> )	ファイルパス <A> が存在しないか
not os . path . exists ( <A> )	<A> が存在しないか
if os . path . exists ( <A> ) :	もし <A> がある場合
if os . path . exists ( <A> ) :	もし <A> があったならば
if os . path . exists ( <A> ) :	パス <A> があれば
if os . path . exists ( <A> ) :	パス <A> があったならば
if os . path . exists ( <A> ) :	もしファイルパス <A> が存在すれば
if os . path . exists ( <A> ) :	もし <A> が存在するとき
if not os . path . exists ( <A> ) :	もし <A> があらなければ
if not os . path . exists ( <A> ) :	ファイルパス <A> が存在しないとき
if not os . path . exists ( <A> ) :	もしファイルパス <A> が存在しなければ
if not os . path . exists ( <A> ) :	ファイルパス <A> が存在しなかったならば
if not os . path . exists ( <A> ) :	<A> が存在しなかったならば
os . path . isdir ( <A> )	パス <A> がディレクトリか
if os . path . isdir ( <A> ) :	パス <A> がディレクトリのとき
os . path . isdir ( <A> )	<A> がディレクトリか
if os . path . isdir ( <A> ) :	<A> がディレクトリのとき
os . path . isdir ( <A> )	ファイルパス <A> がディレクトリかどうか
if os . path . isdir ( <A> ) :	もしファイルパス <A> がディレクトリならば
os . path . isdir ( <A> )	パス <A> がフォルダか否か
if os . path . isdir ( <A> ) :	パス <A> がフォルダならば
not os . path . isdir ( <A> )	パス <A> がディレクトリでないかどうか
not os . path . isdir ( <A> )	<A> がディレクトリでないか
not os . path . isdir ( <A> )	ファイルパス <A> がディレクトリでないか
not os . path . isdir ( <A> )	パス <A> がフォルダでないか
if os . path . isdir ( <A> ) :	パス <A> がディレクトリ場合
if os . path . isdir ( <A> ) :	もし <A> がディレクトリ場合
if os . path . isdir ( <A> ) :	もしファイルパス <A> がディレクトリとき
if os . path . isdir ( <A> ) :	もしパス <A> がフォルダならば
if not os . path . isdir ( <A> ) :	もしパス <A> がディレクトリでないならば
if not os . path . isdir ( <A> ) :	もし <A> がディレクトリでないならば
if not os . path . isdir ( <A> ) :	ファイルパス <A> がディレクトリでない場合
if not os . path . isdir ( <A> ) :	パス <A> がフォルダでないならば
os . path . isfile ( <A> )	パス <A> がファイルか
if os . path . isfile ( <A> ) :	もしパス <A> がファイルならば
os . path . isfile ( <A> )	ファイルパス <A> がファイルか
if os . path . isfile ( <A> ) :	ファイルパス <A> がファイルのとき
os . path . isfile ( <A> )	<A> がファイルか否か
if os . path . isfile ( <A> ) :	<A> がファイルのとき
not os . path . isfile ( <A> )	パス <A> がファイルでないかどうか
not os . path . isfile ( <A> )	ファイルパス <A> がファイルでないかどうか
not os . path . isfile ( <A> )	<A> がファイルでないかどうか
if os . path . isfile ( <A> ) :	パス <A> がファイルならば
if os . path . isfile ( <A> ) :	ファイルパス <A> がファイル場合
if os . path . isfile ( <A> ) :	もし <A> がファイル場合
if not os . path . isfile ( <A> ) :	もしパス <A> がファイルでない場合
if not os . path . isfile ( <A> ) :	もしファイルパス <A> がファイルでないならば
if not os . path . isfile ( <A> ) :	もし <A> がファイルでないならば
os . path . getsize ( <a> )	<a> ファイル名のファイルサイズ
os . path . getsize ( <a> )	ファイル名 <a> の大きさ
os . path . getsize ( <a> )	<a> ファイル名の大きさ
os . path . getsize ( <a> )	<a> の大きさ
os . path . getsize ( <a> )	ファイル名 <a> のバイト数
os . path . getsize ( <a> )	<a> のファイルサイズ
os . path . join ( <A> , <B> )	<A> ファイルパスと <B> を結合する
os . path . join ( <B> , <A> )	<B> ファイルパスと <A> を結合する
os . path . join ( <A> , <B> )	安全に <A> と <B> を結合する
os . path . join ( <B> , <A> )	安全に <B> と <A> を結合する
os . path . join ( <A> , <B> )	パス <A> と <B> を結合する
os . path . join ( <B> , <A> )	パス <B> と <A> を結合する
os . path . join ( <A> , <B> )	パス <A> と <B> をプラットホーム依存せずに結合する
os . path . join ( <B> , <A> )	パス <B> と <A> をプラットホーム依存せずに結合する
os . path . join ( <A> , <B> )	安全に <A> パスと <B> を結合する
os . path . join ( <B> , <A> )	安全に <B> パスと <A> を結合する
os . path . join ( <A> , <B> )	パス <A> と <B> を安全に結合する
os . path . join ( <B> , <A> )	パス <B> と <A> を安全に結合する
os . path . join ( <A> , <B> )	ファイルパス <A> と <B> を結合する
os . path . join ( <B> , <A> )	ファイルパス <B> と <A> を結合する
os . path . join ( <A> , <B> )	ファイルパス <A> と <B> をプラットホーム依存なしに結合する
os . path . join ( <B> , <A> )	ファイルパス <B> と <A> をプラットホーム依存なしに結合する
os . path . join ( <A> , <B> )	プラットホーム依存せずに <A> パスと <B> を結合する
os . path . join ( <B> , <A> )	プラットホーム依存せずに <B> パスと <A> を結合する
"print ( ""Hello World"" )"	Hello World と表示する
"print ( ""Hello World"" )"	Hello World と出力する
"print ( ""Hello World"" )"	「こんにちは世界」と出力する
"print ( ""Hello World"" )"	「こんにちは世界」とプリントする
"print ( ""Hello World"" )"	「ハローワールド」と出力する
"print ( ""Hello World"" )"	「こんにちは世界」と表示する
"print ( ""Hello World"" )"	「ハローワールド」とプリントする
"print ( ""Hello World"" )"	何か動かす
"print ( ""Hello World"" )"	試しに何か動かす
"print ( ""Hello World"" )"	最初のプログラム
"print ( ""Hello World"" )"	最初の Python
<a> + <b>	<a> 足す <b>
<b> + <a>	<b> 足す <a>
<a> + <b>	<a> に <b> を加算する
<b> + <a>	<b> に <a> を加算する
<a> + <b>	<a> と <b> の和
<b> + <a>	<b> と <a> の和
<a> + <b> + <c>	<a> 足す <b> 足す <c>
<c> + <b> + <a>	<c> 足す <b> 足す <a>
<a> + <b> + <c>	<a> , <b> , <c> の和
<c> + <b> + <a>	<c> , <b> , <a> の和
<a> -70	<a> から 70 を引く
<a> * <b>	<a> かける <b>
<b> * <a>	<b> かける <a>
<a> / <b>	<a> を <b> で割る
<b> / <a>	<b> を <a> で割る
<a> // <b>	<a> を <b> で割った商
<b> // <a>	<b> を <a> で割った商
<a> % <b>	<a> を <b> で割った余り
<b> % <a>	<b> を <a> で割った余り
<a> ** <b>	<a> の <b> 乗
<b> ** <a>	<b> の <a> 乗
abc + <a>	"文字列 ""abc"" と <a> を繋ぐ"
abc + <a>	"文字列 ""abc"" と <a> を連結する"
<A> + <b>	<A> と <b> を連結する
<B> + <a>	<B> と <a> を連結する
<A> + <b>	<A> と <b> を繋ぐ
<B> + <a>	<B> と <a> を繋ぐ
<A> + <b>	<A> と <b> を結合する
<B> + <a>	<B> と <a> を結合する
str ( <a> )	<a> を文字列にする
str ( <a> )	<a> を文字列に変換する
str ( <a> )	<a> を変換した文字列
<A> * <b>	<A> を <b> 回繰り返す
<B> * <a>	<B> を <a> 回繰り返す
X * <a>	"文字列 ""X"" を <a> 回繰り返す"
x = input ( )	ユーザから入力を得る
<A> = input ( )	ユーザが入力した文字列を <A> とする
<A> = input ( )	利用者が入力した文字列を <A> とする
x = input ( )	ユーザから入力された文字列
x = input ( )	入力された文字列
"x = input ( ""X"" )"	X というプロンプトを表示し、文字列をユーザに入力させる
"x = input ( ""X"" )"	X というプロンプトを表示し、ユーザに文字列を入力させる
"x = input ( ""X"" )"	X というプロンプトを表示し、利用者に文字列を入力させる
"x = input ( ""X"" )"	X というプロンプトを表示し、文字列を利用者に入力させる
"x = input ( ""X"" )"	X という問い合わせに対し、入力をユーザから得る
"x = input ( ""X"" )"	X という問い合わせに対し、入力を利用者から得る
"x = input ( ""X"" )"	X という問い合わせに対し、ユーザから入力を得る
float ( <A> )	<A> を数に変換する
float ( <A> )	実数に <A> を変換する
float ( <A> )	浮動小数点数に <A> を変換する
float ( <A> )	小数点数に <A> を変換する
float ( <A> )	<A> を浮動小数点数にする
float ( <A> )	数に <A> を変換する
float ( <A> )	浮動小数点数に <A> をする
float ( <A> )	数に <A> をする
float ( <A> )	<A> を実数にする
float ( <A> )	<A> を浮動小数点数に変換する
float ( <A> )	<A> を実数に変換する
float ( <A> )	<A> を変換した浮動小数点数
float ( <A> )	<A> を変換した実数
float ( <A> )	<A> を変換した小数点数
float ( <A> )	<A> を変換した数
int ( <A> )	整数に <A> をする
int ( <A> )	<A> を整数に変換する
int ( <A> )	自然数に <A> をする
int ( <A> )	<A> を整数値にする
int ( <A> )	<A> を整数にする
int ( <A> )	<A> を自然数にする
int ( <A> )	整数値に <A> をする
int ( <A> )	整数値に <A> を変換する
int ( <A> )	整数に <A> を変換する
int ( <A> )	<A> を自然数に変換する
int ( <A> )	<A> を変換した自然数
int ( <A> )	<A> を変換した整数
int ( <A> )	<A> を変換した整数値
<A> = int ( input ( ) )	利用者が入力した整数を <A> とする
<A> = int ( input ( ) )	入力された自然数を <A> とする
<A> = int ( input ( ) )	入力された整数を <A> とする
<A> = int ( input ( ) )	ユーザが入力した整数を <A> とする
<A> = int ( input ( ) )	利用者が入力した自然数を <A> とする
<A> = int ( input ( ) )	ユーザが入力した自然数を <A> とする
<A> = int ( input ( ) )	利用者が入力した整数値を <A> とする
x = int ( input ( ) )	入力された整数
x = int ( input ( ) )	入力された整数値
<A> = float ( input ( ) )	ユーザが入力した小数点数を <A> とする
<A> = float ( input ( ) )	入力された小数点数を <A> とする
<A> = float ( input ( ) )	入力された実数を <A> とする
<A> = float ( input ( ) )	ユーザが入力した浮動小数点数を <A> とする
<A> = float ( input ( ) )	入力された数を <A> とする
x = float ( input ( ) )	入力された数
x = float ( input ( ) )	入力された小数点数
x = float ( input ( ) )	入力された浮動小数点数
type ( <A> )	<A> のクラス
type ( <A> )	<A> の型
type ( <A> )	<A> のクラスを見る
type ( <A> )	<A> の型を表示する
<A> == <B>	<A> と <B> が等しいか否か
<B> == <A>	<B> と <A> が等しいか否か
if <A> == <B> :	<A> と <B> が等しいとき
if <B> == <A> :	<B> と <A> が等しいとき
<A> != <B>	<A> と <B> が等しくないか
<B> != <A>	<B> と <A> が等しくないか
if <A> == <B> :	もし <A> と <B> が等しい場合
if <B> == <A> :	もし <B> と <A> が等しい場合
if <A> == <B> :	もし <A> と <B> が等しければ
if <B> == <A> :	もし <B> と <A> が等しければ
if <A> != <B> :	<A> と <B> が等しくないとき
if <B> != <A> :	<B> と <A> が等しくないとき
if <A> != <B> :	<A> と <B> が等しくなければ
if <B> != <A> :	<B> と <A> が等しくなければ
if <A> != <B> :	<A> と <B> が等しくなかったなら
if <B> != <A> :	<B> と <A> が等しくなかったなら
while <A> == <B> :	<A> と <B> が等しい間
while <B> == <A> :	<B> と <A> が等しい間
while <A> != <B> :	<A> と <B> が等しくない間
while <B> != <A> :	<B> と <A> が等しくない間
<A> == <B>	<A> が <B> と等しいか
<B> == <A>	<B> が <A> と等しいか
if <A> == <B> :	<A> が <B> と等しい場合
if <B> == <A> :	<B> が <A> と等しい場合
<A> != <B>	<A> が <B> と等しくないか
<B> != <A>	<B> が <A> と等しくないか
if <A> == <B> :	もし <A> が <B> と等しければ
if <B> == <A> :	もし <B> が <A> と等しければ
if <A> == <B> :	もし <A> が <B> と等しかったとき
if <B> == <A> :	もし <B> が <A> と等しかったとき
if <A> != <B> :	もし <A> が <B> と等しくなければ
if <B> != <A> :	もし <B> が <A> と等しくなければ
if <A> != <B> :	もし <A> が <B> と等しくなかったとき
if <B> != <A> :	もし <B> が <A> と等しくなかったとき
while <A> != <B> :	<A> が <B> と等しくない間
while <B> != <A> :	<B> が <A> と等しくない間
<A> == <B>	<A> が <B> か
<B> == <A>	<B> が <A> か
if <A> == <B> :	<A> が <B> の場合
if <B> == <A> :	<B> が <A> の場合
<A> != <B>	<A> が <B> でないかどうか
<B> != <A>	<B> が <A> でないかどうか
if <A> == <B> :	<A> が <B> 場合
if <B> == <A> :	<B> が <A> 場合
if <A> != <B> :	<A> が <B> でないとき
if <B> != <A> :	<B> が <A> でないとき
while <A> != <B> :	<A> が <B> でない間
while <B> != <A> :	<B> が <A> でない間
<A> >  <B>	<A> が <B> より大きいかどうか
<B> >  <A>	<B> が <A> より大きいかどうか
if <A> >  <B> :	<A> が <B> より大きい場合
if <B> >  <A> :	<B> が <A> より大きい場合
not <A> >  <B>	<A> が <B> より大きくないかどうか
not <B> >  <A>	<B> が <A> より大きくないかどうか
if <A> >  <B> :	<A> が <B> より大きければ
if <B> >  <A> :	<B> が <A> より大きければ
if <A> >  <B> :	もし <A> が <B> より大きかったら
if <B> >  <A> :	もし <B> が <A> より大きかったら
if not <A> >  <B> :	もし <A> が <B> より大きくなければ
if not <B> >  <A> :	もし <B> が <A> より大きくなければ
if not <A> >  <B> :	もし <A> が <B> より大きくなかったなら
if not <B> >  <A> :	もし <B> が <A> より大きくなかったなら
while <A> >  <B> :	<A> が <B> より大きい間
while <B> >  <A> :	<B> が <A> より大きい間
while not <A> >  <B> :	<A> が <B> より大きくない間
while not <B> >  <A> :	<B> が <A> より大きくない間
<A> <  <B>	<A> が <B> より小さいか
<B> <  <A>	<B> が <A> より小さいか
if <A> <  <B> :	<A> が <B> より小さい場合
if <B> <  <A> :	<B> が <A> より小さい場合
not <A> <  <B>	<A> が <B> より小さくないか
not <B> <  <A>	<B> が <A> より小さくないか
if <A> <  <B> :	<A> が <B> より小さければ
if <B> <  <A> :	<B> が <A> より小さければ
if <A> <  <B> :	もし <A> が <B> より小さかったならば
if <B> <  <A> :	もし <B> が <A> より小さかったならば
if not <A> <  <B> :	<A> が <B> より小さくないならば
if not <B> <  <A> :	<B> が <A> より小さくないならば
if not <A> <  <B> :	<A> が <B> より小さくなければ
if not <B> <  <A> :	<B> が <A> より小さくなければ
while <A> <  <B> :	<A> が <B> より小さい間
while <B> <  <A> :	<B> が <A> より小さい間
while not <A> <  <B> :	<A> が <B> より小さくない間
while not <B> <  <A> :	<B> が <A> より小さくない間
<A> >= <B>	<A> が <B> 以上か否か
<B> >= <A>	<B> が <A> 以上か否か
if <A> >= <B> :	もし <A> が <B> 以上ならば
if <B> >= <A> :	もし <B> が <A> 以上ならば
not <A> >= <B>	<A> が <B> 以上でないか
not <B> >= <A>	<B> が <A> 以上でないか
if <A> >= <B> :	<A> が <B> 以上とき
if <B> >= <A> :	<B> が <A> 以上とき
if not <A> >= <B> :	<A> が <B> 以上でない場合
if not <B> >= <A> :	<B> が <A> 以上でない場合
while <A> >= <B> :	<A> が <B> 以上間
while <B> >= <A> :	<B> が <A> 以上間
<A> <= <B>	<A> が <B> 以下かどうか
<B> <= <A>	<B> が <A> 以下かどうか
if <A> <= <B> :	<A> が <B> 以下の場合
if <B> <= <A> :	<B> が <A> 以下の場合
not <A> <= <B>	<A> が <B> 以下でないかどうか
not <B> <= <A>	<B> が <A> 以下でないかどうか
if <A> <= <B> :	<A> が <B> 以下場合
if <B> <= <A> :	<B> が <A> 以下場合
if not <A> <= <B> :	<A> が <B> 以下でないならば
if not <B> <= <A> :	<B> が <A> 以下でないならば
while <A> <= <B> :	<A> が <B> 以下間
while <B> <= <A> :	<B> が <A> 以下間
<A> % 2 == 0	<A> が偶数か否か
if <A> % 2 == 0 :	<A> が偶数のとき
<A> % 2 != 0	<A> が偶数でないかどうか
if <A> % 2 == 0 :	<A> が偶数とき
if <A> % 2 != 0 :	もし <A> が偶数でないならば
<A> % 2 == 1	<A> が奇数か否か
if <A> % 2 == 1 :	<A> が奇数ならば
<A> % 2 != 1	<A> が奇数でないか
if <A> % 2 == 1 :	もし <A> が奇数ならば
if <A> % 2 != 1 :	もし <A> が奇数でない場合
while <A> % 2 == 1 :	<A> が奇数間
while <A> % 2 != 1 :	<A> が奇数でない間
<A> % <B> == 0	<A> が <B> の倍数か否か
<B> % <A> == 0	<B> が <A> の倍数か否か
if <A> % <B> == 0 :	<A> が <B> の倍数のとき
if <B> % <A> == 0 :	<B> が <A> の倍数のとき
<A> % <B> != 0	<A> が <B> の倍数でないかどうか
<B> % <A> != 0	<B> が <A> の倍数でないかどうか
if <A> % <B> == 0 :	もし <A> が <B> の倍数ならば
if <B> % <A> == 0 :	もし <B> が <A> の倍数ならば
if <A> % <B> != 0 :	もし <A> が <B> の倍数でない場合
if <B> % <A> != 0 :	もし <B> が <A> の倍数でない場合
while <A> % <B> == 0 :	<A> が <B> の倍数間
while <B> % <A> == 0 :	<B> が <A> の倍数間
<A> % <B> == 0	<A> が <B> で割り切れるか否か
<B> % <A> == 0	<B> が <A> で割り切れるか否か
if <A> % <B> == 0 :	<A> が <B> で割り切れる場合
if <B> % <A> == 0 :	<B> が <A> で割り切れる場合
<A> % <B> != 0	<A> が <B> で割り切れないかどうか
<B> % <A> != 0	<B> が <A> で割り切れないかどうか
if <A> % <B> == 0 :	もし <A> が <B> で割り切れるとき
if <B> % <A> == 0 :	もし <B> が <A> で割り切れるとき
if <A> % <B> == 0 :	もし <A> が <B> で割り切れれば
if <B> % <A> == 0 :	もし <B> が <A> で割り切れれば
if <A> % <B> == 0 :	もし <A> が <B> で割り切れたら
if <B> % <A> == 0 :	もし <B> が <A> で割り切れたら
if <A> % <B> != 0 :	もし <A> が <B> で割り切れなければ
if <B> % <A> != 0 :	もし <B> が <A> で割り切れなければ
while <A> % <B> == 0 :	<A> が <B> で割り切れる間
while <B> % <A> == 0 :	<B> が <A> で割り切れる間
while <A> % <B> != 0 :	<A> が <B> で割り切れない間
while <B> % <A> != 0 :	<B> が <A> で割り切れない間
pass	何もしない
pass	パスする
quit ( )	Python の実行を途中で終了する
quit ( )	プログラムの実行を終了する
quit ( )	途中で Python の実行を終了する
quit ( )	プログラムを終了する
quit ( )	Python を終了する
quit ( )	Python の実行を終了する
quit ( )	途中で Python を終了する
quit ( )	Python を途中で終了する
quit ( )	Python を中断する
quit ( )	プログラムを中断する
quit ( )	プログラムの実行を中断する
quit ( )	Python の実行を中断する
True	真
False	偽
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、また <c> 以上であれば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、また <a> 以上であれば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、また <c> 以上の場合
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、また <a> 以上の場合
if <A> <  <b> or <A> >= <c> :	もし <A> が <b> 未満、あるいは <c> 以上であれば
if <C> <  <b> or <C> >= <a> :	もし <C> が <b> 未満、あるいは <a> 以上であれば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、あるいは <c> 以上であるならば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、あるいは <a> 以上であるならば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、または <c> 以上であるならば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、または <a> 以上であるならば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、あるいは <c> 以上ならば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、あるいは <a> 以上ならば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、あるいは <c> 以上の場合
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、あるいは <a> 以上の場合
if <A> <  <b> or <A> >= <c> :	もし <A> が <b> 未満、また <c> 以上であるならば
if <C> <  <b> or <C> >= <a> :	もし <C> が <b> 未満、また <a> 以上であるならば
if <A> <  <b> or <A> >= <c> :	もし <A> が <b> 未満、または <c> 以上の場合
if <C> <  <b> or <C> >= <a> :	もし <C> が <b> 未満、または <a> 以上の場合
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、また <c> 以上であったら
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、また <a> 以上であったら
if <A> <  <b> or <A> >= <c> :	もし <A> が <b> 未満、あるいは <c> 以上のとき
if <C> <  <b> or <C> >= <a> :	もし <C> が <b> 未満、あるいは <a> 以上のとき
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、また <c> 以上であるならば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、また <a> 以上であるならば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、または <c> 以上であれば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、または <a> 以上であれば
if <A> <  <b> or <A> >= <c> :	<A> が <b> 未満、または <c> 以上ならば
if <C> <  <b> or <C> >= <a> :	<C> が <b> 未満、または <a> 以上ならば
if <A> <  <b> or <A> >= <c> :	もし <A> が <b> 未満、あるいは <c> 以上の場合
if <C> <  <b> or <C> >= <a> :	もし <C> が <b> 未満、あるいは <a> 以上の場合
if age <  <a> or age >= <b> :	<a> 才未満、または <b> 才以上であるならば
if age <  <b> or age >= <a> :	<b> 才未満、または <a> 才以上であるならば
if age <  <a> or age >= <b> :	<a> 才未満、または <b> 才以上であったら
if age <  <b> or age >= <a> :	<b> 才未満、または <a> 才以上であったら
if age <  <a> or age >= <b> :	<a> 才未満、あるいは <b> 才以上であったら
if age <  <b> or age >= <a> :	<b> 才未満、あるいは <a> 才以上であったら
if age <  <a> or age >= <b> :	もし <a> 才未満、また <b> 才以上ならば
if age <  <b> or age >= <a> :	もし <b> 才未満、また <a> 才以上ならば
if age <  <a> or age >= <b> :	もし <a> 才未満、また <b> 才以上であれば
if age <  <b> or age >= <a> :	もし <b> 才未満、また <a> 才以上であれば
if age <  <a> or age >= <b> :	<a> 才未満、または <b> 才以上であれば
if age <  <b> or age >= <a> :	<b> 才未満、または <a> 才以上であれば
if age <  <a> or age >= <b> :	もし <a> 才未満、あるいは <b> 才以上ならば
if age <  <b> or age >= <a> :	もし <b> 才未満、あるいは <a> 才以上ならば
if age <  <a> or age >= <b> :	もし <a> 才未満、または <b> 才以上ならば
if age <  <b> or age >= <a> :	もし <b> 才未満、または <a> 才以上ならば
if age <  <a> or age >= <b> :	<a> 才未満、あるいは <b> 才以上のとき
if age <  <b> or age >= <a> :	<b> 才未満、あるいは <a> 才以上のとき
if age <  <a> or age >= <b> :	もし <a> 才未満、あるいは <b> 才以上であれば
if age <  <b> or age >= <a> :	もし <b> 才未満、あるいは <a> 才以上であれば
if age <  <a> or age >= <b> :	もし <a> 才未満、または <b> 才以上の場合
if age <  <b> or age >= <a> :	もし <b> 才未満、または <a> 才以上の場合
if age <  <a> or age >= <b> :	もし <a> 才未満、また <b> 才以上のとき
if age <  <b> or age >= <a> :	もし <b> 才未満、また <a> 才以上のとき
if age <  <a> or age >= <b> :	<a> 才未満、あるいは <b> 才以上ならば
if age <  <b> or age >= <a> :	<b> 才未満、あるいは <a> 才以上ならば
if age <  <a> or age >= <b> :	もし <a> 才未満、または <b> 才以上であったら
if age <  <b> or age >= <a> :	もし <b> 才未満、または <a> 才以上であったら
if <A> <  <b> and <A> >= 60 :	もし <A> が <b> 未満、かつ@ 160 以上であったら
if <B> <  <a> and <B> >= 60 :	もし <B> が <a> 未満、かつ@ 160 以上であったら
if <A> <  <b> and <A> >= 60 :	<A> が <b> 未満、かつ@ 160 以上のとき
if <B> <  <a> and <B> >= 60 :	<B> が <a> 未満、かつ@ 160 以上のとき
if <A> <  <b> and <A> >= 60 :	<A> が <b> 未満、かつ@ 160 以上であれば
if <B> <  <a> and <B> >= 60 :	<B> が <a> 未満、かつ@ 160 以上であれば
if <A> <  <b> and <A> >= 60 :	<A> が <b> 未満、かつ@ 160 以上であったら
if <B> <  <a> and <B> >= 60 :	<B> が <a> 未満、かつ@ 160 以上であったら
if <A> <  <b> and <A> >= 60 :	<A> が <b> 未満、かつ@ 160 以上ならば
if <B> <  <a> and <B> >= 60 :	<B> が <a> 未満、かつ@ 160 以上ならば
if <A> <  <b> and <A> >= 60 :	もし <A> が <b> 未満、かつ@ 160 以上であれば
if <B> <  <a> and <B> >= 60 :	もし <B> が <a> 未満、かつ@ 160 以上であれば
if <A> <  <b> and <A> >= 60 :	もし <A> が <b> 未満、かつ@ 160 以上ならば
if <B> <  <a> and <B> >= 60 :	もし <B> が <a> 未満、かつ@ 160 以上ならば
weight / ( height / 100 ) ** 2	BMI を求めたい
<A> / ( <B> / 100 ) ** 2	<A> と <B> から BMI
<B> / ( <A> / 100 ) ** 2	<B> と <A> から BMI
<A> / ( <B> / 100 ) ** 2	体重 <A> と身長 <B> から BMI
<B> / ( <A> / 100 ) ** 2	体重 <B> と身長 <A> から BMI
<A> / ( <B> / 100 ) ** 2	<A> と身長 <B> から BMI
<B> / ( <A> / 100 ) ** 2	<B> と身長 <A> から BMI
<A> / ( <B> / 100 ) ** 2	体重 <A> と <B> 身長から BMI
<B> / ( <A> / 100 ) ** 2	体重 <B> と <A> 身長から BMI
<A> / ( <B> / 100 ) ** 2	<A> と <B> 身長から BMI
<B> / ( <A> / 100 ) ** 2	<B> と <A> 身長から BMI
<A> / ( <B> / 100 ) ** 2	体重 <A> と <B> から BMI
<B> / ( <A> / 100 ) ** 2	体重 <B> と <A> から BMI
<A> / ( <B> / 100 ) ** 2	<A> と <B> から BMI を確認する
<B> / ( <A> / 100 ) ** 2	<B> と <A> から BMI を確認する
<A> / ( <B> / 100 ) ** 2	体重 <A> と身長 <B> から BMI を調べる
<B> / ( <A> / 100 ) ** 2	体重 <B> と身長 <A> から BMI を調べる
<A> / ( <B> / 100 ) ** 2	<A> と身長 <B> から BMI を確認する
<B> / ( <A> / 100 ) ** 2	<B> と身長 <A> から BMI を確認する
<A> / ( <B> / 100 ) ** 2	体重 <A> と <B> 身長から BMI を確認する
<B> / ( <A> / 100 ) ** 2	体重 <B> と <A> 身長から BMI を確認する
<A> / ( <B> / 100 ) ** 2	<A> と <B> 身長から BMI を表示する
<B> / ( <A> / 100 ) ** 2	<B> と <A> 身長から BMI を表示する
<A> / ( <B> / 100 ) ** 2	体重 <A> と <B> から BMI を調べる
<B> / ( <A> / 100 ) ** 2	体重 <B> と <A> から BMI を調べる
<A> / ( <B> / 100 ) ** 2	<B> と体重 <A> から BMI
<B> / ( <A> / 100 ) ** 2	<A> と体重 <B> から BMI
<A> / ( <B> / 100 ) ** 2	身長 <B> と体重 <A> から BMI
<B> / ( <A> / 100 ) ** 2	身長 <A> と体重 <B> から BMI
<A> / ( <B> / 100 ) ** 2	<B> と <A> 体重から BMI
<B> / ( <A> / 100 ) ** 2	<A> と <B> 体重から BMI
<A> / ( <B> / 100 ) ** 2	身長 <B> と <A> から BMI
<B> / ( <A> / 100 ) ** 2	身長 <A> と <B> から BMI
<A> / ( <B> / 100 ) ** 2	<B> と <A> から BMI
<B> / ( <A> / 100 ) ** 2	<A> と <B> から BMI
<A> / ( <B> / 100 ) ** 2	身長 <B> と <A> 体重から BMI
<B> / ( <A> / 100 ) ** 2	身長 <A> と <B> 体重から BMI
<A> / ( <B> / 100 ) ** 2	<B> と体重 <A> から BMI を表示する
<B> / ( <A> / 100 ) ** 2	<A> と体重 <B> から BMI を表示する
<A> / ( <B> / 100 ) ** 2	身長 <B> と体重 <A> から BMI を見る
<B> / ( <A> / 100 ) ** 2	身長 <A> と体重 <B> から BMI を見る
<A> / ( <B> / 100 ) ** 2	<B> と <A> 体重から BMI を確認する
<B> / ( <A> / 100 ) ** 2	<A> と <B> 体重から BMI を確認する
<A> / ( <B> / 100 ) ** 2	身長 <B> と <A> から BMI を確認する
<B> / ( <A> / 100 ) ** 2	身長 <A> と <B> から BMI を確認する
<A> / ( <B> / 100 ) ** 2	<B> と <A> から BMI を確認する
<B> / ( <A> / 100 ) ** 2	<A> と <B> から BMI を確認する
<A> / ( <B> / 100 ) ** 2	身長 <B> と <A> 体重から BMI を見る
<B> / ( <A> / 100 ) ** 2	身長 <A> と <B> 体重から BMI を見る
random . randint ( 1 , 6 )	サイコロの目
random . randint ( 1 , 6 )	サイコロの出目
random . randint ( 1 , 6 )	サイコロを振った目
random . randint ( <a> , <b> )	<a> から <b> までの乱数
random . randint ( <b> , <a> )	<b> から <a> までの乱数
time . sleep ( <a> )	プログラムの実行を <a> 秒間、停止する
time . sleep ( <a> )	プログラムを <a> 秒、停止する
time . sleep ( <a> )	<a> 秒、 Python を停止する
time . sleep ( <a> )	Python の実行を <a> 秒、停止する
time . sleep ( <a> )	<a> 秒、 Python の実行を停止する
time . sleep ( <a> )	<a> 秒間、プログラムの実行を停止する
time . sleep ( <a> )	<a> 秒間、 Python を停止する
time . sleep ( <a> )	<a> 秒、待つ
time . sleep ( <a> )	<a> 秒間、待つ
time . sleep ( <a> )	<a> 秒間、止める
time . sleep ( <a> )	<a> 秒、止める
while True : pass	無限ループ
while True : pass	とりあえず、繰り返す
for i in range ( 5 ) :	５回、繰り返す
break	繰り返しを中断する
break	繰り返しから抜け出す
break	繰り返しから強制的に抜け出す
continue	繰り返しの先頭に戻る
continue	繰り返しの最初に戻る
continue	繰り返しの前に戻る
continue	もう一度、繰り返す
continue	もう一回、繰り返す
[ 0 ] * <A>	大きさ <A> の配列
[ 0 ] * <A>	大きさ <A> のリスト
for a in [ <a> , <b> , <c> ] :	リスト [ <a> , <b> , <c> ] の各要素を処理する
for a in [ <c> , <b> , <a> ] :	リスト [ <c> , <b> , <a> ] の各要素を処理する
for <A> in [ <b> , <c> , <d> ] :	リスト [ <b> , <c> , <d> ] の要素を繰り返すたびに <A> に代入する
for <D> in [ <c> , <b> , <a> ] :	リスト [ <c> , <b> , <a> ] の要素を繰り返すたびに <D> に代入する
<A> . append ( <B> )	リスト <A> の最後に <B> を追加する
<B> . append ( <A> )	リスト <B> の最後に <A> を追加する
<A> . append ( <B> )	<A> の後ろに <B> を追加する
<B> . append ( <A> )	<B> の後ろに <A> を追加する
<A> . append ( <B> )	<A> の最後に <B> を追加する
<B> . append ( <A> )	<B> の最後に <A> を追加する
<A> . append ( <B> )	<A> の末尾に <B> を追加する
<B> . append ( <A> )	<B> の末尾に <A> を追加する
del ( <A> [ <b> ] )	リスト <A> から <b> 番目の値を削除する
del ( <B> [ <a> ] )	リスト <B> から <a> 番目の値を削除する
del ( <A> [ <b> ] )	リスト <A> から <b> 番目の要素を削除する
del ( <B> [ <a> ] )	リスト <B> から <a> 番目の要素を削除する
del ( <A> [ <b> ] )	<A> から <b> 番目の要素を削除する
del ( <B> [ <a> ] )	<B> から <a> 番目の要素を削除する
del ( <A> [ <b> ] )	<A> から <b> 番目の値を削除する
del ( <B> [ <a> ] )	<B> から <a> 番目の値を削除する
<A> [ start : end ]	<A> の一部分を取り出す
<A> [ start : end ]	リスト <A> の一部分を取り出す
sum ( <A> )	数列 <A> の合計値
sum ( <A> )	<A> の総和
sum ( <A> )	<A> の合計
sum ( <A> )	<A> の総和値
sum ( <A> )	数列 <A> の合計
sum ( <A> )	<A> の合計値
sum ( <A> )	数列 <A> の総和
sum ( <A> )	<A> の総和
sum ( <A> )	数列 <A> の総和
sum ( <A> ) / len ( <A> )	数列 <A> の平均値
sum ( <A> ) / len ( <A> )	<A> の平均値値
sum ( <A> ) / len ( <A> )	数列 <A> の平均値値
sum ( <A> ) / len ( <A> )	<A> の平均
sum ( <A> ) / len ( <A> )	<A> の平均値
random . suffle ( <A> )	<A> をシャッフルする
random . suffle ( <A> )	リスト <A> をシャッフルする
<A> . keys ( )	辞書 <A> のキーの一覧を得る
<A> . keys ( )	ハッシュ表 <A> の項目名の一覧を得る
<A> . keys ( )	辞書 <A> のキーの一覧
<A> . keys ( )	辞書 <A> の項目名の一覧を得る
<A> . keys ( )	ハッシュ表 <A> の項目名の一覧
<A> [ <B> ]	辞書 <A> のキー <B> のデータを参照する
<B> [ <A> ]	辞書 <B> のキー <A> のデータを参照する
<A> [ <B> ]	辞書 <A> のキー <B> の値を参照する
<B> [ <A> ]	辞書 <B> のキー <A> の値を参照する
<A> [ <B> ]	<A> のキー <B> のデータ
<B> [ <A> ]	<B> のキー <A> のデータ
<A> [ <B> ]	マップ <A> のキー <B> のデータを参照する
<B> [ <A> ]	マップ <B> のキー <A> のデータを参照する
<A> [ <B> ]	辞書 <A> のキー <B> の値
<B> [ <A> ]	辞書 <B> のキー <A> の値
<A> [ <B> ]	辞書 <A> のキー <B> のデータ
<B> [ <A> ]	辞書 <B> のキー <A> のデータ
<A> [ <B> ]	<A> のキー <B> のデータを参照する
<B> [ <A> ]	<B> のキー <A> のデータを参照する
for key in <A> . keys ( ) : value = <A> [ key ]	辞書 <A> に入っている値を一つずつ処理する
for key in <A> . keys ( ) : value = <A> [ key ]	辞書 <A> に入っているデータを一つずつ処理する
for key in <A> . keys ( ) : value = <A> [ key ]	<A> に入っているデータを一つずつ処理する
math . ceil ( <A> )	実数 <A> の小数点以下を切り上げる
math . ceil ( <A> )	<A> の小数点以下を切り上げた整数
math . ceil ( <A> )	<A> の小数点以下を切り上げた整数値
math . ceil ( <A> )	<A> の小数点以下を切り上げた自然数
<A> in <B>	項目名 <A> が <B> に含まれているかどうか
<B> in <A>	項目名 <B> が <A> に含まれているかどうか
if <A> in <B> :	項目名 <A> が <B> に含まれているならば
if <B> in <A> :	項目名 <B> が <A> に含まれているならば
<A> in <B>	項目名 <A> が辞書 <B> に含まれているか
<B> in <A>	項目名 <B> が辞書 <A> に含まれているか
if <A> in <B> :	もし項目名 <A> が辞書 <B> に含まれているならば
if <B> in <A> :	もし項目名 <B> が辞書 <A> に含まれているならば
<A> in <B>	<A> が <B> に含まれているか
<B> in <A>	<B> が <A> に含まれているか
if <A> in <B> :	<A> が <B> に含まれている場合
if <B> in <A> :	<B> が <A> に含まれている場合
<A> in <B>	辞書 <B> に <A> が含まれているか否か
<B> in <A>	辞書 <A> に <B> が含まれているか否か
if <A> in <B> :	辞書 <B> に <A> が含まれている場合
if <B> in <A> :	辞書 <A> に <B> が含まれている場合
<A> in <B>	キー <A> が <B> にあるかどうか
<B> in <A>	キー <B> が <A> にあるかどうか
if <A> in <B> :	もしキー <A> が <B> にあるならば
if <B> in <A> :	もしキー <B> が <A> にあるならば
<A> in <B>	ハッシュ表 <B> にキー <A> が含まれているかどうか
<B> in <A>	ハッシュ表 <A> にキー <B> が含まれているかどうか
if <A> in <B> :	ハッシュ表 <B> にキー <A> が含まれている場合
if <B> in <A> :	ハッシュ表 <A> にキー <B> が含まれている場合
<A> in <B>	辞書 <B> に <A> が存在するか
<B> in <A>	辞書 <A> に <B> が存在するか
if <A> in <B> :	もし辞書 <B> に <A> が存在するならば
if <B> in <A> :	もし辞書 <A> に <B> が存在するならば
<A> in <B>	辞書 <B> にキー <A> が含まれているか否か
<B> in <A>	辞書 <A> にキー <B> が含まれているか否か
if <A> in <B> :	もし辞書 <B> にキー <A> が含まれているならば
if <B> in <A> :	もし辞書 <A> にキー <B> が含まれているならば
<A> in <B>	辞書 <B> に項目名 <A> が含まれているか
<B> in <A>	辞書 <A> に項目名 <B> が含まれているか
if <A> in <B> :	辞書 <B> に項目名 <A> が含まれているとき
if <B> in <A> :	辞書 <A> に項目名 <B> が含まれているとき
<A> in <B>	辞書 <B> に <A> 項目名があるかどうか
<B> in <A>	辞書 <A> に <B> 項目名があるかどうか
if <A> in <B> :	辞書 <B> に <A> 項目名があるならば
if <B> in <A> :	辞書 <A> に <B> 項目名があるならば
<A> in <B>	項目名 <A> が <B> 辞書に存在するか
<B> in <A>	項目名 <B> が <A> 辞書に存在するか
if <A> in <B> :	項目名 <A> が <B> 辞書に存在する場合
if <B> in <A> :	項目名 <B> が <A> 辞書に存在する場合
<A> in <B>	<A> が <B> マップに存在するか
<B> in <A>	<B> が <A> マップに存在するか
if <A> in <B> :	<A> が <B> マップに存在するとき
if <B> in <A> :	<B> が <A> マップに存在するとき
<A> in <B>	<A> が <B> 辞書に含まれているか否か
<B> in <A>	<B> が <A> 辞書に含まれているか否か
if <A> in <B> :	<A> が <B> 辞書に含まれているならば
if <B> in <A> :	<B> が <A> 辞書に含まれているならば
<A> in <B>	<A> が辞書 <B> に含まれているかどうか
<B> in <A>	<B> が辞書 <A> に含まれているかどうか
if <A> in <B> :	もし <A> が辞書 <B> に含まれているならば
if <B> in <A> :	もし <B> が辞書 <A> に含まれているならば
<A> in <B>	キー <A> が辞書 <B> に存在するかどうか
<B> in <A>	キー <B> が辞書 <A> に存在するかどうか
if <A> in <B> :	もしキー <A> が辞書 <B> に存在するならば
if <B> in <A> :	もしキー <B> が辞書 <A> に存在するならば
<A> not in date	ハッシュ表 d にキー <A> が存在しないか
if <A> not in date :	ハッシュ表 d にキー <A> が存在しないとき
<A> not in date	辞書 d にキー <A> が含まれていないか
if <A> not in date :	辞書 d にキー <A> が含まれていないならば
<A> not in date	キー <A> が d 辞書にないか
if <A> not in date :	キー <A> が d 辞書にないとき
<A> not in date	キー <A> が d にないか否か
if <A> not in date :	もしキー <A> が d にないならば
<A> not in date	辞書 d にキー <A> がないか否か
if <A> not in date :	もし辞書 d にキー <A> がないならば
<A> not in date	キー <A> が d 辞書に含まれていないか
if <A> not in date :	キー <A> が d 辞書に含まれていないならば
<A> not in date	キー <A> が辞書 d に存在しないか
if <A> not in date :	もしキー <A> が辞書 d に存在しないならば
<A> not in date	マップ d にキー <A> が含まれていないか
if <A> not in date :	もしマップ d にキー <A> が含まれていないならば
<A> not in date	キー <A> が辞書 d に含まれていないか
if <A> not in date :	キー <A> が辞書 d に含まれていない場合
<A> not in date	d にキー <A> がないか
if <A> not in date :	もし d にキー <A> がないならば
<A> . strip ( )	<A> の前後の空白を取り除く
<A> . strip ( )	文字列 <A> の前後の空白を除去する
<A> . strip ( )	文字列 <A> の前後の空白を取り除く
<A> . strip ( )	<A> の前後の空白を削除する
<A> . strip ( )	文字列 <A> の余分な改行を除去する
<A> . strip ( )	<A> の改行を取り除く
<A> . strip ( )	<A> の余分な改行を除去する
<A> . strip ( )	<A> の改行を消す
<A> . strip ( )	文字列 <A> の改行を削除する
<A> . strip ( )	<A> の余分な改行を取り除く
<A> . strip ( )	<A> の余分な改行を削除する
<A> . strip ( )	<A> の余分な改行を消す
<A> . split ( ',' )	<A> をカンマで区切る
<A> . split ( ',' )	カンマで文字列 <A> を区切る
<A> . split ( ',' )	カンマで <A> 文字列を区切る
<A> . split ( ',' )	カンマで <A> を区切る
<A> . split ( ',' )	文字列 <A> をカンマで区切る
<A> . split ( ',' )	<A> ( 文字列をカンマで分割した文字列のリスト
<A> . split ( ',' )	カンマで <A> ( 文字列を分割した文字列のリスト
<A> . split ( <b> )	<b> で <A> を区切る
<B> . split ( <a> )	<a> で <B> を区切る
<A> . split ( <b> )	<A> を <b> で区切る
<B> . split ( <a> )	<B> を <a> で区切る
<A> . split ( <b> )	文字列 <A> を <b> で区切る
<B> . split ( <a> )	文字列 <B> を <a> で区切る
<A> . split ( <b> )	<b> で <A> 文字列を区切る
<B> . split ( <a> )	<a> で <B> 文字列を区切る
<A> . split ( <b> )	<b> で <A> を分割した文字列のリスト
<B> . split ( <a> )	<a> で <B> を分割した文字列のリスト
<A> . split ( <b> )	<b> で文字列 <A> を分割した文字列のリスト
<B> . split ( <a> )	<a> で文字列 <B> を分割した文字列のリスト
<A> . split ( <b> )	文字列 <A> を <b> で分割した文字列のリスト
<B> . split ( <a> )	文字列 <B> を <a> で分割した文字列のリスト
<A> . split ( <b> )	<A> を <b> で分割した文字列のリスト
<B> . split ( <a> )	<B> を <a> で分割した文字列のリスト
sorted ( <A> )	小さい順に <A> を並べ直す
sorted ( <A> )	昇順に <A> を並べ直す
sorted ( <A> )	小さい順に <A> を並べる
sorted ( <A> )	<A> を整列する
sorted ( <A> )	<A> を並べ直す
sorted ( <A> )	小さい順に <A> を整列する
sorted ( <A> )	<A> を並べ変える
sorted ( <A> )	<A> を小さい順に並べる
sorted ( <A> )	<A> を小さい順に並べ変える
sorted ( <A> )	<A> を昇順に並べる
sorted ( <A> )	<A> を小さい順に整列する
sorted ( <A> )	<A> を並べる
sorted ( <A> )	<A> を並べ変えた列
sorted ( <A> )	<A> を整列した列
sorted ( <A> )	<A> を小さい順にソートした列
sorted ( <A> )	<A> を並べ直した列
sorted ( <A> )	<A> をソートした列
sorted ( <A> )	昇順に <A> をソートした列
sorted ( <A> , reverse = True )	<A> を逆順に並べ変える
sorted ( <A> , reverse = True )	大きい順に <A> を並べ直す
sorted ( <A> , reverse = True )	<A> を逆順に並べる
sorted ( <A> , reverse = True )	<A> を大きい順に並べ変える
sorted ( <A> , reverse = True )	<A> を大きい順にソートする
sorted ( <A> , reverse = True )	<A> を降順に並べる
sorted ( <A> , reverse = True )	<A> を降順に整列する
sorted ( <A> , reverse = True )	<A> を大きい順に並べる
sorted ( <A> , reverse = True )	大きい順に <A> を整列する
sorted ( <A> , reverse = True )	大きい順に <A> をソートする
sorted ( <A> , reverse = True )	降順に <A> を並べる
sorted ( <A> , reverse = True )	逆順に <A> を並べ直す
sorted ( <A> , reverse = True )	大きい順に <A> を並べ変える
sorted ( <A> , reverse = True )	逆順に <A> を並べる
sorted ( <A> , reverse = True )	<A> を降順に並べ変える
sorted ( <A> , reverse = True )	<A> を降順に並べ直す
sorted ( <A> , reverse = True )	大きい順に <A> を並べる
sorted ( <A> , reverse = True )	逆順に <A> を並べ直した列
sorted ( <A> , reverse = True )	<A> を大きい順に整列した列
sorted ( <A> , reverse = True )	逆順に <A> をソートした列
sorted ( <A> , reverse = True )	逆順に <A> を整列した列
sorted ( <A> , reverse = True )	降順に <A> を整列した列
sorted ( <A> , reverse = True )	<A> を逆順に並べ直した列
sorted ( <A> , reverse = True )	<A> を降順に並べ変えた列
sorted ( <A> , reverse = True )	大きい順に <A> をソートした列
sorted ( <A> , reverse = True )	降順に <A> を並べた列
sorted ( <A> , reverse = True )	降順に <A> を並べ変えた列
sorted ( <A> , reverse = True )	<A> を大きい順にソートした列
sorted ( <A> , reverse = True )	降順に <A> をソートした列
datetime . date . today ( )	Python を実行した日付
datetime . date . today ( )	プログラムを実行した日付
datetime . date . today ( )	今日の日付
datetime . date . today ( )	本日の日付
datetime . date . today ( ) . year	プログラムを実行した年
datetime . date . today ( ) . year	Python を実行した年
datetime . date . today ( ) . year	今日の年
datetime . date . today ( ) . year	本日の年
datetime . date . today ( ) . month	Python を実行した月
datetime . date . today ( ) . month	プログラムを実行した月
datetime . date . today ( ) . month	本日の月
datetime . date . today ( ) . month	今日の月
datetime . date . today ( ) . day	Python を実行した日
datetime . date . today ( ) . day	プログラムを実行した日
datetime . date . today ( ) . day	本日の日
datetime . date . today ( ) . day	今日の日
<A> . year	<A> の年
<A> . month	<A> の月
<A> . day	<A> の日
datetime . datetime . now ( )	Python を実行したタイムスタンプ
datetime . datetime . now ( )	Python を実行したエポックタイム
datetime . datetime . now ( )	プログラムを実行したエポックタイム
datetime . datetime . now ( )	Python を実行したエポック
datetime . datetime . now ( )	プログラムを実行したエポック
datetime . datetime . now ( )	プログラムを実行したタイムスタンプ
datetime . datetime . now ( )	本日のエポックタイム
datetime . datetime . now ( )	本日のエポック
datetime . datetime . now ( )	今日のタイムスタンプ
datetime . datetime . now ( )	今日のエポック
datetime . datetime . now ( )	今日のエポックタイム
