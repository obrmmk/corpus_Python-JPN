x = y	yをxに代入する
x = y	xをyとする
x = y	xはyである
x, y = y, x	xとyの値をスワップする
x, y = y, x	xとyの値を入れ替える
x, y = y, x	xとyを入れ替える
x % 2 == 0	xが偶数か否か
if x % 2 == 0:	xが偶数のとき
x % 2 == 1	xが奇数か
if x % 2 == 1:	xが奇数のとき
x % 2 != 0	xが奇数か
if x % 2 != 0:	xが奇数のとき
x % 2 != 1	xが偶数か否か
if x % 2 != 1:	xが偶数ならば
x % y == 0	xがyの倍数か否か
if x % y == 0:	もしxがyの倍数ならば
x % y == 0	xがyの倍数でないか否か
if x % y == 0:	もしxがyの倍数でないならば
x == y	xがyに等しいか
if x == y:	xがyに等しいならば
x != y	xがyに等しくないか
if x != y:	xがyに等しくないならば
x is y	xがyと同じか
if x is y:	xがyと同じのとき
x is not y	xがyと同じでないかどうか
if x is not y:	xがyと同じでないとき
x is not y	xがyと同一でないか
if x is not y:	もしxがyと同一でないならば
x in y	xがy中に存在するか
if x in y:	xがy中に存在するならば
x in y	xがy内に含まれるか否か
if x in y:	xがy内に含まれるならば
x in y	xがy中にあるか
if x in y:	xがy中にあるとき
x in y	xがyに存在するか
if x in y:	xがyに存在するならば
x in y	xがy内に存在するか
if x in y:	xがy内に存在する場合
x in y	xがyにあるか否か
if x in y:	xがyにあるならば
x in y	xがy中に含まれるかどうか
if x in y:	もしxがy中に含まれるならば
x not in y	xがy中に含まれないか
if x not in y:	xがy中に含まれないならば
x not in y	xがy内にないか
if x not in y:	xがy内にない場合
x not in y	xがy内に存在しないか
if x not in y:	xがy内に存在しないとき
x not in y	xがy内に含まれないか否か
if x not in y:	xがy内に含まれない場合
x not in y	xがy中に存在しないか
if x not in y:	xがy中に存在しないとき
x not in y	xがyに含まれないか
if x not in y:	xがyに含まれないとき
x ** y	xのy乗
x | y	xとyの論理和
x ^ y	xとyの排他的論理和
x & y	xとyの論理積
x << n	xのnビット左シフト
x >> n	xのnビット右シフト
~x	xのビット反転
x += y	xをy多くする
x += y	xをyだけ多くする
x += y	xをyだけ増やす
x += y	xをy増加させる
x += y	xをy増やす
x += y	xをyだけ増加させる
x += 1	xを1つ増やす
x += 1	xを1つ多くする
x += 1	xを1つ増加させる
x -= y	xをyだけ減少させる
x -= y	xをyだけ少なくする
x -= y	xをy減少させる
x -= y	xをy減らす
x -= y	xをyだけ減らす
x -= 1	xを1つ減少させる
x -= 1	xを1つ減らす
x -= 1	xを1つ少なくする
x *= y	xをy倍にする
x /= y	xをy分の1にする
x //= y	xをy分の1にする
x //= y	xを切り捨てながらy分の1にする
x /= 2	xを半分にする
x //= 2	xを切り捨てながら半分にする
x //= 2	xを半分にする
x **= y	xをy乗にする
x %= y	xをyで割った余りにする
x %= y	xをyの剰余にする
x |= y	xをyとの論理和にする
x &= y	xをyとの論理積にする
x ^= y	xをyとの排他論理和にする
x <<= y	xをyビット左にシフトする
x <<= y	xをyビット、左シフトする
x >>= y	xをyビット右にシフトする
x >>= y	xをyビット、右シフトする
abs(x)	xの絶対値
bool(x)	xが真か
if bool(x):	xが真ならば
not bool(x)	xが真でないかどうか
if bool(x) :	もしxが真場合
if not bool(x) :	もしxが真でない場合
while bool(x) :	xが真間
while not bool(x) :	xが真でない間
complex(x, y)	x,yの複素数
divmod(x, y)	xとyの商と余り
divmod(x, y)[0]	xとyの商
divmod(x, y)[1]	xとyの余り
float(x)	浮動小数点数にxを変換する
float(x)	xを小数点数に変換する
float(x)	xを実数にする
float(x)	小数点数にxを変換する
float(x)	xを数にする
float(x)	数にxをする
float(x)	浮動小数点数にxをする
float(x)	xを浮動小数点数にする
float(x)	数にxを変換する
float(x)	xを小数点数にする
float(x)	xの数
float(x)	xの浮動小数点数
float(x)	xの小数点数
float(x)	xの実数
int(x)	整数にxをする
int(x)	整数にxを変換する
int(x)	xを整数値に変換する
int(x)	自然数にxをする
int(x)	整数値にxをする
int(x)	xを自然数にする
int(x)	xを変換した整数値
int(x)	xの整数値
int(s, 2)	2進数文字列sから整数に変換する
int(s, 2)	2進数表記sから自然数にする
int(s, 2)	2進数表記sから整数に変換する
int(s, 2)	2進数表記sから自然数に変換する
int(s, 2)	2進数表記sから整数にする
int(s, 2)	2進数表記sから整数値にする
int(s, 2)	2進数文字列sから整数値に変換する
int(s, 2)	2進数文字列sから整数値にする
int(s, 2)	文字列sを2進数として整数値にする
int(s, 2)	2進数としてsを整数にする
int(s, 2)	sを2進数として整数に変換する
int(s, 2)	2進数として文字列sを自然数に変換する
int(s, 2)	2進数として文字列sを整数値にする
int(s, 2)	sを2進数として整数値に変換する
int(s, 2)	2進数としてs文字列を自然数に変換する
int(s, 2)	sを2進数として整数値にする
int(s, 2)	文字列sを2進数として整数にする
int(s, 2)	2進数としてsを自然数にする
int(s, 2)	sを2進数として自然数にする
int(s, 2)	2進数表記sから変換した自然数
int(s, 2)	2進数表記sから変換した整数値
int(s, 2)	2進数表記sから変換した整数
int(s, 2)	2進数表現sから変換した整数
int(s, 2)	2進数文字列sから変換した整数
ord(c)	cのコードポイント
ord(c)	cの文字コード
max(x)	数列xの最大値
max(x)	xの最大値
max(x, y)	xとyの大きな方
max(x, y)	xとyの最大値
max(x, y)	xとyの大きな値
max(x, y, z)	x,y,zの最大値
min(x)	xの最小値
min(x)	数列xの最小値
min(x, y)	xとyの小さな方
min(x, y)	xとyの最小値
min(x, y)	xとyの小さな値
min(x, y, z)	x,y,zの最小値
pow(x, y)	xのy乗
pow(x, y, z)	xのy乗をzで剰余した値
round(x)	xを丸める
round(x)	xを四捨五入する
round(x)	xを四捨五入した整数
round(x)	xを丸めた整数
round(x)	xを丸めた自然数
round(x)	xを丸めた整数値
round(x)	xを四捨五入した整数値
round(x, n)	xを少数部n桁まで丸める
round(x, n)	xを少数部n桁で四捨五入する
round(x, n)	xを少数部n桁で丸める
round(x, n)	xを少数部n桁まで四捨五入する
round(x, n)	xの少数部をn桁で四捨五入した整数
round(x, n)	xの少数部をn桁で丸めた整数値
round(x, n)	xの少数部をn桁で四捨五入した整数値
round(x, n)	xの少数をn桁まで四捨五入した整数
round(x, n)	xの少数をn桁まで丸めた整数
round(x, n)	xの少数をn桁まで四捨五入した整数値
round(x, n)	xの少数をn桁で丸めた整数
round(x, n)	xの少数をn桁で丸めた自然数
round(x, n)	xの少数部をn桁まで四捨五入した整数
round(x, n)	xの少数をn桁で丸めた整数値
round(x, n)	xの少数部をn桁まで四捨五入した整数値
math.trunc(x)	xの少数部を切り捨てる
math.trunc(x)	xの少数を切り捨てる
math.trunc(x)	xを切り捨てる
math.trunc(x)	xを切り捨てた整数
math.trunc(x)	xの少数を切り捨てた整数
math.trunc(x)	xの少数を切り捨てた自然数
math.trunc(x)	xの少数部を切り捨てた整数
math.trunc(x)	xを切り捨てた整数値
math.trunc(x)	xの少数部を切り捨てた整数値
math.floor(x)	xの少数を切り上げる
math.floor(x)	xを切り上げる
math.floor(x)	x以下の最大の整数値
math.floor(x)	x以下の最大の整数
math.floor(x)	x以下の最大の自然数
math.floor(x)	x以下の最大な整数
math.floor(x)	x以下の最大な整数値
math.floor(x)	x以下の最大な自然数
math.floor(x)	xの少数を切り上げた自然数
math.floor(x)	xの少数を切り上げた整数
math.floor(x)	xを切り上げた整数
math.floor(x)	xを切り上げた整数値
math.floor(x)	xの少数部を切り上げた自然数
math.floor(x)	xの少数部を切り上げた整数
math.floor(x)	xの少数を切り上げた整数値
math.ceil(x)	xを切り捨てる
math.ceil(x)	xの少数部を切り捨てる
math.ceil(x)	xの少数を切り捨てる
math.ceil(x)	x以上の最小な整数
math.ceil(x)	x以上の最小の整数
math.ceil(x)	x以上の最小な自然数
math.ceil(x)	x以上の最小の自然数
math.ceil(x)	x以上の最小な整数値
math.ceil(x)	xの少数部を切り捨てた整数
math.ceil(x)	xを切り捨てた整数
math.ceil(x)	xの少数を切り捨てた自然数
math.ceil(x)	xの少数を切り捨てた整数
math.ceil(x)	xの少数部を切り捨てた整数値
math.ceil(x)	xの少数部を切り捨てた自然数
ascii(x)	xを印字できる文字列にする
ascii(x)	xの印字可能な文字列
bin(x)	xを2進数文字列にする
bin(x)	xを2進数表記にする
bin(x)	xを2進数表現にする
bin(x)	xの2進数文字列
hex(x)	xを16進数文字列にする
hex(x)	xを16進数表記にする
hex(x)	xを16進数表現にする
hex(x)	xの16進数文字列
oct(x)	xを8進数表記にする
oct(x)	xを8進数表現にする
oct(x)	xを8進数文字列にする
oct(x)	xの8進数文字列
chr(c)	文字コードcの文字
chr(c)	cの文字
chr(c)	コードポイントcの文字
chr(c)	文字コードcを文字にする
chr(c)	cを文字に変換する
chr(c)	cを文字にする
chr(c)	コードポイントcを文字に変換する
chr(c)	コードポイントcを文字にする
chr(c)	文字コードcを文字に変換する
repr(object)	objectの印字可能な文字列
repr(object)	objectの印字できる文字列
repr(object)	objectの印字文字列
str(x)	xを文字列に変換する
str(x)	xを文字列にする
str(x)	xの文字列
all(iterable)	iterableの全てが真か否か
if all(iterable):	iterableの全てが真のとき
not all(iterable)	iterableの全てが真でないか
if all(iterable) :	もしiterableの全てが真とき
if not all(iterable) :	もしiterableの全てが真でないならば
while all(iterable) :	iterableの全てが真間
while not all(iterable) :	iterableの全てが真でない間
all(iterable)	iterableが全て真か否か
if all(iterable):	もしiterableが全て真ならば
not all(iterable)	iterableが全て真でないかどうか
if all(iterable) :	iterableが全て真とき
if not all(iterable) :	iterableが全て真でないならば
while not all(iterable) :	iterableが全て真でない間
any(iterable)	iterableのいずれかが真か
if any(iterable):	iterableのいずれかが真の場合
not any(iterable)	iterableのいずれかが真でないか
if any(iterable) :	iterableのいずれかが真場合
if not any(iterable) :	もしiterableのいずれかが真でない場合
while any(iterable) :	iterableのいずれかが真間
while not any(iterable) :	iterableのいずれかが真でない間
any(iterable)	iterableのひとつでも真かどうか
if any(iterable):	iterableのひとつでも真の場合
not any(iterable)	iterableのひとつでも真でないか
if any(iterable) :	もしiterableのひとつでも真場合
if not any(iterable) :	iterableのひとつでも真でないとき
while not any(iterable) :	iterableのひとつでも真でない間
enumerate(x)	xを番号付けする
enumerate(x)	xをナンバリングする
enumerate(x)	xを順序付けする
enumerate(x)	xを順番付けする
enumerate(x)	xの順序列
enumerate(x)	xの順序付けされた列
enumerate(x)	xの順番を数える
enumerate(x)	xの順序を数える
enumerate(x, y)	xをyから順序付けする
enumerate(x, y)	xをyからナンバリングする
enumerate(x, y)	xをyから順番付けする
enumerate(x, y)	yからxをナンバリングする
enumerate(x, y)	yからxを順序付けする
enumerate(x, y)	xをyから番号付けする
enumerate(x, y)	xのyから開始する順序付けされた列
enumerate(x, y)	xのyから始まる順序付けされた列
enumerate(x, y)	xのyから開始する順序列
enumerate(x, y)	xのyから順序を数える
enumerate(x, y)	xのyから順番を数える
enumerate(x, y)	xの順序をyから数える
iter(x)	xのイテレータ
len(x)	xの長さ
len(x)	xのサイズ
len(x)	xの要素数
len(x) == 0	xが空であるか否か
if len(x) == 0:	xが空であるならば
len(x) != 0	xが空であるでないか
if len(x) == 0 :	xが空であるならば
if len(x) != 0 :	xが空であるでないならば
while len(x) == 0 :	xが空である間
len('abc')	文字列'abc'の文字数
len('abc')	'abc'の文字数
len('abc')	'abc'文字列の文字数
list(x)	xのリスト
range(x)	0からxまでの数列
range(x, y)	xからyまでの数列
range(x, y, z)	xからyまでのz間隔の数列
reversed(x)	xを逆順にする
reversed(x)	xの逆順
set()	空集合
set(x)	xの集合
slice(x)	0からxまでの部分列
slice(x)	0からxまでのスライス
slice(x, y)	xからyまでの部分列
slice(x, y)	xからyまでのスライス
slice(x, y, z)	xからyまでのzごとによるスライス
sum(x)	数列xの総和
sum(x)	xの総和
sum(x)	数列xの合計
sum(x)	数列xの合計値
sum(x)	xの合計値
sum(x)	xの合計
sum(x)/len(x)	xの平均
sum(x)/len(x)	数列xの平均
sum(x)/len(x)	数列xの平均値
sum(x)/len(x)	xの平均値
tuple(x)	xのタプル
tuple(x)	xの組
zip(x, y)	列xとyの各要素のペア
zip(x, y)	xとyをzipする
zip(x, y, z)	列x,y,zの各要素のタプル
zip(x, y, z)	列x,y,zの各要素の組
dict(x)	xの辞書
dict[key]	辞書dictのキーkeyの値
dict[key]	dictのkey項目名の値
dict[key]	辞書dictのkeyの値
dict[key]	辞書dictのkeyキーの値
dict[key]	辞書dictのキーkeyを参照した値
dict[key]	辞書dictのkey項目名を参照した値
dict[key]	ハッシュ表dictの項目名keyを参照した値
dict[key]	辞書dictのkeyキーを参照した値
dict[key]	dictのkeyを参照した値
dict[key]	dictのキーkeyを参照した値
dict[key]	辞書dictのkeyを参照した値
dict[key]	マップdictのキーkeyを参照した値
dict[key]	マップdictのkeyを参照した値
list(dict)	dictの項目名一覧
list(dict)	マップdictの項目名一覧
list(dict)	辞書dictのキー一覧
list(dict)	マップdictのキー一覧
len(dict)	辞書dictの項目数
len(dict)	dictのエントリ数
len(dict)	辞書dictのエントリ数
len(dict)	辞書dictの値数
len(dict)	マップdictの値数
len(dict)	ハッシュ表dictの項目数
dict.clear()	辞書dictの全値を消去する
dict.clear()	辞書dictの全エントリを消去する
dict.clear()	辞書dictの全項目を消去する
dict.clear()	dictの全項目を消去する
dict.copy()	dictのコピー
dict.copy()	マップdictの浅いコピー
dict.copy()	辞書dictのコピー
dict.copy()	マップdictのコピー
dict.copy()	ハッシュ表dictのコピー
dict.copy()	辞書dictの浅いコピー
dict.get(key)	辞書dictからkeyの値を得る
dict.get(key)	辞書dictからkeyキーの値を得る
dict.get(key)	辞書dictから項目名keyの値を得る
dict.get(key)	辞書dictからキーkeyの値を得る
dict.get(key)	ハッシュ表dictからkeyの値を得る
dict.get(key)	ハッシュ表dictからキーkeyの値を得る
dict.get(key)	辞書dictにおけるkey(キー)に対応した値
dict.get(key, x)	辞書dictのkeyの値、もし存在しなければxを得る
dict.get(key, x)	辞書dictのkeyの値、もしなければxを得る
dict.get(key, x)	辞書dictのkey項目名の値、もしなければxを得る
dict.get(key, x)	ハッシュ表dictのキーkeyの値、もし存在しなければxを得る
dict.get(key, x)	ハッシュ表dictの項目名keyの値、もし存在しなければxを得る
dict.get(key, x)	辞書dictのキーkeyの値、もし存在しなければxを得る
dict.get(key, x)	辞書dictのkeyキーの値、もしなければxを得る
dict.get(key, x)	辞書dictのキーkeyの値、もしなければxを得る
dict.get(key, x)	辞書dictの項目名keyの値、もし存在しなければxを得る
dict.get(key, x)	辞書dictのkey項目名の値、もし存在しなければxを得る
dict.get(key, x)	辞書dictのkeyキーの値、もし存在しなければxを得る
dict.items()	辞書dictの値一覧
dict.items()	ハッシュ表dictの項目一覧
dict.items()	辞書dictのエントリ一覧
dict.items()	ハッシュ表dictの値一覧
dict.items()	辞書dictの項目一覧
dict.keys()	辞書dictのキー一覧
dict.keys()	ハッシュ表dictの項目名一覧
dict.keys()	ハッシュ表dictのキー一覧
dict.keys()	dictのキー一覧
dict.keys()	辞書dictの項目名一覧
dict.pop(key)	辞書dictのキーkeyを取り出す
dict.pop(key)	辞書dictのkeyを取り出す
dict.pop(key)	マップdictのkeyキーを取り出す
dict.pop(key)	マップdictのキーkeyを取り出す
dict.pop(key)	ハッシュ表dictのkeyキーを取り出す
dict.pop(key)	辞書dictのkey項目名を取り出す
dict.pop(key)	辞書dictの項目名keyを取り出す
dict.popitem()	辞書dictから最後に追加したエントリを取り出す
dict.setdefault(key, x)	dict中にエントリkeyが存在しなければ、そのエントリをxにする
dict.setdefault(key, x)	dictにkeyエントリがなければ、そのエントリをxにする
dict.setdefault(key, x)	dictにkeyがなければ、その項目をxにする
dict.setdefault(key, x)	dict内にkeyエントリが存在しなければ、そのエントリをxにする
dict.setdefault(key, x)	dict中にkeyエントリが存在しなければ、そのエントリをxにする
dict.setdefault(key, x)	dict内にkey項目が存在しなければ、その項目をxにする
dict.setdefault(key, x)	dict中にkeyエントリがなければ、そのエントリをxにする
dict.setdefault(key, x)	dict内に値keyが存在しなければ、その値をxにする
dict.setdefault(key, x)	dict中にkeyがなければ、その項目をxにする
dict.setdefault(key, x)	dict内にkey項目がなければ、その項目をxにする
dict.setdefault(key, x)	dict内にkeyが存在しなければ、その項目をxにする
dict.setdefault(key, x)	dictにkeyエントリが存在しなければ、そのエントリをxにする
dict.setdefault(key, x)	dictにkeyがなければ、その値をxにする
dict.setdefault(key, x)	dict中にkey項目がなければ、その項目をxにする
dict.setdefault(key, x)	dict内にkeyが存在しなければ、そのエントリをxにする
dict.setdefault(key, x)	dict中にkey項目が存在しなければ、その項目をxにする
dict.setdefault(key, x)	dict中にkeyが存在しなければ、そのエントリをxにする
dict.setdefault(key, x)	dict中にkeyがなければ、そのエントリをxにする
dict.setdefault(key, x)	dict中にエントリkeyがなければ、そのエントリをxにする
dict.update(x)	辞書dictをxで更新する
dict.update(x)	辞書dictをxでアップデートする
dict.values()	辞書dictの値一覧
dict.values()	ハッシュ表dictの値一覧
dict.values()	マップdictの値一覧
dict | dict2	辞書dictとdict2をマージする
dict | dict2	辞書dictとdict2を一つにまとめる
dict | dict2	マップdictとdict2を一つにまとめる
dict | dict2	dictとdict2を一つにまとめる
dict | dict2	辞書dictとdict2を結合する
dict |= dict2	辞書dict2をdict辞書に追加する
dict |= dict2	辞書dict2を辞書dictに追加する
dict |= dict2	ハッシュ表dict2をdictに加える
dict |= dict2	辞書dictにハッシュ表dict2を追加する
dict |= dict2	辞書dict2を辞書dictに加える
dict |= dict2	辞書dict2をdictハッシュ表に追加する
dict |= dict2	dictにdict2を追加する
dict |= dict2	マップdictにdict2を追加する
dict |= dict2	辞書dictにdict2辞書を追加する
dict |= dict2	ハッシュ表dictにdict2を加える
dict |= dict2	マップdictにdict2辞書を加える
dict |= dict2	dict2をdictに加える
dict |= dict2	ハッシュ表dict2をdict辞書に追加する
dict |= dict2	辞書dict2をマップdictに加える
dict |= dict2	辞書dict2をdictに加える
dict |= dict2	辞書dictに辞書dict2を加える
dict |= dict2	dict2を辞書dictに加える
dict |= dict2	dictにdict2を加える
dict |= dict2	辞書dictにdict2を追加する
bytearray(x)	xのバイト配列
bytes(x)	xのバイト列
input()	入力された文字列
input(s)	sに対し、入力された文字列
input(s)	プロンプトsに対し、入力された文字列
memoryview(x)	xのメモリビュー
open(filename)	ファイル名filenameを開く
open(filename)	ファイルfilenameを開く
open(filename)	filenameをオープンする
open(filename)	ファイルパスfilenameを開く
open(filename)	ファイルfilenameをオープンする
open(filename)	filenameを開く
open(filename)	ファイル名filenameをオープンする
open(filename)	ファイル名filenameを読み込む
open(filename)	ファイルパスfilenameを読む
open(filename)	パスfilenameを読み込む
open(filename)	ファイルfilenameを読む
open(filename)	ファイル名filenameを読む
open(filename)	ファイルパスfilenameを読み込む
with open(filename) as f:	パスfilenameをオープンし、fとする
with open(filename) as f:	filenameをオープンし、fとする
with open(filename) as f:	ファイルfilenameをオープンし、fとする
with open(filename) as f:	ファイル名filenameをオープンし、fとする
with open(filename) as f:	ファイルパスfilenameをオープンし、fとする
open(filename, 'r')	読み込み用にでfilenameパスを開く
open(filename, 'r')	ファイルfilenameを読み込みモードででオープンする
open(filename, 'r')	読み込みモードででfilenameファイル名をオープンする
open(filename, 'r')	filenameを読み込みモードでで開く
open(filename, 'r')	filenameを読み込み用にでオープンする
open(filename, 'r')	ファイル名filenameを読み込み用にで開く
open(filename, 'r')	ファイルfilenameを読み込み用にで開く
open(filename, 'r')	読み込み用にでファイルパスfilenameを開く
open(filename, 'r')	読み込み用にでファイルfilenameを開く
open(filename, 'r')	読み込みモードででファイルfilenameをオープンする
open(filename, 'r')	パスfilenameを読み込みモードでで開く
open(filename, 'r')	ファイル名filenameを読み込みモードででオープンする
open(filename, 'r')	読み込みモードででfilenameを開く
open(filename, 'r')	ファイルfilenameを読み込みモードでで開く
open(filename, 'r')	読み込みモードででfilenameファイルをオープンする
open(filename, 'r')	読み込み用にでfilenameファイル名をオープンする
open(filename, 'r')	ファイル名filenameを'r'モードででオープンする
open(filename, 'r')	filenameを'r'モードででオープンする
open(filename, 'r')	'r'モードでfilenameファイルをでオープンする
open(filename, 'r')	ファイルfilenameを'r'モードででオープンする
open(filename, 'w')	ファイルfilenameを書き込みモードでオープンする
open(filename, 'w')	ファイルパスfilenameを書き込みモードでオープンする
open(filename, 'w')	ファイル名filenameを書き込みモードで開く
open(filename, 'w')	ファイル名filenameを保存用に開く
open(filename, 'w')	保存用にファイルfilenameをオープンする
open(filename, 'w')	ファイルパスfilenameを書き込みモードで開く
open(filename, 'w')	保存用にfilenameを開く
open(filename, 'w')	書き込み用にファイル名filenameを開く
open(filename, 'w')	保存用にファイルパスfilenameを開く
open(filename, 'w')	書き込みモードでfilenameをオープンする
open(filename, 'a')	ファイルfilenameを追加用にオープンする
open(filename, 'a')	ファイルfilenameを追加モードで開く
open(filename, 'a')	追加モードでfilenameファイル名を開く
open(filename, 'a')	追加用にfilenameをオープンする
open(filename, 'a')	追加モードでfilenameファイル名をオープンする
open(filename, 'a')	パスfilenameを追加モードで開く
open(filename, 'a')	ファイルパスfilenameを追加モードでオープンする
open(filename, 'a')	パスfilenameを追加用に開く
open(filename, 'a')	追加用にfilenameパスをオープンする
open(filename, 'a')	ファイル名filenameを追加用にオープンする
open(filename, 'a')	ファイル名filenameを追加モードで開く
open(filename, 'a')	追加用にファイル名filenameを開く
open(filename, 'a')	追加用にfilenameを開く
open(filename, 'a')	ファイル名filenameを追加用に開く
open(filename, 'b')	パスfilenameをバイナリモードで開く
open(filename, 'b')	バイナリモードでfilenameをオープンする
open(filename, 'b')	パスfilenameをバイナリモードでオープンする
open(filename, 'b')	バイナリモードでfilenameファイル名をオープンする
open(filename, 'b')	バイナリ用にfilenameファイルパスをオープンする
open(filename, 'b')	ファイルパスfilenameをバイナリモードで開く
open(filename, 'b')	バイナリ用にfilenameを開く
open(filename, 'b')	ファイル名filenameをバイナリ用に開く
open(filename, 'b')	filenameをバイナリ用にオープンする
open(filename, 'b')	ファイルパスfilenameをバイナリ用に開く
open(filename, 'b')	パスfilenameをバイナリ用に開く
open(filename, 'b')	バイナリ用にファイルパスfilenameをオープンする
open(filename, 'b')	バイナリ用にfilenameファイルを開く
open(filename, 'b')	バイナリ用にfilenameファイル名をオープンする
open(filename, 'b')	ファイルfilenameをバイナリモードでオープンする
open(filename, 'b')	バイナリモードでfilenameファイル名を開く
open(filename, 'b')	バイナリ用にパスfilenameを開く
open(filename, 'b')	ファイル名filenameをバイナリ用にオープンする
open(filename, 'b')	ファイルfilenameをバイナリ用に開く
open(filename, 'b')	バイナリモードでfilenameファイルを開く
open(filename, 'b')	filenameをバイナリモードでオープンする
open(filename, 'b')	バイナリモードでファイルfilenameをオープンする
open(filename, 'b')	バイナリモードでファイルパスfilenameをオープンする
open(filename, 'b')	ファイル名filenameをバイナリモードで開く
open(filename, 'b')	バイナリ用にファイル名filenameを開く
open(filename, 'b')	バイナリモードでfilenameを開く
open(filename, 'b')	ファイル名filenameをバイナリモードでオープンする
open(filename, 'b')	ファイルパスfilenameをバイナリ用にオープンする
print()	空行を表示する
print()	空行をプリントする
print()	空行を出力する
print(x)	xを表示する
print(x)	xを出力する
print(x, y)	xと順にyを出力する
print(x, y)	xとyを出力する
print(x, y)	xとyを順に出力する
print(x, y, z)	x、y、zを出力する
print(x, y, z)	x、y、zを順に出力する
print(x, y, z)	x、y、zを表示する
print(x, y, z)	x、y、zを順に表示する
print(x, y, z)	x、y、zをプリントする
print(x, y, z)	x、y、順にzをプリントする
print(x, end='')	xを
print(x, y, end='')	xとyを改行なく出力する
print(x, y, end='')	xとyを改行せず出力する
print(x, y, end='')	xとyを改行なく表示する
print(x, y, z, end='')	x、y、zを出力する
print(x, y, z, end='')	x、y、zを改行なく出力する
print(x, y, z, end='')	x、y、zを表示する
print(x, y, z, end='')	x、y、zを改行せず][順に表示する
print(x, y, z, end='')	x、y、zを改行なく表示する
print(x, y, z, end='')	x、y、zを改行せず][順に出力する
callable(x)	xが関数かどうか
if callable(x):	xが関数ならば
eval(s)	式sを評価した結果
globals()	グローバル変数の一覧
filter(function, x)	列xをfunctionでフィルタする
filter(function, x)	xの各要素をfunctionでフィルタする
filter(function, x)	列xの各要素をfunction関数でフィルタする
filter(function, x)	関数functionで列xをフィルタする
filter(function, x)	xのそれぞれをfunctionでフィルタする
filter(function, x)	xのそれぞれを関数functionでフィルタする
filter(function, x)	列xの各要素を関数functionでフィルタする
filter(function, x)	関数functionでxをフィルタする
filter(function, x)	functionでx列の各要素をフィルタする
filter(function, x)	functionで列xをフィルタする
filter(function, x)	functionでxをフィルタする
filter(function, x)	関数functionで列xのそれぞれをフィルタする
filter(function, x)	xを関数functionでフィルタする
map(function, x)	関数functionで列xのそれぞれをマップする
map(function, x)	関数functionでxをマップする
map(function, x)	xのそれぞれをfunctionでマップする
map(function, x)	列xをfunction関数でマップする
map(function, x)	列xの各要素を関数functionでマップする
map(function, x)	xの各要素を関数functionでマップする
map(function, x)	functionでx列のそれぞれをマップする
map(function, x)	列xのそれぞれをfunctionでマップする
map(function, x)	functionでx列をマップする
map(function, x)	functionで列xの各要素をマップする
map(function, x)	functionで列xをマップする
map(function, x)	列xの各要素をfunction関数でマップする
map(function, x)	xを関数functionでマップする
map(function, x)	関数functionでxの各要素をマップする
delattr(x, attrname)	xのプロパティattrnameを削除する
delattr(x, attrname)	オブジェクトxのプロパティattrnameを削除する
delattr(x, attrname)	オブジェクトxのattrnameプロパティを削除する
delattr(x, attrname)	xのattrname属性を削除する
delattr(x, attrname)	xのattrnameフィールドを削除する
delattr(x, attrname)	xのattrnameプロパティを削除する
getattr(x, attrname)	xのプロパティattrnameの値
getattr(x, attrname)	オブジェクトxのプロパティattrnameの値
getattr(x, attrname)	xのフィールドattrnameの値
getattr(x, attrname)	オブジェクトxの属性attrnameの値
getattr(x, attrname)	xのattrnameフィールドの値
getattr(x, attrname)	オブジェクトxのattrnameプロパティの値
getattr(x, attrname)	オブジェクトxのattrname属性の値
getattr(x, attrname)	xのattrname属性の値
getattr(x, attrname)	xのattrnameプロパティの値
hasattr(x, attrname)	xがプロパティattrnameを持つか否か
if hasattr(x, attrname):	xがプロパティattrnameを持つのとき
hasattr(x, attrname)	オブジェクトxがプロパティattrnameを持つか
if hasattr(x, attrname):	オブジェクトxがプロパティattrnameを持つのとき
hasattr(x, attrname)	オブジェクトxがフィールドattrnameを持つか
if hasattr(x, attrname):	オブジェクトxがフィールドattrnameを持つならば
hasattr(x, attrname)	xが属性attrnameを持つか
if hasattr(x, attrname):	xが属性attrnameを持つならば
not hasattr(x, attrname)	xがプロパティattrnameを持たないか
not hasattr(x, attrname)	オブジェクトxがプロパティattrnameを持たないか
not hasattr(x, attrname)	オブジェクトxがフィールドattrnameを持たないか
not hasattr(x, attrname)	xが属性attrnameを持たないか
if hasattr(x, attrname) :	xがプロパティattrnameを持つ場合
if hasattr(x, attrname) :	xがプロパティattrnameを持てば
if hasattr(x, attrname) :	xがプロパティattrnameを持ったならば
if hasattr(x, attrname) :	もしオブジェクトxがプロパティattrnameを持つ場合
if hasattr(x, attrname) :	オブジェクトxがプロパティattrnameを持てば
if hasattr(x, attrname) :	もしオブジェクトxがプロパティattrnameを持ったなら
if hasattr(x, attrname) :	オブジェクトxがフィールドattrnameを持つならば
if hasattr(x, attrname) :	オブジェクトxがフィールドattrnameを持てば
if hasattr(x, attrname) :	オブジェクトxがフィールドattrnameを持った場合
if hasattr(x, attrname) :	xが属性attrnameを持てば
if hasattr(x, attrname) :	xが属性attrnameを持った場合
if not hasattr(x, attrname) :	もしxがプロパティattrnameを持たなければ
if not hasattr(x, attrname) :	もしオブジェクトxがプロパティattrnameを持たなかったとき
if not hasattr(x, attrname) :	もしオブジェクトxがフィールドattrnameを持たなければ
if not hasattr(x, attrname) :	もしxが属性attrnameを持たない場合
if not hasattr(x, attrname) :	もしxが属性attrnameを持たなければ
if not hasattr(x, attrname) :	もしxが属性attrnameを持たなかったなら
while hasattr(x, attrname) :	xがプロパティattrnameを持つ間
while hasattr(x, attrname) :	オブジェクトxがプロパティattrnameを持つ間
while hasattr(x, attrname) :	xが属性attrnameを持つ間
while not hasattr(x, attrname) :	xがプロパティattrnameを持たない間
while not hasattr(x, attrname) :	オブジェクトxがプロパティattrnameを持たない間
while not hasattr(x, attrname) :	オブジェクトxがフィールドattrnameを持たない間
while not hasattr(x, attrname) :	xが属性attrnameを持たない間
hasattr(x, attrname)	xがattrnameプロパティを持つか否か
if hasattr(x, attrname):	xがattrnameプロパティを持つならば
hasattr(x, attrname)	xがattrnameフィールドを持つかどうか
if hasattr(x, attrname):	xがattrnameフィールドを持つの場合
hasattr(x, attrname)	オブジェクトxがattrname属性を持つかどうか
if hasattr(x, attrname):	オブジェクトxがattrname属性を持つならば
hasattr(x, attrname)	オブジェクトxがattrnameプロパティを持つかどうか
if hasattr(x, attrname):	もしオブジェクトxがattrnameプロパティを持つならば
hasattr(x, attrname)	オブジェクトxがattrnameフィールドを持つか
if hasattr(x, attrname):	オブジェクトxがattrnameフィールドを持つのとき
not hasattr(x, attrname)	xがattrnameプロパティを持たないか
not hasattr(x, attrname)	xがattrnameフィールドを持たないか
not hasattr(x, attrname)	オブジェクトxがattrname属性を持たないか
not hasattr(x, attrname)	オブジェクトxがattrnameプロパティを持たないか
not hasattr(x, attrname)	オブジェクトxがattrnameフィールドを持たないか
if hasattr(x, attrname) :	xがattrnameプロパティを持つならば
if hasattr(x, attrname) :	もしxがattrnameプロパティを持った場合
if hasattr(x, attrname) :	xがattrnameフィールドを持つならば
if hasattr(x, attrname) :	もしxがattrnameフィールドを持てば
if hasattr(x, attrname) :	xがattrnameフィールドを持ったならば
if hasattr(x, attrname) :	オブジェクトxがattrnameプロパティを持つ場合
if hasattr(x, attrname) :	もしオブジェクトxがattrnameプロパティを持ったならば
if hasattr(x, attrname) :	オブジェクトxがattrnameフィールドを持つとき
if hasattr(x, attrname) :	オブジェクトxがattrnameフィールドを持てば
if hasattr(x, attrname) :	もしオブジェクトxがattrnameフィールドを持ったら
if not hasattr(x, attrname) :	もしxがattrnameプロパティを持たないとき
if not hasattr(x, attrname) :	xがattrnameプロパティを持たなければ
if not hasattr(x, attrname) :	xがattrnameプロパティを持たなかったら
if not hasattr(x, attrname) :	もしxがattrnameフィールドを持たなかった場合
if not hasattr(x, attrname) :	もしオブジェクトxがattrname属性を持たなければ
if not hasattr(x, attrname) :	オブジェクトxがattrname属性を持たなかった場合
if not hasattr(x, attrname) :	オブジェクトxがattrnameプロパティを持たないならば
if not hasattr(x, attrname) :	オブジェクトxがattrnameフィールドを持たなければ
if not hasattr(x, attrname) :	もしオブジェクトxがattrnameフィールドを持たなかったとき
while hasattr(x, attrname) :	xがattrnameプロパティを持つ間
while hasattr(x, attrname) :	オブジェクトxがattrname属性を持つ間
while hasattr(x, attrname) :	オブジェクトxがattrnameプロパティを持つ間
while not hasattr(x, attrname) :	xがattrnameフィールドを持たない間
while not hasattr(x, attrname) :	オブジェクトxがattrnameプロパティを持たない間
while not hasattr(x, attrname) :	オブジェクトxがattrnameフィールドを持たない間
hasattr(x, attrname)	xにプロパティattrnameがあるか
if hasattr(x, attrname):	xにプロパティattrnameがあるならば
hasattr(x, attrname)	xに属性attrnameがあるか否か
if hasattr(x, attrname):	もしxに属性attrnameがあるならば
hasattr(x, attrname)	オブジェクトxに属性attrnameがあるか
if hasattr(x, attrname):	オブジェクトxに属性attrnameがあるならば
hasattr(x, attrname)	オブジェクトxにフィールドattrnameがあるか
if hasattr(x, attrname):	オブジェクトxにフィールドattrnameがある場合
hasattr(x, attrname)	オブジェクトxにプロパティattrnameがあるか
if hasattr(x, attrname):	もしオブジェクトxにプロパティattrnameがあるならば
not hasattr(x, attrname)	xにプロパティattrnameがあらないか
not hasattr(x, attrname)	xに属性attrnameがあらないか否か
not hasattr(x, attrname)	オブジェクトxに属性attrnameがあらないか
not hasattr(x, attrname)	オブジェクトxにフィールドattrnameがあらないか
not hasattr(x, attrname)	オブジェクトxにプロパティattrnameがあらないか
if hasattr(x, attrname) :	xにプロパティattrnameがあれば
if hasattr(x, attrname) :	もしxにプロパティattrnameがあったなら
if hasattr(x, attrname) :	もしxに属性attrnameがあるとき
if hasattr(x, attrname) :	xに属性attrnameがあったなら
if hasattr(x, attrname) :	オブジェクトxに属性attrnameがあるならば
if hasattr(x, attrname) :	もしオブジェクトxに属性attrnameがあれば
if hasattr(x, attrname) :	オブジェクトxに属性attrnameがあった場合
if hasattr(x, attrname) :	オブジェクトxにフィールドattrnameがあれば
if hasattr(x, attrname) :	もしオブジェクトxにプロパティattrnameがあるとき
if hasattr(x, attrname) :	オブジェクトxにプロパティattrnameがあれば
if hasattr(x, attrname) :	もしオブジェクトxにプロパティattrnameがあったなら
if not hasattr(x, attrname) :	もしxにプロパティattrnameがあらなかったとき
if not hasattr(x, attrname) :	もしxに属性attrnameがあった場合
if not hasattr(x, attrname) :	オブジェクトxに属性attrnameがあらない場合
if not hasattr(x, attrname) :	もしオブジェクトxに属性attrnameがあらなければ
if not hasattr(x, attrname) :	オブジェクトxにフィールドattrnameがあらなければ
if not hasattr(x, attrname) :	もしオブジェクトxにフィールドattrnameがあらなかったら
if not hasattr(x, attrname) :	もしオブジェクトxにプロパティattrnameがあらない場合
if not hasattr(x, attrname) :	オブジェクトxにプロパティattrnameがあらなければ
while hasattr(x, attrname) :	xに属性attrnameがある間
while hasattr(x, attrname) :	オブジェクトxにフィールドattrnameがある間
while hasattr(x, attrname) :	オブジェクトxにプロパティattrnameがある間
while not hasattr(x, attrname) :	xにプロパティattrnameがあらない間
while not hasattr(x, attrname) :	オブジェクトxに属性attrnameがあらない間
while not hasattr(x, attrname) :	オブジェクトxにフィールドattrnameがあらない間
while not hasattr(x, attrname) :	オブジェクトxにプロパティattrnameがあらない間
hasattr(x, attrname)	xにattrnameプロパティがあるかどうか
if hasattr(x, attrname):	xにattrnameプロパティがあるとき
hasattr(x, attrname)	オブジェクトxにattrnameプロパティがあるか
if hasattr(x, attrname):	もしオブジェクトxにattrnameプロパティがあるならば
hasattr(x, attrname)	xにattrname属性があるか否か
if hasattr(x, attrname):	xにattrname属性があるとき
hasattr(x, attrname)	オブジェクトxにattrnameフィールドがあるか
if hasattr(x, attrname):	もしオブジェクトxにattrnameフィールドがあるならば
not hasattr(x, attrname)	xにattrnameプロパティがあらないか
not hasattr(x, attrname)	オブジェクトxにattrnameプロパティがあらないか
not hasattr(x, attrname)	xにattrname属性があらないかどうか
not hasattr(x, attrname)	オブジェクトxにattrnameフィールドがあらないかどうか
if hasattr(x, attrname) :	もしxにattrnameプロパティがあれば
if hasattr(x, attrname) :	もしオブジェクトxにattrnameプロパティがあれば
if hasattr(x, attrname) :	オブジェクトxにattrnameフィールドがあれば
if hasattr(x, attrname) :	もしオブジェクトxにattrnameフィールドがあったならば
if not hasattr(x, attrname) :	もしxにattrnameプロパティがあらなければ
if not hasattr(x, attrname) :	xにattrnameプロパティがあらなかったら
if not hasattr(x, attrname) :	もしオブジェクトxにattrnameプロパティがあらないならば
if not hasattr(x, attrname) :	もしオブジェクトxにattrnameプロパティがあらなければ
if not hasattr(x, attrname) :	もしxにattrname属性があらない場合
if not hasattr(x, attrname) :	もしオブジェクトxにattrnameフィールドがあらないとき
if not hasattr(x, attrname) :	もしオブジェクトxにattrnameフィールドがあらなければ
if not hasattr(x, attrname) :	もしオブジェクトxにattrnameフィールドがあらなかったとき
while hasattr(x, attrname) :	xにattrnameプロパティがある間
while hasattr(x, attrname) :	オブジェクトxにattrnameプロパティがある間
while hasattr(x, attrname) :	オブジェクトxにattrnameフィールドがある間
while not hasattr(x, attrname) :	オブジェクトxにattrnameプロパティがあらない間
setattr(x, attrname, y)	xの属性attrnameの値をyにする
setattr(x, attrname, y)	xのプロパティattrnameの値をyにする
setattr(x, attrname, y)	オブジェクトxのプロパティattrnameの値をyにする
setattr(x, attrname, y)	xの属性attrnameの値をyに設定する+
setattr(x, attrname, y)	xのフィールドattrnameの値をyにする
setattr(x, attrname, y)	オブジェクトxの属性attrnameの値をyにする
setattr(x, attrname, y)	オブジェクトxのattrnameプロパティの値をyにする
setattr(x, attrname, y)	xのattrnameプロパティの値をyにする
setattr(x, attrname, y)	xのattrnameフィールドの値をyにする
setattr(x, attrname, y)	xのattrname属性の値をyに設定する+
setattr(x, attrname, y)	オブジェクトxのattrnameプロパティの値をyに設定する+
setattr(x, attrname, y)	xのattrnameフィールドの値をyに設定する+
setattr(x, attrname, y)	オブジェクトxのattrname属性の値をyにする
setattr(x, attrname, y)	xのattrname属性の値をyにする
hash(x)	xのハッシュ値
isinstance(x, class1)	xがclass1のインスタンスか否か
if isinstance(x, class1):	xがclass1のインスタンスならば
isinstance(x, class1)	オブジェクトxがclass1のインスタンスか否か
if isinstance(x, class1):	もしオブジェクトxがclass1のインスタンスならば
isinstance(x, class1)	オブジェクトxがclass1か
if isinstance(x, class1):	もしオブジェクトxがclass1ならば
not isinstance(x, class1)	xがclass1のインスタンスでないか
not isinstance(x, class1)	オブジェクトxがclass1のインスタンスでないか
not isinstance(x, class1)	オブジェクトxがclass1でないか否か
if isinstance(x, class1) :	xがclass1のインスタンスとき
if isinstance(x, class1) :	もしオブジェクトxがclass1のインスタンス場合
if isinstance(x, class1) :	オブジェクトxがclass1場合
if not isinstance(x, class1) :	もしxがclass1のインスタンスでないとき
if not isinstance(x, class1) :	もしオブジェクトxがclass1のインスタンスでない場合
if not isinstance(x, class1) :	オブジェクトxがclass1でなならば
isinstance(x, (class1, class2))	xがclass1あるいはclass2かどうか
if isinstance(x, (class1, class2)):	もしxがclass1あるいはclass2ならば
isinstance(x, (class1, class2))	オブジェクトxがclass1またclass2かどうか
if isinstance(x, (class1, class2)):	オブジェクトxがclass1またclass2の場合
isinstance(x, (class1, class2))	xがclass1またはclass2かどうか
if isinstance(x, (class1, class2)):	もしxがclass1またはclass2ならば
isinstance(x, (class1, class2))	xがclass1またclass2のインスタンスかどうか
if isinstance(x, (class1, class2)):	もしxがclass1またclass2のインスタンスならば
isinstance(x, (class1, class2))	xがclass1またclass2か否か
if isinstance(x, (class1, class2)):	xがclass1またclass2の場合
not isinstance(x, (class1, class2))	xがclass1あるいはclass2でないか
not isinstance(x, (class1, class2))	オブジェクトxがclass1またclass2でないか
not isinstance(x, (class1, class2))	xがclass1またはclass2でないかどうか
not isinstance(x, (class1, class2))	xがclass1またclass2のインスタンスでないか
not isinstance(x, (class1, class2))	xがclass1またclass2でないか
if isinstance(x, (class1, class2)) :	xがclass1あるいはclass2場合
if isinstance(x, (class1, class2)) :	オブジェクトxがclass1またclass2ならば
if isinstance(x, (class1, class2)) :	もしxがclass1またはclass2場合
if isinstance(x, (class1, class2)) :	もしxがclass1またclass2のインスタンスならば
if isinstance(x, (class1, class2)) :	もしxがclass1またclass2ならば
if not isinstance(x, (class1, class2)) :	もしxがclass1あるいはclass2でない場合
if not isinstance(x, (class1, class2)) :	もしオブジェクトxがclass1またclass2でないとき
if not isinstance(x, (class1, class2)) :	もしxがclass1またはclass2でないならば
if not isinstance(x, (class1, class2)) :	もしxがclass1またclass2のインスタンスでないならば
if not isinstance(x, (class1, class2)) :	もしxがclass1またclass2でないとき
isinstance(x, int)	オブジェクトxが整数か
if isinstance(x, int):	オブジェクトxが整数ならば
isinstance(x, int)	xが整数かどうか
if isinstance(x, int):	xが整数の場合
isinstance(x, int)	xが自然数かどうか
if isinstance(x, int):	もしxが自然数ならば
not isinstance(x, int)	オブジェクトxが整数でないか
not isinstance(x, int)	xが整数でないか
not isinstance(x, int)	xが自然数でないかどうか
if isinstance(x, int) :	オブジェクトxが整数ならば
if isinstance(x, int) :	xが整数場合
if isinstance(x, int) :	xが自然数ならば
if not isinstance(x, int) :	もしオブジェクトxが整数でないならば
if not isinstance(x, int) :	もしxが整数でないならば
if not isinstance(x, int) :	xが自然数でないとき
isinstance(x, float)	オブジェクトxが数かどうか
if isinstance(x, float):	オブジェクトxが数のとき
isinstance(x, float)	xが小数点数か
if isinstance(x, float):	xが小数点数の場合
isinstance(x, float)	オブジェクトxが浮動小数点数か否か
if isinstance(x, float):	オブジェクトxが浮動小数点数ならば
isinstance(x, float)	オブジェクトxが実数か
if isinstance(x, float):	もしオブジェクトxが実数ならば
isinstance(x, float)	xが数か否か
if isinstance(x, float):	xが数のとき
isinstance(x, float)	xが浮動小数点数か
if isinstance(x, float):	xが浮動小数点数のとき
isinstance(x, float)	xが実数か
if isinstance(x, float):	もしxが実数ならば
not isinstance(x, float)	オブジェクトxが数でないか否か
not isinstance(x, float)	xが小数点数でないか
not isinstance(x, float)	オブジェクトxが浮動小数点数でないか
not isinstance(x, float)	オブジェクトxが実数でないかどうか
not isinstance(x, float)	xが数でないか
not isinstance(x, float)	xが浮動小数点数でないか
not isinstance(x, float)	xが実数でないか否か
if isinstance(x, float) :	オブジェクトxが数場合
if isinstance(x, float) :	xが小数点数ならば
if isinstance(x, float) :	オブジェクトxが浮動小数点数ならば
if isinstance(x, float) :	もしオブジェクトxが実数ならば
if isinstance(x, float) :	xが数とき
if isinstance(x, float) :	もしxが浮動小数点数ならば
if isinstance(x, float) :	もしxが実数ならば
if not isinstance(x, float) :	もしオブジェクトxが数でな場合
if not isinstance(x, float) :	xが小数点数でない場合
if not isinstance(x, float) :	オブジェクトxが浮動小数点数でないとき
if not isinstance(x, float) :	もしオブジェクトxが実数でない場合
if not isinstance(x, float) :	xが数でないならば
if not isinstance(x, float) :	xが浮動小数点数でないならば
if not isinstance(x, float) :	xが実数でなとき
isinstance(x, str)	xが文字列か否か
if isinstance(x, str):	もしxが文字列ならば
isinstance(x, str)	オブジェクトxが文字列か否か
if isinstance(x, str):	オブジェクトxが文字列ならば
not isinstance(x, str)	xが文字列でないか
not isinstance(x, str)	オブジェクトxが文字列でないか
if isinstance(x, str) :	xが文字列ならば
if isinstance(x, str) :	オブジェクトxが文字列場合
if not isinstance(x, str) :	xが文字列でないとき
if not isinstance(x, str) :	もしオブジェクトxが文字列でないならば
isinstance(x, list)	オブジェクトxがリストか
if isinstance(x, list):	オブジェクトxがリストのとき
isinstance(x, list)	xがリストか
if isinstance(x, list):	xがリストならば
not isinstance(x, list)	オブジェクトxがリストでないかどうか
not isinstance(x, list)	xがリストでないかどうか
if isinstance(x, list) :	もしオブジェクトxがリストとき
if isinstance(x, list) :	xがリストならば
if not isinstance(x, list) :	もしオブジェクトxがリストでないならば
if not isinstance(x, list) :	もしxがリストでないならば
isinstance(x, (list, tuple))	xがリストあるいは組かどうか
if isinstance(x, (list, tuple)):	もしxがリストあるいは組ならば
isinstance(x, (list, tuple))	xがリストまたはタプルかどうか
if isinstance(x, (list, tuple)):	もしxがリストまたはタプルならば
isinstance(x, (list, tuple))	xがリストまたタプルか
if isinstance(x, (list, tuple)):	もしxがリストまたタプルならば
isinstance(x, (list, tuple))	オブジェクトxがリストあるいは組かどうか
if isinstance(x, (list, tuple)):	オブジェクトxがリストあるいは組ならば
isinstance(x, (list, tuple))	オブジェクトxがリストあるいはタプルかどうか
if isinstance(x, (list, tuple)):	もしオブジェクトxがリストあるいはタプルならば
isinstance(x, (list, tuple))	xがリストまたは組か
if isinstance(x, (list, tuple)):	xがリストまたは組の場合
isinstance(x, (list, tuple))	オブジェクトxがリストまたはタプルか
if isinstance(x, (list, tuple)):	もしオブジェクトxがリストまたはタプルならば
isinstance(x, (list, tuple))	オブジェクトxがリストまたは組か否か
if isinstance(x, (list, tuple)):	もしオブジェクトxがリストまたは組ならば
isinstance(x, (list, tuple))	オブジェクトxがリストまた組か
if isinstance(x, (list, tuple)):	オブジェクトxがリストまた組のとき
not isinstance(x, (list, tuple))	xがリストあるいは組でないか
not isinstance(x, (list, tuple))	xがリストまたはタプルでないか
not isinstance(x, (list, tuple))	xがリストまたタプルでないか
not isinstance(x, (list, tuple))	オブジェクトxがリストあるいは組でないか
not isinstance(x, (list, tuple))	オブジェクトxがリストあるいはタプルでないか否か
not isinstance(x, (list, tuple))	xがリストまたは組でないか
not isinstance(x, (list, tuple))	オブジェクトxがリストまたはタプルでないかどうか
not isinstance(x, (list, tuple))	オブジェクトxがリストまたは組でないかどうか
not isinstance(x, (list, tuple))	オブジェクトxがリストまた組でないか
if isinstance(x, (list, tuple)) :	xがリストあるいは組ならば
if isinstance(x, (list, tuple)) :	もしxがリストまたはタプルならば
if isinstance(x, (list, tuple)) :	もしxがリストまたタプルならば
if isinstance(x, (list, tuple)) :	もしオブジェクトxがリストあるいは組とき
if isinstance(x, (list, tuple)) :	もしオブジェクトxがリストあるいはタプル場合
if isinstance(x, (list, tuple)) :	xがリストまたは組場合
if isinstance(x, (list, tuple)) :	オブジェクトxがリストまたはタプル場合
if isinstance(x, (list, tuple)) :	オブジェクトxがリストまたは組ならば
if isinstance(x, (list, tuple)) :	オブジェクトxがリストまた組ならば
if not isinstance(x, (list, tuple)) :	xがリストあるいは組でないならば
if not isinstance(x, (list, tuple)) :	xがリストまたはタプルでないならば
if not isinstance(x, (list, tuple)) :	もしxがリストまたタプルでないならば
if not isinstance(x, (list, tuple)) :	オブジェクトxがリストあるいは組でないとき
if not isinstance(x, (list, tuple)) :	もしオブジェクトxがリストあるいはタプルでなならば
if not isinstance(x, (list, tuple)) :	xがリストまたは組でないならば
if not isinstance(x, (list, tuple)) :	もしオブジェクトxがリストまたはタプルでないならば
if not isinstance(x, (list, tuple)) :	もしオブジェクトxがリストまたは組でないならば
if not isinstance(x, (list, tuple)) :	もしオブジェクトxがリストまた組でないならば
issubclass(class1, class2)	クラスclassがclass2のサブクラスかどうか
if issubclass(class1, class2):	もしクラスclassがclass2のサブクラスならば
issubclass(class1, class2)	classがclass2のサブクラスか否か
if issubclass(class1, class2):	classがclass2のサブクラスの場合
not issubclass(class1, class2)	クラスclassがclass2のサブクラスでないか
not issubclass(class1, class2)	classがclass2のサブクラスでないか
if issubclass(class1, class2) :	クラスclassがclass2のサブクラス場合
if issubclass(class1, class2) :	classがclass2のサブクラスならば
if not issubclass(class1, class2) :	もしクラスclassがclass2のサブクラスでないとき
if not issubclass(class1, class2) :	classがclass2のサブクラスでないとき
id(x)	xのオブジェクトID
id(x)	xのオブジェクト識別子
id(x)	xのユニークな識別値
id(x)	xのポインタ
type(x)	xの種類
type(x)	xのクラス
type(x)	xの型
n.bit_length()	整数nのビット数
n.bit_length()	nのビット長
n.bit_length()	整数nのビット長
n.bit_length()	自然数nのビット数
n.to_bytes(x)	自然数nをxビット長のバイト列に変換する
n.to_bytes(x)	自然数nをxビット長のバイト列にする
n.to_bytes(x)	整数nをxビット長のバイト列に変換する
n.to_bytes(x)	nをxビット長のバイト列にする
n.to_bytes(x)	整数値nをxビット長のバイト列にする
n.to_bytes(x)	整数nをxビット長のバイト列にする
n.to_bytes(x)	整数値nをxビット長のバイト列に変換する
n.to_bytes(x)	整数nのxビット長バイト列
n.to_bytes(x)	自然数nのxビット長バイト列
n.to_bytes(x)	nのxビット長バイト列
n.to_bytes(x)	整数値nのxビット長バイト列
int.from_bytes(bytes)	bytesbytesから整数値に変換する
int.from_bytes(bytes)	bytesbytesから自然数に変換する
int.from_bytes(bytes)	バイト列bytesbytesから整数に変換する
int.from_bytes(bytes)	バイト列bytesbytesから自然数に変換する
x.is_integer()	数xが自然数か否か
if x.is_integer():	数xが自然数の場合
x.is_integer()	数xが整数かどうか
if x.is_integer():	数xが整数のとき
x.is_integer()	xが整数か
if x.is_integer():	もしxが整数ならば
x.is_integer()	xが整数値か否か
if x.is_integer():	もしxが整数値ならば
x.is_integer()	浮動小数点数xが自然数か
if x.is_integer():	浮動小数点数xが自然数ならば
x.is_integer()	実数xが自然数か
if x.is_integer():	実数xが自然数ならば
not x.is_integer()	数xが自然数でないか
not x.is_integer()	数xが整数でないか否か
not x.is_integer()	xが整数でないか
not x.is_integer()	xが整数値でないか
not x.is_integer()	浮動小数点数xが自然数でないか
not x.is_integer()	実数xが自然数でないか
if x.is_integer() :	もし数xが自然数場合
if x.is_integer() :	数xが整数場合
if x.is_integer() :	もしxが整数ならば
if x.is_integer() :	xが整数値ならば
if x.is_integer() :	もし浮動小数点数xが自然数とき
if x.is_integer() :	実数xが自然数場合
if not x.is_integer() :	もし数xが自然数でない場合
if not x.is_integer() :	数xが整数でな場合
if not x.is_integer() :	xが整数でないとき
if not x.is_integer() :	xが整数値でないならば
if not x.is_integer() :	浮動小数点数xが自然数でないとき
if not x.is_integer() :	実数xが自然数でないならば
x.hex()	16進文字列にxをする
x.hex()	小数点数xを16進文字列にする
x.hex()	16進文字列にxを変換する
x.hex()	小数点数xを16進文字列に変換する
x.hex()	浮動小数点数xを16進文字列に変換する
x.hex()	16進文字列にx小数点数をする
x.hex()	16進文字列にx数を変換する
x.hex()	浮動小数点数xを16進文字列にする
x.hex()	xを16進文字列にする
x.hex()	16進文字列にx数をする
x.hex()	16進文字列に浮動小数点数xをする
x.hex()	16進文字列にx実数を変換する
x.hex()	実数xを16進文字列にする
x.hex()	16進文字列にx浮動小数点数をする
x.hex()	実数xの16進文字列表現
x.hex()	浮動小数点数xの16進文字列表現
x.hex()	数xの16進文字列表現
x.hex()	xの16進文字列表現
float.fromhex(s)	16進数文字列sから実数に変換する
float.fromhex(s)	16進数文字列sから実数にする
float.fromhex(s)	sから浮動小数点数に変換する
float.fromhex(s)	16進数文字列sから数に変換する
float.fromhex(s)	sから実数にする
float.fromhex(s)	sから小数点数にする
float.fromhex(s)	sから小数点数に変換する
float.fromhex(s)	sから実数に変換する
float.fromhex(s)	16進数文字列sから浮動小数点数にする
float.fromhex(s)	sから浮動小数点数にする
float.fromhex(s)	16進数文字列sから浮動小数点数に変換する
float.fromhex(s)	sから数に変換する
float.fromhex(s)	16進数文字列sから数にする
string.ascii_letters	全アルファベット
string.ascii_lowercase	全英小文字
string.ascii_uppercase	全英大文字
string.digits	全数字
string.hexdigits	全16進文字列
string.octdigits	全8進文字列
string.punctuation	全記号
string.printable	全印刷可能なASCII文字
string.whitespace	全空白文字
s.capitalize()	sをキャピタライズする
s.capitalize()	文字列sをキャピタライズする
s.casefold()	sをケースフォルドする
s.casefold()	文字列sをケースフォルドする
s.center(x)	sを幅xで中央寄せする
s.center(x)	幅xでsを中央寄せする
s.center(x)	幅xでsをセンタリングする
s.center(x)	幅xで文字列sを中央寄せする
s.center(x)	文字列sを幅xで中央寄せする
s.center(x)	sを幅xでセンタリングする
s.center(x)	幅xで文字列sをセンタリングする
s.ljust(x)	幅xで文字列sを右寄せする
s.ljust(x)	文字列sを幅xで右寄せする
s.ljust(x)	幅xでsを右寄せする
s.ljust(x)	sを幅xで右寄せする
s.rjust(x)	sを幅xで左寄せする
s.rjust(x)	幅xで文字列sを左寄せする
s.rjust(x)	文字列sを幅xで左寄せする
s.rjust(x)	幅xでs文字列を左寄せする
s.rjust(x)	幅xでsを左寄せする
s.count(sub)	s内に含まれるsubを数える
s.count(sub)	s中に現れるsubを数える
s.count(sub)	s内のsubの数を数える
s.count(sub)	文字列s中のsubの数を数える
s.count(sub)	文字列s内のsubをカウントする
s.count(sub)	s内に現れるsubを数える
s.count(sub)	文字列s中に現れるsubを数える
s.count(sub)	文字列s内に含まれるsubの数を数える
s.count(sub)	文字列s内に現れるsubを数える
s.count(sub)	s中のsubの数を数える
s.count(sub)	s内に現れるsubの数をカウントする
s.count(sub)	文字列s中のsubの数をカウントする
s.count(sub)	sに現れるsubをカウントする
s.count(sub)	s中のsubの出現回数
s.count(sub)	文字列s内のsubの出現回数
s.count(sub)	sのsubの出現回数
s.count(sub)	文字列s中のsubの出現回数
s.count(sub)	文字列sのsubの出現回数
s.count(sub)	s内のsubの出現回数
s.encode()	sをバイト列に変換する
s.encode()	文字列sをバイト列にする
s.encode()	sをバイト列にする
s.encode()	文字列sをバイト列に変換する
s.encode(enc)	文字コードencでsをバイト列にする
s.encode(enc)	文字コードencでs文字列をバイト列に変換する
s.encode(enc)	encで文字列sをバイト列に変換する
s.encode(enc)	文字列sを文字コードencでバイト列に変換する
s.encode(enc)	encで文字列sをバイト列にする
s.encode(enc)	sをencでバイト列に変換する
s.encode(enc)	文字列sをenc文字コードでバイト列にする
s.encode(enc)	文字コードencでsをバイト列に変換する
s.encode(enc)	encでsをバイト列にする
s.encode(enc)	sをenc文字コードでバイト列に変換する
s.encode(enc)	encでs文字列をバイト列に変換する
s.encode('shift-jis')	SJISでsをバイト列に変換する
s.encode('shift-jis')	SJISコードで文字列sをバイト列にする
s.encode('shift-jis')	sをSJISコードでバイト列に変換する
s.encode('shift-jis')	SJISで文字列sをバイト列に変換する
s.encode('shift-jis')	SJISコードでsをバイト列にする
s.encode('shift-jis')	文字列sをSJISコードでバイト列にする
s.encode('shift-jis')	sをSJISでバイト列に変換する
s.encode('shift-jis')	文字列sをSJISコードでバイト列に変換する
s.encode('shift-jis')	SJISでs文字列をバイト列にする
s.encode('shift-jis')	SJISコードでsをバイト列に変換する
s.encode('shift-jis')	SJISコードでs文字列をバイト列にする
s.startswith(prefix)	文字列sがprefixで開始するか
if s.startswith(prefix):	文字列sがprefixで開始するならば
s.startswith(prefix)	文字列sがprefixで始まるか
if s.startswith(prefix):	文字列sがprefixで始まる場合
s.startswith(prefix)	sがprefixで始まるか否か
if s.startswith(prefix):	sがprefixで始まるならば
not s.startswith(prefix)	文字列sがprefixで開始しないか
not s.startswith(prefix)	文字列sがprefixで始まらないか
not s.startswith(prefix)	sがprefixで始まらないか
if s.startswith(prefix) :	もし文字列sがprefixで開始すれば
if s.startswith(prefix) :	文字列sがprefixで開始したら
if s.startswith(prefix) :	文字列sがprefixで始まるとき
if s.startswith(prefix) :	もし文字列sがprefixで始まれば
if s.startswith(prefix) :	もし文字列sがprefixで始まったならば
if not s.startswith(prefix) :	文字列sがprefixで開始しなければ
if not s.startswith(prefix) :	もし文字列sがprefixで開始しなかったら
if not s.startswith(prefix) :	もし文字列sがprefixで始まらなかったならば
if not s.startswith(prefix) :	sがprefixで始まらないとき
if not s.startswith(prefix) :	もしsがprefixで始まらなければ
if not s.startswith(prefix) :	もしsがprefixで始まらなかったら
while s.startswith(prefix) :	文字列sがprefixで開始する間
while s.startswith(prefix) :	sがprefixで始まる間
while not s.startswith(prefix) :	文字列sがprefixで始まらない間
s.startswith(prefix)	文字列sの始まりがsuffixであるかどうか
if s.startswith(prefix):	文字列sの始まりがsuffixであるならば
s.startswith(prefix)	文字列sの先頭がsuffixであるか
if s.startswith(prefix):	文字列sの先頭がsuffixであるとき
s.startswith(prefix)	文字列sの接頭辞がsuffixであるか否か
if s.startswith(prefix):	文字列sの接頭辞がsuffixであるとき
s.startswith(prefix)	sの始端がsuffixであるかどうか
if s.startswith(prefix):	もしsの始端がsuffixであるならば
s.startswith(prefix)	sの始まりがsuffixか
if s.startswith(prefix):	sの始まりがsuffixのとき
s.startswith(prefix)	sの始まりがsuffixであるか
if s.startswith(prefix):	sの始まりがsuffixである場合
s.startswith(prefix)	文字列sのプレフィックスがsuffixかどうか
if s.startswith(prefix):	文字列sのプレフィックスがsuffixの場合
s.startswith(prefix)	文字列sの接頭辞がsuffixかどうか
if s.startswith(prefix):	文字列sの接頭辞がsuffixの場合
s.startswith(prefix)	sの接頭辞がsuffixであるかどうか
if s.startswith(prefix):	sの接頭辞がsuffixである場合
s.startswith(prefix)	文字列sの始端がsuffixであるかどうか
if s.startswith(prefix):	文字列sの始端がsuffixであるならば
s.startswith(prefix)	文字列sの先頭がsuffixか
if s.startswith(prefix):	文字列sの先頭がsuffixの場合
s.startswith(prefix)	sの始端がsuffixか
if s.startswith(prefix):	sの始端がsuffixの場合
s.startswith(prefix)	sのプレフィックスがsuffixか
if s.startswith(prefix):	もしsのプレフィックスがsuffixならば
s.startswith(prefix)	文字列sの始端がsuffixか否か
if s.startswith(prefix):	文字列sの始端がsuffixのとき
not s.startswith(prefix)	文字列sの始まりがsuffixであるでないかどうか
not s.startswith(prefix)	文字列sの先頭がsuffixであるでないか
not s.startswith(prefix)	文字列sの接頭辞がsuffixであるでないか
not s.startswith(prefix)	sの始端がsuffixであるでないか否か
not s.startswith(prefix)	sの始まりがsuffixでないかどうか
not s.startswith(prefix)	sの始まりがsuffixであるでないか
not s.startswith(prefix)	文字列sのプレフィックスがsuffixでないか
not s.startswith(prefix)	文字列sの接頭辞がsuffixでないか
not s.startswith(prefix)	sの接頭辞がsuffixであるでないかどうか
not s.startswith(prefix)	文字列sの始端がsuffixであるでないか
not s.startswith(prefix)	文字列sの先頭がsuffixでないか
not s.startswith(prefix)	sの始端がsuffixでないか
not s.startswith(prefix)	sのプレフィックスがsuffixでないかどうか
not s.startswith(prefix)	文字列sの始端がsuffixでないかどうか
if s.startswith(prefix) :	文字列sの始まりがsuffixであるとき
if s.startswith(prefix) :	もし文字列sの先頭がsuffixであるとき
if s.startswith(prefix) :	文字列sの接頭辞がsuffixであるならば
if s.startswith(prefix) :	sの始端がsuffixであるとき
if s.startswith(prefix) :	もしsの始まりがsuffixならば
if s.startswith(prefix) :	sの始まりがsuffixであるとき
if s.startswith(prefix) :	文字列sのプレフィックスがsuffixとき
if s.startswith(prefix) :	もし文字列sの接頭辞がsuffix場合
if s.startswith(prefix) :	もしsの接頭辞がsuffixであるならば
if s.startswith(prefix) :	もし文字列sの始端がsuffixであるならば
if s.startswith(prefix) :	文字列sの先頭がsuffixとき
if s.startswith(prefix) :	もしsの始端がsuffix場合
if s.startswith(prefix) :	もしsのプレフィックスがsuffixならば
if s.startswith(prefix) :	もし文字列sの始端がsuffixならば
if not s.startswith(prefix) :	もし文字列sの始まりがsuffixであるでないならば
if not s.startswith(prefix) :	文字列sの先頭がsuffixであるでない場合
if not s.startswith(prefix) :	もし文字列sの接頭辞がsuffixであるでないならば
if not s.startswith(prefix) :	sの始端がsuffixであるでな場合
if not s.startswith(prefix) :	もしsの始まりがsuffixでない場合
if not s.startswith(prefix) :	もしsの始まりがsuffixであるでない場合
if not s.startswith(prefix) :	もし文字列sのプレフィックスがsuffixでないとき
if not s.startswith(prefix) :	もし文字列sの接頭辞がsuffixでないとき
if not s.startswith(prefix) :	sの接頭辞がsuffixであるでないとき
if not s.startswith(prefix) :	文字列sの始端がsuffixであるでないとき
if not s.startswith(prefix) :	もし文字列sの先頭がsuffixでないならば
if not s.startswith(prefix) :	sの始端がsuffixでないとき
if not s.startswith(prefix) :	sのプレフィックスがsuffixでないならば
if not s.startswith(prefix) :	もし文字列sの始端がsuffixでない場合
while s.startswith(prefix) :	文字列sの始まりがsuffixである間
while s.startswith(prefix) :	文字列sの先頭がsuffixである間
while s.startswith(prefix) :	sの始まりがsuffix間
while s.startswith(prefix) :	文字列sのプレフィックスがsuffix間
while s.startswith(prefix) :	sの接頭辞がsuffixである間
while s.startswith(prefix) :	文字列sの始端がsuffixである間
while s.startswith(prefix) :	sの始端がsuffix間
while s.startswith(prefix) :	sのプレフィックスがsuffix間
while not s.startswith(prefix) :	文字列sの始まりがsuffixであるでない間
while not s.startswith(prefix) :	文字列sの先頭がsuffixであるでない間
while not s.startswith(prefix) :	sの始まりがsuffixでない間
while not s.startswith(prefix) :	sの始まりがsuffixであるでない間
while not s.startswith(prefix) :	文字列sの接頭辞がsuffixでない間
while not s.startswith(prefix) :	sの接頭辞がsuffixであるでない間
while not s.startswith(prefix) :	文字列sの先頭がsuffixでない間
while not s.startswith(prefix) :	sの始端がsuffixでない間
while not s.startswith(prefix) :	sのプレフィックスがsuffixでない間
s.endswith(suffix)	sがsuffixで終了するかどうか
if s.endswith(suffix):	sがsuffixで終了するとき
s.endswith(suffix)	文字列sがsuffixで終わるか
if s.endswith(suffix):	文字列sがsuffixで終わるならば
s.endswith(suffix)	文字列sがsuffixで終了するか
if s.endswith(suffix):	文字列sがsuffixで終了するとき
s.endswith(suffix)	sがsuffixで終わるかどうか
if s.endswith(suffix):	sがsuffixで終わるとき
not s.endswith(suffix)	sがsuffixで終了しないか否か
not s.endswith(suffix)	文字列sがsuffixで終わらないか
not s.endswith(suffix)	文字列sがsuffixで終了しないか
not s.endswith(suffix)	sがsuffixで終わらないか
if s.endswith(suffix) :	もしsがsuffixで終了すれば
if s.endswith(suffix) :	もしsがsuffixで終了したなら
if s.endswith(suffix) :	文字列sがsuffixで終わったら
if s.endswith(suffix) :	もし文字列sがsuffixで終了すれば
if s.endswith(suffix) :	もし文字列sがsuffixで終了したなら
if s.endswith(suffix) :	もしsがsuffixで終わる場合
if s.endswith(suffix) :	sがsuffixで終われば
if s.endswith(suffix) :	sがsuffixで終わったとき
if not s.endswith(suffix) :	もしsがsuffixで終了しな場合
if not s.endswith(suffix) :	sがsuffixで終了すれば
if not s.endswith(suffix) :	もしsがsuffixで終了したならば
if not s.endswith(suffix) :	もし文字列sがsuffixで終わらなければ
if not s.endswith(suffix) :	文字列sがsuffixで終わらなかったとき
if not s.endswith(suffix) :	文字列sがsuffixで終了しないとき
if not s.endswith(suffix) :	文字列sがsuffixで終了しなければ
if not s.endswith(suffix) :	文字列sがsuffixで終了しなかったなら
if not s.endswith(suffix) :	もしsがsuffixで終わらないならば
if not s.endswith(suffix) :	sがsuffixで終わらなければ
while s.endswith(suffix) :	文字列sがsuffixで終了する間
while s.endswith(suffix) :	sがsuffixで終わる間
while not s.endswith(suffix) :	sがsuffixで終わらない間
s.endswith(suffix)	文字列sのサフィックスがsuffixかどうか
if s.endswith(suffix):	文字列sのサフィックスがsuffixの場合
s.endswith(suffix)	文字列sの終端がsuffixであるかどうか
if s.endswith(suffix):	文字列sの終端がsuffixであるとき
s.endswith(suffix)	sの末尾がsuffixであるか
if s.endswith(suffix):	sの末尾がsuffixである場合
s.endswith(suffix)	文字列sの接尾辞がsuffixか否か
if s.endswith(suffix):	もし文字列sの接尾辞がsuffixならば
s.endswith(suffix)	sの終端がsuffixであるかどうか
if s.endswith(suffix):	sの終端がsuffixであるとき
s.endswith(suffix)	sの接尾辞がsuffixであるか否か
if s.endswith(suffix):	sの接尾辞がsuffixである場合
s.endswith(suffix)	sのサフィックスがsuffixか否か
if s.endswith(suffix):	sのサフィックスがsuffixならば
s.endswith(suffix)	文字列sの終わりがsuffixであるか
if s.endswith(suffix):	文字列sの終わりがsuffixであるならば
not s.endswith(suffix)	文字列sのサフィックスがsuffixでないか
not s.endswith(suffix)	文字列sの終端がsuffixであるでないかどうか
not s.endswith(suffix)	sの末尾がsuffixであるでないか
not s.endswith(suffix)	文字列sの接尾辞がsuffixでないか
not s.endswith(suffix)	sの終端がsuffixであるでないか
not s.endswith(suffix)	sの接尾辞がsuffixであるでないかどうか
not s.endswith(suffix)	sのサフィックスがsuffixでないか
not s.endswith(suffix)	文字列sの終わりがsuffixであるでないか
if s.endswith(suffix) :	もし文字列sのサフィックスがsuffixならば
if s.endswith(suffix) :	もし文字列sの終端がsuffixであるとき
if s.endswith(suffix) :	もしsの末尾がsuffixであるとき
if s.endswith(suffix) :	もし文字列sの接尾辞がsuffixとき
if s.endswith(suffix) :	もしsの終端がsuffixであるとき
if s.endswith(suffix) :	sの接尾辞がsuffixであるとき
if s.endswith(suffix) :	もしsのサフィックスがsuffix場合
if s.endswith(suffix) :	文字列sの終わりがsuffixであるとき
if not s.endswith(suffix) :	文字列sのサフィックスがsuffixでないとき
if not s.endswith(suffix) :	文字列sの終端がsuffixであるでない場合
if not s.endswith(suffix) :	sの末尾がsuffixであるでないとき
if not s.endswith(suffix) :	もし文字列sの接尾辞がsuffixでないとき
if not s.endswith(suffix) :	sの終端がsuffixであるでないとき
if not s.endswith(suffix) :	sの接尾辞がsuffixであるでないならば
if not s.endswith(suffix) :	sのサフィックスがsuffixでないならば
if not s.endswith(suffix) :	文字列sの終わりがsuffixであるでないならば
while s.endswith(suffix) :	文字列sのサフィックスがsuffix間
while s.endswith(suffix) :	sの末尾がsuffixである間
while s.endswith(suffix) :	sのサフィックスがsuffix間
while not s.endswith(suffix) :	文字列sのサフィックスがsuffixでない間
while not s.endswith(suffix) :	文字列sの接尾辞がsuffixでない間
while not s.endswith(suffix) :	sの終端がsuffixであるでない間
while not s.endswith(suffix) :	sのサフィックスがsuffixでない間
while not s.endswith(suffix) :	文字列sの終わりがsuffixであるでない間
s.expandtabs()	文字列sのタブ記号を空白で置き換える
s.expandtabs()	空白で文字列sのTABを置換する
s.expandtabs()	空白でsのタブを置換する
s.expandtabs()	空白で文字列sのタブを置き換える
s.expandtabs()	文字列sのタブ記号を空白で置換する
s.expandtabs()	空白でsのTABを置き換える
s.expandtabs()	sのTABを空白で置換する
s.expandtabs()	空白でs文字列のタブ記号を置換する
s.expandtabs()	空白で文字列sのTABを置き換える
s.expandtabs()	文字列sのタブを空白で置き換える
s.expandtabs()	空白でsのTABを置換する
s.expandtabs(n)	n文字の空白で文字列sのタブ記号を置換する
s.expandtabs(n)	n文字の空白でs文字列内のタブ記号を置換する
s.expandtabs(n)	n文字の空白でs内のタブ記号を置き換える
s.expandtabs(n)	n文字の空白で文字列s内のタブ記号を置換する
s.expandtabs(n)	n文字の空白でs内のTABを置換する
s.expandtabs(n)	s内のタブ記号をn文字の空白で置き換える
s.expandtabs(n)	n文字の空白でs文字列内のタブ記号を置き換える
s.expandtabs(n)	n文字の空白でs内のタブ記号を置換する
s.expandtabs(n)	s中のTABをn文字の空白で置き換える
s.expandtabs(n)	s中のタブをn文字の空白で置き換える
s.expandtabs(n)	文字列s中のタブ記号をn文字の空白で置換する
s.expandtabs(n)	n文字の空白で文字列s中のTABを置き換える
s.expandtabs(n)	文字列sのタブ記号をn文字の空白で置換する
s.expandtabs(n)	n文字の空白でs文字列内のTABを置き換える
s.expandtabs(n)	n文字の空白でs中のタブを置き換える
s.expandtabs(n)	n文字の空白で文字列s中のTABを置換する
s.expandtabs(n)	n文字の空白でs文字列中のTABを置換する
s.expandtabs(n)	n文字の空白でs中のタブ記号を置き換える
s.expandtabs(n)	s内のTABをn文字の空白で置換する
s.expandtabs(n)	文字列sのタブ記号をn文字の空白で置き換える
s.expandtabs(n)	n文字の空白でs中のTABを置換する
s.expandtabs(n)	n文字の空白でs文字列内のタブを置き換える
s.expandtabs(n)	文字列s中のタブ記号をn文字の空白で置き換える
s.expandtabs(n)	文字列s中のTABをn文字の空白で置き換える
s.expandtabs(n)	s中のタブ記号をn文字の空白で置換する
s.expandtabs(n)	s内のTABをn文字の空白で置き換える
s.expandtabs(n)	文字列s内のタブ記号をn文字の空白で置換する
s.expandtabs(n)	n文字の空白でs中のタブを置換する
s.find(sub) >= 0	subがs内にあるか
if s.find(sub) >= 0:	subがs内にあるとき
s.find(sub) >= 0	subが文字列sにあるか
if s.find(sub) >= 0:	subが文字列sにあるとき
s.find(sub) >= 0	文字列sにsubがあるか否か
if s.find(sub) >= 0:	文字列sにsubがあるとき
s.find(sub) >= 0	文字列s内にsubがあるか
if s.find(sub) >= 0:	もし文字列s内にsubがあるならば
s.find(sub) >= 0	subがs中にあるか否か
if s.find(sub) >= 0:	subがs中にあるとき
s.find(sub) >= 0	subがs文字列中にあるか
if s.find(sub) >= 0:	subがs文字列中にある場合
s.find(sub) >= 0	s内にsubがあるかどうか
if s.find(sub) >= 0:	s内にsubがある場合
s.find(sub) >= 0	文字列s中にsubがあるか
if s.find(sub) >= 0:	文字列s中にsubがあるならば
if s.find(sub) >= 0 :	もしsubが文字列sにある場合
if s.find(sub) >= 0 :	もしsubが文字列sにあれば
if s.find(sub) >= 0 :	もし文字列sにsubがあるとき
if s.find(sub) >= 0 :	もし文字列sにsubがあれば
if s.find(sub) >= 0 :	もし文字列sにsubがあったら
if s.find(sub) >= 0 :	もし文字列s内にsubがあるとき
if s.find(sub) >= 0 :	もしsubがs中にあるならば
if s.find(sub) >= 0 :	もしsubがs中にあれば
if s.find(sub) >= 0 :	s内にsubがあれば
if s.find(sub) >= 0 :	もしs内にsubがあったとき
if s.find(sub) >= 0 :	文字列s中にsubがあるならば
if s.find(sub) >= 0 :	もし文字列s中にsubがあれば
while s.find(sub) >= 0 :	subがs内にある間
while s.find(sub) >= 0 :	subが文字列sにある間
while s.find(sub) >= 0 :	文字列sにsubがある間
while s.find(sub) >= 0 :	文字列s内にsubがある間
while s.find(sub) >= 0 :	s内にsubがある間
while s.find(sub) >= 0 :	文字列s中にsubがある間
s.find(sub) >= 0	subがsで発見されるかどうか
if s.find(sub) >= 0:	subがsで発見される場合
s.find(sub) >= 0	文字列s中でsubが発見されるか
if s.find(sub) >= 0:	もし文字列s中でsubが発見されるならば
s.find(sub) >= 0	subがs文字列で出現するか否か
if s.find(sub) >= 0:	もしsubがs文字列で出現するならば
s.find(sub) >= 0	subがs中で出現するか
if s.find(sub) >= 0:	subがs中で出現するならば
s.find(sub) >= 0	文字列s内でsubが出現するか否か
if s.find(sub) >= 0:	もし文字列s内でsubが出現するならば
s.find(sub) >= 0	subがs文字列内で出現するか否か
if s.find(sub) >= 0:	もしsubがs文字列内で出現するならば
s.find(sub) >= 0	subが文字列s中で出現するか
if s.find(sub) >= 0:	もしsubが文字列s中で出現するならば
s.find(sub) >= 0	subがsで出現するかどうか
if s.find(sub) >= 0:	subがsで出現するならば
s.find(sub) >= 0	s内でsubが発見されるか
if s.find(sub) >= 0:	もしs内でsubが発見されるならば
s.find(sub) >= 0	文字列s中でsubが見つかるかどうか
if s.find(sub) >= 0:	もし文字列s中でsubが見つかるならば
s.find(sub) >= 0	subがs内で発見されるか
if s.find(sub) >= 0:	subがs内で発見される場合
s.find(sub) >= 0	s中でsubが出現するか
if s.find(sub) >= 0:	s中でsubが出現するとき
s.find(sub) >= 0	s内でsubが見つかるか
if s.find(sub) >= 0:	s内でsubが見つかるならば
s.find(sub) >= 0	s内でsubが出現するか
if s.find(sub) >= 0:	s内でsubが出現するとき
s.find(sub) >= 0	sでsubが出現するか
if s.find(sub) >= 0:	もしsでsubが出現するならば
s.find(sub) >= 0	subがs文字列中で発見されるか
if s.find(sub) >= 0:	もしsubがs文字列中で発見されるならば
if s.find(sub) >= 0 :	subがsで発見されれば
if s.find(sub) >= 0 :	もしsubがsで発見されたなら
if s.find(sub) >= 0 :	文字列s中でsubが発見されれば
if s.find(sub) >= 0 :	もし文字列s中でsubが発見されたなら
if s.find(sub) >= 0 :	subがs文字列で出現したならば
if s.find(sub) >= 0 :	もしsubがs中で出現するとき
if s.find(sub) >= 0 :	もしsubがs中で出現したとき
if s.find(sub) >= 0 :	もし文字列s内でsubが出現する場合
if s.find(sub) >= 0 :	文字列s内でsubが出現すれば
if s.find(sub) >= 0 :	subがs文字列内で出現するとき
if s.find(sub) >= 0 :	subがs文字列内で出現すれば
if s.find(sub) >= 0 :	もしsubがs文字列内で出現した場合
if s.find(sub) >= 0 :	subが文字列s中で出現すれば
if s.find(sub) >= 0 :	もしsubが文字列s中で出現したとき
if s.find(sub) >= 0 :	もしsubがsで出現した場合
if s.find(sub) >= 0 :	s内でsubが発見されれば
if s.find(sub) >= 0 :	s内でsubが発見されたならば
if s.find(sub) >= 0 :	もし文字列s中でsubが見つかれば
if s.find(sub) >= 0 :	もし文字列s中でsubが見つかった場合
if s.find(sub) >= 0 :	subがs内で発見されるならば
if s.find(sub) >= 0 :	もしs中でsubが出現するとき
if s.find(sub) >= 0 :	もしs中でsubが出現すれば
if s.find(sub) >= 0 :	もしs中でsubが出現したなら
if s.find(sub) >= 0 :	s内でsubが見つかれば
if s.find(sub) >= 0 :	もしs内でsubが見つかったなら
if s.find(sub) >= 0 :	もしsでsubが出現するならば
if s.find(sub) >= 0 :	sでsubが出現したら
if s.find(sub) >= 0 :	もしsubがs文字列中で発見されたならば
while s.find(sub) >= 0 :	subがsで発見される間
while s.find(sub) >= 0 :	subがs文字列内で出現する間
while s.find(sub) >= 0 :	subがsで出現する間
while s.find(sub) >= 0 :	s内でsubが発見される間
while s.find(sub) >= 0 :	文字列s中でsubが見つかる間
while s.find(sub) >= 0 :	subがs内で発見される間
while s.find(sub) >= 0 :	s内でsubが出現する間
while s.find(sub) >= 0 :	sでsubが出現する間
while s.find(sub) >= 0 :	subがs文字列中で発見される間
s.find(sub) == -1	subがs中にないか否か
if s.find(sub) == -1:	subがs中にないならば
s.find(sub) == -1	s中にsubがないかどうか
if s.find(sub) == -1:	s中にsubがないとき
s.find(sub) == -1	s内にsubがないか否か
if s.find(sub) == -1:	s内にsubがないならば
s.find(sub) == -1	subがsにないかどうか
if s.find(sub) == -1:	subがsにないとき
s.find(sub) == -1	subがs文字列内にないか
if s.find(sub) == -1:	subがs文字列内にないならば
s.find(sub) == -1	文字列s中にsubがないか否か
if s.find(sub) == -1:	文字列s中にsubがない場合
s.find(sub) == -1	文字列s内にsubがないかどうか
if s.find(sub) == -1:	文字列s内にsubがないとき
s.find(sub) == -1	subがs文字列中にないか
if s.find(sub) == -1:	subがs文字列中にないとき
s.find(sub) == -1	subがs内にないか否か
if s.find(sub) == -1:	subがs内にないならば
if s.find(sub) == -1 :	subがs中になくなければ
if s.find(sub) == -1 :	もしsubがs中になくなかったなら
if s.find(sub) == -1 :	もしs中にsubがないならば
if s.find(sub) == -1 :	もしs中にsubがなくなければ
if s.find(sub) == -1 :	もしs中にsubがなくなかったならば
if s.find(sub) == -1 :	s内にsubがないならば
if s.find(sub) == -1 :	もしs内にsubがなくなければ
if s.find(sub) == -1 :	もしs内にsubがなくなかったとき
if s.find(sub) == -1 :	もしsubがsにない場合
if s.find(sub) == -1 :	もしsubがsになくなければ
if s.find(sub) == -1 :	もしsubがsになくなかったら
if s.find(sub) == -1 :	subがs文字列内にない場合
if s.find(sub) == -1 :	文字列s内にsubがないとき
if s.find(sub) == -1 :	文字列s内にsubがなくなければ
if s.find(sub) == -1 :	もし文字列s内にsubがなくなかったとき
if s.find(sub) == -1 :	subがs文字列中にないとき
if s.find(sub) == -1 :	もしsubがs文字列中になくなかったら
if s.find(sub) == -1 :	subがs内にないならば
if s.find(sub) == -1 :	subがs内になくなければ
if s.find(sub) == -1 :	subがs内になくなかったなら
while s.find(sub) == -1 :	s内にsubがない間
while s.find(sub) == -1 :	subがsにない間
while s.find(sub) == -1 :	文字列s中にsubがない間
s.find(sub) == -1	文字列sでsubが見つからないかどうか
if s.find(sub) == -1:	文字列sでsubが見つからないならば
s.find(sub) == -1	subが文字列s中で見つからないかどうか
if s.find(sub) == -1:	subが文字列s中で見つからない場合
s.find(sub) == -1	s中でsubが見つからないか
if s.find(sub) == -1:	s中でsubが見つからない場合
s.find(sub) == -1	s内でsubが見つからないか否か
if s.find(sub) == -1:	s内でsubが見つからない場合
s.find(sub) == -1	subがs内で見つからないかどうか
if s.find(sub) == -1:	もしsubがs内で見つからないならば
s.find(sub) == -1	文字列s内でsubが見つからないか
if s.find(sub) == -1:	文字列s内でsubが見つからない場合
s.find(sub) == -1	subがsで見つからないかどうか
if s.find(sub) == -1:	subがsで見つからないならば
s.find(sub) == -1	文字列s中でsubが見つからないか否か
if s.find(sub) == -1:	文字列s中でsubが見つからない場合
if s.find(sub) == -1 :	もし文字列sでsubが見つからないならば
if s.find(sub) == -1 :	もし文字列sでsubが見つからなければ
if s.find(sub) == -1 :	もしsubが文字列s中で見つからなかった場合
if s.find(sub) == -1 :	s中でsubが見つからなければ
if s.find(sub) == -1 :	もしs中でsubが見つからなかったなら
if s.find(sub) == -1 :	もしs内でsubが見つからなければ
if s.find(sub) == -1 :	もしsubがs内で見つからなければ
if s.find(sub) == -1 :	もしsubがs内で見つからなかったら
if s.find(sub) == -1 :	もし文字列s内でsubが見つからないとき
if s.find(sub) == -1 :	文字列s内でsubが見つからなかったならば
if s.find(sub) == -1 :	もしsubがsで見つからなければ
if s.find(sub) == -1 :	もしsubがsで見つからなかったら
if s.find(sub) == -1 :	もし文字列s中でsubが見つからないとき
if s.find(sub) == -1 :	文字列s中でsubが見つからなければ
if s.find(sub) == -1 :	文字列s中でsubが見つからなかったら
while s.find(sub) == -1 :	文字列sでsubが見つからない間
while s.find(sub) == -1 :	s中でsubが見つからない間
while s.find(sub) == -1 :	s内でsubが見つからない間
while s.find(sub) == -1 :	subがs内で見つからない間
while s.find(sub) == -1 :	文字列s内でsubが見つからない間
while s.find(sub) == -1 :	subがsで見つからない間
s.find(sub)	文字列s内で部分文字列subの位置を探す
s.find(sub)	文字列s中でsubの位置を探す
s.find(sub)	部分文字列subを文字列sで探す
s.find(sub)	文字列s中で部分文字列subを探す
s.find(sub)	subをs中で探す
s.find(sub)	部分文字列subの位置をs内で探す
s.find(sub)	文字列s内で部分文字列subを探す
s.find(sub)	文字列s内でsub部分文字列の位置を探す
s.find(sub)	部分文字列subをs中で探す
s.find(sub)	s中で部分文字列subの位置を探す
s.find(sub)	部分文字列subをsで探す
s.find(sub)	部分文字列subをs文字列中で探す
s.find(sub)	部分文字列subを文字列s中で探す
s.find(sub)	subの位置を文字列sで探す
s.find(sub)	部分文字列subの位置をsで探す
s.find(sub)	s中でsubの位置を探す
s.find(sub)	subの位置をs中で探す
s.find(sub)	文字列sで部分文字列subを探す
s.find(sub)	s内でsub部分文字列の位置を探す
s.find(sub)	部分文字列subをs文字列内で探す
s.find(sub)	部分文字列subの位置をs文字列内で探す
s.find(sub)	s内でsubを探す
s.find(sub)	subをsで探す
s.find(sub)	s内で部分文字列subを探す
s.find(sub)	部分文字列subの位置を文字列s内で探す
s.find(sub)	s内でsubの位置を探す
s.find(sub, start)	s中で部分文字列subをstartから探す
s.find(sub, start)	s中でsub部分文字列をstartから探す
s.find(sub, start)	文字列sで部分文字列subをstartから探す
s.find(sub, start)	subをs中でstartから探す
s.find(sub, start)	subをstartからs中で探す
s.find(sub, start)	startから文字列s内でsub部分文字列を探す
s.find(sub, start)	subをstartから文字列sで探す
s.find(sub, start)	部分文字列subの位置をs文字列でstartから探す
s.find(sub, start)	startから部分文字列subの位置を文字列s内で探す
s.find(sub, start)	部分文字列subの位置をs内でstartから探す
s.find(sub, start)	subをsでstartから探す
s.find(sub, start)	部分文字列subの位置をs文字列中でstartから探す
s.find(sub, start)	subの位置をs文字列でstartから探す
s.find(sub, start)	subの位置をs中でstartから探す
s.find(sub, start)	startからsubの位置をs文字列中で探す
s.find(sub, start)	s内でstartからsubの位置を探す
s.find(sub, start)	s内で部分文字列subの位置をstartから探す
s.find(sub, start)	部分文字列subの位置をstartからs文字列中で探す
s.find(sub, start)	startからs文字列で部分文字列subの位置を探す
s.find(sub, start)	文字列s内でsub部分文字列をstartから探す
s.find(sub, start)	startから文字列s中でsubを探す
s.find(sub, start)	部分文字列subをstartからs文字列内で探す
s.find(sub, start)	s内でstartからsub部分文字列を探す
s.find(sub, start)	文字列s内でstartからsub部分文字列を探す
s.find(sub, start)	部分文字列subをs中でstartから探す
s.find(sub, start)	startから文字列s内でsub部分文字列の位置を探す
s.find(sub, start)	startから文字列s内でsubの位置を探す
s.find(sub, start)	subをs文字列中でstartから探す
s.find(sub, start)	文字列s内で部分文字列subをstartから探す
s.find(sub, start)	sでstartからsubを探す
s.find(sub, start)	部分文字列subをstartからs文字列中で探す
s.find(sub, start)	startからs内でsubの位置を探す
s.find(sub, start)	subの位置をs文字列中でstartから探す
s.find(sub, start)	sでsubをstartから探す
s.find(sub, start)	startからs文字列内でsub部分文字列の位置を探す
s.find(sub, start)	s中でsub部分文字列の位置をstartから探す
s.find(sub, start)	s中でsubをstartから探す
s.find(sub, start)	startからs内でsubを探す
s.find(sub, start)	文字列sでstartからsub部分文字列の位置を探す
s.find(sub, start)	部分文字列subをstartからs文字列で探す
s.find(sub, start)	文字列sでstartから部分文字列subの位置を探す
s.find(sub, start)	startから部分文字列subの位置をs内で探す
s.find(sub, start)	sでstartからsub部分文字列の位置を探す
s.find(sub, start)	startからsub部分文字列の位置を文字列s内で探す
s.find(sub, start)	s中で部分文字列subの位置をstartから探す
s.find(sub, start)	s内でstartから部分文字列subを探す
s.find(sub, start)	部分文字列subをs文字列でstartから探す
s.find(sub, start)	部分文字列subを文字列s内でstartからendまで探す
s.find(sub, start)	startからsubの位置を文字列s中でendまで探す
s.find(sub, start)	startからs内でsubをendまで探す
s.find(sub, start)	部分文字列subをstartから文字列s中でendまで探す
s.find(sub, start)	subをstartからs文字列中でendまで探す
s.find(sub, start)	startから部分文字列subをs文字列内でendまで探す
s.find(sub, start)	subの位置をstartから文字列s内でendまで探す
s.find(sub, start)	startから部分文字列subを文字列s内でendまで探す
s.find(sub, start)	文字列sでsubの位置をstartからendまで探す
s.find(sub, start)	部分文字列subの位置をstartから文字列sでendまで探す
s.find(sub, start)	startからsubをs文字列中でendまで探す
s.find(sub, start)	subをs中でstartからendまで探す
s.find(sub, start)	subをs文字列内でstartからendまで探す
s.find(sub, start)	startから部分文字列subをs文字列中でendまで探す
s.find(sub, start)	文字列s中でstartから部分文字列subをendまで探す
s.find(sub, start)	startからsubを文字列s中でendまで探す
s.find(sub, start)	subをstartから文字列s内でendまで探す
s.find(sub, start)	部分文字列subの位置を文字列sでstartからendまで探す
s.find(sub, start)	s内で部分文字列subをstartからendまで探す
s.find(sub, start)	startからsub部分文字列の位置を文字列sでendまで探す
s.find(sub, start)	subをstartからs文字列内でendまで探す
s.find(sub, start)	startからsub部分文字列をs中でendまで探す
s.find(sub, start)	文字列s中でstartからsubをendまで探す
s.find(sub, start)	startからs内で部分文字列subの位置をendまで探す
s.find(sub, start)	部分文字列subの位置をstartからs文字列でendまで探す
s.find(sub, start)	部分文字列subの位置をs内でstartからendまで探す
s.find(sub, start)	s中で部分文字列subをstartからendまで探す
s.find(sub, start)	subの位置をs内でstartからendまで探す
s.find(sub, start)	s内でsub部分文字列をstartからendまで探す
s.find(sub, start)	文字列s中でsub部分文字列の位置をstartからendまで探す
s.find(sub, start)	startからsでsubの位置をendまで探す
s.find(sub, start)	startからsub部分文字列をs文字列内でendまで探す
s.find(sub, start)	startからsで部分文字列subをendまで探す
s.find(sub, start)	sでstartからsubをendまで探す
s.find(sub, start)	文字列sでstartからsubをendまで探す
s.find(sub, start)	startからs文字列内でsubの位置をendまで探す
s.find(sub, start)	文字列s内で部分文字列subの位置をstartからendまで探す
s.find(sub, start)	sでsubをstartからendまで探す
s.find(sub, start)	startからs中でsubの位置をendまで探す
s.find(sub, start)	startからsubをsでendまで探す
s.find(sub, start)	startから文字列s内でsub部分文字列をendまで探す
s.find(sub, start)	startから文字列s中でsub部分文字列の位置をendまで探す
s.find(sub, start)	startから部分文字列subの位置を文字列s中でendまで探す
s.find(sub, start)	文字列s内で部分文字列subをstartからendまで探す
s.rfind(sub)	右からs文字列中でsubの位置を探す
s.rfind(sub)	部分文字列subの位置をs文字列中で右から探す
s.rfind(sub)	部分文字列subの位置を末尾から文字列s内で探す
s.rfind(sub)	subを末尾からs内で探す
s.rfind(sub)	末尾からs内でsubの位置を探す
s.rfind(sub)	後ろからsubを文字列s中で探す
s.rfind(sub)	文字列s内で後ろからsub部分文字列の位置を探す
s.rfind(sub)	s中でsub部分文字列の位置を右から探す
s.rfind(sub)	部分文字列subを文字列sで後ろから探す
s.rfind(sub)	文字列sでsub部分文字列を末尾から探す
s.rfind(sub)	部分文字列subの位置を文字列s内で末尾から探す
s.rfind(sub)	部分文字列subを後ろからs文字列中で探す
s.rfind(sub)	後ろからs文字列中でsub部分文字列の位置を探す
s.rfind(sub)	s中で後ろからsubの位置を探す
s.rfind(sub)	末尾からs文字列内で部分文字列subの位置を探す
s.rfind(sub)	後ろからs中でsubの位置を探す
s.rfind(sub)	s内でsubを右から探す
s.rfind(sub)	subの位置をsで末尾から探す
s.rfind(sub)	末尾からsでsub部分文字列を探す
s.rfind(sub)	sで部分文字列subを右から探す
s.rfind(sub)	文字列s中でsub部分文字列の位置を後ろから探す
s.rfind(sub)	末尾から部分文字列subの位置を文字列s内で探す
s.rfind(sub)	部分文字列subの位置を末尾からs内で探す
s.rfind(sub)	s内でsub部分文字列を末尾から探す
s.rfind(sub)	sでsubを後ろから探す
s.rfind(sub)	末尾からsub部分文字列の位置をs文字列内で探す
s.rfind(sub)	部分文字列subを右からs内で探す
s.rfind(sub)	末尾から文字列s内で部分文字列subの位置を探す
s.rfind(sub)	s中でsubを末尾から探す
s.rfind(sub)	右から文字列s中でsubの位置を探す
s.rfind(sub)	末尾からsubの位置を文字列s内で探す
s.rfind(sub)	文字列sでsubを右から探す
s.rfind(sub)	文字列s内で右から部分文字列subを探す
s.rfind(sub)	文字列s内でsub部分文字列の位置を末尾から探す
s.rfind(sub)	s中でsubの位置を末尾から探す
s.rfind(sub)	後ろからs中でsubを探す
s.rfind(sub)	subの位置を文字列s内で右から探す
s.rfind(sub)	後ろからsubの位置をs文字列内で探す
s.rfind(sub)	部分文字列subを文字列s内で右から探す
s.rfind(sub)	末尾からs中で部分文字列subを探す
s.rfind(sub)	subをs文字列内で後ろから探す
s.rfind(sub)	後ろから文字列s内でsub部分文字列を探す
s.rfind(sub)	s中で末尾から部分文字列subの位置を探す
s.rfind(sub)	右から文字列s内でsub部分文字列を探す
s.rfind(sub)	末尾からsubをs中で探す
s.rfind(sub)	後ろから文字列sで部分文字列subを探す
s.rfind(sub)	subをs文字列内で末尾から探す
s.rfind(sub)	末尾から部分文字列subの位置をs文字列内で探す
s.rfind(sub)	部分文字列subをs中で末尾から探す
s.rfind(sub)	部分文字列subをs文字列内で右から探す
s.rfind(sub)	文字列s中で末尾からsubを探す
s.rfind(sub)	s中で右からsubの位置を探す
s.rfind(sub)	末尾から部分文字列subを文字列s中で探す
s.rfind(sub)	部分文字列subを末尾から文字列s中で探す
s.rfind(sub)	subをs文字列中で後ろから探す
s.rfind(sub)	部分文字列subを後ろからs文字列内で探す
s.rfind(sub)	subを後ろからs文字列内で探す
s.rfind(sub)	部分文字列subの位置をs内で末尾から探す
s.rfind(sub)	末尾からsub部分文字列の位置をs内で探す
s.rfind(sub)	文字列s中で右からsubの位置を探す
s.rfind(sub)	subの位置を末尾からs文字列内で探す
s.rfind(sub)	s内で部分文字列subの位置を末尾から探す
s.rfind(sub)	右から文字列sでsubを探す
s.rfind(sub)	後ろから文字列s内でsubの位置を探す
s.rfind(sub)	後ろから文字列s中でsub部分文字列の位置を探す
s.rfind(sub)	後ろからsubをs文字列中で探す
s.rfind(sub)	文字列sでsubを末尾から探す
s.rfind(sub)	文字列s内で末尾から部分文字列subを探す
s.rfind(sub)	末尾からsubの位置をs内で探す
s.rfind(sub)	末尾から文字列s内でsubの位置を探す
s.rfind(sub)	文字列s内でsubを右から探す
s.rfind(sub)	部分文字列subの位置を末尾からsで探す
s.rfind(sub)	subの位置を末尾から文字列s中で探す
s.rfind(sub)	s中でsub部分文字列の位置を末尾から探す
s.rfind(sub)	s内で右から部分文字列subの位置を探す
s.rfind(sub)	部分文字列subを文字列s中で末尾から探す
s.rfind(sub)	subを右からs文字列内で探す
s.rfind(sub)	末尾からs内でsub部分文字列の位置を探す
s.rfind(sub)	s中で末尾から部分文字列subを探す
s.rfind(sub)	文字列sで右からsub部分文字列を探す
s.rfind(sub)	部分文字列subの位置をsで末尾から探す
s.rfind(sub)	後ろから部分文字列subの位置をsで探す
s.rfind(sub)	文字列s中で部分文字列subの位置を後ろから探す
s.rfind(sub)	sで後ろから部分文字列subを探す
s.rfind(sub)	末尾からsubをsで探す
s.rfind(sub)	末尾からs中でsubの位置を探す
s.rfind(sub, start)	文字列s内で末尾からsubの位置をstartまで探す
s.rfind(sub, start)	末尾からsで部分文字列subの位置をstartまで探す
s.rfind(sub, start)	後ろから部分文字列subの位置を文字列s中でstartまで探す
s.rfind(sub, start)	部分文字列subの位置をs中で後ろからstartまで探す
s.rfind(sub, start)	後ろからsub部分文字列の位置をs内でstartまで探す
s.rfind(sub, start)	部分文字列subをs内で後ろからstartまで探す
s.rfind(sub, start)	subの位置をs文字列内で末尾からstartまで探す
s.rfind(sub, start)	後ろからsub部分文字列の位置を文字列s中でstartまで探す
s.rfind(sub, start)	sで後ろからsub部分文字列をstartまで探す
s.rfind(sub, start)	末尾から文字列sで部分文字列subをstartまで探す
s.rfind(sub, start)	s内で後ろからsubの位置をstartまで探す
s.rfind(sub, start)	部分文字列subを末尾からs文字列内でstartまで探す
s.rfind(sub, start)	部分文字列subをs文字列内で後ろからstartまで探す
s.rfind(sub, start)	s中で末尾からsubをstartまで探す
s.rfind(sub, start)	subの位置をs中で右からstartまで探す
s.rfind(sub, start)	subを文字列sで後ろからstartまで探す
s.rfind(sub, start)	末尾からsubの位置をs内でstartまで探す
s.rfind(sub, start)	後ろからsubをs文字列でstartまで探す
s.rfind(sub, start)	右から部分文字列subを文字列sでstartまで探す
s.rfind(sub, start)	文字列sでsub部分文字列を末尾からstartまで探す
s.rfind(sub, start)	文字列s内で末尾からsub部分文字列の位置をstartまで探す
s.rfind(sub, start)	末尾からsでsubをstartまで探す
s.rfind(sub, start)	文字列s内で後ろからsubの位置をstartまで探す
s.rfind(sub, start)	部分文字列subを文字列s内で後ろからstartまで探す
s.rfind(sub, start)	部分文字列subの位置を末尾から文字列s内でstartまで探す
s.rfind(sub, start)	後ろからsでsub部分文字列をstartまで探す
s.rfind(sub, start)	subの位置を末尾からs文字列内でstartまで探す
s.rfind(sub, start)	文字列s内で右から部分文字列subをstartまで探す
s.rfind(sub, start)	文字列s中で後ろからsub部分文字列をstartまで探す
s.rfind(sub, start)	文字列s内で後ろから部分文字列subをstartまで探す
s.rfind(sub, start)	sでsubを後ろからstartまで探す
s.rfind(sub, start)	右からsub部分文字列をs内でstartまで探す
s.rfind(sub, start)	後ろからs中で部分文字列subの位置をstartまで探す
s.rfind(sub, start)	subの位置を後ろから文字列s中でstartまで探す
s.rfind(sub, start)	末尾から部分文字列subの位置をs内でstartまで探す
s.rfind(sub, start)	部分文字列subを後ろからs中でstartまで探す
s.rfind(sub, start)	s内で末尾からsubの位置をstartまで探す
s.rfind(sub, start)	文字列s中でsubを後ろからstartまで探す
s.rfind(sub, start)	後ろからs文字列でsub部分文字列の位置をstartまで探す
s.rfind(sub, start)	subをs内で右からstartまで探す
s.rfind(sub, start)	部分文字列subをs中で後ろからstartまで探す
s.rfind(sub, start)	部分文字列subをs文字列中で末尾からstartまで探す
s.rfind(sub, start)	文字列s中でsub部分文字列を右からstartまで探す
s.rfind(sub, start)	文字列s内で右からsubをstartまで探す
s.rfind(sub, start)	右から部分文字列subの位置を文字列sでstartまで探す
s.rfind(sub, start)	文字列s中で後ろからsub部分文字列の位置をstartまで探す
s.rfind(sub, start)	subを右からs文字列内でstartまで探す
s.rfind(sub, start)	sで右からsub部分文字列の位置をstartまで探す
s.rfind(sub, start)	s内で後ろから部分文字列subをstartまで探す
s.rfind(sub, start)	s内で部分文字列subを後ろからstartまで探す
s.rfind(sub, start)	後ろから文字列s内でsubの位置をstartまで探す
s.rfind(sub, start)	末尾からs文字列内でsubの位置をstartまで探す
s.rfind(sub, start)	subの位置を後ろからs内でstartまで探す
s.rfind(sub, start)	右からsで部分文字列subをstartまで探す
s.rfind(sub, start)	右から部分文字列subをsでstartまで探す
s.rfind(sub, start)	subをs文字列内で後ろからstartまで探す
s.rfind(sub, start)	文字列s内でsubを右からstartまで探す
s.rfind(sub, start)	末尾からsでsubの位置をstartまで探す
s.rfind(sub, start)	末尾から文字列s中で部分文字列subの位置をstartまで探す
s.rfind(sub, start)	文字列s内で末尾からsubをstartまで探す
s.rfind(sub, start)	subの位置を右からs中でstartまで探す
s.rfind(sub, start)	後ろから文字列s内で部分文字列subの位置をstartまで探す
s.rfind(sub, start)	s内でsub部分文字列を後ろからstartまで探す
s.rfind(sub, start)	subの位置をsで後ろからstartまで探す
s.rfind(sub, start)	部分文字列subをs中で末尾からstartまで探す
s.rfind(sub, start)	末尾からsubをs中でstartまで探す
s.rfind(sub, start)	末尾からsubの位置を文字列sでstartまで探す
s.rfind(sub, start)	末尾からs文字列中で部分文字列subをstartまで探す
s.rfind(sub, start)	subの位置を文字列s内で後ろからstartまで探す
s.rfind(sub, start, end)	endから文字列s中でsub部分文字列をstartまで探す
s.rfind(sub, start, end)	subをendから文字列s中でstartまで探す
s.rfind(sub, start, end)	endからsubの位置をs中でstartまで探す
s.rfind(sub, start, end)	部分文字列subの位置をsでendからstartまで探す
s.rfind(sub, start, end)	s内でsub部分文字列の位置をendからstartまで探す
s.rfind(sub, start, end)	文字列s中でendからsubの位置をstartまで探す
s.rfind(sub, start, end)	subの位置をs中でendからstartまで探す
s.rfind(sub, start, end)	s内でendからsubの位置をstartまで探す
s.rfind(sub, start, end)	s中でendからsub部分文字列をstartまで探す
s.rfind(sub, start, end)	endから文字列s内で部分文字列subの位置をstartまで探す
s.rfind(sub, start, end)	endからsubをs中でstartまで探す
s.rfind(sub, start, end)	subをs文字列でendからstartまで探す
s.rfind(sub, start, end)	部分文字列subをendから文字列sでstartまで探す
s.rfind(sub, start, end)	subをendからsでstartまで探す
s.rfind(sub, start, end)	文字列s中で部分文字列subの位置をendからstartまで探す
s.rfind(sub, start, end)	s中でendからsubをstartまで探す
s.rfind(sub, start, end)	s中でsub部分文字列の位置をendからstartまで探す
s.rfind(sub, start, end)	部分文字列subをsでendからstartまで探す
s.rfind(sub, start, end)	endから部分文字列subの位置をs文字列内でstartまで探す
s.rfind(sub, start, end)	subをendからs中でstartまで探す
s.rfind(sub, start, end)	endから文字列sでsubをstartまで探す
s.rfind(sub, start, end)	endからsubの位置をs文字列内でstartまで探す
s.rfind(sub, start, end)	endからs文字列内でsub部分文字列をstartまで探す
s.rfind(sub, start, end)	endからs文字列中でsub部分文字列の位置をstartまで探す
s.rfind(sub, start, end)	部分文字列subをendからs中でstartまで探す
s.rfind(sub, start, end)	文字列s内でsub部分文字列をendからstartまで探す
s.rfind(sub, start, end)	endからsub部分文字列をsでstartまで探す
s.rfind(sub, start, end)	endから文字列sでsubの位置をstartまで探す
s.rfind(sub, start, end)	endから文字列s中で部分文字列subの位置をstartまで探す
s.rfind(sub, start, end)	subの位置をendからs中でstartまで探す
s.rfind(sub, start, end)	部分文字列subの位置を文字列s内でendからstartまで探す
s.rfind(sub, start, end)	endからsubをsでstartまで探す
s.rfind(sub, start, end)	subの位置をendからs文字列内でstartまで探す
s.rfind(sub, start, end)	subの位置をendからs内でstartまで探す
s.rfind(sub, start, end)	endからsub部分文字列をs中でstartまで探す
s.rfind(sub, start, end)	文字列s内でendからsub部分文字列をstartまで探す
s.rfind(sub, start, end)	部分文字列subをs内でendからstartまで探す
s.rfind(sub, start, end)	subをs文字列中でendからstartまで探す
s.rfind(sub, start, end)	endからs内でsubの位置をstartまで探す
s.rfind(sub, start, end)	endから部分文字列subをs文字列内でstartまで探す
s.rfind(sub, start, end)	部分文字列subの位置をendからs内でstartまで探す
s.rfind(sub, start, end)	部分文字列subをendからs文字列でstartまで探す
s.rfind(sub, start, end)	s内でendからsubをstartまで探す
s.rfind(sub, start, end)	部分文字列subの位置をendから文字列sでstartまで探す
s.rfind(sub, start, end)	endからsubをs内でstartまで探す
s.rfind(sub, start, end)	subを文字列sでendからstartまで探す
s.rfind(sub, start, end)	文字列s内でendからsub部分文字列の位置をstartまで探す
s.rfind(sub, start, end)	endからs中でsubをstartまで探す
s.rfind(sub, start, end)	endからs中でsub部分文字列の位置をstartまで探す
s.rfind(sub, start, end)	endからsub部分文字列の位置を文字列sでstartまで探す
s.rfind(sub, start, end)	endからsub部分文字列の位置をs文字列内でstartまで探す
s.rfind(sub, start, end)	subをendからs文字列中でstartまで探す
s.rfind(sub, start, end)	部分文字列subの位置をendから文字列s内でstartまで探す
s.rfind(sub, start, end)	s中で部分文字列subの位置をendからstartまで探す
s.rfind(sub, start, end)	文字列s中でendからsub部分文字列の位置をstartまで探す
s.rfind(sub, start, end)	subを文字列s中でendからstartまで探す
s.index(sub)	s中でsubが最初に見つかった位置
s.index(sub)	subがs内で最初に見つかった位置
s.index(sub)	s内でsubが最初に見つかった位置
s.index(sub)	文字列s中でsubが見つかった位置
s.index(sub)	subが文字列s中で見つかった位置
s.index(sub)	subが文字列s内で見つかった位置
s.index(sub)	sでsubが最初に見つかった位置
s.index(sub)	文字列sでsubが最初に見つかった位置
s.index(sub)	subが文字列sで最初に見つかった位置
s.index(sub)	subが文字列sで見つかった位置
s.index(sub)	文字列s内でsubが最初に見つかった位置
s.index(sub)	s内でsubが見つかった位置
s.index(sub)	文字列s内でsubが見つかった位置
s.index(sub)	subがsで最初に見つかった位置
s.index(sub)	subがsで見つかった位置
s.index(sub)	subがs内で見つかった位置
s.rindex(sub)	文字列s内でsubが最後に見つかった位置
s.rindex(sub)	文字列s中でsubが最後に見つかった位置
s.rindex(sub)	sでsubが最後に見つかった位置
s.rindex(sub)	subがs文字列で最後に見つかった位置
s.rindex(sub)	文字列sでsubが最後に見つかった位置
s.rindex(sub)	subがs中で最後に見つかった位置
s.rindex(sub)	s内でsubが最後に見つかった位置
s.rindex(sub)	subが文字列s内で最後に見つかった位置
s.rindex(sub)	s中でsubが最後に見つかった位置
s.rindex(sub)	subがs文字列中で最後に見つかった位置
fmt.format(x)	xでfmt(テンプレをフォーマットする
fmt.format(x)	fmt(テンプレをxでフォーマットする
fmt.format(x)	xでfmt(テンプレを整形する
fmt.format(x)	fmt(テンプレをxで整形する
fmt.format(x, y)	テンプレートfmtをxとyで整形する
fmt.format(x, y)	テンプレートfmtをxとyでフォーマットする
fmt.format(x, y)	xとyでfmtを整形する
fmt.format(x, y)	書式fmtをxとyでフォーマットする
fmt.format(x, y)	xとyでfmtテンプレを整形する
fmt.format(x, y)	テンプレfmtをxとyでフォーマットする
fmt.format(x, y)	書式fmtをxとyで整形する
fmt.format(x, y)	xとyでfmtをフォーマットする
fmt.format(x, y)	テンプレfmtをxとyで整形する
fmt.format(x, y)	fmtをxとyでフォーマットする
fmt.format(x, y)	fmtをxとyで整形する
fmt.format(x, y, z)	x,y,zでfmtテンプレートをフォーマットする
fmt.format(x, y, z)	x,y,zでfmt書式を整形する
fmt.format(x, y, z)	テンプレfmtをx,y,zでフォーマットする
fmt.format(x, y, z)	x,y,zでfmtをフォーマットする
fmt.format(x, y, z)	fmtをx,y,zで整形する
fmt.format(x, y, z)	テンプレートfmtをx,y,zでフォーマットする
fmt.format(x, y, z)	x,y,zでテンプレfmtをフォーマットする
fmt.format(x, y, z)	x,y,zでfmt書式をフォーマットする
fmt.format(x, y, z)	書式fmtをx,y,zで整形する
fmt.format(x, y, z)	x,y,zでfmtを整形する
fmt.format(x, y, z)	x,y,zで書式fmtを整形する
s.isalnum()	文字列sが英数字か
if s.isalnum():	もし文字列sが英数字ならば
s.isalnum()	sが英数字かどうか
if s.isalnum():	sが英数字の場合
not s.isalnum()	文字列sが英数字でないかどうか
not s.isalnum()	sが英数字でないか
if s.isalnum() :	文字列sが英数字ならば
if s.isalnum() :	もしsが英数字ならば
if not s.isalnum() :	もし文字列sが英数字でない場合
if not s.isalnum() :	もしsが英数字でないとき
s.isalpha()	文字列sがアルファベットか
if s.isalpha():	もし文字列sがアルファベットならば
s.isalpha()	sがアルファベットか否か
if s.isalpha():	sがアルファベットの場合
s.isalpha()	文字列sが英字か
if s.isalpha():	もし文字列sが英字ならば
s.isalpha()	sが英字かどうか
if s.isalpha():	もしsが英字ならば
not s.isalpha()	文字列sがアルファベットでないか
not s.isalpha()	sがアルファベットでないか
not s.isalpha()	文字列sが英字でないかどうか
not s.isalpha()	sが英字でないか
if s.isalpha() :	文字列sがアルファベット場合
if s.isalpha() :	sがアルファベットならば
if s.isalpha() :	もし文字列sが英字ならば
if s.isalpha() :	もしsが英字場合
if not s.isalpha() :	文字列sがアルファベットでないならば
if not s.isalpha() :	もしsがアルファベットでない場合
if not s.isalpha() :	文字列sが英字でないとき
if not s.isalpha() :	もしsが英字でないとき
s.isascii()	sがASCII文字か
if s.isascii():	もしsがASCII文字ならば
s.isascii()	文字列sがASCII文字かどうか
if s.isascii():	文字列sがASCII文字の場合
not s.isascii()	sがASCII文字でないか
not s.isascii()	文字列sがASCII文字でないか否か
if s.isascii() :	もしsがASCII文字とき
if s.isascii() :	文字列sがASCII文字とき
if not s.isascii() :	sがASCII文字でないとき
if not s.isascii() :	文字列sがASCII文字でなとき
s.isdecimal()	sが数字か
if s.isdecimal():	sが数字の場合
s.isdecimal()	文字列sが数字か否か
if s.isdecimal():	文字列sが数字ならば
not s.isdecimal()	sが数字でないかどうか
not s.isdecimal()	文字列sが数字でないかどうか
if s.isdecimal() :	もしsが数字場合
if s.isdecimal() :	文字列sが数字ならば
if not s.isdecimal() :	sが数字でない場合
if not s.isdecimal() :	文字列sが数字でない場合
s.isdigit()	文字列sが数字か否か
if s.isdigit():	文字列sが数字の場合
s.isdigit()	sが数字かどうか
if s.isdigit():	sが数字ならば
not s.isdigit()	文字列sが数字でないか
not s.isdigit()	sが数字でないか
if s.isdigit() :	文字列sが数字とき
if s.isdigit() :	もしsが数字ならば
if not s.isdigit() :	文字列sが数字でないならば
if not s.isdigit() :	sが数字でないならば
s.isidentifier()	文字列sが識別子文字か
if s.isidentifier():	文字列sが識別子文字の場合
s.isidentifier()	sが識別子文字か
if s.isidentifier():	sが識別子文字ならば
not s.isidentifier()	文字列sが識別子文字でないかどうか
not s.isidentifier()	sが識別子文字でないか
if s.isidentifier() :	もし文字列sが識別子文字ならば
if s.isidentifier() :	sが識別子文字ならば
if not s.isidentifier() :	もし文字列sが識別子文字でない場合
if not s.isidentifier() :	sが識別子文字でないならば
s.islower()	文字列sが小文字か否か
if s.islower():	文字列sが小文字のとき
s.islower()	sが小文字か
if s.islower():	sが小文字の場合
s.islower()	sが英小文字か否か
if s.islower():	もしsが英小文字ならば
not s.islower()	文字列sが小文字でないか
not s.islower()	sが小文字でないかどうか
not s.islower()	sが英小文字でないか
if s.islower() :	もし文字列sが小文字とき
if s.islower() :	sが小文字とき
if s.islower() :	もしsが英小文字ならば
if not s.islower() :	もし文字列sが小文字でない場合
if not s.islower() :	もしsが小文字でないならば
if not s.islower() :	sが英小文字でないならば
s.isnumeric()	文字列sが数字か
if s.isnumeric():	もし文字列sが数字ならば
s.isnumeric()	sが数字かどうか
if s.isnumeric():	sが数字ならば
not s.isnumeric()	文字列sが数字でないかどうか
not s.isnumeric()	sが数字でないかどうか
if s.isnumeric() :	もし文字列sが数字とき
if s.isnumeric() :	sが数字場合
if not s.isnumeric() :	文字列sが数字でないならば
if not s.isnumeric() :	もしsが数字でないならば
s.isprintable()	sが印字可能か
if s.isprintable():	sが印字可能ならば
s.isprintable()	文字列sが印字可能かどうか
if s.isprintable():	もし文字列sが印字可能ならば
s.isprintable()	文字列sが印字できるかどうか
if s.isprintable():	文字列sが印字できる場合
s.isprintable()	sが印字できるか
if s.isprintable():	もしsが印字できるならば
not s.isprintable()	sが印字可能でないか否か
not s.isprintable()	文字列sが印字可能でないか
not s.isprintable()	文字列sが印字できないか
not s.isprintable()	sが印字できないか
if s.isprintable() :	もしsが印字可能場合
if s.isprintable() :	文字列sが印字可能とき
if s.isprintable() :	文字列sが印字できれば
if s.isprintable() :	もし文字列sが印字できたら
if s.isprintable() :	sが印字できるとき
if s.isprintable() :	もしsが印字できれば
if s.isprintable() :	sが印字できたなら
if not s.isprintable() :	もしsが印字可能でな場合
if not s.isprintable() :	もし文字列sが印字可能でない場合
if not s.isprintable() :	もし文字列sが印字できなければ
if not s.isprintable() :	sが印字できなかったら
s.isspace()	sが空白か
if s.isspace():	もしsが空白ならば
s.isspace()	文字列sが空白かどうか
if s.isspace():	文字列sが空白ならば
not s.isspace()	sが空白でないか
not s.isspace()	文字列sが空白でないか
if s.isspace() :	sが空白場合
if s.isspace() :	もし文字列sが空白とき
if not s.isspace() :	sが空白でないとき
if not s.isspace() :	もし文字列sが空白でないとき
s.istitle()	文字列sがタイトルケース文字列かどうか
if s.istitle():	文字列sがタイトルケース文字列のとき
s.istitle()	sがタイトルケース文字列かどうか
if s.istitle():	sがタイトルケース文字列のとき
not s.istitle()	文字列sがタイトルケース文字列でないか
not s.istitle()	sがタイトルケース文字列でないかどうか
if s.istitle() :	もし文字列sがタイトルケース文字列ならば
if s.istitle() :	もしsがタイトルケース文字列場合
if not s.istitle() :	もし文字列sがタイトルケース文字列でないとき
if not s.istitle() :	sがタイトルケース文字列でない場合
s.isupper()	sが英大文字か否か
if s.isupper():	sが英大文字ならば
s.isupper()	sが大文字か
if s.isupper():	もしsが大文字ならば
s.isupper()	文字列sが英大文字か
if s.isupper():	文字列sが英大文字の場合
not s.isupper()	sが英大文字でないか
not s.isupper()	sが大文字でないか
not s.isupper()	文字列sが英大文字でないか
if s.isupper() :	sが英大文字ならば
if s.isupper() :	sが大文字ならば
if s.isupper() :	文字列sが英大文字とき
if not s.isupper() :	sが英大文字でないならば
if not s.isupper() :	sが大文字でないとき
if not s.isupper() :	もし文字列sが英大文字でないとき
s.join(a)	リストaのそれぞれをs文字列で連結する
s.join(a)	aのそれぞれを文字列sで連結する
s.join(a)	sでaの各要素を連結する
s.join(a)	sでリストaのそれぞれを連結する
s.join(a)	sでaのそれぞれを結合する
s.join(a)	aの各要素をs文字列で結合する
s.join(a)	aのそれぞれをs文字列でジョインする
s.join(a)	aの各要素をsでジョインする
s.join(a)	aのそれぞれをsで連結する
s.join(a)	sでaのそれぞれを連結する
s.join(a)	sでリストaの各要素を結合する
s.join(a)	文字列sでaのそれぞれを連結する
s.join(a)	aの各要素を文字列sで連結する
s.join(a)	aの各要素をsで連結する
s.join(a)	文字列sでリストaの各要素を連結する
s.join(a)	文字列sでaのそれぞれをジョインする
s.join(a)	文字列sでaの各要素を結合する
s.join(a)	文字列sでaリストのそれぞれを連結する
s.join(a)	文字列sでaリストの各要素を連結する
s.join(a)	リストaの各要素をs文字列で連結する
s.join(a)	aのそれぞれをs文字列で連結する
s.join(str(x) for x in a)	aの各要素を文字列に変換し、sで結合する
s.join(str(x) for x in a)	aの各要素を文字列に変換し、s文字列で連結する
s.join(str(x) for x in a)	リストaのそれぞれを文字列に変換し、s文字列で連結する
s.join(str(x) for x in a)	aのそれぞれを文字列に変換し、s文字列で結合する
s.join(str(x) for x in a)	aのそれぞれを文字列に変換し、sで連結する
s.join(str(x) for x in a)	リストaの各要素を文字列に変換し、s文字列で結合する
s.join(str(x) for x in a)	リストaの各要素を文字列に変換し、文字列sで結合する
s.join(str(x) for x in a)	リストaのそれぞれを文字列に変換し、文字列sで結合する
s.join(str(x) for x in a)	リストaの各要素を文字列に変換し、文字列sでジョインする
s.join(str(x) for x in a)	aの各要素を文字列に変換し、s文字列で結合する
s.join(str(x) for x in a)	aのそれぞれを文字列に変換し、sで結合する
s.join(str(x) for x in a)	リストaのそれぞれを文字列に変換し、sで結合する
s.join(str(x) for x in a)	リストaのそれぞれを文字列に変換し、文字列sでジョインする
s.join(str(x) for x in a)	リストaのそれぞれを文字列に変換し、sでジョインする
s.join(str(x) for x in a)	リストaの各要素を文字列に変換し、sでジョインする
s.join(str(x) for x in a)	aの各要素を文字列に変換し、文字列sで連結する
s.join(str(x) for x in a)	リストaの各要素を文字列に変換し、s文字列で連結する
s.join(str(x) for x in a)	aのそれぞれを文字列に変換し、文字列sで結合する
''.join(x)	aの各要素を文字列に変換し、連結する
''.join(x)	リストaの各要素を文字列に変換し、結合する
''.join(x)	aのそれぞれを文字列に変換し、結合する
''.join(x)	リストaのそれぞれを文字列に変換し、連結する
''.join(x)	リストaの各要素を文字列に変換し、連結する
s.lower()	文字列sを英小文字化する
s.lower()	sを小文字化する
s.lower()	sを英小文字化する
s.lower()	文字列sを小文字化する
s.upper()	sを大文字化する
s.upper()	sを英大文字化する
s.upper()	文字列sを英大文字化する
s.lstrip()	sの先頭から空白を取り除く
s.lstrip()	sの空白を前から消す
s.lstrip()	文字列sの最初から空白を取り除く
s.lstrip()	文字列sの先頭から余分な空白を消す
s.lstrip()	sの空白を先頭から取り除く
s.lstrip()	文字列sの空白を前から取り除く
s.lstrip()	sの最初から空白を取り除く
s.lstrip()	sの先頭から余分な空白を消す
s.lstrip()	文字列sの空白を最初から取り除く
s.lstrip()	文字列sの不要な空白を先頭から取り除く
s.lstrip()	文字列sの最初から不要な空白を除去する
s.lstrip()	sの空白を前から削除する
s.lstrip()	文字列sの空白を先頭から取り除く
s.lstrip()	sの前から空白を消す
s.lstrip()	sの先頭から不要な空白を取り除く
s.lstrip()	文字列sの空白を最初から削除する
s.lstrip()	sの不要な空白を先頭から除去する
s.lstrip()	sの空白を前から除去する
s.lstrip()	文字列sの前から余分な空白を削除する
s.lstrip()	文字列sの空白を先頭から消す
s.lstrip(chars)	文字列sの最初からcharsを取り除く
s.lstrip(chars)	sの最初からcharsを取り除く
s.lstrip(chars)	文字列sのcharsを先頭から除去する
s.lstrip(chars)	文字列sの前からcharsを取り除く
s.lstrip(chars)	文字列sのcharsを最初から取り除く
s.lstrip(chars)	sの最初からcharsを除去する
s.lstrip(chars)	sのcharsを先頭から取り除く
s.lstrip(chars)	sのcharsを最初から取り除く
s.rstrip()	sの空白を後ろから取り除く
s.rstrip()	文字列sの最後から空白を消す
s.rstrip()	文字列sの空白を最後から削除する
s.rstrip()	文字列sの空白を末尾から取り除く
s.rstrip()	sの空白を末尾から取り除く
s.rstrip()	sの最後から空白を取り除く
s.rstrip()	sの後ろから空白を削除する
s.rstrip()	文字列sの末尾から空白を除去する
s.rstrip()	sの末尾から空白を消す
s.rstrip()	sの空白を後ろから削除する
s.rstrip()	sの末尾から空白を除去する
s.rstrip()	文字列sの末尾から空白を消す
s.rstrip()	sの空白を最後から除去する
s.rstrip()	文字列sの空白を最後から取り除く
s.rstrip()	文字列sの末尾から空白を削除する
s.rstrip()	sの最後から空白を除去する
s.rstrip()	sの末尾から空白を取り除く
s.rstrip()	sの空白を最後から取り除く
s.rstrip()	sの空白を末尾から消す
s.rstrip()	文字列sの後ろから空白を削除する
s.rstrip(chars)	文字列sのcharsを末尾から削除する
s.rstrip(chars)	sの末尾からcharsを消す
s.rstrip(chars)	sのcharsを最後から除去する
s.rstrip(chars)	文字列sのcharsを最後から除去する
s.rstrip(chars)	sの最後からcharsを消す
s.rstrip(chars)	文字列sの後ろからcharsを取り除く
s.rstrip(chars)	sのcharsを末尾から除去する
s.rstrip(chars)	sのcharsを後ろから取り除く
s.rstrip(chars)	文字列sの最後からcharsを取り除く
s.rstrip(chars)	文字列sの後ろからcharsを消す
s.rstrip(chars)	sのcharsを最後から削除する
s.rstrip(chars)	文字列sのcharsを最後から消す
s.rstrip(chars)	sの末尾からcharsを除去する
s.rstrip(chars)	文字列sのcharsを最後から削除する
s.rstrip(chars)	文字列sのcharsを最後から取り除く
s.rstrip(chars)	文字列sのcharsを末尾から取り除く
s.rstrip(chars)	文字列sのcharsを後ろから除去する
s.rstrip(chars)	文字列sの後ろからcharsを除去する
s.strip()	文字列sの最初と末尾から余分な空白を取り除く
s.strip()	sの先頭と末尾から空白を削除する
s.strip()	文字列sの前と空白を最後から取り除く
s.strip()	文字列sの先頭と末尾から空白を除去する
s.strip()	sの最初と末尾から不要な空白を除去する
s.strip()	文字列sの最初と末尾から空白を除去する
s.strip()	文字列sの最初と最後から空白を取り除く
s.strip()	文字列sの前と空白を後ろから取り除く
s.strip()	文字列sの最初と末尾から不要な空白を取り除く
s.strip()	文字列sの先頭と空白を最後から削除する
s.strip()	sの最初と末尾から空白を削除する
s.strip()	文字列sの先頭と末尾から空白を削除する
s.strip()	文字列sの最初と空白を後ろから取り除く
s.strip()	sの前と最後から空白を取り除く
s.strip()	sの最初と空白を最後から消す
s.strip()	文字列sの先頭と最後から空白を消す
s.strip()	sの先頭と空白を末尾から消す
s.strip()	文字列sの先頭と末尾から空白を消す
s.strip()	sの最初と最後から空白を取り除く
s.strip()	文字列sの最初と空白を最後から消す
s.strip()	sの前と末尾から余分な空白を取り除く
s.strip()	文字列sの先頭と後ろから不要な空白を取り除く
s.strip()	文字列sの先頭と余分な空白を最後から取り除く
s.strip()	sの前と末尾から空白を削除する
s.strip()	文字列sから空白を取り除く
s.strip()	文字列sから余分な空白を消す
s.strip()	sから不要な空白を取り除く
s.strip()	余分な空白を文字列sから取り除く
s.strip()	文字列sから空白を消す
s.strip()	文字列sから不要な空白を取り除く
s.strip()	sから余分な空白を取り除く
s.strip()	不要な空白をs文字列から取り除く
s.strip()	文字列sから空白を除去する
s.strip()	sから空白を消す
s.strip()	sから空白を取り除く
s.strip()	sから空白を除去する
s.strip()	空白を文字列sから取り除く
s.strip()	空白をsから取り除く
s.strip()	余分な空白をsから除去する
s.strip()	空白をs文字列から取り除く
s.strip()	空白を文字列sから消す
s.strip()	空白をsから消す
s.strip(chars)	文字列sの先頭と末尾からcharsを取り除く
s.strip(chars)	sの最初とcharsを後ろから除去する
s.strip(chars)	文字列sの先頭と後ろからcharsを消す
s.strip(chars)	sの前とcharsを最後から取り除く
s.strip(chars)	文字列sの最初と後ろからcharsを消す
s.strip(chars)	sの前とcharsを後ろから取り除く
s.strip(chars)	sの前とcharsを最後から消す
s.strip(chars)	文字列sの最初とcharsを末尾から取り除く
s.strip(chars)	sの先頭とcharsを最後から取り除く
s.strip(chars)	文字列sの最初とcharsを最後から除去する
s.strip(chars)	文字列sの最初とcharsを末尾から削除する
s.strip(chars)	文字列sの最初と最後からcharsを取り除く
s.strip(chars)	sの最初とcharsを最後から削除する
s.strip(chars)	sの最初とcharsを末尾から消す
s.strip(chars)	文字列sの最初とcharsを最後から消す
s.strip(chars)	文字列sの前とcharsを末尾から取り除く
s.strip(chars)	文字列sの前と最後からcharsを取り除く
s.strip(chars)	sの最初と後ろからcharsを取り除く
s.strip(chars)	sの前と末尾からcharsを取り除く
s.strip(chars)	sの最初とcharsを末尾から削除する
s.strip(chars)	文字列sの先頭とcharsを末尾から削除する
s.strip(chars)	sの先頭とcharsを末尾から削除する
s.strip(chars)	文字列sの前とcharsを最後から消す
s.strip(chars)	sの最初と末尾からcharsを削除する
s.strip(chars)	文字列sの先頭と最後からcharsを除去する
s.strip(chars)	sの先頭とcharsを末尾から消す
s.strip(chars)	文字列sの最初と最後からcharsを消す
s.strip(chars)	sの先頭と末尾からcharsを削除する
s.strip(chars)	sの先頭とcharsを最後から消す
s.strip(chars)	sの前とcharsを末尾から取り除く
s.strip(chars)	文字列sの先頭とcharsを最後から取り除く
s.strip(chars)	sの前と末尾からcharsを除去する
s.strip(chars)	sの先頭とcharsを最後から除去する
s.strip(chars)	文字列sの先頭と末尾からcharsを消す
s.strip(chars)	文字列sの先頭とcharsを最後から除去する
s.strip(chars)	文字列sの最初と最後からcharsを削除する
s.strip(chars)	文字列sの前と最後からcharsを削除する
s.strip(chars)	文字列sの先頭とcharsを最後から削除する
s.strip(chars)	文字列sの先頭とcharsを末尾から取り除く
s.partition(sep)	文字列sをsepでパーティションする
s.partition(sep)	sをsepでパーティションする
s.partition(sep)	sepでs文字列をパーティションする
s.partition(sep)	sepでsをパーティションする
s.partition(sep)	sをsepで分割する
s.partition(sep)	sをsepで区切る
s.partition(sep)	sepでs文字列を区切る
s.partition(sep)	sepで文字列sを区切る
s.partition(sep)	文字列sをsepで区切る
s.partition(sep)	文字列sをsepで分割する
s.removeprefix(prefix)	文字列sから接頭辞prefixを取り除く
s.removeprefix(prefix)	sから接頭辞prefixを消す
s.removeprefix(prefix)	文字列sから接頭辞prefixを削除する
s.removeprefix(prefix)	文字列sから接頭辞prefixを消す
s.removeprefix(prefix)	sから接頭辞prefixを取り除く
s.removeprefix(prefix)	文字列sの先頭からprefix文字列を消す
s.removeprefix(prefix)	sの先頭からprefixを除去する
s.removeprefix(prefix)	文字列sの先頭からprefixを除去する
s.removeprefix(prefix)	sの最初からprefix文字列を除去する
s.removeprefix(prefix)	sの前から文字列prefixを消す
s.removeprefix(prefix)	sの前からprefix文字列を取り除く
s.removeprefix(prefix)	sの最初からprefixを取り除く
s.removeprefix(prefix)	sの最初からprefix文字列を取り除く
s.removeprefix(prefix)	文字列sの先頭からprefixを取り除く
s.removeprefix(prefix)	sの前からprefixを除去する
s.removeprefix(prefix)	sの最初からprefixを消す
s.removeprefix(prefix)	文字列sの前からprefix文字列を消す
s.removeprefix(prefix)	文字列sの前から文字列prefixを消す
s.removeprefix(prefix)	文字列sの前からprefixを除去する
s.removeprefix(prefix)	文字列sの最初から文字列prefixを取り除く
s.removeprefix(prefix)	sの最初から文字列prefixを消す
s.removeprefix(prefix)	sの先頭からprefix文字列を除去する
s.removeprefix(prefix)	sの先頭から文字列prefixを削除する
s.removeprefix(prefix)	文字列sの先頭からprefix文字列を削除する
s.removesuffix(suffix)	sから接尾辞suffixを消す
s.removesuffix(suffix)	sから接尾辞suffixを取り除く
s.removesuffix(suffix)	文字列sから接尾辞suffixを取り除く
s.removesuffix(suffix)	sから接尾辞suffixを削除する
s.removesuffix(suffix)	文字列sから接尾辞suffixを除去する
s.removesuffix(suffix)	文字列sから接尾辞suffixを消す
s.removesuffix(suffix)	文字列sの末尾からsuffixを取り除く
s.removesuffix(suffix)	sの後ろからsuffixを取り除く
s.removesuffix(suffix)	sの末尾からsuffixを取り除く
s.removesuffix(suffix)	sの末尾からsuffixを消す
s.removesuffix(suffix)	文字列sの最後からsuffixを取り除く
s.removesuffix(suffix)	sの最後からsuffixを消す
s.removesuffix(suffix)	sの末尾からsuffixを除去する
s.removesuffix(suffix)	sの最後からsuffixを除去する
s.removesuffix(suffix)	文字列sの末尾からsuffixを削除する
s.removesuffix(suffix)	sの末尾からsuffixを削除する
s.removesuffix(suffix)	sの最後からsuffixを削除する
s.removesuffix(suffix)	文字列sの最後からsuffixを消す
s.removesuffix(suffix)	sの最後からsuffixを取り除く
s.removesuffix(suffix)	文字列sの最後からsuffixを除去する
s.replace(sub, s2)	文字列s内のsubを
s.replace(sub, s2)	s中のsubを
s.replace(sub, s2)	文字列s内のsubを全て
s.replace(sub, s2)	s内のsubを全て
s.replace(sub, s2)	s内のsubを
s.replace(sub, s2)	文字列sのsubを
s.replace(sub, s2)	sのsubを全て
s.replace(sub, '')	文字列sのsubを
s.replace(sub, '')	sのsubを
s.replace(sub, '')	文字列s中のsubを
s.replace(sub, '')	文字列s内のsubを
s.replace(sub, '')	s中のsubを
s.replace(sub, '')	s内のsubを
s.split()	文字列sを空白で分割する
s.split()	空白でs文字列を分割する
s.split()	空白でsを区切る
s.split()	sを空白でスプリットする
s.split()	文字列sを空白で区切る
s.split()	空白で文字列sをスプリットする
s.split()	空白でsをスプリットする
s.split()	空白でs文字列をスプリットする
s.split()	sを空白で分ける
s.split()	文字列sを空白でスプリットする
s.split()	sを空白で区切る
s.split()	空白で文字列sを分ける
s.split()	空白で区切ってsをリストにする
s.split()	sを空白で区切ってリストにする
s.split()	空白で区切って文字列sをリストにする
s.split()	文字列sを空白で区切ってリストにする
s.split()	空白で区切ってs文字列をリストにする
s.split(sep)	sepでsを分割する
s.split(sep)	sepでsを区切る
s.split(sep)	区切り記号sepで文字列sをスプリットする
s.split(sep)	sをセパレータsepで分割する
s.split(sep)	文字列sをsepで区切る
s.split(sep)	区切り文字sepでsを分ける
s.split(sep)	sをsep区切り記号で区切る
s.split(sep)	区切り文字sepでs文字列を分ける
s.split(sep)	セパレータsepで文字列sを分ける
s.split(sep)	区切り記号sepでs文字列を区切る
s.split(sep)	区切り文字sepでsを分割する
s.split(sep)	文字列sを区切り記号sepでスプリットする
s.split(sep)	区切り記号sepでsをスプリットする
s.split(sep)	sをsepセパレータでスプリットする
s.split(sep)	文字列sを区切り文字sepで分ける
s.split(sep)	sepでsを分ける
s.split(sep)	文字列sをsep区切り記号で分ける
s.split(sep)	区切り文字sepでs文字列をスプリットする
s.split(sep)	文字列sをsepセパレータで区切る
s.split(sep)	区切り文字sepでs文字列を分割する
s.split(sep)	sをsepセパレータで分ける
s.split(sep)	区切り記号sepでs文字列をスプリットする
s.split(sep)	sepで文字列sを分ける
s.split(sep)	文字列sをsepで分ける
s.split(sep)	sをsepで分割する
s.split(sep)	区切り記号sepで文字列sを分割する
s.split(sep)	文字列sをsepで区切ってリストにする
s.split(sep)	sepで区切って文字列sをリストにする
s.split(sep)	sをsepで区切ってリストにする
s.rsplit(sep)	sをsepで右分割する
s.rsplit(sep)	sをsepセパレータで右から区切る
s.rsplit(sep)	区切り文字sepでsを右から区切る
s.rsplit(sep)	sを区切り記号sepで右から区切る
s.rsplit(sep)	区切り文字sepで文字列sを右分割する
s.rsplit(sep)	文字列sをsep区切り文字で右スプリットする
s.rsplit(sep)	sをsepで右スプリットする
s.rsplit(sep)	区切り記号sepでsを右から分ける
s.rsplit(sep)	区切り記号sepでsを右分割する
s.rsplit(sep)	sをsep区切り文字で右から分ける
s.rsplit(sep)	セパレータsepで文字列sを右スプリットする
s.rsplit(sep)	文字列sをsepで右スプリットする
s.rsplit(sep)	セパレータsepでsを右から分ける
s.rsplit(sep)	sをsepセパレータで右スプリットする
s.rsplit(sep)	sepで文字列sを右から分ける
s.rsplit(sep)	sを区切り文字sepで右から区切る
s.rsplit(sep)	sを区切り記号sepで右から分ける
s.rsplit(sep)	文字列sをsep区切り記号で右分割する
s.rsplit(sep)	区切り記号sepでs文字列を右分割する
s.rsplit(sep)	sをセパレータsepで右から区切る
s.rsplit(sep)	区切り記号sepでsを右スプリットする
s.rsplit(sep)	文字列sをsepセパレータで右から分ける
s.rsplit(sep)	区切り文字sepで文字列sを右から区切る
s.rsplit(sep)	sをsep区切り文字で右分割する
s.rsplit(sep)	文字列sを区切り文字sepで右分割する
s.rsplit(sep)	文字列sをsep区切り文字で右分割する
s.rsplit(sep)	sを区切り文字sepで右分割する
s.rsplit(sep)	セパレータsepでs文字列を右から区切る
s.rsplit(sep)	セパレータsepでsを右から区切る
s.rsplit(sep)	区切り文字sepでsを右から分ける
s.rsplit(sep)	文字列sをセパレータsepで右から区切る
s.rsplit(sep)	sepでs文字列を右分割する
s.rsplit(sep)	セパレータsepで文字列sを右から分ける
s.rsplit(sep)	区切り文字sepでsを右スプリットする
s.rsplit(sep)	文字列sをsep区切り文字で右から区切る
s.rsplit(sep)	文字列sを区切り記号sepで右から分ける
s.rsplit(sep)	セパレータsepで文字列sを右から区切る
s.rsplit(sep)	sepで文字列sを右分割する
s.rsplit(sep)	sをsepで右から分ける
s.split()[0]	文字列sを空白で区切った最初の部分
s.split()[0]	文字列sを空白で区切った最初の文字列
s.split()[0]	sを空白で区切った最初の文字列
s.split()[-1]	文字列sを空白で区切った最後の文字列
s.split()[-1]	文字列sを空白で区切った最後の部分
s.split()[-1]	sを空白で区切った最後の文字列
s.split()[-1]	sを空白で区切った最後の部分
s.split(sep)[0]	文字列sをsep区切り記号で区切った最初の文字列
s.split(sep)[0]	文字列sをsepで区切った最初の文字列
s.split(sep)[0]	文字列sをsep区切り記号で区切った最初の部分
s.split(sep)[0]	sを区切り文字sepで区切った最初の部分
s.split(sep)[0]	sをsepで区切った最初の文字列
s.split(sep)[0]	文字列sをsepで区切った最初の部分
s.split(sep)[0]	sをsep区切り記号で区切った最初の文字列
s.split(sep)[0]	sをsep区切り文字で区切った最初の部分
s.split(sep)[0]	sをsep区切り記号で区切った最初の部分
s.split(sep)[-1]	文字列sをsepで区切った最後の部分
s.split(sep)[-1]	sをsepで区切った最後の部分
s.split(sep)[-1]	文字列sをセパレータsepで区切った最後の部分
s.split(sep)[-1]	sをsep区切り文字で区切った最後の文字列
s.split(sep)[-1]	sをsep区切り文字で区切った最後の部分
s.split(sep)[-1]	sをsepで区切った最後の文字列
s.split(sep)[-1]	sをsepセパレータで区切った最後の文字列
s.split(sep)[-1]	文字列sをセパレータsepで区切った最後の文字列
s.split(sep)[-1]	文字列sをsep区切り文字で区切った最後の部分
s.split(sep)[-1]	文字列sをsepで区切った最後の文字列
s.split(sep)[-1]	文字列sをsep区切り文字で区切った最後の文字列
@option maxsplit = x	そのとき、最大分割回数はxとする
s.translate(ct)	文字列sをctで変換する
s.translate(ct)	変換表ctで文字列sの文字を変換する
s.translate(ct)	ctでsの文字を変換する
s.translate(ct)	ctでsを変換する
s.translate(ct)	変換表ctでsの文字を変換する
s.translate(ct)	文字列sをct変換表で変換する
s.translate(ct)	ctで文字列sを変換する
s.translate(ct)	変換表ctでsの文字を翻訳する
s.translate(ct)	ctでs文字列を変換する
s.translate(ct)	ctでs文字列の文字を翻訳する
s.translate(ct)	文字列sの文字を変換表ctで変換する
s.translate(ct)	ctで文字列sの文字を変換する
s.translate(ct)	ctでs文字列の文字を変換する
s.translate(ct)	sの文字をctで翻訳する
s.zfill(x)	sの大きさをxにする
s.zfill(x)	sのサイズをxにする
s.zfill(x)	sの長さをxにする
s.zfill(x)	文字列sのサイズをxにする
s.zfill(x)	sを幅xになるように'0'文字で埋める
s.zfill(x)	sを長さxになるように'0'文字で埋める
s.zfill(x)	長さxになるように文字列sを'0'文字で埋める
s.zfill(x)	文字列sを幅xになるように'0'文字で埋める
s.zfill(x)	長さxになるようにsを'0'文字で埋める
s.zfill(x)	幅xになるようにsを'0'文字で埋める
s.zfill(x)	文字列sを長さxになるように'0'文字で埋める
random.random()	乱数を生成する
random.choice(list)	listからひとつランダムに選ぶ
random.choice(list)	リストlistからひとつランダムに選ぶ
random.shuffle(list)	ランダムにlistリストをシャッフルする
random.shuffle(list)	ランダムにリストlistをシャッフルする
random.shuffle(list)	listをランダムにシャッフルする
random.shuffle(list)	ランダムにlistをシャッフルする
random.shuffle(list)	listをシャッフルする
random.sample(list)	listからサンプルを選ぶ
random.sample(list)	リストlistからサンプリングする
random.sample(list, n)	listからn個、サンプルを選ぶ
random.sample(list, n)	リストlistからn個、サンプルを選ぶ
random.sample(list, n)	リストlistからn個、サンプリングする
random.sample(list, n)	listからn個、サンプリングする
random.sample(list, n)	リストlistからn個、ランダムに選ぶ
random.sample(list, n)	listからn個、ランダムに選ぶ
random.randrange(x)	0からx未満までのランダム整数
random.randrange(x)	0からx未満までの整数乱数
random.randrange(x, y)	xからyまでのランダム整数
random.randrange(x, y)	xからy未満までのランダムな整数
random.randrange(x, y)	xからy未満までの整数乱数
random.randrange(x, y)	xからy未満までのランダム整数
random.randrange(x, y)	xからyまでの整数乱数
random.randrange(x, y)	xからyまでのランダムな整数
random.randint(x, y)	xからyまでのランダムな整数
random.randint(x, y)	xからyまでの整数乱数
random.randint(x, y)	xからyまでのランダム整数
random.seed()	乱数シードを初期化する
random.seed()	乱数生成を初期化する
random.seed(x)	乱数生成をxで初期化する
random.seed(x)	乱数シードをxで初期化する
math.ceil(x)	xの切り上げ整数値
math.comb(x)	xのコンビネーション
math.copysign(x, y)	xの符号をyと同じにする
math.fabs(x)	浮動小数点数xの絶対値
math.factorial(x)	xの階乗
math.floor(x)	xの切り捨て整数値
math.frexp(x)[0]	xの仮数部
math.frexp(x)[1]	xの指数部
math.gcd(x, y)	xとyの最大公約数
math.lcm(x, y)	xとyの最小公倍数
math.isclose(x, y)	xとyが等しいとみなせるか否か
if math.isclose(x, y):	xとyが等しいとみなせる場合
math.isclose(x, y)	xとyが十分に近いかどうか
if math.isclose(x, y):	xとyが十分に近い場合
math.isclose(x, y)	xとyがほぼ等しいか否か
if math.isclose(x, y):	xとyがほぼ等しい場合
math.isclose(x, y)	xとyが近いかどうか
if math.isclose(x, y):	xとyが近いとき
math.isclose(x, y)	xとyが近似できるか否か
if math.isclose(x, y):	xとyが近似できる場合
not math.isclose(x, y)	xとyが等しいとみなせないか
not math.isclose(x, y)	xとyが十分に近くないか
not math.isclose(x, y)	xとyがほぼ等しくないかどうか
not math.isclose(x, y)	xとyが近くないか
not math.isclose(x, y)	xとyが近似できないかどうか
if math.isclose(x, y) :	xとyが等しいとみなせたとき
if math.isclose(x, y) :	xとyが十分に近いならば
if math.isclose(x, y) :	xとyが十分に近ければ
if math.isclose(x, y) :	もしxとyがほぼ等しいならば
if math.isclose(x, y) :	もしxとyがほぼ等しければ
if math.isclose(x, y) :	xとyがほぼ等しかったら
if math.isclose(x, y) :	もしxとyが近かったなら
if math.isclose(x, y) :	xとyが近似できれば
if math.isclose(x, y) :	xとyが近似できたとき
if not math.isclose(x, y) :	もしxとyが等しいとみなせないとき
if not math.isclose(x, y) :	もしxとyが等しいとみなせなければ
if not math.isclose(x, y) :	もしxとyが等しいとみなせなかった場合
if not math.isclose(x, y) :	xとyが十分に近くない場合
if not math.isclose(x, y) :	xとyが十分に近くなかったなら
if not math.isclose(x, y) :	もしxとyがほぼ等しくないならば
if not math.isclose(x, y) :	もしxとyがほぼ等しくなかったならば
if not math.isclose(x, y) :	xとyが近似できなければ
while math.isclose(x, y) :	xとyが等しいとみなせる間
while math.isclose(x, y) :	xとyが十分に近い間
while math.isclose(x, y) :	xとyが近い間
while not math.isclose(x, y) :	xとyが等しいとみなせない間
while not math.isclose(x, y) :	xとyが近似できない間
math.isclose(x, y)	xがyに十分に近いかどうか
if math.isclose(x, y):	xがyに十分に近いとき
math.isclose(x, y)	xがyに近似できるか
if math.isclose(x, y):	xがyに近似できるとき
math.isclose(x, y)	xがyに近いか
if math.isclose(x, y):	xがyに近いならば
math.isclose(x, y)	xがyに等しいとみなせるか
if math.isclose(x, y):	xがyに等しいとみなせるとき
math.isclose(x, y)	xがyにほぼ等しいか
if math.isclose(x, y):	xがyにほぼ等しいならば
not math.isclose(x, y)	xがyに十分に近くないか
not math.isclose(x, y)	xがyに近似できないかどうか
not math.isclose(x, y)	xがyに近くないかどうか
not math.isclose(x, y)	xがyに等しいとみなせないか
not math.isclose(x, y)	xがyにほぼ等しくないか
if math.isclose(x, y) :	xがyに十分に近いならば
if math.isclose(x, y) :	もしxがyに十分に近かったとき
if math.isclose(x, y) :	xがyに近似できれば
if math.isclose(x, y) :	もしxがyに近ければ
if math.isclose(x, y) :	もしxがyに近かったら
if math.isclose(x, y) :	xがyに等しいとみなせるとき
if math.isclose(x, y) :	もしxがyに等しいとみなせれば
if math.isclose(x, y) :	xがyに等しいとみなせたとき
if math.isclose(x, y) :	もしxがyにほぼ等しければ
if math.isclose(x, y) :	xがyにほぼ等しかったら
if not math.isclose(x, y) :	xがyに十分に近くなければ
if not math.isclose(x, y) :	もしxがyに近似できないならば
if not math.isclose(x, y) :	もしxがyに近似できなかったならば
if not math.isclose(x, y) :	もしxがyに近くないならば
if not math.isclose(x, y) :	xがyに等しいとみなせなければ
if not math.isclose(x, y) :	xがyにほぼ等しくないとき
while math.isclose(x, y) :	xがyに近い間
while math.isclose(x, y) :	xがyに等しいとみなせる間
while not math.isclose(x, y) :	xがyに十分に近くない間
while not math.isclose(x, y) :	xがyに等しいとみなせない間
math.isfinite(x)	xが有限か
if math.isfinite(x):	xが有限ならば
not math.isfinite(x)	xが有限でないかどうか
if math.isfinite(x) :	もしxが有限とき
if not math.isfinite(x) :	もしxが有限でないならば
while math.isfinite(x) :	xが有限間
while not math.isfinite(x) :	xが有限でない間
math.isinf(x)	xが無限大か
if math.isinf(x):	xが無限大ならば
not math.isinf(x)	xが無限大でないか
if math.isinf(x) :	もしxが無限大ならば
if not math.isinf(x) :	もしxが無限大でないとき
while math.isinf(x) :	xが無限大間
while not math.isinf(x) :	xが無限大でない間
math.isnan(x)	xがNaNかどうか
if math.isnan(x):	xがNaNのとき
math.isnan(x)	xが非数かどうか
if math.isnan(x):	もしxが非数ならば
not math.isnan(x)	xがNaNでないか
not math.isnan(x)	xが非数でないかどうか
if math.isnan(x) :	もしxがNaNとき
if math.isnan(x) :	もしxが非数場合
if not math.isnan(x) :	もしxがNaNでないとき
if not math.isnan(x) :	もしxが非数でないとき
while math.isnan(x) :	xがNaN間
while math.isnan(x) :	xが非数間
math.modf(x)	xの小数部と整数部
math.modf(x)[0]	xの小数部
math.modf(x)[1]	xの整数部
math.remainder(x, y)	xをyで割った剰余
math.remainder(x, y)	xをyで割った余り
math.remainder(x, y)	xをyで割った剰余を見る
math.remainder(x, y)	xをyで割った余りを表示する
math.exp(x)	eのx乗
math.exp(x)	eのx乗を表示する
math.log(x)	xの自然対数
math.log(x)	xの自然対数を確認する
math.log(x, y)	yを底とするxの対数
math.log(x, y)	yを底とするxの対数を確認する
math.log2(x)	2を底とするxの対数
math.log2(x)	2を底とするxの対数を確認する
math.log10(x)	xの常用対数
math.log10(x)	xの常用対数を表示する
math.sqrt(x)	xの平方根
math.sqrt(x)	xの平方根を表示する
math.cos(x)	xの余弦
math.cos(x)	xのコサイン
math.cos(x)	xの余弦を見る
math.cos(x)	xのコサインを表示する
math.dist(x)	xのユークリッド距離
math.dist(x)	xのユークリッド距離を確認する
math.hypot(x, y)	xとyのノルム
math.hypot(x, y)	xとyのノルムを表示する
math.sin(x)	xの正弦
math.sin(x)	xのサイン
math.sin(x)	xの正弦を確認する
math.sin(x)	xのサインを確認する
math.tan(x)	xのタンジェント
math.tan(x)	xの正接
math.tan(x)	xのタンジェントを見る
math.tan(x)	xの正接を確認する
math.degrees(x)	xの角度
math.degrees(x)	xの角度を調べる
math.radians(x)	xのラジアン
math.radians(x)	xのラジアンを調べる
math.acosh(x)	xの逆双曲線余弦
math.acosh(x)	xの逆双曲線余弦を見る
math.asinh(x)	xの逆双曲線正弦
math.asinh(x)	xの逆双曲線正弦を見る
math.atanh(x)	xの逆双曲線正接
math.atanh(x)	xの逆双曲線正接を表示する
math.cosh(x)	xの双曲線余弦
math.cosh(x)	xの双曲線余弦を調べる
math.sinh(x)	xの双曲線正弦
math.sinh(x)	xの双曲線正弦を表示する
math.tanh(x)	xの双曲線正接
math.tanh(x)	xの双曲線正接を調べる
math.gamma(x)	xのガンマ関数
math.gamma(x)	xのガンマ関数を表示する
math.lgamma(x)	xのガンマ関数の絶対値の自然対数
math.lgamma(x)	xのガンマ関数の絶対値の自然対数を確認する
math.pi	円周率
math.pi	π
math.e	自然対数の底
math.e	ネイピア数
math.inf	∞
math.inf	無限大
math.inf	∞を見る
math.inf	無限大を調べる
math.nan	NaN
math.nan	非数
math.nan	数でない
re.search(x, y)	文字列yに正規表現xがマッチする最初の位置
re.search(x, y)	文字列yにxがマッチする最初の位置
re.search(x, y)	yに正規表現xがマッチする最初の位置
re.search(x, y)	yにxがマッチする最初の位置
re.search(x, y)	yにx正規表現がマッチする最初の位置
re.match(x, y)	正規表現xがy文字列にマッチするか否か
if re.match(x, y):	もし正規表現xがy文字列にマッチするならば
re.match(x, y)	yにxがマッチするか
if re.match(x, y):	yにxがマッチするならば
re.match(x, y)	文字列yにx正規表現がマッチするか否か
if re.match(x, y):	もし文字列yにx正規表現がマッチするならば
re.match(x, y)	xが文字列yにマッチするか否か
if re.match(x, y):	もしxが文字列yにマッチするならば
re.match(x, y)	正規表現xがyにマッチするか
if re.match(x, y):	もし正規表現xがyにマッチするならば
re.match(x, y)	文字列yにxがマッチするか
if re.match(x, y):	文字列yにxがマッチするならば
re.match(x, y)	yに正規表現xがマッチするかどうか
if re.match(x, y):	yに正規表現xがマッチするならば
re.match(x, y)	xがyにマッチするか否か
if re.match(x, y):	もしxがyにマッチするならば
re.match(x, y)	文字列yに正規表現xがマッチするか否か
if re.match(x, y):	もし文字列yに正規表現xがマッチするならば
re.match(x, y)	xがy文字列にマッチするかどうか
if re.match(x, y):	xがy文字列にマッチするとき
re.match(x, y)	正規表現xが文字列yにマッチするか
if re.match(x, y):	もし正規表現xが文字列yにマッチするならば
not re.match(x, y)	正規表現xがy文字列にマッチしないかどうか
not re.match(x, y)	yにxがマッチしないかどうか
not re.match(x, y)	文字列yにx正規表現がマッチしないかどうか
not re.match(x, y)	xが文字列yにマッチしないか
not re.match(x, y)	正規表現xがyにマッチしないか
not re.match(x, y)	文字列yにxがマッチしないか
not re.match(x, y)	yに正規表現xがマッチしないか
not re.match(x, y)	xがyにマッチしないか
not re.match(x, y)	文字列yに正規表現xがマッチしないかどうか
not re.match(x, y)	xがy文字列にマッチしないか
not re.match(x, y)	正規表現xが文字列yにマッチしないかどうか
if re.match(x, y) :	正規表現xがy文字列にマッチすれば
if re.match(x, y) :	正規表現xがy文字列にマッチした場合
if re.match(x, y) :	yにxがマッチすれば
if re.match(x, y) :	もしyにxがマッチした場合
if re.match(x, y) :	文字列yにx正規表現がマッチすれば
if re.match(x, y) :	文字列yにx正規表現がマッチした場合
if re.match(x, y) :	もしxが文字列yにマッチすれば
if re.match(x, y) :	もしxが文字列yにマッチしたならば
if re.match(x, y) :	文字列yにxがマッチすれば
if re.match(x, y) :	文字列yにxがマッチしたなら
if re.match(x, y) :	yに正規表現xがマッチするとき
if re.match(x, y) :	もしyに正規表現xがマッチすれば
if re.match(x, y) :	xがyにマッチすれば
if re.match(x, y) :	もし文字列yに正規表現xがマッチする場合
if re.match(x, y) :	文字列yに正規表現xがマッチしたら
if re.match(x, y) :	xがy文字列にマッチするならば
if re.match(x, y) :	xがy文字列にマッチすれば
if re.match(x, y) :	xがy文字列にマッチした場合
if re.match(x, y) :	正規表現xが文字列yにマッチすれば
if re.match(x, y) :	正規表現xが文字列yにマッチしたとき
if not re.match(x, y) :	もし正規表現xがy文字列にマッチしなかったら
if not re.match(x, y) :	yにxがマッチしなければ
if not re.match(x, y) :	もしyにxがマッチしなかったならば
if not re.match(x, y) :	文字列yにx正規表現がマッチしなければ
if not re.match(x, y) :	もし文字列yにx正規表現がマッチしなかったら
if not re.match(x, y) :	もしxが文字列yにマッチしないならば
if not re.match(x, y) :	xが文字列yにマッチしなければ
if not re.match(x, y) :	もし正規表現xがyにマッチしないとき
if not re.match(x, y) :	もし正規表現xがyにマッチしなかった場合
if not re.match(x, y) :	もし文字列yにxがマッチしなかったら
if not re.match(x, y) :	もしyに正規表現xがマッチしないとき
if not re.match(x, y) :	もしyに正規表現xがマッチしなければ
if not re.match(x, y) :	もしxがyにマッチしなければ
if not re.match(x, y) :	もしxがyにマッチしなかったら
if not re.match(x, y) :	文字列yに正規表現xがマッチしなければ
if not re.match(x, y) :	xがy文字列にマッチしない場合
if not re.match(x, y) :	もしxがy文字列にマッチしなければ
if not re.match(x, y) :	もしxがy文字列にマッチしなかった場合
if not re.match(x, y) :	もし正規表現xが文字列yにマッチしなければ
re.fullmatch(x, y)	xが文字列y全体にマッチするかどうか
if re.fullmatch(x, y):	xが文字列y全体にマッチする場合
re.fullmatch(x, y)	正規表現xが文字列y全体にマッチするかどうか
if re.fullmatch(x, y):	正規表現xが文字列y全体にマッチするとき
re.fullmatch(x, y)	文字列y全体に正規表現xがマッチするか
if re.fullmatch(x, y):	文字列y全体に正規表現xがマッチする場合
re.fullmatch(x, y)	y全体にxがマッチするか
if re.fullmatch(x, y):	y全体にxがマッチするとき
re.fullmatch(x, y)	正規表現xがy全体にマッチするか否か
if re.fullmatch(x, y):	正規表現xがy全体にマッチする場合
re.fullmatch(x, y)	文字列y全体にx正規表現がマッチするか
if re.fullmatch(x, y):	文字列y全体にx正規表現がマッチする場合
re.fullmatch(x, y)	y全体にx正規表現がマッチするか
if re.fullmatch(x, y):	y全体にx正規表現がマッチするとき
re.fullmatch(x, y)	文字列y全体にxがマッチするかどうか
if re.fullmatch(x, y):	文字列y全体にxがマッチするならば
re.fullmatch(x, y)	xがy文字列全体にマッチするか否か
if re.fullmatch(x, y):	xがy文字列全体にマッチするならば
re.fullmatch(x, y)	xがy全体にマッチするか否か
if re.fullmatch(x, y):	もしxがy全体にマッチするならば
re.fullmatch(x, y)	正規表現xがy文字列全体にマッチするか
if re.fullmatch(x, y):	正規表現xがy文字列全体にマッチするとき
not re.fullmatch(x, y)	xが文字列y全体にマッチしないか
not re.fullmatch(x, y)	正規表現xが文字列y全体にマッチしないか
not re.fullmatch(x, y)	文字列y全体に正規表現xがマッチしないかどうか
not re.fullmatch(x, y)	y全体にxがマッチしないか
not re.fullmatch(x, y)	正規表現xがy全体にマッチしないかどうか
not re.fullmatch(x, y)	文字列y全体にx正規表現がマッチしないか
not re.fullmatch(x, y)	y全体にx正規表現がマッチしないか
not re.fullmatch(x, y)	文字列y全体にxがマッチしないか
not re.fullmatch(x, y)	xがy文字列全体にマッチしないか
not re.fullmatch(x, y)	xがy全体にマッチしないか
not re.fullmatch(x, y)	正規表現xがy文字列全体にマッチしないか
if re.fullmatch(x, y) :	もしxが文字列y全体にマッチする場合
if re.fullmatch(x, y) :	もしxが文字列y全体にマッチすれば
if re.fullmatch(x, y) :	正規表現xが文字列y全体にマッチするとき
if re.fullmatch(x, y) :	もし正規表現xが文字列y全体にマッチしたならば
if re.fullmatch(x, y) :	文字列y全体に正規表現xがマッチする場合
if re.fullmatch(x, y) :	文字列y全体に正規表現xがマッチしたとき
if re.fullmatch(x, y) :	y全体にxがマッチすれば
if re.fullmatch(x, y) :	y全体にxがマッチした場合
if re.fullmatch(x, y) :	正規表現xがy全体にマッチするとき
if re.fullmatch(x, y) :	正規表現xがy全体にマッチすれば
if re.fullmatch(x, y) :	もし正規表現xがy全体にマッチしたとき
if re.fullmatch(x, y) :	文字列y全体にx正規表現がマッチすれば
if re.fullmatch(x, y) :	文字列y全体にx正規表現がマッチしたならば
if re.fullmatch(x, y) :	y全体にx正規表現がマッチすれば
if re.fullmatch(x, y) :	もしy全体にx正規表現がマッチした場合
if re.fullmatch(x, y) :	文字列y全体にxがマッチしたら
if re.fullmatch(x, y) :	xがy文字列全体にマッチする場合
if re.fullmatch(x, y) :	xがy文字列全体にマッチすれば
if re.fullmatch(x, y) :	xがy文字列全体にマッチしたとき
if re.fullmatch(x, y) :	xがy全体にマッチすれば
if re.fullmatch(x, y) :	もしxがy全体にマッチしたならば
if re.fullmatch(x, y) :	正規表現xがy文字列全体にマッチするとき
if re.fullmatch(x, y) :	正規表現xがy文字列全体にマッチすれば
if re.fullmatch(x, y) :	もし正規表現xがy文字列全体にマッチしたならば
if not re.fullmatch(x, y) :	もしxが文字列y全体にマッチしないならば
if not re.fullmatch(x, y) :	もしxが文字列y全体にマッチしなければ
if not re.fullmatch(x, y) :	正規表現xが文字列y全体にマッチしなければ
if not re.fullmatch(x, y) :	文字列y全体に正規表現xがマッチしないならば
if not re.fullmatch(x, y) :	もし文字列y全体に正規表現xがマッチしなければ
if not re.fullmatch(x, y) :	文字列y全体に正規表現xがマッチしなかったなら
if not re.fullmatch(x, y) :	もしy全体にxがマッチしなければ
if not re.fullmatch(x, y) :	y全体にxがマッチしなかったとき
if not re.fullmatch(x, y) :	もし正規表現xがy全体にマッチしなければ
if not re.fullmatch(x, y) :	正規表現xがy全体にマッチしなかったとき
if not re.fullmatch(x, y) :	もし文字列y全体にx正規表現がマッチしないならば
if not re.fullmatch(x, y) :	もし文字列y全体にx正規表現がマッチしなかったなら
if not re.fullmatch(x, y) :	もしy全体にx正規表現がマッチしなかったとき
if not re.fullmatch(x, y) :	もし文字列y全体にxがマッチしないとき
if not re.fullmatch(x, y) :	文字列y全体にxがマッチしなければ
if not re.fullmatch(x, y) :	もしxがy文字列全体にマッチしなかったら
if not re.fullmatch(x, y) :	もしxがy全体にマッチしなければ
if not re.fullmatch(x, y) :	もしxがy全体にマッチしなかったなら
re.split(x, y)	yにおいて、正規表現xで分割する
re.split(x, y)	yに対し、正規表現xで区切る
re.split(x, y)	文字列yに対し、x正規表現でスプリットする
re.split(x, y)	文字列yについて、正規表現xでスプリットする
re.split(x, y)	文字列yに対し、正規表現xで区切る
re.split(x, y)	文字列yに対し、x正規表現で分割する
re.split(x, y)	yに対し、xで分割する
re.split(x, y)	文字列yについて、x正規表現で分ける
re.split(x, y)	yに対し、xで分ける
re.split(x, y)	文字列yに対し、x正規表現で区切る
re.split(x, y)	文字列yに対し、正規表現xでスプリットする
re.split(x, y)	yにおいて、xでスプリットする
re.split(x, y)	文字列yにおいて、x正規表現で区切る
re.split(x, y)	yにおいて、xで区切る
re.split(x, y)	yに対し、x正規表現で分ける
re.split(x, y)	yに対し、xで区切る
re.split(x, y)	yに対し、x正規表現でスプリットする
re.split(x, y)	文字列yに対し、xで分ける
re.split(x, y)	xでyを区切る
re.split(x, y)	正規表現xで文字列yをスプリットする
re.split(x, y)	正規表現xでy文字列を分ける
re.split(x, y)	正規表現xでyを分割する
re.split(x, y)	正規表現xで文字列yを分割する
re.split(x, y)	正規表現xでyを分ける
re.split(x, y)	xでy文字列を分ける
re.split(x, y)	正規表現xでyをスプリットする
re.split(x, y)	xでy文字列を分割する
re.split(x, y)	xで文字列yを分ける
re.split(x, y)	xで文字列yを分割する
re.split(x, y)	xでyを分割する
re.sub(x, y, z)	yに対し、x正規表現でマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	yについて、xでマッチした部分をzにリプレースする
re.sub(x, y, z)	文字列yに対し、x正規表現でマッチした部分文字列をzに置換する
re.sub(x, y, z)	yにおいて、正規表現xでマッチした部分をzに置換する
re.sub(x, y, z)	文字列yに対し、xでマッチした部分文字列をzに置換する
re.sub(x, y, z)	文字列yにおいて、x正規表現でマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	文字列yについて、xでマッチした部分をzに置換する
re.sub(x, y, z)	文字列yに対し、正規表現xでマッチした部分をzに置き換える
re.sub(x, y, z)	yに対し、正規表現xでマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	yについて、xでマッチした箇所をzに置き換える
re.sub(x, y, z)	文字列yにおいて、xでマッチした部分をzに置換する
re.sub(x, y, z)	yについて、正規表現xでマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	yにおいて、xでマッチした部分文字列をzに置換する
re.sub(x, y, z)	yについて、正規表現xでマッチした部分文字列をzに置換する
re.sub(x, y, z)	文字列yについて、x正規表現でマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	yにおいて、xでマッチした箇所をzにリプレースする
re.sub(x, y, z)	文字列yにおいて、正規表現xでマッチした部分をzに置換する
re.sub(x, y, z)	文字列yについて、正規表現xでマッチした箇所をzにリプレースする
re.sub(x, y, z)	文字列yについて、正規表現xでマッチした部分文字列をzに置き換える
re.sub(x, y, z)	文字列yにおいて、xでマッチした部分をzに置き換える
re.sub(x, y, z)	yにおいて、正規表現xでマッチした箇所をzに置き換える
re.sub(x, y, z)	文字列yについて、x正規表現でマッチした部分をzに置換する
re.sub(x, y, z)	文字列yに対し、正規表現xでマッチした部分文字列をzに置換する
re.sub(x, y, z)	yに対し、xでマッチした箇所をzに置換する
re.sub(x, y, z)	文字列yについて、x正規表現でマッチした箇所をzに置き換える
re.sub(x, y, z)	yにおいて、x正規表現でマッチした部分をzに置き換える
re.sub(x, y, z)	文字列yに対し、正規表現xでマッチした部分文字列をzに置き換える
re.sub(x, y, z)	文字列yについて、xでマッチした箇所をzにリプレースする
re.sub(x, y, z)	yに対し、x正規表現でマッチした部分文字列をzに置換する
re.sub(x, y, z)	yに対し、xでマッチした部分をzに置換する
re.sub(x, y, z)	文字列yに対し、xでマッチした箇所をzにリプレースする
re.sub(x, y, z)	yに対し、xでマッチした箇所をzにリプレースする
re.sub(x, y, z)	yについて、xでマッチした箇所をzにリプレースする
re.sub(x, y, z)	文字列yに対し、正規表現xでマッチした箇所をzに置換する
re.sub(x, y, z)	文字列yについて、正規表現xでマッチした部分をzに置換する
re.sub(x, y, z)	yに対し、正規表現xでマッチした部分をzに置き換える
re.sub(x, y, z)	文字列yに対し、xでマッチした部分をzにリプレースする
re.sub(x, y, z)	正規表現xでy文字列のマッチした部分をzに置き換える
re.sub(x, y, z)	xで文字列yのマッチした部分をzにリプレースする
re.sub(x, y, z)	xでy文字列のマッチした部分をzに置き換える
re.sub(x, y, z)	xでyのマッチした部分文字列をzに置き換える
re.sub(x, y, z)	正規表現xで文字列yのマッチした箇所をzにリプレースする
re.sub(x, y, z)	正規表現xでy文字列のマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	xでyのマッチした箇所をzに置き換える
re.sub(x, y, z)	正規表現xでyのマッチした部分文字列をzに置換する
re.sub(x, y, z)	正規表現xでyのマッチした部分をzに置換する
re.sub(x, y, z)	xで文字列yのマッチした箇所をzに置換する
re.sub(x, y, z)	正規表現xで文字列yのマッチした部分をzに置換する
re.sub(x, y, z)	正規表現xでyのマッチした箇所をzに置換する
re.sub(x, y, z)	正規表現xで文字列yのマッチした部分文字列をzに置換する
re.sub(x, y, z)	xでyのマッチした部分をzに置換する
re.sub(x, y, z)	正規表現xでy文字列のマッチした箇所をzに置き換える
re.sub(x, y, z)	正規表現xでyのマッチした箇所をzに置き換える
re.sub(x, y, z)	xでyのマッチした部分をzにリプレースする
re.sub(x, y, z)	正規表現xで文字列yのマッチした箇所をzに置換する
re.sub(x, y, z)	xでyのマッチした箇所をzにリプレースする
re.sub(x, y, z)	xで文字列yのマッチした部分文字列をzにリプレースする
re.sub(x, y, z)	正規表現xでy文字列のマッチした部分文字列をzに置換する
re.sub(x, y, z)	正規表現xで文字列yのマッチした箇所をzに置き換える
re.sub(x, y, z)	正規表現xでyのマッチした部分をzに置き換える
re.sub(x, y, z)	xで文字列yのマッチした部分をzに置き換える
re.sub(x, y, z)	xにマッチしたyの部分文字列をzに置き換える
re.sub(x, y, z)	正規表現xにマッチしたyの箇所をzに置き換える
re.sub(x, y, z)	正規表現xにマッチしたyの部分文字列をzに置換する
re.sub(x, y, z)	xにマッチしたyの箇所をzに置換する
re.sub(x, y, z)	正規表現xにマッチしたyの箇所をzにリプレースする
re.sub(x, y, z)	正規表現xにマッチしたyの部分をzに置換する
re.sub(x, y, z)	xにマッチしたyの部分をzに置換する
re.sub(x, y, z)	xにマッチしたyの部分文字列をzにリプレースする
re.sub(x, y, z)	xにマッチしたyの部分文字列をzに置換する
re.sub(x, y, z)	正規表現xにマッチしたyの部分文字列をzにリプレースする
re.sub(x, y, z)	xにマッチしたyの部分をzにリプレースする
re.sub(x, y, z)	xにマッチしたyの箇所をzにリプレースする
re.subn(x, y, z)	yに対し、正規表現xにマッチした部分文字列をzに置き換える
re.subn(x, y, z)	yに対し、x正規表現にマッチした部分をzにリプレースする
re.subn(x, y, z)	yにおいて、正規表現xにマッチした部分文字列をzにリプレースする
re.subn(x, y, z)	yにおいて、正規表現xにマッチした部分をzに置換する
re.subn(x, y, z)	文字列yに対し、xにマッチした箇所をzにリプレースする
re.subn(x, y, z)	文字列yにおいて、xにマッチした箇所をzに置換する
re.subn(x, y, z)	yに対し、正規表現xにマッチした部分をzに置換する
re.subn(x, y, z)	文字列yに対し、xにマッチした箇所をzに置換する
re.subn(x, y, z)	yにおいて、xにマッチした部分文字列をzに置換する
re.subn(x, y, z)	yについて、正規表現xにマッチした箇所をzにリプレースする
re.subn(x, y, z)	文字列yに対し、正規表現xにマッチした部分をzに置換する
re.subn(x, y, z)	文字列yに対し、x正規表現にマッチした部分文字列をzに置き換える
re.subn(x, y, z)	文字列yについて、xにマッチした箇所をzに置き換える
re.subn(x, y, z)	yについて、正規表現xにマッチした箇所をzに置換する
re.subn(x, y, z)	yにおいて、xにマッチした箇所をzにリプレースする
re.subn(x, y, z)	文字列yについて、x正規表現にマッチした部分をzに置き換える
re.subn(x, y, z)	文字列yに対し、正規表現xにマッチした部分文字列をzに置換する
re.subn(x, y, z)	yにおいて、xにマッチした箇所をzに置き換える
re.subn(x, y, z)	文字列yについて、正規表現xにマッチした部分をzに置換する
re.subn(x, y, z)	文字列yについて、正規表現xにマッチした部分文字列をzに置換する
re.subn(x, y, z)	yについて、xにマッチした部分をzに置換する
re.subn(x, y, z)	yについて、xにマッチした箇所をzにリプレースする
re.subn(x, y, z)	yにおいて、x正規表現にマッチした部分文字列をzにリプレースする
re.subn(x, y, z)	文字列yに対し、x正規表現にマッチした部分をzに置換する
re.subn(x, y, z)	yに対し、正規表現xにマッチした箇所をzに置換する
re.subn(x, y, z)	文字列yにおいて、x正規表現にマッチした箇所をzに置換する
re.subn(x, y, z)	文字列yにおいて、xにマッチした部分文字列をzに置換する
re.subn(x, y, z)	yについて、x正規表現にマッチした箇所をzに置き換える
re.subn(x, y, z)	文字列yについて、xにマッチした部分をzに置換する
re.subn(x, y, z)	文字列yにおいて、xにマッチした部分文字列をzにリプレースする
re.subn(x, y, z)	yについて、正規表現xにマッチした部分文字列をzに置換する
re.subn(x, y, z)	文字列yに対し、x正規表現にマッチした部分をzに置き換える
re.subn(x, y, z)	文字列yに対し、正規表現xにマッチした箇所をzに置き換える
re.subn(x, y, z)	正規表現xでマッチしたyの部分をzに置換する
re.subn(x, y, z)	正規表現xでマッチしたyの部分文字列をzに置換する
re.subn(x, y, z)	xでマッチしたyの部分文字列をzに置き換える
re.subn(x, y, z)	正規表現xでマッチしたyの部分をzに置き換える
re.subn(x, y, z)	xでマッチしたyの部分をzに置き換える
re.subn(x, y, z)	xでマッチしたyの箇所をzに置換する
re.subn(x, y, z)	正規表現xでマッチしたyの箇所をzに置換する
re.subn(x, y, z)	xでマッチしたyの部分文字列をzに置換する
re.subn(x, y, z)	正規表現xでマッチしたyの箇所をzに置き換える
re.subn(x, y, z)	xでマッチしたyの部分文字列をzにリプレースする
re.findall(x, y)	yについて、xでマッチした部分文字列をリストにする
re.findall(x, y)	文字列yにおいて、x正規表現でマッチした部分を抽出する
re.findall(x, y)	yについて、xでマッチした箇所を抽出する
re.findall(x, y)	文字列yに対し、xでマッチした部分をリストにする
re.findall(x, y)	文字列yにおいて、正規表現xでマッチした部分文字列をリストにする
re.findall(x, y)	yについて、x正規表現でマッチした部分を抽出する
re.findall(x, y)	yに対し、x正規表現でマッチした部分文字列を抽出する
re.findall(x, y)	yに対し、正規表現xでマッチした箇所をリストにする
re.findall(x, y)	文字列yに対し、x正規表現でマッチした部分文字列を抽出する
re.findall(x, y)	文字列yに対し、正規表現xでマッチした部分を抽出する
re.findall(x, y)	yについて、正規表現xでマッチした部分文字列を抽出する
re.findall(x, y)	yについて、正規表現xでマッチした部分文字列をリストにする
re.findall(x, y)	yにおいて、x正規表現でマッチした箇所を抽出する
re.findall(x, y)	文字列yについて、正規表現xでマッチした部分文字列を抽出する
re.findall(x, y)	文字列yに対し、xでマッチした部分を抽出する
re.findall(x, y)	yに対し、xでマッチした箇所をリストにする
re.findall(x, y)	文字列yに対し、x正規表現でマッチした部分を抽出する
re.findall(x, y)	yに対し、xでマッチした部分文字列をリストにする
re.findall(x, y)	yにおいて、x正規表現でマッチした部分をリストにする
re.findall(x, y)	正規表現xにマッチしたyの部分をリストにする
re.findall(x, y)	正規表現xにマッチしたyの部分を抽出する
re.findall(x, y)	正規表現xにマッチしたyの箇所を抽出する
re.findall(x, y)	xにマッチしたyの箇所を抽出する
re.findall(x, y)	正規表現xにマッチしたyの箇所をリストにする
re.findall(x, y)	正規表現xにマッチしたyの部分文字列を抽出する
re.findall(x, y)	xにマッチしたyの部分文字列を抽出する
re.findall(x, y)	xにマッチしたyの部分文字列をリストにする
re.findall(x, y)	xにマッチしたyの部分をリストにする
re.compile(x)	正規表現xをコンパイルする
re.compile(x)	xをコンパイルする
sys.exit()	Pythonを適切に終了する
sys.exit()	Pythonを正常に終了する
sys.exit()	正しくプログラムを終了する
sys.exit()	正しくPythonを終了する
sys.exit()	Pythonを正しく終了する
sys.exit()	プログラムを適切に終了する
sys.exit()	プログラムを正しく終了する
sys.exit()	適切にプログラムを終了する
sys.exit()	適切にPythonを終了する
sys.exit(0)	Pythonを正常終了する
sys.exit(0)	プログラムを正常終了する
sys.exit(1)	プログラムを異常終了する
sys.exit(1)	Pythonを異常終了する
sys.setrecursionlimit(1000000)	再帰の上限を1000000にする
sys.setrecursionlimit(1000000)	再帰エラーを防ぎたい
sys.setrecursionlimit(1000000)	再帰の上限を上げる
sys.argv[0]	スクリプト名
sys.argv[1]	コマンドの第一引数
sys.argv[1:]	コマンド引数のリスト
sys.path.append('/path/to/whatever')	Pythonパスに'/path/to/whatever'を追加する
sys.stdin.read(1)	標準入力から1文字だけ読む
sys.stdin.read(1)	標準入力から1文字読む
sys.stdout	標準出力
sys.stdout.flush()	標準出力をフラッシュする
sys.version	Pythonのバージョン
sys.version	Pythonのバージョンを見る
sys.float_info.max	小数点数の最大値
sys.float_info.max	浮動小数点数の最大値
sys.float_info.max	実数の最大値
sys.float_info.max	数の最大値
sys.float_info.min	浮動小数点数の最小値
sys.float_info.min	実数の最小値
sys.float_info.min	小数点数の最小値
sys.float_info.epsilon	計算機イプシロン
os.mkdir('dir/')	'dir/'のフォルダを新規に作る
os.mkdir('dir/')	新規に'dir/'のフォルダを作る
os.mkdir('dir/')	新たに'dir/'のディレクトリを作る
os.mkdir('dir/')	'dir/'のディレクトリを新たに作る
os.mkdir('dir/')	新しく'dir/'のディレクトリを作る
os.mkdir('dir/')	新たに'dir/'のフォルダを作る
os.makedirs('dir/', exist_ok=True)	'dir/'のディレクトリを再帰的に作る
os.makedirs('dir/', exist_ok=True)	'dir/'のフォルダを階層的に作る
os.makedirs('dir/', exist_ok=True)	'dir/'のディレクトリを階層的に作る
os.makedirs('dir/', exist_ok=True)	'dir/'のフォルダを再帰的に作る
os.listdir('dir/')	ファイルパス'dir/'のファイル一覧
os.listdir('dir/')	'dir/'のファイル一覧
os.listdir('dir/')	'dir/'ファイルパスのファイル一覧
os.path.exists(p)	パスpがあるか
if os.path.exists(p):	パスpがある場合
os.path.exists(p)	pが存在するかどうか
if os.path.exists(p):	pが存在する場合
os.path.exists(p)	ファイルパスpがあるか
if os.path.exists(p):	ファイルパスpがあるならば
not os.path.exists(p)	パスpがあらないかどうか
not os.path.exists(p)	pが存在しないか
not os.path.exists(p)	ファイルパスpがあらないか
if os.path.exists(p) :	パスpがあれば
if os.path.exists(p) :	パスpがあったら
if os.path.exists(p) :	pが存在するならば
if os.path.exists(p) :	pが存在すれば
if os.path.exists(p) :	pが存在したら
if os.path.exists(p) :	もしファイルパスpがあった場合
if not os.path.exists(p) :	パスpがあらなかったなら
if not os.path.exists(p) :	もしpが存在しなければ
if not os.path.exists(p) :	pが存在しなかったならば
if not os.path.exists(p) :	もしファイルパスpがあらなかった場合
os.path.isdir(p)	パスpがディレクトリか
if os.path.isdir(p):	パスpがディレクトリの場合
os.path.isdir(p)	pがフォルダか否か
if os.path.isdir(p):	pがフォルダのとき
os.path.isdir(p)	ファイルパスpがディレクトリか
if os.path.isdir(p):	ファイルパスpがディレクトリならば
os.path.isdir(p)	ファイルパスpがフォルダか
if os.path.isdir(p):	もしファイルパスpがフォルダならば
os.path.isdir(p)	pがディレクトリか
if os.path.isdir(p):	pがディレクトリならば
not os.path.isdir(p)	パスpがディレクトリでないか
not os.path.isdir(p)	pがフォルダでないか否か
not os.path.isdir(p)	ファイルパスpがディレクトリでないかどうか
not os.path.isdir(p)	ファイルパスpがフォルダでないか否か
not os.path.isdir(p)	pがディレクトリでないか
if os.path.isdir(p) :	もしパスpがディレクトリ場合
if os.path.isdir(p) :	pがフォルダとき
if os.path.isdir(p) :	ファイルパスpがディレクトリとき
if os.path.isdir(p) :	もしファイルパスpがフォルダとき
if os.path.isdir(p) :	もしpがディレクトリとき
if not os.path.isdir(p) :	パスpがディレクトリでないならば
if not os.path.isdir(p) :	もしpがフォルダでな場合
if not os.path.isdir(p) :	ファイルパスpがディレクトリでないならば
if not os.path.isdir(p) :	もしファイルパスpがフォルダでなとき
if not os.path.isdir(p) :	pがディレクトリでないとき
os.path.isfile(p)	pがファイルか
if os.path.isfile(p):	pがファイルのとき
os.path.isfile(p)	ファイルパスpがファイルか
if os.path.isfile(p):	ファイルパスpがファイルのとき
os.path.isfile(p)	パスpがファイルか
if os.path.isfile(p):	パスpがファイルならば
not os.path.isfile(p)	pがファイルでないか
not os.path.isfile(p)	ファイルパスpがファイルでないか
not os.path.isfile(p)	パスpがファイルでないか否か
if os.path.isfile(p) :	pがファイルならば
if os.path.isfile(p) :	もしファイルパスpがファイルならば
if os.path.isfile(p) :	パスpがファイルならば
if not os.path.isfile(p) :	もしpがファイルでないとき
if not os.path.isfile(p) :	ファイルパスpがファイルでない場合
if not os.path.isfile(p) :	もしパスpがファイルでなならば
os.path.getsize('file.txt')	'file.txt'のファイルサイズ
os.path.getsize('file.txt')	ファイル名'file.txt'のファイルサイズ
os.path.getsize('file.txt')	'file.txt'パスのファイルサイズ
os.path.getsize('file.txt')	'file.txt'のバイト数
os.path.getsize('file.txt')	'file.txt'ファイル名のバイト数
os.path.getsize('file.txt')	'file.txt'ファイルパスのバイト数
os.path.getsize('file.txt')	'file.txt'ファイルの大きさ
os.path.getsize('file.txt')	'file.txt'の大きさ
os.path.getsize('file.txt')	'file.txt'ファイルのバイト数
os.path.getsize('file.txt')	'file.txt'パスのバイト数
os.path.getsize('file.txt')	'file.txt'ファイルのファイルサイズ
os.path.join(p, p2)	安全にファイルパスpとp2を結合する
os.path.join(p, p2)	ファイルパスpとp2を結合する
os.path.join(p, p2)	ファイルパスpとp2をプラットホーム依存なしに結合する
os.path.join(p, p2)	安全にpとp2を結合する
os.path.join(p, p2)	パスpとp2を安全に結合する
os.path.join(p, p2)	パスpとp2を結合する
os.path.join(p, p2)	プラットホーム依存せずにpパスとp2を結合する
os.path.join(p, p2)	pファイルパスとp2を結合する
os.path.join(p, p2)	プラットホーム依存せずにファイルパスpとp2を結合する
os.path.join(p, p2)	pとp2を結合する
os.path.join(p, p2)	安全にパスpとp2を結合する
print("Hello World")	"Hello World"と表示する
print("Hello World")	"Hello World"と出力する
print("Hello World")	"Hello World"とプリントする
print("Hello World")	「ハローワールド」と出力する
print("Hello World")	「こんにちは世界」とプリントする
print("Hello World")	「こんにちは世界」と出力する
print("Hello World")	「ハローワールド」とプリントする
print("Hello World")	試しに何か動かす
print("Hello World")	何か動かす
print("Hello World")	最初のプログラム
print("Hello World")	最初のPython
3+8	3足す8
3+8	3に8を加算する
3+8	3と8の和
1+2+3	1足す2足す3
1+2+3	1,2,3の和
100-70	100から70を引く
5 * 12	5かける12
10 / 5	10を5で割る
10 // 5	10を5で割った商
10 % 5	10を5で割った余り
10 ** 5	10の5乗
"abc" + "ABC"	"abc"と"ABC"を繋ぐ
"abc" + "ABC"	文字列"abc"と"ABC"を連結する
str(1)	1を文字列に変換する
str(1)	1を文字列にする
str(1)	1を変換した文字列
"X" * 3	"X"を3回繰り返す
"X" * 3	文字列"X"を3回繰り返す
x = input()	ユーザから入力を得る
x = input()	利用者から入力を得る
x = input()	ユーザが入力した文字列をxとする
x = input()	入力された文字列
x = input()	ユーザから入力された文字列
x = input("X")	"X"というプロンプトを表示し、文字列をユーザに入力させる
x = input("X")	"X"というプロンプトを表示し、ユーザに文字列を入力させる
x = input("X")	"X"という問い合わせに対し、ユーザから入力を得る
x = input("X")	"X"という問い合わせに対し、入力をユーザから得る
x = input("X")	"X"という問い合わせに対し、利用者から入力を得る
float(x)	xを数に変換する
float(x)	xを浮動小数点数にする
float(x)	浮動小数点数にxを変換する
float(x)	xを実数にする
float(x)	小数点数にxをする
float(x)	xを小数点数にする
float(x)	実数にxをする
float(x)	小数点数にxを変換する
float(x)	xを小数点数に変換する
float(x)	xを実数に変換する
float(x)	xを数にする
float(x)	浮動小数点数にxをする
float(x)	xを変換した数
float(x)	xを変換した実数
float(x)	xを変換した小数点数
float(x)	xを変換した浮動小数点数
int(x)	整数にxをする
int(x)	自然数にxを変換する
int(x)	xを整数値に変換する
int(x)	xを自然数にする
int(x)	整数にxを変換する
int(x)	xを変換した整数
int(x)	xを変換した自然数
int(x)	xを変換した整数値
x = int(input())	入力された自然数をxとする
x = int(input())	ユーザが入力した整数値をxとする
x = int(input())	ユーザが入力した自然数をxとする
x = int(input())	入力された整数値をxとする
x = int(input())	入力された整数をxとする
x = int(input())	ユーザが入力した整数をxとする
x = int(input())	入力された整数
x = int(input())	入力された整数値
x = int(input())	入力された自然数
x = float(input())	入力された実数をxとする
x = float(input())	入力された浮動小数点数をxとする
x = float(input())	ユーザが入力した数をxとする
x = float(input())	入力された小数点数をxとする
x = float(input())	利用者が入力した実数をxとする
x = float(input())	利用者が入力した数をxとする
x = float(input())	ユーザが入力した小数点数をxとする
x = float(input())	利用者が入力した浮動小数点数をxとする
x = float(input())	ユーザが入力した実数をxとする
x = float(input())	入力された数をxとする
x = float(input())	入力された数
x = float(input())	入力された小数点数
x = float(input())	入力された実数
x = float(input())	入力された浮動小数点数
type(x)	xのクラス
type(x)	xの型
type(x)	xのクラスを表示する
type(x)	xの型を見る
a == b	aとbが等しいか
if a == b:	もしaとbが等しいならば
a != b	aとbが等しくないかどうか
if a == b :	aとbが等しかったなら
if a != b :	aとbが等しくなかった場合
while a == b :	aとbが等しい間
a == b	aがbと等しいか
if a == b:	aがbと等しい場合
a != b	aがbと等しくないかどうか
if a == b :	もしaがbと等しいとき
if a == b :	aがbと等しければ
if a != b :	もしaがbと等しくなければ
if a != b :	もしaがbと等しくなかった場合
while a == b :	aがbと等しい間
while a != b :	aがbと等しくない間
a == b	aがbか
if a == b:	aがbならば
a != b	aがbでないか
if a == b :	もしaがbとき
if a != b :	aがbでないとき
while a == b :	aがb間
while a != b :	aがbでない間
a > b	aがbより大きいか否か
if a > b:	aがbより大きいならば
not a > b	aがbより大きくないかどうか
if a > b :	aがbより大きいならば
if a > b :	aがbより大きければ
if a > b :	aがbより大きかったら
if not a > b :	もしaがbより大きくない場合
if not a > b :	aがbより大きくなければ
if not a > b :	aがbより大きくなかったら
while a > b :	aがbより大きい間
a < b	aがbより小さいかどうか
if a < b:	もしaがbより小さいならば
not a < b	aがbより小さくないかどうか
if a < b :	もしaがbより小さいならば
if not a < b :	もしaがbより小さくなければ
if not a < b :	もしaがbより小さくなかったとき
while a < b :	aがbより小さい間
while not a < b :	aがbより小さくない間
a >= b	aがb以上か
if a >= b:	aがb以上の場合
not a >= b	aがb以上でないか
if a >= b :	aがb以上ならば
if not a >= b :	aがb以上でないならば
while a >= b :	aがb以上間
while not a >= b :	aがb以上でない間
a <= b	aがb以下かどうか
if a <= b:	aがb以下ならば
not a <= b	aがb以下でないか
if a <= b :	aがb以下場合
if not a <= b :	aがb以下でないとき
while a <= b :	aがb以下間
while not a <= b :	aがb以下でない間
a % 2 == 0	aが偶数か
if a % 2 == 0:	もしaが偶数ならば
a % 2 != 0	aが偶数でないか
if a % 2 == 0 :	aが偶数場合
if a % 2 != 0 :	もしaが偶数でないならば
while a % 2 == 0 :	aが偶数間
a % 2 == 1	aが奇数か
if a % 2 == 1:	もしaが奇数ならば
a % 2 != 1	aが奇数でないかどうか
if a % 2 == 1 :	aが奇数とき
if a % 2 != 1 :	aが奇数でないとき
while a % 2 == 1 :	aが奇数間
while a % 2 != 1 :	aが奇数でない間
a % n == 0	aがnの倍数か
if a % n == 0:	もしaがnの倍数ならば
a % n != 0	aがnの倍数でないか
if a % n == 0 :	もしaがnの倍数場合
if a % n != 0 :	もしaがnの倍数でない場合
while a % n == 0 :	aがnの倍数間
while a % n != 0 :	aがnの倍数でない間
a % n == 0	aがnで割り切れるか否か
if a % n == 0:	aがnで割り切れるならば
a % n != 0	aがnで割り切れないか
if a % n == 0 :	aがnで割り切れれば
if a % n == 0 :	aがnで割り切れたなら
if a % n != 0 :	aがnで割り切れなければ
while a % n == 0 :	aがnで割り切れる間
while a % n != 0 :	aがnで割り切れない間
pass	何もしない
pass	パスする
quit()	Pythonを途中で終了する
quit()	プログラムを途中で終了する
quit()	プログラムの実行を終了する
quit()	プログラムを終了する
quit()	Pythonを終了する
quit()	Pythonの実行を終了する
quit()	プログラムを中断する
quit()	Pythonを中断する
True	真
False	偽
if age < 6 or age >= 60:	もしageが6未満、また60以上のとき
if age < 6 or age >= 60:	もしageが6未満、あるいは60以上であれば
if age < 6 or age >= 60:	ageが6未満、あるいは60以上ならば
if age < 6 or age >= 60:	ageが6未満、あるいは60以上であるならば
if age < 6 or age >= 60:	もしageが6未満、また60以上であるならば
if age < 6 or age >= 60:	ageが6未満、または60以上の場合
if age < 6 or age >= 60:	もしageが6未満、あるいは60以上ならば
if age < 6 or age >= 60:	ageが6未満、または60以上であるならば
if age < 6 or age >= 60:	もしageが6未満、あるいは60以上であったら
if age < 6 or age >= 60:	ageが6未満、あるいは60以上であったら
if age < 6 or age >= 60:	もしageが6未満、または60以上であったら
if age < 6 or age >= 60:	もしageが6未満、また60以上であれば
if age < 6 or age >= 60:	もしageが6未満、または60以上であるならば
if age < 6 or age >= 60:	ageが6未満、あるいは60以上のとき
if age < 6 or age >= 60:	ageが6未満、また60以上であれば
if age < 6 or age >= 60:	ageが6未満、または60以上であったら
if age < 6 or age >= 60:	もしageが6未満、または60以上ならば
if age < 6 or age >= 60:	もしageが6未満、あるいは60以上であるならば
if age < 6 or age >= 60:	もしageが6未満、または60以上であれば
if age < 6 or age >= 60:	もしageが6未満、あるいは60以上のとき
if age < 6 or age >= 60:	ageが6未満、または60以上ならば
if age < 6 or age >= 60:	ageが6未満、また60以上であったら
if age < 6 or age >= 60:	ageが6未満、あるいは60以上の場合
if age < 6 or age >= 60:	もし6才未満、また60才以上であれば
if age < 6 or age >= 60:	もし6才未満、または60才以上であったら
if age < 6 or age >= 60:	もし6才未満、あるいは60才以上であったら
if age < 6 or age >= 60:	もし6才未満、あるいは60才以上のとき
if age < 6 or age >= 60:	6才未満、あるいは60才以上の場合
if age < 6 or age >= 60:	もし6才未満、また60才以上であったら
if age < 6 or age >= 60:	もし6才未満、また60才以上の場合
if age < 6 or age >= 60:	もし6才未満、また60才以上のとき
if age < 6 or age >= 60:	6才未満、あるいは60才以上であるならば
if age < 6 or age >= 60:	もし6才未満、または60才以上ならば
if age < 6 or age >= 60:	もし6才未満、あるいは60才以上であるならば
if age < 6 or age >= 60:	もし6才未満、あるいは60才以上の場合
if age < 6 or age >= 60:	6才未満、または60才以上であったら
if age < 6 or age >= 60:	もし6才未満、また60才以上ならば
if age < 6 or age >= 60:	6才未満、または60才以上であれば
if age < 6 or age >= 60:	6才未満、また60才以上であるならば
if age < 6 or age >= 60:	もし6才未満、または60才以上であるならば
if age < 6 or age >= 60:	6才未満、または60才以上の場合
if age < 6 or age >= 60:	もし6才未満、または60才以上のとき
if age < 6 and age >= 60:	もしageが6未満、かつ@160以上のとき
if age < 6 and age >= 60:	もしageが6未満、かつ@160以上であるならば
if age < 6 and age >= 60:	もしageが6未満、かつ@160以上の場合
if age < 6 and age >= 60:	もしageが6未満、かつ@160以上であれば
if age < 6 and age >= 60:	もしageが6未満、かつ@160以上であったら
if age < 6 and age >= 60:	ageが6未満、かつ@160以上のとき
if age < 6 and age >= 60:	もしageが6未満、かつ@160以上ならば
weight / (height / 100) ** 2	BMIを求めたい
weight / (height / 100) ** 2	体重weightとheightからBMI
weight / (height / 100) ** 2	weightとheight身長からBMI
weight / (height / 100) ** 2	weightと身長heightからBMI
weight / (height / 100) ** 2	体重weightとheightからBMIを確認する
weight / (height / 100) ** 2	weightとheight身長からBMIを確認する
weight / (height / 100) ** 2	weightと身長heightからBMIを表示する
weight / (height / 100) ** 2	heightと体重weightからBMI
weight / (height / 100) ** 2	heightとweight体重からBMI
weight / (height / 100) ** 2	身長heightとweightからBMI
weight / (height / 100) ** 2	身長heightとweight体重からBMI
weight / (height / 100) ** 2	heightと体重weightからBMIを調べる
weight / (height / 100) ** 2	heightとweight体重からBMIを調べる
weight / (height / 100) ** 2	身長heightとweightからBMIを確認する
weight / (height / 100) ** 2	身長heightとweight体重からBMIを表示する
random.randint(1,6)	サイコロの目
random.randint(1,6)	サイコロの出目
random.randint(1,6)	サイコロを振った値
random.randint(1,6)	サイコロを振った目
random.randint(1,6)	1から6までの乱数
time.sleep(3)	3秒間、プログラムを停止する
time.sleep(3)	プログラムの実行を3秒間、停止する
time.sleep(3)	3秒間、Pythonの実行を停止する
time.sleep(3)	3秒、Pythonの実行を停止する
time.sleep(3)	3秒、プログラムの実行を停止する
time.sleep(3)	3秒間、プログラムの実行を停止する
time.sleep(3)	Pythonを3秒、停止する
time.sleep(3)	Pythonを3秒間、停止する
time.sleep(3)	3秒間、Pythonを停止する
time.sleep(3)	3秒、Pythonを停止する
time.sleep(3)	プログラムを3秒、停止する
time.sleep(3)	Pythonの実行を3秒間、停止する
time.sleep(3)	プログラムを3秒間、停止する
time.sleep(3)	3秒間、待つ
time.sleep(3)	3秒、待つ
time.sleep(3)	3秒間、止める
time.sleep(3)	3秒、止める
while True: pass	無限ループ
while True: pass	とりあえず、繰り返す
for i in range(5):	５回、繰り返す
break	繰り返しを中断する
break	繰り返しから抜け出す
break	繰り返しから強制的に抜け出す
break	強制的に繰り返しから抜け出す
continue	繰り返しの前に戻る
continue	繰り返しの最初に戻る
continue	繰り返しの先頭に戻る
continue	もう一回、繰り返す
continue	もう一度、繰り返す
[0] * n	大きさnのリスト
[0] * n	大きさnの配列
for a in [1,2,3]:	リスト[1,2,3]の各要素を処理する
for a in [1,2,3]:	リスト[1,2,3]の要素を繰り返すたびにaに代入する
a.append(x)	リストaの後ろにxを追加する
a.append(x)	aの末尾にxを追加する
a.append(x)	aの最後にxを追加する
a.append(x)	リストaの最後にxを追加する
del(a[2])	リストaから2番目の要素を削除する
del(a[2])	aから2番目の要素を削除する
del(a[2])	aから2番目の値を削除する
a[start:end]	リストaの一部分を取り出す
a[start:end]	aの一部分を取り出す
sum(a)	aの合計
sum(a)	数列aの合計値
sum(a)	数列aの総和値
sum(a)	aの合計値値
sum(a)	数列aの合計
sum(a)	数列aの総和
sum(a)	aの合計値
sum(a)	aの総和値
sum(a)	aの総和
sum(a)	数列aの総和
sum(a)/len(a)	数列aの平均
sum(a)/len(a)	aの平均値
sum(a)/len(a)	数列aの平均値
sum(a)/len(a)	aの平均
sum(a)/len(a)	数列aの平均値値
sum(a)/len(a)	aの平均値値
random.suffle(a)	リストaをシャッフルする
random.suffle(a)	aをシャッフルする
d.keys()	辞書dのキーの一覧
d.keys()	辞書dのキーの一覧を得る
d.keys()	ハッシュ表dの項目名の一覧を得る
d.keys()	dのキーの一覧を得る
d.keys()	マップdのキーの一覧を得る
d.keys()	ハッシュ表dのキーの一覧を得る
d.keys()	マップdの項目名の一覧を得る
d.keys()	辞書dの項目名の一覧
d[key]	辞書dのキーkeyのデータを参照する
d[key]	辞書dのキーkeyのデータ
d[key]	dのキーkeyの値を参照する
d[key]	辞書dのキーkeyの値
d[key]	dのキーkeyのデータ
d[key]	辞書dのキーkeyの値を参照する
d[key]	ハッシュ表dのキーkeyのデータを参照する
for key in d.keys(): value = d[key]	辞書dに入っている値を一つずつ処理する
for key in d.keys(): value = d[key]	辞書dに入っているデータを一つずつ処理する
math.ceil(x)	実数xの小数点以下を切り上げる
math.ceil(x)	xの小数点以下を切り上げた整数値
math.ceil(x)	xの小数点以下を切り上げた整数
key in d	dにキーkeyがあるか否か
if key in d:	dにキーkeyがあるとき
key in d	キーkeyがdに存在するか
if key in d:	もしキーkeyがdに存在するならば
key in d	keyがdに存在するかどうか
if key in d:	もしkeyがdに存在するならば
key in d	項目名keyがdにあるか
if key in d:	項目名keyがdにあるならば
key in d	keyが辞書dに含まれているかどうか
if key in d:	もしkeyが辞書dに含まれているならば
key in d	辞書dにkeyが含まれているか否か
if key in d:	辞書dにkeyが含まれている場合
key in d	辞書dにkeyが存在するかどうか
if key in d:	辞書dにkeyが存在するならば
key in d	ハッシュ表dに項目名keyがあるか
if key in d:	ハッシュ表dに項目名keyがあるとき
key in d	辞書dに項目名keyが含まれているか
if key in d:	辞書dに項目名keyが含まれている場合
key in d	辞書dにkeyがあるか否か
if key in d:	辞書dにkeyがあるとき
key in d	辞書dにkey項目名が含まれているか
if key in d:	辞書dにkey項目名が含まれているとき
key in d	項目名keyがdに存在するか
if key in d:	項目名keyがdに存在する場合
key in d	キーkeyがd辞書にあるか
if key in d:	キーkeyがd辞書にあるとき
key not in date	辞書dにキーkeyが存在しないか
if key not in date:	辞書dにキーkeyが存在しないならば
key not in date	辞書dにキーkeyがないか
if key not in date:	辞書dにキーkeyがないならば
key not in date	キーkeyが辞書dにないか
if key not in date:	キーkeyが辞書dにないとき
key not in date	キーkeyがマップdにないか
if key not in date:	キーkeyがマップdにない場合
s.strip()	sの前後の空白を取り除く
s.strip()	文字列sの前後の空白を消す
s.strip()	sの前後の空白を除去する
s.strip()	sの前後の空白を消す
s.strip()	文字列sの前後の空白を取り除く
s.strip()	文字列sの前後の空白を削除する
s.strip()	文字列sの前後の空白を除去する
s.strip()	sの前後の空白を削除する
s.strip()	文字列sの余分な改行を除去する
s.strip()	sの余分な改行を取り除く
s.strip()	文字列sの改行を取り除く
s.strip()	sの余分な改行を消す
s.strip()	文字列sの余分な改行を取り除く
s.strip()	文字列sの改行を消す
s.strip()	文字列sの改行を除去する
s.strip()	sの改行を消す
s.strip()	文字列sの余分な改行を消す
s.split(',')	sをカンマで区切る
s.split(',')	カンマで文字列sを区切る
s.split(',')	カンマでs文字列を区切る
s.split(',')	カンマでsを区切る
s.split(',')	カンマでs(文字列を分割した文字列のリスト
s.split(',')	s(文字列をカンマで分割した文字列のリスト
s.split(',')	','でsを区切る
s.split(',')	','でs文字列を区切る
s.split(',')	文字列sを','で区切る
s.split(',')	','でsを分割した文字列のリスト
s.split(',')	sを','で分割した文字列のリスト
s.split(',')	文字列sを','で分割した文字列のリスト
s.split(',')	','で文字列sを分割した文字列のリスト
sorted(a)	昇順にaを並び替える
sorted(a)	aをソートする
sorted(a)	昇順にaを並べ直す
sorted(a)	aを並べ変える
sorted(a)	aを小さい順にソートする
sorted(a)	aを並べる
sorted(a)	aを並び替える
sorted(a)	aを並べ直した列
sorted(a)	aをソートした列
sorted(a)	aを整列した列
sorted(a)	aを並べ変えた列
sorted(a)	aを並べた列
sorted(a)	aを小さい順に並べ変えた列
sorted(a, reverse=True)	大きい順にaを整列する
sorted(a, reverse=True)	降順にaをソートする
sorted(a, reverse=True)	aを大きい順に並べる
sorted(a, reverse=True)	aを降順に並べ変える
sorted(a, reverse=True)	aを大きい順にソートする
sorted(a, reverse=True)	aを降順にソートする
sorted(a, reverse=True)	大きい順にaをソートする
sorted(a, reverse=True)	降順にaを並べ変える
sorted(a, reverse=True)	大きい順にaを並べ直す
sorted(a, reverse=True)	aを逆順に並べ変える
sorted(a, reverse=True)	aを降順に並べ直す
sorted(a, reverse=True)	aを大きい順に並べ変える
sorted(a, reverse=True)	降順にaを並べ変えた列
sorted(a, reverse=True)	aを降順に並べ変えた列
sorted(a, reverse=True)	降順にaを並べた列
sorted(a, reverse=True)	大きい順にaを並べ変えた列
sorted(a, reverse=True)	aを大きい順に並べた列
sorted(a, reverse=True)	逆順にaを並べ直した列
sorted(a, reverse=True)	降順にaを整列した列
sorted(a, reverse=True)	降順にaを並べ直した列
sorted(a, reverse=True)	aを降順に整列した列
sorted(a, reverse=True)	大きい順にaを並べ直した列
sorted(a, reverse=True)	aを降順に並べ直した列
sorted(a, reverse=True)	逆順にaを並べた列
sorted(a, reverse=True)	aを大きい順に並べ変えた列
datetime.date.today()	Pythonを実行した日付
datetime.date.today()	プログラムを実行した日付
datetime.date.today()	今日の日付
datetime.date.today()	本日の日付
datetime.date.today().year	プログラムを実行した年
datetime.date.today().year	Pythonを実行した年
datetime.date.today().year	今日の年
datetime.date.today().year	本日の年
datetime.date.today().month	Pythonを実行した月
datetime.date.today().month	プログラムを実行した月
datetime.date.today().month	本日の月
datetime.date.today().month	今日の月
datetime.date.today().day	Pythonを実行した日
datetime.date.today().day	プログラムを実行した日
datetime.date.today().day	今日の日
datetime.date.today().day	本日の日
x.year	xの年
x.month	xの月
x.day	xの日
datetime.datetime.now()	プログラムを実行したエポックタイム
datetime.datetime.now()	Pythonを実行したエポックタイム
datetime.datetime.now()	Pythonを実行したエポック
datetime.datetime.now()	Pythonを実行したタイムスタンプ
datetime.datetime.now()	プログラムを実行したタイムスタンプ
datetime.datetime.now()	今日のエポックタイム
datetime.datetime.now()	今日のエポック
datetime.datetime.now()	本日のエポック
datetime.datetime.now()	本日のエポックタイム
datetime.datetime.now()	本日のタイムスタンプ
datetime.datetime.now()	今日のタイムスタンプ
import pandas as pd	Pandasライブラリをインポートする
import pandas as pd	Pandasを'pd'としてインポートする
import pandas as pd	Pandasライブラリを'pd'としてインポートする
import pandas as pd	Pandasをインポートする
import pandas as pd	Pandasライブラリを用意する
import pandas as pd	データ解析用のライブラリをインポートする
pd.set_option('display.max_columns', 160)	160番目までの列を表示させる
pd.set_option('display.max_columns', 160)	最大表示列数を160列にセットする
pd.set_option('display.max_columns', 160)	最大表示列数を160列に設定する
pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'を読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'をカンマ区切りで読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'を読む
pd.read_csv('file.csv', sep=',')	'file.csv'をカンマ区切りで読む
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'を読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'をカンマ区切りで読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'を読み、dfにする
df = pd.read_csv('file.csv', sep=',')	'file.csv'をカンマ区切りで読んで、dfにする
pd.read_csv('file.csv', sep=',')	'file.csv'から表をカンマ区切りで読む
pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'からカンマ区切りで読む
pd.read_csv('file.csv', sep=',')	カンマ区切りで表を'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りでデータフレームを'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	表データをカンマ区切りで'file.csv'から読む
pd.read_csv('file.csv', sep=',')	ファイルパス'file.csv'からデータフレームをカンマ区切りで読み込む
pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'からカンマ区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'からカンマ区切りで表を読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'ファイルパスから表をカンマ区切りで読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'からデータフレームを読み込む
pd.read_csv('file.csv', sep=',')	表をカンマ区切りでパス'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'ファイルパスからデータフレームを読む
pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'ファイル名から表を読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りでファイル'file.csv'からデータフレームを読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'ファイル名からカンマ区切りで表データを読む
pd.read_csv('file.csv', sep=',')	'file.csv'から表をカンマ区切りで読み込む
pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'ファイルからカンマ区切りで読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'ファイル名から表データを読み込む
pd.read_csv('file.csv', sep=',')	カンマ区切りで表を'file.csv'ファイル名から読む
df = pd.read_csv('file.csv', sep=',')	'file.csv'から表をカンマ区切りで読んで、dfにする
df = pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'からカンマ区切りで読み、dfに代入する
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで表を'file.csv'から読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りでデータフレームを'file.csv'から読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	表データをカンマ区切りで'file.csv'から読んで、dfにする
df = pd.read_csv('file.csv', sep=',')	ファイルパス'file.csv'からデータフレームをカンマ区切りで読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'からカンマ区切りで読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'からカンマ区切りで表を読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'ファイルパスから表をカンマ区切りで読み込み、dfに代入する
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'からデータフレームを読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	表をカンマ区切りでパス'file.csv'から読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'ファイルパスからデータフレームを読み、dfとする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'ファイル名から表を読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りでファイル'file.csv'からデータフレームを読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'ファイル名からカンマ区切りで表データを読み、dfにする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から表をカンマ区切りで読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'ファイルからカンマ区切りで読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで'file.csv'ファイル名から表データを読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	カンマ区切りで表を'file.csv'ファイル名から読んで、dfに代入する
pd.read_csv('file.csv', sep=',')	'file.csv'を','区切りで読み込む
pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'を読み込む
pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'を読む
pd.read_csv('file.csv', sep=',')	'file.csv'を','区切りで読む
df = pd.read_csv('file.csv', sep=',')	'file.csv'を','区切りで読み込み、dfに代入する
df = pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'を読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'を読んで、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'を','区切りで読み、dfとする
pd.read_csv('file.csv', sep=',')	表を'file.csv'から','区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'ファイル名から','区切りで表データを読む
pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'から表を読む
pd.read_csv('file.csv', sep=',')	データフレームを','区切りで'file.csv'から読む
pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'からデータフレームを読み込む
pd.read_csv('file.csv', sep=',')	表を','区切りで'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りで表を読み込む
pd.read_csv('file.csv', sep=',')	','区切りで表をファイルパス'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	データフレームを','区切りで'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	','区切りでファイル'file.csv'からデータフレームを読む
pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'からデータフレームを読む
pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'からデータフレームを','区切りで読む
pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りでデータフレームを読み込む
pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'から','区切りで読み込む
pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りで表を読む
pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りで表データを読む
pd.read_csv('file.csv', sep=',')	表データを'file.csv'から','区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りで表データを読み込む
pd.read_csv('file.csv', sep=',')	','区切りで表データを'file.csv'ファイルから読み込む
pd.read_csv('file.csv', sep=',')	表をファイルパス'file.csv'から','区切りで読む
pd.read_csv('file.csv', sep=',')	表を'file.csv'ファイルパスから','区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'から表を','区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'から表データを','区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りでデータフレームを読み込む
pd.read_csv('file.csv', sep=',')	表を','区切りで'file.csv'ファイル名から読む
pd.read_csv('file.csv', sep=',')	表データを','区切りでファイル名'file.csv'から読む
pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'から表データを読む
pd.read_csv('file.csv', sep=',')	表を','区切りでパス'file.csv'から読み込む
pd.read_csv('file.csv', sep=',')	ファイル'file.csv'から','区切りで表を読む
pd.read_csv('file.csv', sep=',')	','区切りで表を'file.csv'から読む
pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りで表データを読み込む
pd.read_csv('file.csv', sep=',')	表データをファイル'file.csv'から','区切りで読み込む
pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りで表を読み込む
pd.read_csv('file.csv', sep=',')	表データを','区切りで'file.csv'ファイル名から読む
pd.read_csv('file.csv', sep=',')	表データを'file.csv'から','区切りで読む
pd.read_csv('file.csv', sep=',')	'file.csv'からデータフレームを','区切りで読み込む
pd.read_csv('file.csv', sep=',')	','区切りで表データを'file.csv'から読む
pd.read_csv('file.csv', sep=',')	'file.csv'から表を','区切りで読む
df = pd.read_csv('file.csv', sep=',')	表を'file.csv'から','区切りで読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	'file.csv'ファイル名から','区切りで表データを読んで、dfに代入する
df = pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'から表を読み、dfに代入する
df = pd.read_csv('file.csv', sep=',')	データフレームを','区切りで'file.csv'から読んで、dfに代入する
df = pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'からデータフレームを読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	表を','区切りで'file.csv'から読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りで表を読み込んで、dfに代入する
df = pd.read_csv('file.csv', sep=',')	','区切りで表をファイルパス'file.csv'から読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	データフレームを','区切りで'file.csv'から読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	','区切りでファイル'file.csv'からデータフレームを読み、dfにする
df = pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'からデータフレームを読み、dfとする
df = pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'からデータフレームを','区切りで読んで、dfとする
df = pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りでデータフレームを読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	データフレームを'file.csv'から','区切りで読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りで表を読み、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りで表データを読み、dfとする
df = pd.read_csv('file.csv', sep=',')	表データを'file.csv'から','区切りで読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りで表データを読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	','区切りで表データを'file.csv'ファイルから読み込み、dfとする
df = pd.read_csv('file.csv', sep=',')	表をファイルパス'file.csv'から','区切りで読み、dfとする
df = pd.read_csv('file.csv', sep=',')	表を'file.csv'ファイルパスから','区切りで読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から表を','区切りで読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から表データを','区切りで読み込んで、dfに代入する
df = pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りでデータフレームを読み込み、dfにする
df = pd.read_csv('file.csv', sep=',')	表を','区切りで'file.csv'ファイル名から読み、dfとする
df = pd.read_csv('file.csv', sep=',')	表データを','区切りでファイル名'file.csv'から読んで、dfとする
df = pd.read_csv('file.csv', sep=',')	','区切りで'file.csv'から表データを読んで、dfとする
df = pd.read_csv('file.csv', sep=',')	表を','区切りでパス'file.csv'から読み込み、dfに代入する
df = pd.read_csv('file.csv', sep=',')	ファイル'file.csv'から','区切りで表を読み、dfとする
df = pd.read_csv('file.csv', sep=',')	','区切りで表を'file.csv'から読み、dfとする
df = pd.read_csv('file.csv', sep=',')	ファイル名'file.csv'から','区切りで表データを読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	表データをファイル'file.csv'から','区切りで読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から','区切りで表を読み込んで、dfとする
df = pd.read_csv('file.csv', sep=',')	表データを','区切りで'file.csv'ファイル名から読んで、dfとする
df = pd.read_csv('file.csv', sep=',')	表データを'file.csv'から','区切りで読み、dfにする
df = pd.read_csv('file.csv', sep=',')	'file.csv'からデータフレームを','区切りで読み込んで、dfにする
df = pd.read_csv('file.csv', sep=',')	','区切りで表データを'file.csv'から読み、dfとする
df = pd.read_csv('file.csv', sep=',')	'file.csv'から表を','区切りで読み、dfにする
pd.read_csv('file.csv', sep='\t')	タブ区切りで'file.csv'を読み込む
pd.read_csv('file.csv', sep='\t')	'file.csv'をタブ区切りで読み込む
pd.read_csv('file.csv', sep='\t')	タブ区切りで'file.csv'を読む
df = pd.read_csv('file.csv', sep='\t')	タブ区切りで'file.csv'を読み込んで、dfにする
df = pd.read_csv('file.csv', sep='\t')	'file.csv'をタブ区切りで読み込み、dfとする
df = pd.read_csv('file.csv', sep='\t')	タブ区切りで'file.csv'を読み、dfとする
pd.read_csv('file.csv', sep='\t')	'file.csv'から表データをタブ区切りで読み込む
pd.read_csv('file.csv', sep='\t')	ファイルパス'file.csv'から表データをタブ区切りで読む
pd.read_csv('file.csv', sep='\t')	データフレームを'file.csv'からタブ区切りで読み込む
pd.read_csv('file.csv', sep='\t')	表を'file.csv'ファイルからタブ区切りで読み込む
pd.read_csv('file.csv', sep='\t')	'file.csv'から表データをタブ区切りで読む
pd.read_csv('file.csv', sep='\t')	ファイル名'file.csv'からデータフレームをタブ区切りで読む
pd.read_csv('file.csv', sep='\t')	ファイル名'file.csv'からデータフレームをタブ区切りで読み込む
pd.read_csv('file.csv', sep='\t')	表データを'file.csv'からタブ区切りで読む
pd.read_csv('file.csv', sep='\t')	'file.csv'ファイル名からデータフレームをタブ区切りで読み込む
pd.read_csv('file.csv', sep='\t')	表を'file.csv'からタブ区切りで読む
pd.read_csv('file.csv', sep='\t')	表をファイル'file.csv'からタブ区切りで読む
pd.read_csv('file.csv', sep='\t')	表を'file.csv'からタブ区切りで読み込む
df = pd.read_csv('file.csv', sep='\t')	'file.csv'から表データをタブ区切りで読み込み、dfに代入する
df = pd.read_csv('file.csv', sep='\t')	ファイルパス'file.csv'から表データをタブ区切りで読み、dfにする
df = pd.read_csv('file.csv', sep='\t')	データフレームを'file.csv'からタブ区切りで読み込んで、dfとする
df = pd.read_csv('file.csv', sep='\t')	表を'file.csv'ファイルからタブ区切りで読み込んで、dfとする
df = pd.read_csv('file.csv', sep='\t')	'file.csv'から表データをタブ区切りで読み、dfとする
df = pd.read_csv('file.csv', sep='\t')	ファイル名'file.csv'からデータフレームをタブ区切りで読み、dfにする
df = pd.read_csv('file.csv', sep='\t')	ファイル名'file.csv'からデータフレームをタブ区切りで読み込み、dfにする
df = pd.read_csv('file.csv', sep='\t')	表データを'file.csv'からタブ区切りで読み、dfとする
df = pd.read_csv('file.csv', sep='\t')	'file.csv'ファイル名からデータフレームをタブ区切りで読み込み、dfとする
df = pd.read_csv('file.csv', sep='\t')	表を'file.csv'からタブ区切りで読んで、dfとする
df = pd.read_csv('file.csv', sep='\t')	表をファイル'file.csv'からタブ区切りで読み、dfとする
df = pd.read_csv('file.csv', sep='\t')	表を'file.csv'からタブ区切りで読み込み、dfとする
pd.read_csv('file.csv', header=None)	列名を指定せずに'file.csv'を読み込む
pd.read_csv('file.csv', header=None)	ヘッダーなしでファイル名'file.csv'を読み込む
pd.read_csv('file.csv', header=None)	ヘッダーなしでファイルパス'file.csv'を読む
pd.read_csv('file.csv', header=None)	ヘッダーを指定せずに'file.csv'を読み込む
pd.read_csv('file.csv', header=None)	ヘッダーを指定せずにファイル名'file.csv'を読む
pd.read_csv('file.csv', header=None)	ヘッダーを指定せずに'file.csv'ファイル名を読み込む
pd.read_csv('file.csv', header=None)	列名を指定せずにファイル名'file.csv'を読む
pd.read_csv('file.csv', header=None)	ヘッダーなしで'file.csv'ファイルを読む
pd.read_csv('file.csv', header=None)	列名を指定せずに'file.csv'を読む
pd.read_csv('file.csv', header=None)	ヘッダーを指定せずに'file.csv'を読む
pd.read_csv('file.csv', header=None)	ヘッダーを指定せずに'file.csv'ファイル名を読む
pd.read_csv('file.csv', header=None)	ヘッダーなしで'file.csv'を読む
pd.read_csv('file.csv', header=None)	ヘッダーなしでファイルパス'file.csv'を読み込む
pd.read_csv('file.csv', header=None)	列名を指定せずにファイル名'file.csv'を読み込む
pd.read_csv('file.csv', index_col=0)	列番号0をインデックスとして'file.csv'を読み込む
pd.read_csv('file.csv', index_col=0)	列番号0を位置として'file.csv'ファイル名を読む
pd.read_csv('file.csv', index_col=0)	先頭の列を位置として'file.csv'を読み込む
pd.read_csv('file.csv', index_col=0)	先頭の列を位置として'file.csv'を読む
pd.read_csv('file.csv', index_col=0)	列番号0を位置として'file.csv'ファイル名を読み込む
pd.read_csv('file.csv', index_col=0)	列番号0を位置として'file.csv'を読む
pd.read_csv('file.csv', index_col=0)	列番号0をインデックスとして'file.csv'を読む
pd.read_csv('file.csv', index_col=0)	先頭の列をインデックスとして'file.csv'ファイル名を読み込む
pd.read_csv('file.csv', index_col=0)	先頭の列をインデックスとしてファイルパス'file.csv'を読む
pd.read_csv('file.csv', index_col=0)	先頭の列をインデックスとして'file.csv'を読む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードをshift_jisとして'file.csv'を読む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードをシフトJISとして'file.csv'を読み込む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードをshift_jisとして'file.csv'を読み込む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードをシフトJISとして'file.csv'ファイルを読み込む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードをshift_jisとしてファイルパス'file.csv'を読み込む
pd.read_csv('file.csv', encoding="shift_jis")	エンコーディングをシフトJISとして'file.csv'を読む
pd.read_csv('file.csv', encoding="shift_jis")	エンコーディングをshift_jisとしてファイル名'file.csv'を読む
pd.read_csv('file.csv', encoding="shift_jis")	エンコーディングをshift_jisとして'file.csv'を読む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードがshift_jisのファイル'file.csv'を読む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードがシフトJISのファイル'file.csv'を読み込む
pd.read_csv('file.csv', encoding="shift_jis")	文字コードがshift_jisのファイル'file.csv'を読み込む
df.to_csv('out.csv')	表データdfを'out.csv'パスに書き出す
df.to_csv('out.csv')	データフレームdfを'out.csv'ファイル名に書き込む
df.to_csv('out.csv')	表データdfを'out.csv'に書き出す
df.to_csv('out.csv')	表dfをファイル名'out.csv'に書き込む
df.to_csv('out.csv')	dfを'out.csv'に書き出す
df.to_csv('out.csv')	表dfを'out.csv'ファイル名に書き込む
df.to_csv('out.csv')	表dfをファイルパス'out.csv'に書き込む
df.to_csv('out.csv')	データフレームdfを'out.csv'に書き出す
df.to_csv('out.csv')	データフレームdfをファイル名'out.csv'に書き込む
df.to_csv('out.csv')	dfをファイル名'out.csv'に書き出す
df.to_csv('out.csv')	データフレームdfを'out.csv'に書き込む
df.to_csv('out.csv')	表データdfを'out.csv'ファイル名に書き出す
df.to_csv('out.csv')	表dfをファイル'out.csv'に書き出す
df.to_csv('out.csv')	表データdfを'out.csv'ファイルパスに書き出す
df.to_csv('out.csv')	dfを'out.csv'に書き込む
df.to_csv('out.csv')	表dfを'out.csv'に書き出す
df.to_csv('out.csv')	表データdfを'out.csv'に書き込む
df.head()	表dfの上5行
df.head()	表データdfの先頭の5行
df.head()	dfの上5行
df.head()	データフレームdfの先頭5行
df.head()	dfの5行
df.head()	表データdfの5行
df.head()	データフレームdfの5行
df.head()	表dfの5行
df.head()	表dfの先頭5行
df.head()	表データdfの最初の5行
df.head()	データフレームdfの上5行
df.head()	表dfの上5行を確認する
df.head()	表データdfの先頭の5行を調べる
df.head()	dfの上5行を表示する
df.head()	データフレームdfの先頭5行を表示する
df.head()	dfの5行を調べる
df.head()	表データdfの5行を調べる
df.head()	データフレームdfの5行を見る
df.head()	表dfの5行を確認する
df.head()	表dfの先頭5行を調べる
df.head()	表データdfの最初の5行を調べる
df.head()	データフレームdfの上5行を見る
df.head()	dfの内容を調べる
df.head()	dfの内容を表示してみる
df.head()	とりあえずdf表データの内容を調べる
df.head()	とりあえずdfの内容を調べる
df.head()	とりあえずデータフレームdfの内容を確認する
df.head()	とりあえずデータフレームdfの内容を表示してみる
df.head()	とりあえず表データdfの内容を確認する
df.head()	とりあえずdf表の内容を確認する
df.head()	df表の内容を表示する
df.head()	とりあえず表データdfの内容を表示してみる
df.head()	dfデータフレームの内容を表示する
df.head()	df表データの内容を表示する
df.head()	とりあえずdfの内容を見る
df.head()	とりあえずdfデータフレームの内容を表示する
df.head()	データフレームdfの内容を表示してみる
df.head()	表データdfの内容を表示してみる
df.head()	とりあえず表dfの内容を調べる
df.head()	表dfの内容を見る
df.head()	df表データの内容を調べる
df.head()	とりあえず表dfの内容を確認する
df.head(10)	データフレームdfの上10行
df.head(10)	表dfの先頭10行
df.head(10)	dfの先頭の10行
df.head(10)	dfの最初の10行
df.head(10)	データフレームdfの10行
df.head(10)	表データdfの上10行
df.head(10)	表dfの10行
df.head(10)	dfの上10行
df.head(10)	表データdfの最初の10行
df.head(10)	表dfの最初の10行
df.head(10)	表dfの上10行
df.head(10)	表dfの先頭の10行
df.head(10)	表データdfの先頭の10行
df.head(10)	データフレームdfの上10行を見る
df.head(10)	表dfの先頭10行を表示する
df.head(10)	dfの先頭の10行を表示する
df.head(10)	dfの最初の10行を確認する
df.head(10)	データフレームdfの10行を見る
df.head(10)	表データdfの上10行を表示する
df.head(10)	表dfの10行を表示する
df.head(10)	dfの上10行を確認する
df.head(10)	表データdfの最初の10行を表示する
df.head(10)	表dfの最初の10行を確認する
df.head(10)	表dfの上10行を調べる
df.head(10)	表dfの先頭の10行を調べる
df.head(10)	表データdfの先頭の10行を表示する
df.tail()	表データdfの下5行
df.tail()	表データdfの末尾5行
df.tail()	表データdfの末尾の5行
df.tail()	表データdfの最後の5行
df.tail()	dfの末尾の5行
df.tail()	dfの末尾5行
df.tail()	データフレームdfの下5行
df.tail()	データフレームdfの末尾の5行
df.tail()	dfの下5行
df.tail()	表データdfの下5行を見る
df.tail()	表データdfの末尾5行を調べる
df.tail()	表データdfの末尾の5行を表示する
df.tail()	表データdfの最後の5行を調べる
df.tail()	dfの末尾の5行を確認する
df.tail()	dfの末尾5行を見る
df.tail()	データフレームdfの下5行を表示する
df.tail()	データフレームdfの末尾の5行を調べる
df.tail()	dfの下5行を見る
df.tail(10)	dfの末尾10行
df.tail(10)	表dfの末尾10行
df.tail(10)	dfの末尾の10行
df.tail(10)	表データdfの末尾の10行
df.tail(10)	データフレームdfの最初の10行
df.tail(10)	表データdfの最初の10行
df.tail(10)	データフレームdfの末尾10行
df.tail(10)	表dfの下10行
df.tail(10)	表データdfの下10行
df.tail(10)	データフレームdfの下10行
df.tail(10)	表dfの末尾の10行
df.tail(10)	データフレームdfの末尾の10行
df.tail(10)	表データdfの末尾10行
df.tail(10)	dfの末尾10行を見る
df.tail(10)	表dfの末尾10行を表示する
df.tail(10)	dfの末尾の10行を表示する
df.tail(10)	表データdfの末尾の10行を見る
df.tail(10)	データフレームdfの最初の10行を調べる
df.tail(10)	表データdfの最初の10行を表示する
df.tail(10)	データフレームdfの末尾10行を表示する
df.tail(10)	表dfの下10行を表示する
df.tail(10)	表データdfの下10行を見る
df.tail(10)	データフレームdfの下10行を見る
df.tail(10)	表dfの末尾の10行を見る
df.tail(10)	データフレームdfの末尾の10行を表示する
df.tail(10)	表データdfの末尾10行を表示する
df[100:106]	dfの100行から106行まで
df[100:106]	データフレームdfの100行から106行まで
df[100:106]	表dfの100行から106行まで
df[100:106]	表データdfの100行目から106行目まで
df[100:106]	データフレームdfの100行目から106行目まで
df[100:106]	表dfの100行目から106行目まで
df[100:106]	表データdfの100行から106行まで
df[100:106]	dfの100行から106行までを表示する
df[100:106]	データフレームdfの100行から106行までを見る
df[100:106]	表dfの100行から106行までを確認する
df[100:106]	表データdfの100行目から106行目までを表示する
df[100:106]	データフレームdfの100行目から106行目までを調べる
df[100:106]	表dfの100行目から106行目までを調べる
df[100:106]	表データdfの100行から106行までを調べる
df[100:]	データフレームdfの100行目から末尾まで
df[100:]	表データdfの100行目から最後まで
df[100:]	表dfの100行から末尾まで
df[100:]	dfの100行から後ろまで
df[100:]	データフレームdfの100行から末尾まで
df[100:]	dfの100行目から後ろまで
df[100:]	表dfの100行から最後まで
df[100:]	dfの100行から最後まで
df[100:]	データフレームdfの100行から後ろまで
df[100:]	表データdfの100行目から後ろまで
df[100:]	表データdfの100行から最後まで
df[100:]	データフレームdfの100行から最後まで
df[100:]	表dfの100行目から最後まで
df[100:]	表dfの100行から後ろまで
df[100:]	表データdfの100行目から末尾まで
df[100:]	データフレームdfの100行目から後ろまで
df[100:]	データフレームdfの100行目から末尾までを確認する
df[100:]	表データdfの100行目から最後までを見る
df[100:]	表dfの100行から末尾までを表示する
df[100:]	dfの100行から後ろまでを表示する
df[100:]	データフレームdfの100行から末尾までを表示する
df[100:]	dfの100行目から後ろまでを見る
df[100:]	表dfの100行から最後までを見る
df[100:]	dfの100行から最後までを調べる
df[100:]	データフレームdfの100行から後ろまでを調べる
df[100:]	表データdfの100行目から後ろまでを調べる
df[100:]	表データdfの100行から最後までを調べる
df[100:]	データフレームdfの100行から最後までを調べる
df[100:]	表dfの100行目から最後までを確認する
df[100:]	表dfの100行から後ろまでを確認する
df[100:]	表データdfの100行目から末尾までを確認する
df[100:]	データフレームdfの100行目から後ろまでを表示する
df[:100]	表dfの最初から100行目まで
df[:100]	表dfの最初から100行まで
df[:100]	表データdfの最初から100行まで
df[:100]	表データdfの前から100行目まで
df[:100]	表dfの前から100行目まで
df[:100]	表dfの先頭から100行目まで
df[:100]	表データdfの前から100行まで
df[:100]	データフレームdfの先頭から100行まで
df[:100]	データフレームdfの前から100行まで
df[:100]	表dfの最初から100行目までを表示する
df[:100]	表dfの最初から100行までを見る
df[:100]	表データdfの最初から100行までを表示する
df[:100]	表データdfの前から100行目までを表示する
df[:100]	表dfの前から100行目までを調べる
df[:100]	表dfの先頭から100行目までを見る
df[:100]	表データdfの前から100行までを表示する
df[:100]	データフレームdfの先頭から100行までを表示する
df[:100]	データフレームdfの前から100行までを調べる
df['age']	データフレームdfの'age'
df['age']	dfのコラム'age'
df['age']	表dfの表属性'age'
df['age']	データフレームdfの'age'を抽出する
df['age']	表データdfの'age'コラムを抽出する
df['age']	表dfの'age'コラム
df['age']	表dfの'age'表属性
df['age']	表データdfのカラム'age'
df['age']	表データdfの列'age'
df['age']	表データdfの'age'を抽出する
df['age']	表dfの'age'を選択する
df['age']	dfの'age'
df['age']	表dfのコラム'age'
df['age']	表データdfのコラム'age'を選択する
df['age']	表データdfの'age'を選択する
df['age']	データフレームdfの'age'カラム
df['age']	表データdfのコラム'age'
df['age']	表データdfの'age'
df['age']	表dfの'age'
df['age']	データフレームdfの'age'を確認する
df['age']	dfのコラム'age'を調べる
df['age']	表dfの表属性'age'を調べる
df['age']	表dfの'age'コラムを見る
df['age']	表dfの'age'表属性を調べる
df['age']	表データdfのカラム'age'を確認する
df['age']	表データdfの列'age'を確認する
df['age']	dfの'age'を確認する
df['age']	表dfのコラム'age'を表示する
df['age']	データフレームdfの'age'カラムを確認する
df['age']	表データdfのコラム'age'を表示する
df['age']	表データdfの'age'を調べる
df['age']	表dfの'age'を見る
df[['name','age']]	dfのカラム'name'と'age'
df[['name','age']]	表データdfのカラム'name'と'age'
df[['name','age']]	dfのカラム'name'と'age'を選択する
df[['name','age']]	表dfのカラム'name'と'age'
df[['name','age']]	表データdfのカラム'name'と'age'を選択する
df[['name','age']]	データフレームdfのカラム'name'と'age'を抽出する
df[['name','age']]	データフレームdfのカラム'name'と'age'
df[['name','age']]	dfのカラム'name'と'age'を見る
df[['name','age']]	表データdfのカラム'name'と'age'を確認する
df[['name','age']]	表dfのカラム'name'と'age'を調べる
df[['name','age']]	データフレームdfのカラム'name'と'age'を見る
df[['name','age','GPA']]	表dfのカラム'name'、'age'、'GPA'
df[['name','age','GPA']]	dfのカラム'name'、'age'、'GPA'
df[['name','age','GPA']]	データフレームdfのカラム'name'、'age'、'GPA'
df[['name','age','GPA']]	表dfのカラム'name'、'age'、'GPA'を見る
df[['name','age','GPA']]	dfのカラム'name'、'age'、'GPA'を調べる
df[['name','age','GPA']]	データフレームdfのカラム'name'、'age'、'GPA'を表示する
df[['name','age','GPA', 'addr']]	データフレームdfのカラム'name'、'age'、'GPA'、'addr'
df[['name','age','GPA', 'addr']]	dfのカラム'name'、'age'、'GPA'、'addr'
df[['name','age','GPA', 'addr']]	表dfのカラム'name'、'age'、'GPA'、'addr'を抽出する
df[['name','age','GPA', 'addr']]	表データdfのカラム'name'、'age'、'GPA'、'addr'
df[['name','age','GPA', 'addr']]	表dfのカラム'name'、'age'、'GPA'、'addr'
df[['name','age','GPA', 'addr']]	データフレームdfのカラム'name'、'age'、'GPA'、'addr'を選択する
df[['name','age','GPA', 'addr']]	表データdfのカラム'name'、'age'、'GPA'、'addr'を選択する
df[['name','age','GPA', 'addr']]	データフレームdfのカラム'name'、'age'、'GPA'、'addr'を調べる
df[['name','age','GPA', 'addr']]	dfのカラム'name'、'age'、'GPA'、'addr'を確認する
df[['name','age','GPA', 'addr']]	表データdfのカラム'name'、'age'、'GPA'、'addr'を調べる
df[['name','age','GPA', 'addr']]	表dfのカラム'name'、'age'、'GPA'、'addr'を確認する
df.loc[100]	dfのうち、indexが100の行のみを取得
df.loc[100]	dfの位置が100の行を抽出する
df.loc[100]	dfのインデックスが100の行を抽出する
df.loc[100]	dfの100列目を取得する
df.iloc[[1,2,4],[0,2]]	dfのうち、1,2,4行目の0,2列目を取得
df.iloc[[1,2,4],[0,2]]	dfの1,2,4行目と0,2列目を抽出する
df.iloc[[1,2,4],[0,2]]	dfの1、2、4行目の0、2列目であるものを取得する
df.info()	表dfのデータの詳細を確認する
df.info()	表データdfのデータの詳細を表示する
df.info()	データフレームdfのデータの性質を見る
df.info()	表データdfのデータの詳細を調べる
df.info()	データフレームdfのデータの詳細を表示してみる
df.info()	データフレームdfのデータの詳細を確認する
df.info()	dfのデータの性質を表示してみる
df.info()	表dfのデータの性質を見る
df.info()	dfのデータの性質を確認する
df.info()	表dfのデータの性質を確認する
df.info()	表データdfのデータの性質を確認する
df.info()	表データdfのデータの詳細を表示してみる
df.info()	データフレームdfのデータの性質を確認する
df.info()	表データdfのデータの性質を調べる
df.describe()	表データdfの統計情報
df.describe()	データフレームdfの統計情報
df.describe()	表dfの要約統計量
df.describe()	表dfの統計情報
df.describe()	データフレームdfの要約統計量
df.describe()	表データdfの統計情報
df.describe()	表dfの統計情報
df.describe()	データフレームdfの要約統計量
df.describe()	データフレームdfの統計情報
df.describe()	表データdfの要約統計量
df.describe()	表dfの要約統計量
df.describe()	dfの統計情報
df.describe(include="O")	表dfのオブジェクトデータの要約統計量
df.describe(include="O")	表dfの数値データ以外の要約統計量
df.describe(include="O")	表dfの数値データ以外の統計情報
df.describe(include="O")	データフレームdfの数値データ以外の統計情報
df.describe(include="O")	表データdfの数値データ以外の統計情報
df.describe(include="O")	データフレームdfのオブジェクトデータの要約統計量
df.describe(include="O")	dfの数値データ以外の要約統計量
df.describe(include="O")	dfのオブジェクトデータの要約統計量
df.describe(include="O")	データフレームdfのオブジェクトデータの統計情報
df.describe(include="O")	表データdfのオブジェクトデータの統計情報
df.describe(include="O")	dfの数値データ以外の統計情報
df.describe(include="O")	dfのオブジェクトデータの統計情報
df.describe(include="O")	データフレームdfの数値データ以外の要約統計量
df.describe(include="O")	表dfの数値データ以外の統計情報
df.describe(include="O")	データフレームdfの数値データ以外の要約統計量
df.describe(include="O")	表dfのオブジェクトデータの統計情報
df.describe(include="O")	表dfのオブジェクトデータの要約統計量
df.describe(include="O")	表データdfのオブジェクトデータの統計情報
df.describe(include="O")	dfのオブジェクトデータの要約統計量
df.describe(include="O")	dfの数値データ以外の統計情報
df.describe(include="O")	データフレームdfの数値データ以外の統計情報
df.describe(include="O")	dfの数値データ以外の要約統計量
df.describe(include="O")	データフレームdfのオブジェクトデータの統計情報
df['age'].describe()	dfの'age'についての要約統計量
df['age'].describe()	表データdfの'age'についての要約統計量
df['age'].describe()	データフレームdfの'age'についての要約統計量
df['age'].describe()	表dfの'age'についての要約統計量
df['age'].describe()	dfの'age'についての要約統計量を表示する
df['age'].describe()	表データdfの'age'についての要約統計量を見る
df['age'].describe()	データフレームdfの'age'についての要約統計量を見る
df['age'].describe()	表dfの'age'についての要約統計量を表示する
e00.describe()	e00の要約統計量
e00.describe()	表属性e00の要約統計量
e00.describe()	列e00の要約統計量
e00.describe()	e00の要約統計量を表示する
e00.describe()	表属性e00の要約統計量を確認する
e00.describe()	列e00の要約統計量を表示する
df['age'].mean()	表データdfの'age'についての平均値
df['age'].mean()	データフレームdfの'age'についての平均値
df['age'].mean()	表dfの'age'についての平均値
df['age'].mean()	dfの'age'についての平均値
df['age'].mean()	表データdfの'age'についての平均値を見る
df['age'].mean()	データフレームdfの'age'についての平均値を確認する
df['age'].mean()	表dfの'age'についての平均値を調べる
df['age'].mean()	dfの'age'についての平均値を見る
e00.mean()	e00の平均値
e00.mean()	列e00の平均値
e00.mean()	表属性e00の平均値
e00.mean()	コラムe00の平均値
e00.mean()	e00の平均値を表示する
e00.mean()	列e00の平均値を表示する
e00.mean()	表属性e00の平均値を表示する
e00.mean()	コラムe00の平均値を見る
df['age'].median()	データフレームdfの'age'についての中央値
df['age'].median()	表データdfの'age'についての中央値
df['age'].median()	表dfの'age'についての中央値
df['age'].median()	dfの'age'についての中央値
df['age'].median()	データフレームdfの'age'についての中央値を見る
df['age'].median()	表データdfの'age'についての中央値を表示する
df['age'].median()	表dfの'age'についての中央値を確認する
df['age'].median()	dfの'age'についての中央値を表示する
e00.median()	列e00の中央値
e00.median()	カラムe00の中央値
e00.median()	表属性e00の中央値
e00.median()	e00の中央値
e00.median()	コラムe00の中央値
e00.median()	列e00の中央値を表示する
e00.median()	カラムe00の中央値を調べる
e00.median()	表属性e00の中央値を表示する
e00.median()	e00の中央値を表示する
e00.median()	コラムe00の中央値を確認する
df['age'].mode()	データフレームdfの'age'についての最頻値
df['age'].mode()	表データdfの'age'についての最頻値
df['age'].mode()	dfの'age'についての最頻値
df['age'].mode()	表dfの'age'についての最頻値
df['age'].mode()	データフレームdfの'age'についての最頻値を調べる
df['age'].mode()	表データdfの'age'についての最頻値を表示する
df['age'].mode()	dfの'age'についての最頻値を表示する
df['age'].mode()	表dfの'age'についての最頻値を見る
e00.mode()	列e00の最頻値
e00.mode()	表属性e00の最頻値
e00.mode()	カラムe00の最頻値
e00.mode()	コラムe00の最頻値
e00.mode()	列e00の最頻値を表示する
e00.mode()	表属性e00の最頻値を見る
e00.mode()	カラムe00の最頻値を調べる
e00.mode()	コラムe00の最頻値を見る
df['age'].std()	データフレームdfの'age'についての標準偏差
df['age'].std()	表データdfの'age'についての標準偏差
df['age'].std()	表dfの'age'についての標準偏差
df['age'].std()	dfのカラム'age'についての標準偏差
df['age'].std()	表データdfの表属性'age'についての標準偏差
df['age'].std()	dfの'age'についての標準偏差
df['age'].std()	表dfの'age'表属性についての標準偏差
df['age'].std()	表dfの'age'カラムについての標準偏差
df['age'].std()	表データdfの'age'コラムについての標準偏差
df['age'].std()	dfの'age'列についての標準偏差
df['age'].std()	データフレームdfの'age'についての標準偏差を表示する
df['age'].std()	表データdfの'age'についての標準偏差を表示する
df['age'].std()	表dfの'age'についての標準偏差を調べる
df['age'].std()	dfのカラム'age'についての標準偏差を調べる
df['age'].std()	表データdfの表属性'age'についての標準偏差を調べる
df['age'].std()	dfの'age'についての標準偏差を確認する
df['age'].std()	表dfの'age'表属性についての標準偏差を確認する
df['age'].std()	表dfの'age'カラムについての標準偏差を見る
df['age'].std()	表データdfの'age'コラムについての標準偏差を調べる
df['age'].std()	dfの'age'列についての標準偏差を見る
e00.std()	表属性e00の標準偏差
e00.std()	列e00の標準偏差
e00.std()	カラムe00の標準偏差
e00.std()	コラムe00の標準偏差
e00.std()	e00の標準偏差
e00.std()	表属性e00の標準偏差を表示する
e00.std()	列e00の標準偏差を確認する
e00.std()	カラムe00の標準偏差を見る
e00.std()	コラムe00の標準偏差を確認する
e00.std()	e00の標準偏差を確認する
df['age'].var()	dfの'age'コラムについての分散
df['age'].var()	データフレームdfの'age'についての分散
df['age'].var()	表dfの'age'についての分散
df['age'].var()	dfの'age'についての分散
df['age'].var()	表データdfの'age'についての分散
df['age'].var()	表dfの'age'列についての分散
df['age'].var()	表データdfのコラム'age'についての分散
df['age'].var()	dfの'age'コラムについての分散を見る
df['age'].var()	データフレームdfの'age'についての分散を調べる
df['age'].var()	表dfの'age'についての分散を表示する
df['age'].var()	dfの'age'についての分散を表示する
df['age'].var()	表データdfの'age'についての分散を確認する
df['age'].var()	表dfの'age'列についての分散を見る
df['age'].var()	表データdfのコラム'age'についての分散を調べる
e00.var()	コラムe00の分散
e00.var()	カラムe00の分散
e00.var()	表属性e00の分散
e00.var()	列e00の分散
e00.var()	e00の分散
e00.var()	コラムe00の分散を見る
e00.var()	カラムe00の分散を表示する
e00.var()	表属性e00の分散を表示する
e00.var()	列e00の分散を見る
e00.var()	e00の分散を表示する
df.columns	データフレームdfの列の名前
df.columns	表データdfのカラム名
df.columns	表dfの列名
df.columns	表dfのカラム名
df.columns	dfの列の名前
df.columns	表データdfの列の名前
df.columns	表dfの列の名前
df.columns	表データdfの列名
df.columns	データフレームdfのカラム名
df.columns	dfの列名
df.columns	データフレームdfの列名
df.columns	dfのカラム名
df.columns	表dfの列の名前
df.columns	データフレームdfの列の名前
df.columns	表dfの列名
df.columns	データフレームdfの列名
df.columns	dfの列名
df.columns	データフレームdfのカラム名
df.index	データフレームdfのインデックス名
df.index	dfの行名
df.index	表dfの行の名前
df.index	データフレームdfの行の名前
df.index	表データdfのインデックス名
df.index	データフレームdfの行名
df.index	表データdfの行名
df.index	dfの行の名前
df.index	表データdfの行名
df.index	データフレームdfの行の名前
df.index	dfの行名
df.index	データフレームdfの行名
df.values	データフレームdfのバリュー
df.values	dfの要素
df.values	データフレームdfの要素
df.values	表dfのバリュー
df.values	表データdfの要素
df.values	表データdfのバリュー
df.values	表dfの要素
df.values	dfの要素
df.values	表dfの要素
df.values	データフレームdfのバリュー
df.values	表データdfの要素
df.values	dfのバリュー
df.values	表データdfのバリュー
df.values	データフレームdfの要素
df['G3'].values	表データdfの'G3'表属性のバリュー
df['G3'].values	表データdfの'G3'表属性の要素
df['G3'].values	dfの'G3'の要素
df['G3'].values	表dfの'G3'のバリュー
df['G3'].values	データフレームdfのコラム'G3'の要素
df['G3'].values	dfの列'G3'のバリュー
df['G3'].values	dfの列'G3'の要素
df['G3'].values	データフレームdfの'G3'のバリュー
df['G3'].values	表データdfの'G3'の要素
df['G3'].values	dfの'G3'のバリュー
df['G3'].values	dfのコラム'G3'の要素
df['G3'].values	表データdfの'G3'の要素
df['G3'].values	dfの'G3'のバリュー
df['G3'].values	dfの'G3'の要素
df['G3'].values	dfの表属性'G3'のバリュー
df['G3'].values	データフレームdfの'G3'のバリュー
df['G3'].values	表dfの'G3'表属性のバリュー
df.dtypes	dfのデータ型
df.dtypes	表dfのデータ型
df.dtypes	表データdfのデータ型
df.dtypes	データフレームdfのデータ型
df.dtypes	表データdfのデータ型
df.dtypes	表dfのデータ型
df.dtypes	データフレームdfのデータ型
df.dtypes	dfのデータ型
df.shape	データフレームdfの形状
df.shape	データフレームdfの行数と列数
df.shape	dfの形状
df.shape	表dfの行数や列数
df.shape	dfの行数や列数
df.shape	表データdfの形状
df.shape	データフレームdfの行数や列数
df.shape	表dfの形状
df.shape	dfの行数と列数
df.shape	表データdfの行数と列数
df.shape	データフレームdfの行数や列数
df.shape	表dfの行数や列数
df.shape	表データdfの形状
df.shape	dfの行数や列数
df.shape	データフレームdfの形状
df.shape	表dfの行数と列数
df.shape	データフレームdfの行数と列数
df.shape	表dfの形状
df.shape	dfの行数と列数
df['weather'].value_counts()	データフレームdfの'weather'の各要素の出現頻度
df['weather'].value_counts()	表データdfの'weather'列の各要素の出現頻度
df['weather'].value_counts()	データフレームdfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	表データdfの'weather'の出現頻度
df['weather'].value_counts()	dfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	dfの'weather'列の出現回数
df['weather'].value_counts()	dfの'weather'の出現回数
df['weather'].value_counts()	データフレームdfの'weather'列の出現回数
df['weather'].value_counts()	表データdfの'weather'の出現回数
df['weather'].value_counts()	表dfの'weather'の各要素の出現回数
df['weather'].value_counts()	表データdfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	表データdfの表属性'weather'の出現回数
df['weather'].value_counts()	表dfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	表データdfの'weather'の各要素の出現頻度
df['weather'].value_counts()	dfの'weather'カラムの出現頻度
df['weather'].value_counts()	表データdfの'weather'表属性の出現頻度
df['weather'].value_counts()	表dfの'weather'の各要素の出現頻度
df['weather'].value_counts()	データフレームdfのカラム'weather'の各要素の出現回数
df['weather'].value_counts()	dfの'weather'の出現頻度
df['weather'].value_counts()	表データdfのコラム'weather'のそれぞれのデータの出現頻度
df['weather'].value_counts()	表データdfの'weather'コラムの各要素の出現回数
df['weather'].value_counts()	データフレームdfの表属性'weather'の出現回数
df['weather'].value_counts()	dfの'weather'のそれぞれのデータの出現頻度
df['weather'].value_counts()	表データdfのコラム'weather'の各要素の出現頻度
df['weather'].value_counts()	表dfの'weather'の各要素の出現頻度
df['weather'].value_counts()	データフレームdfの'weather'の出現頻度
df['weather'].value_counts()	表dfの'weather'列の各要素の出現回数
df['weather'].value_counts()	dfの'weather'の各要素の出現回数
df['weather'].value_counts()	表データdfの'weather'の各要素の出現回数
df['weather'].value_counts()	dfの'weather'コラムのそれぞれのデータの出現頻度
df['weather'].value_counts()	データフレームdfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	データフレームdfの'weather'の各要素の出現回数
df['weather'].value_counts()	dfの'weather'列の出現回数
df['weather'].value_counts()	データフレームdfの'weather'の各要素の出現頻度
df['weather'].value_counts()	データフレームdfの表属性'weather'の各要素の出現頻度
df['weather'].value_counts()	dfのコラム'weather'の各要素の出現頻度
df['weather'].value_counts()	表dfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	表データdfの'weather'の出現回数
df['weather'].value_counts()	表dfの'weather'の出現回数
df['weather'].value_counts()	表dfの列'weather'の出現頻度
df['weather'].value_counts()	表データdfの'weather'のそれぞれのデータの出現回数
df['weather'].value_counts()	dfの'weather'の出現頻度
df['weather'].value_counts()	データフレームdfの'weather'のそれぞれのデータの出現頻度
df['weather'].value_counts()	表dfの'weather'のそれぞれのデータの出現頻度
df['weather'].value_counts()	表データdfの'weather'列の各要素の出現回数
df['weather'].value_counts()	表データdfのカラム'weather'の各要素の出現頻度
df['weather'].value_counts()	データフレームdfのカラム'weather'のそれぞれのデータの出現頻度
df['weather'].value_counts()	表dfの'weather'の出現頻度
df['weather'].value_counts()	dfの列'weather'のそれぞれのデータの出現頻度
df['weather'].value_counts()	dfの'weather'の各要素の出現頻度
df['remarks'].unique()	データフレームdfのカラム'remarks'のユニークな要素
df['remarks'].unique()	表dfのカラム'remarks'のユニーク値
df['remarks'].unique()	表データdfのコラム'remarks'のユニークな要素
df['remarks'].unique()	データフレームdfの'remarks'の一意の値
df['remarks'].unique()	表データdfの'remarks'の一意の値
df['remarks'].unique()	dfの'remarks'のユニークな要素
df['remarks'].unique()	表dfの'remarks'コラムのユニークな要素
df['remarks'].unique()	dfの'remarks'の一意の値
df['remarks'].unique()	dfの'remarks'コラムのユニークな要素
df['remarks'].unique()	データフレームdfの'remarks'表属性のユニーク値
df['remarks'].unique()	表dfの'remarks'のユニーク値
df['remarks'].unique()	表データdfの'remarks'のユニークな要素
df['remarks'].unique()	dfの'remarks'のユニーク値
df['remarks'].unique()	表dfの'remarks'のユニークな要素
df['remarks'].unique()	データフレームdfの'remarks'のユニーク値
df['remarks'].unique()	データフレームdfの'remarks'のデータの種類
df['remarks'].unique()	dfの列'remarks'のユニークな要素
df['remarks'].unique()	dfの'remarks'コラムのユニークな要素
df['remarks'].unique()	データフレームdfの'remarks'のユニーク値
df['remarks'].unique()	表データdfの'remarks'の一意の値
df['remarks'].unique()	表dfの'remarks'の一意の値
df['remarks'].unique()	dfの'remarks'コラムのユニーク値
df['remarks'].unique()	表dfの'remarks'のデータの種類
df['remarks'].unique()	データフレームdfのカラム'remarks'のデータの種類
df['remarks'].unique()	表データdfの'remarks'のユニークな要素
df['remarks'].unique()	表dfの'remarks'表属性の一意の値
df['remarks'].unique()	dfの'remarks'のユニークな要素
df['remarks'].unique()	データフレームdfの'remarks'カラムのユニーク値
df['remarks'].unique()	表dfのカラム'remarks'の一意の値
df['remarks'].unique()	dfの'remarks'表属性のデータの種類
df['remarks'].nunique()	表dfのコラム'remarks'のユニークな要素数
df['remarks'].nunique()	表dfのカラム'remarks'のユニークな要素数
df['remarks'].nunique()	データフレームdfのカラム'remarks'のユニークな要素の個数
df['remarks'].nunique()	dfの'remarks'のユニークな要素の個数
df['remarks'].nunique()	データフレームdfの'remarks'コラムのユニークな要素数
df['remarks'].nunique()	表データdfの'remarks'のユニークな要素の個数
df['remarks'].nunique()	dfのカラム'remarks'のユニークな要素数
df['remarks'].nunique()	表データdfの'remarks'のユニークな要素数
df['remarks'].nunique()	データフレームdfの'remarks'のユニークな要素数
df['remarks'].nunique()	表データdfの表属性'remarks'のユニークな要素数
df['remarks'].nunique()	データフレームdfの表属性'remarks'のユニークな要素数
df['remarks'].nunique()	表dfの'remarks'のユニークな要素数
df['remarks'].nunique()	表データdfの'remarks'表属性のユニークな要素数
df['remarks'].nunique()	表dfの列'remarks'のユニークな要素数
df['remarks'].nunique()	dfのカラム'remarks'のユニークな要素の個数
df['remarks'].nunique()	表データdfの'remarks'のユニークな要素の個数
df['remarks'].nunique()	dfの'remarks'のユニークな要素数
df['remarks'].nunique()	データフレームdfの'remarks'表属性のユニークな要素数
df['remarks'].nunique()	dfの'remarks'のユニークな要素の個数
df['remarks'].nunique()	表dfの'remarks'のユニークな要素の個数
df['remarks'].nunique()	データフレームdfの'remarks'のユニークな要素数
df['remarks'].nunique()	dfのカラム'remarks'のユニークな要素数
df.rename(columns={'y': 'sales'})	dfの列名を'y'から'sales'に変更する
df.rename(columns={'y': 'sales'})	表データdfの列の名前を'y'から'sales'に変更する
df.rename(columns={'y': 'sales'})	表データdfの列の名前を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	表dfのカラム名を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	データフレームdfの列名を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	dfのカラム名を'y'から'sales'に変更する
df.rename(columns={'y': 'sales'})	dfの列名を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	dfのカラム名を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	表データdfの列名を'y'から'sales'に変更する
df.rename(columns={'y': 'sales'})	データフレームdfの列の名前を'y'から'sales'に変更する
df.rename(columns={'y': 'sales'})	データフレームdfのカラム名を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	表dfの列名を'y'から'sales'にリネームする
df.rename(columns={'y': 'sales'})	表dfの列の名前を'y'から'sales'に変更する
df.rename(columns={'y': 'sales'})	表dfの'y'の名前を'sales'にリネームする
df.rename(columns={'y': 'sales'})	データフレームdfの表属性'y'の名前を'sales'に変更する
df.rename(columns={'y': 'sales'})	表dfの'y'の名前を'sales'に変更する
df.rename(columns={'y': 'sales'})	dfの'y'表属性の名前を'sales'に変更する
df.rename(columns={'y': 'sales'})	表データdfの表属性'y'の名前を'sales'に変更する
df.rename(columns={'y': 'sales'})	dfの'y'の名前を'sales'に変更する
df.rename(columns={'y': 'sales'})	表dfの'y'カラムの名前を'sales'に変更する
df.rename(columns={'y': 'sales'})	表データdfの'y'カラムの名前を'sales'にリネームする
df.rename(columns={'y': 'sales'})	dfの'y'の名前を'sales'にリネームする
df.rename(columns={'y': 'sales'})	表データdfの'y'表属性の名前を'sales'にリネームする
df.rename(columns={'y': 'sales'})	データフレームdfの'y'の名前を'sales'にリネームする
df.rename(columns={'y': 'sales'})	データフレームdfの'y'の名前を'sales'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの列の名前を'y'から'sales'に、'z'から'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表dfのカラム名を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの列名を'y'から'sales'に、'z'から'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの列の名前を'y'から'sales'に、'z'から'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの列の名前を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの列名を'y'から'sales'に、'z'から'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfのカラム名を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表dfの列名を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfのカラム名を'y'から'sales'に、'z'から'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfのカラム名を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表dfの列の名前を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの列名を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの列名を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの列の名前を'y'から'sales'に、'z'から'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの'y'カラムの名前を'sales'に、'z'カラムの名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの'y'の名前を'sales'に、列'z'の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの'y'の名前を'sales'に、'z'表属性の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの'y'の名前を'sales'に、'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの'y'の名前を'sales'に、'z'表属性の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの'y'列の名前を'sales'に、'z'列の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの表属性'y'の名前を'sales'に、'z'表属性の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表dfの'y'の名前を'sales'に、表属性'z'の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの'y'表属性の名前を'sales'に、'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの表属性'y'の名前を'sales'に、'z'の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの'y'の名前を'sales'に、'z'の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの'y'の名前を'sales'に、表属性'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの'y'の名前を'sales'に、'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの'y'の名前を'sales'に、'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	dfの'y'コラムの名前を'sales'に、'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	表データdfの列'y'の名前を'sales'に、'z'の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの'y'の名前を'sales'に、'z'列の名前を'profit'にリネームする
df.rename(columns={'y': 'sales', 'z': 'profit'})	表dfの'y'カラムの名前を'sales'に、'z'の名前を'profit'に変更する
df.rename(columns={'y': 'sales', 'z': 'profit'})	データフレームdfの'y'の名前を'sales'に、列'z'の名前を'profit'にリネームする
df.rename(index={'ONE': 'Row_1'})	dfのインデックス名を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表データdfの行の名前を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表データdfの行名を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表データdfのインデックス名を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	dfの行名を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	dfの行の名前を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表dfの行名を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表データdfの行名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	データフレームdfの行の名前を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表dfのインデックス名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfの行の名前を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表dfの行の名前を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表dfのインデックス名を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表データdfの行の名前を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表dfの行の名前を'ONE'から'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	データフレームdfの行名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	データフレームdfの行の名前を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	データフレームdfのインデックス名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表dfの行名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfのインデックス名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表データdfのインデックス名を'ONE'から'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表dfの'ONE'の名前を'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	データフレームdfの'ONE'の名前を'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfの'ONE'の名前を'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	データフレームdfの'ONE'の名前を'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表dfのインデックス'ONE'の名前を'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	表dfの'ONE'の名前を'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfの'ONE'の名前を'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	表データdfの'ONE'の名前を'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfの位置'ONE'の名前を'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfの'ONE'インデックスの名前を'Row_1'にリネームする
df.rename(index={'ONE': 'Row_1'})	データフレームdfの'ONE'位置の名前を'Row_1'に変更する
df.rename(index={'ONE': 'Row_1'})	dfのインデックス'ONE'の名前を'Row_1'にリネームする
df.set_index('datetime')	データフレームdfの'datetime'をインデックスとする
df.set_index('datetime')	表dfの'datetime'を位置として設定する
df.set_index('datetime')	dfの'datetime'表属性をインデックスに設定する
df.set_index('datetime')	dfの'datetime'を位置とする
df.set_index('datetime')	データフレームdfの'datetime'をインデックスに設定する
df.set_index('datetime')	表dfの'datetime'列をインデックスとする
df.set_index('datetime')	表データdfのカラム'datetime'を位置として設定する
df.set_index('datetime')	表dfの'datetime'をインデックスとして設定する
df.set_index('datetime')	データフレームdfの'datetime'をインデックスとして設定する
df.set_index('datetime')	表dfの'datetime'を位置に設定する
df.set_index('datetime')	表dfの'datetime'をインデックスに設定する
df.set_index('datetime')	表データdfの列'datetime'をインデックスとして設定する
df.set_index('datetime')	データフレームdfの'datetime'カラムをインデックスとする
df.set_index('datetime')	表データdfの'datetime'カラムを位置に設定する
df.set_index('datetime')	データフレームdfの'datetime'を位置に設定する
df.set_index('datetime')	dfの'datetime'表属性を位置とする
df.set_index('datetime')	dfの'datetime'をインデックスに設定する
df.set_index('datetime')	表データdfの'datetime'をインデックスに設定する
df.set_index('datetime')	dfの'datetime'をインデックスとして設定する
df.set_index('datetime')	表dfの'datetime'列を位置とする
df.set_index('datetime')	表データdfの列'datetime'をインデックスに設定する
df.set_index('datetime')	表データdfのカラム'datetime'を位置とする
df.set_index('datetime')	dfの'datetime'コラムを位置として設定する
df.set_index('datetime')	dfの'datetime'を位置に設定する
df.set_index('datetime')	表dfの'datetime'をインデックスとする
pd.to_datetime(df['date'], format='%Y-%m-%d')	表dfの'date'をdatetime型に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	表dfの'date'を年月日の形式に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	データフレームdfのカラム'date'をdatetime型に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	表データdfの'date'をdatetime型に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	表データdfの'date'を年月日の形式に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	表dfの列'date'を年月日の形式に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	dfの'date'を年月日の形式に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	データフレームdfの'date'を年月日の形式に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	dfの'date'を日付に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	表データdfの'date'を日付に変換する
pd.to_datetime(df['date'], format='%Y-%m-%d')	データフレームdfの'date'カラムを日付に変換する
df['temperature'].diff(periods=1)	表データdfの'temperature'内の前後の行の差分を算出
df['temperature'].diff(periods=1)	dfの'temperature'列の前後の行の差分を算出
df['temperature'].diff(periods=1)	表dfの表属性'temperature'中の前後の行の差分を計算
df['temperature'].diff(periods=1)	データフレームdfの'temperature'列の前後の行の差分を算出
df['temperature'].diff(periods=1)	データフレームdfの'temperature'内の前後の行の差分を算出
df['temperature'].diff(periods=1)	表データdfの'temperature'中の前後の行の差分を計算
df['temperature'].diff(periods=1)	表dfの'temperature'列内の前後の行の差分を計算
df['temperature'].diff(periods=1)	dfの'temperature'中の前後の行の差分を算出
df['temperature'].diff(periods=1)	dfの'temperature'列内の前後の行の差分を算出
df['temperature'].diff(periods=1)	データフレームdfの'temperature'コラム内の前後の行の差分を算出
df['temperature'].diff(periods=1)	表dfの'temperature'中の前後の行の差分を計算
df['temperature'].diff(periods=1)	dfの'temperature'の前後の行の差分を算出
df['temperature'].diff(periods=1)	データフレームdfのカラム'temperature'内の前後の行の差分を算出
df['temperature'].diff(periods=1)	データフレームdfの'temperature'中の前後の行の差分を計算
df['temperature'].diff(periods=1)	dfの'temperature'中の前後の行の差分を計算
df['temperature'].diff(periods=1)	dfのコラム'temperature'内の前後の行の差分を計算
df['temperature'].diff(periods=1)	データフレームdfの列'temperature'中の前後の行の差分を計算
df['temperature'].diff(periods=1)	データフレームdfの'temperature'中の前後の行の差分を算出
df['temperature'].diff(periods=1)	表dfの'temperature'中の前後の行の差分を算出
df['temperature'].diff(periods=1)	表データdfの列'temperature'中の前後の行の差分を算出
df['temperature'].diff(periods=1)	表データdfの'temperature'カラム内の前後の行の差分を計算
df['temperature'].diff(periods=1)	表データdfの表属性'temperature'内の前後の行の差分を算出
df.corr()	データフレームdfの相関係数@取得
df.corr()	dfの相関係数@取得
df.corr()	表データdfの相関@取得
df.corr()	表dfの相関@取得
df.corr()	dfの相関@取得
df.corr()	表dfの相関係数@取得
df.corr()	表データdfの相関係数@取得
df.corr()	dfの相関
df.corr()	表dfの相関
df.corr()	データフレームdfの相関
df.corr()	データフレームdfの相関係数
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と'sales'コラムの相関@取得
df[['kcal', 'sales']].corr()	表dfの'kcal'と'sales'列の相関係数@取得
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'の相関@取得
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	dfの'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	dfの列'kcal'と'sales'列の相関係数@取得
df[['kcal', 'sales']].corr()	データフレームdfの列'kcal'と'sales'列の相関@取得
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	データフレームdfのカラム'kcal'とカラム'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表dfの表属性'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表dfの'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	dfの表属性'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表データdfの表属性'kcal'と表属性'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表データdfの'kcal'表属性と'sales'の相関@取得
df[['kcal', 'sales']].corr()	表データdfの'kcal'列と'sales'の相関@取得
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と'sales'コラムの相関係数@取得
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と'sales'の相関@取得
df[['kcal', 'sales']].corr()	表dfの'kcal'カラムと'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表dfのコラム'kcal'と'sales'の相関@取得
df[['kcal', 'sales']].corr()	表dfの'kcal'コラムと'sales'の相関@取得
df[['kcal', 'sales']].corr()	dfの列'kcal'と'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表データdfの'kcal'コラムと'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'カラムと'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表データdfのコラム'kcal'と'sales'の相関@取得
df[['kcal', 'sales']].corr()	dfの'kcal'コラムと'sales'コラムの相関係数@取得
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'表属性の相関@取得
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'表属性と表属性'sales'の相関係数@取得
df[['kcal', 'sales']].corr()	表データdfのコラム'kcal'と'sales'コラムの相関係数
df[['kcal', 'sales']].corr()	表dfの表属性'kcal'と'sales'表属性の相関
df[['kcal', 'sales']].corr()	表dfの'kcal'とコラム'sales'の相関係数
df[['kcal', 'sales']].corr()	表dfの'kcal'とカラム'sales'の相関係数
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と'sales'の相関係数
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'の相関係数
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'カラムの相関係数
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と列'sales'の相関係数
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'の相関
df[['kcal', 'sales']].corr()	表データdfの'kcal'と'sales'コラムの相関係数
df[['kcal', 'sales']].corr()	表dfの'kcal'と'sales'表属性の相関
df[['kcal', 'sales']].corr()	dfの'kcal'と列'sales'の相関
df[['kcal', 'sales']].corr()	表dfの'kcal'と'sales'の相関
df[['kcal', 'sales']].corr()	データフレームdfのコラム'kcal'とコラム'sales'の相関係数
df[['kcal', 'sales']].corr()	dfの'kcal'列と'sales'列の相関
df[['kcal', 'sales']].corr()	dfの'kcal'と'sales'の相関係数
df[['kcal', 'sales']].corr()	データフレームdfの'kcal'と'sales'カラムの相関
df[['kcal', 'sales']].corr()	表データdfのカラム'kcal'とカラム'sales'の相関係数
df.T	表dfの行と列を入れ替える
df.T	データフレームdfの行と列を入れ替える
df.T	dfの行と列を入れ替える
df[df['city'] == 'Tokyo']	表dfの'city'が'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	表dfの表属性'city'が'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	dfの'city'が'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	データフレームdfの'city'カラムが'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	dfの'city'列が'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	データフレームdfのコラム'city'が'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	データフレームdfの'city'コラムが'Tokyo'のデータを抽出する
df[df['city'] == 'Tokyo']	データフレームdfの'city'が'Tokyo'のデータを抽出する
df[df['year'] > 1990]	データフレームdfの'year'が1990より多いデータを抽出する
df[df['year'] > 1990]	データフレームdfの'year'コラムが1990より多いデータを抽出する
df[df['year'] > 1990]	表データdfの'year'が1990より多いデータを抽出する
df[df['year'] > 1990]	dfの'year'が1990より多いデータを抽出する
df[df['year'] > 1990]	データフレームdfの'year'が1990より大きいデータを抽出する
df[df['year'] > 1990]	表dfの'year'コラムが1990より大きいデータを抽出する
df[df['year'] > 1990]	表dfの'year'が1990より多いデータを抽出する
df[df['year'] > 1990]	dfの列'year'が1990より多いデータを抽出する
df[df['year'] > 1990]	表dfの'year'が1990より大きいデータを抽出する
df[df['year'] > 1990]	表データdfの表属性'year'が1990より大きいデータを抽出する
df[df['year'] > 1990]	表データdfの'year'表属性が1990より大きいデータを抽出する
df[df['year'] > 1990]	dfのコラム'year'が1990より大きいデータを抽出する
df[df['year'] > 1990]	dfの'year'が1990より大きいデータを抽出する
df[df['year'] >= 1990]	表dfの'year'が1990以上のデータを抽出する
df[df['year'] >= 1990]	表データdfの'year'が1990以上のデータを抽出する
df[df['year'] >= 1990]	dfの'year'が1990以上のデータを抽出する
df[df['year'] >= 1990]	表dfの'year'コラムが1990以上のデータを抽出する
df[df['year'] >= 1990]	データフレームdfの'year'が1990以上のデータを抽出する
df[df['year'] >= 1990]	dfのコラム'year'が1990以上のデータを抽出する
df[df['year'] >= 1990]	表データdfの列'year'が1990以上のデータを抽出する
df[df['year'] < 1990]	表dfの'year'列が1990より少ないデータを抽出する
df[df['year'] < 1990]	データフレームdfの'year'表属性が1990より少ないデータを抽出する
df[df['year'] < 1990]	表データdfの'year'コラムが1990より小さいデータを抽出する
df[df['year'] < 1990]	データフレームdfの'year'が1990より少ないデータを抽出する
df[df['year'] < 1990]	dfの'year'列が1990より少ないデータを抽出する
df[df['year'] < 1990]	表データdfの'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	データフレームdfの'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	表dfの'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	表データdfの'year'が1990より少ないデータを抽出する
df[df['year'] < 1990]	dfの'year'表属性が1990より小さいデータを抽出する
df[df['year'] < 1990]	表データdfの表属性'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	表データdfの'year'列が1990より小さいデータを抽出する
df[df['year'] < 1990]	dfの'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	データフレームdfの列'year'が1990より少ないデータを抽出する
df[df['year'] < 1990]	表データdfのカラム'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	表データdfの'year'コラムが1990より少ないデータを抽出する
df[df['year'] < 1990]	dfのカラム'year'が1990より小さいデータを抽出する
df[df['year'] < 1990]	dfの'year'が1990より少ないデータを抽出する
df[df['year'] < 1990]	表dfの'year'が1990より少ないデータを抽出する
df[df['year'] <= 1990]	表データdfの'year'コラムが1990以下データを抽出する
df[df['year'] <= 1990]	表dfのカラム'year'が1990以下データを抽出する
df[df['year'] <= 1990]	データフレームdfの'year'が1990以下データを抽出する
df[df['year'] <= 1990]	表dfの'year'が1990以下データを抽出する
df[df['year'] <= 1990]	データフレームdfの列'year'が1990以下データを抽出する
df[df['year'] <= 1990]	データフレームdfの'year'列が1990以下データを抽出する
df[df['year'] <= 1990]	dfの'year'が1990以下データを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表dfの'city'カラムが'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表データdfの'city'が'Tokyo'か'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表dfの'city'が'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	データフレームdfの'city'が'Tokyo'か'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表dfの'city'が'Tokyo'もしくは'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表データdfの'city'表属性が'Tokyo'か'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表データdfの'city'が'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表dfの'city'が'Tokyo'か'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	データフレームdfのコラム'city'が'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	dfの'city'が'Tokyo'か'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表dfのコラム'city'が'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表dfの'city'表属性が'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表データdfの'city'が'Tokyo'もしくは'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	dfの'city'列が'Tokyo'もしくは'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	表データdfのカラム'city'が'Tokyo'または'Osaka'のデータを抽出する
df[df['city'].isin(['Tokyo', 'Osaka'])]	dfの'city'が'Tokyo'もしくは'Osaka'のデータを抽出する
df.drop(['b'])	dfのインデックス'b'を消す
df.drop(['b'])	表データdfの位置'b'を落とす
df.drop(['b'])	データフレームdfの'b'を削除する
df.drop(['b'])	表dfの'b'をドロップする
df.drop(['b'])	表dfの'b'を削除する
df.drop(['b'])	データフレームdfの'b'位置を落とす
df.drop(['b'])	表データdfの'b'を落とす
df.drop(['b'])	dfの位置'b'を消す
df.drop(['b'])	データフレームdfの'b'を落とす
df.drop(['b'])	表データdfの'b'位置をドロップする
df.drop(['b'])	dfの'b'を削除する
df.drop(['b'])	表dfの'b'を落とす
df.drop(['b'])	dfの'b'をドロップする
df.drop(['b'])	dfの'b'を落とす
df.drop(['b'])	表dfのインデックス'b'を削除する
df.drop('price', axis=1)	表dfの'price'コラムを削除する
df.drop('price', axis=1)	dfのカラム'price'を消す
df.drop('price', axis=1)	表データdfのコラム'price'をドロップする
df.drop('price', axis=1)	データフレームdfの表属性'price'をドロップする
df.drop('price', axis=1)	表データdfの'price'表属性をドロップする
df.drop('price', axis=1)	dfの'price'カラムを削除する
df.drop('price', axis=1)	データフレームdfの'price'コラムを削除する
df.drop('price', axis=1)	表データdfの'price'列をドロップする
df.drop('price', axis=1)	データフレームdfの'price'コラムをドロップする
df.drop('price', axis=1)	データフレームdfの'price'を落とす
df.drop('price', axis=1)	表dfの'price'カラムを削除する
df.drop('price', axis=1)	データフレームdfのカラム'price'を削除する
df.drop('price', axis=1)	表dfの'price'を削除する
df.drop('price', axis=1)	表データdfの'price'を落とす
df.drop('price', axis=1)	表dfのカラム'price'を削除する
df.drop('price', axis=1)	dfの'price'を落とす
df.drop('price', axis=1)	表dfの'price'をドロップする
df.drop('price', axis=1)	dfの'price'を削除する
df.drop('price', axis=1)	データフレームdfのコラム'price'を落とす
df.drop('price', axis=1)	dfの'price'を消す
df.drop('price', axis=1)	表データdfの'price'を削除する
df.drop('price', axis=1)	データフレームdfの'price'列を削除する
df.drop('price', axis=1)	表dfの'price'を消す
df.drop('price', axis=1)	dfの表属性'price'を削除する
df.drop('price', axis=1)	データフレームdfの'price'を消す
df.drop('price', axis=1)	dfのカラム'price'を落とす
df.drop('price', axis=1)	データフレームdfの'price'をドロップする
df.drop('price', axis=1)	dfの'price'をドロップする
let_self = df.drop('price', axis=1)	表dfの'price'コラムを削除して、let_selfとする
let_self = df.drop('price', axis=1)	dfのカラム'price'を消し、let_selfとする
let_self = df.drop('price', axis=1)	表データdfのコラム'price'をドロップして、let_selfにする
let_self = df.drop('price', axis=1)	データフレームdfの表属性'price'をドロップして、let_selfとする
let_self = df.drop('price', axis=1)	表データdfの'price'表属性をドロップして、let_selfにする
let_self = df.drop('price', axis=1)	dfの'price'カラムを削除して、let_selfにする
let_self = df.drop('price', axis=1)	データフレームdfの'price'コラムを削除し、let_selfとする
let_self = df.drop('price', axis=1)	表データdfの'price'列をドロップして、let_selfに代入する
let_self = df.drop('price', axis=1)	データフレームdfの'price'コラムをドロップし、let_selfとする
let_self = df.drop('price', axis=1)	データフレームdfの'price'を落とし、let_selfにする
let_self = df.drop('price', axis=1)	表dfの'price'カラムを削除して、let_selfにする
let_self = df.drop('price', axis=1)	データフレームdfのカラム'price'を削除し、let_selfとする
let_self = df.drop('price', axis=1)	表dfの'price'を削除して、let_selfにする
let_self = df.drop('price', axis=1)	表データdfの'price'を落とし、let_selfとする
let_self = df.drop('price', axis=1)	表dfのカラム'price'を削除して、let_selfとする
let_self = df.drop('price', axis=1)	dfの'price'を落として、let_selfとする
let_self = df.drop('price', axis=1)	表dfの'price'をドロップし、let_selfとする
let_self = df.drop('price', axis=1)	dfの'price'を削除して、let_selfにする
let_self = df.drop('price', axis=1)	データフレームdfのコラム'price'を落とし、let_selfにする
let_self = df.drop('price', axis=1)	dfの'price'を消し、let_selfにする
let_self = df.drop('price', axis=1)	表データdfの'price'を削除して、let_selfにする
let_self = df.drop('price', axis=1)	データフレームdfの'price'列を削除し、let_selfとする
let_self = df.drop('price', axis=1)	表dfの'price'を消し、let_selfとする
let_self = df.drop('price', axis=1)	dfの表属性'price'を削除し、let_selfに代入する
let_self = df.drop('price', axis=1)	データフレームdfの'price'を消し、let_selfとする
let_self = df.drop('price', axis=1)	dfのカラム'price'を落とし、let_selfとする
let_self = df.drop('price', axis=1)	データフレームdfの'price'をドロップして、let_selfとする
let_self = df.drop('price', axis=1)	dfの'price'をドロップして、let_selfとする
df = df.drop('price', axis=1)	表dfの'price'コラムを削除して、再代入する
df = df.drop('price', axis=1)	dfのカラム'price'を消して、置き換える
df = df.drop('price', axis=1)	表データdfのコラム'price'をドロップして、再代入する
df = df.drop('price', axis=1)	データフレームdfの表属性'price'をドロップし、再代入する
df = df.drop('price', axis=1)	表データdfの'price'表属性をドロップして、再代入する
df = df.drop('price', axis=1)	dfの'price'カラムを削除して、置き換える
df = df.drop('price', axis=1)	データフレームdfの'price'コラムを削除して、置き換える
df = df.drop('price', axis=1)	表データdfの'price'列をドロップし、置き換える
df = df.drop('price', axis=1)	データフレームdfの'price'コラムをドロップし、置き換える
df = df.drop('price', axis=1)	データフレームdfの'price'を落とし、再代入する
df = df.drop('price', axis=1)	表dfの'price'カラムを削除して、再代入する
df = df.drop('price', axis=1)	データフレームdfのカラム'price'を削除して、再代入する
df = df.drop('price', axis=1)	表dfの'price'を削除し、置き換える
df = df.drop('price', axis=1)	表データdfの'price'を落として、再代入する
df = df.drop('price', axis=1)	表dfのカラム'price'を削除して、置き換える
df = df.drop('price', axis=1)	dfの'price'を落とし、置き換える
df = df.drop('price', axis=1)	表dfの'price'をドロップして、再代入する
df = df.drop('price', axis=1)	dfの'price'を削除し、置き換える
df = df.drop('price', axis=1)	データフレームdfのコラム'price'を落とし、再代入する
df = df.drop('price', axis=1)	dfの'price'を消し、再代入する
df = df.drop('price', axis=1)	表データdfの'price'を削除し、再代入する
df = df.drop('price', axis=1)	データフレームdfの'price'列を削除し、再代入する
df = df.drop('price', axis=1)	表dfの'price'を消して、置き換える
df = df.drop('price', axis=1)	dfの表属性'price'を削除して、再代入する
df = df.drop('price', axis=1)	データフレームdfの'price'を消し、再代入する
df = df.drop('price', axis=1)	dfのカラム'price'を落として、置き換える
df = df.drop('price', axis=1)	データフレームdfの'price'をドロップし、置き換える
df = df.drop('price', axis=1)	dfの'price'をドロップして、置き換える
df.drop('price', axis=1, inplace=True)	表dfの'price'コラムを削除して、インプレースする
df.drop('price', axis=1, inplace=True)	dfのカラム'price'を消して、インプレースする
df.drop('price', axis=1, inplace=True)	表データdfのコラム'price'をドロップして、インプレースする
df.drop('price', axis=1, inplace=True)	データフレームdfの表属性'price'をドロップして、置き換える
df.drop('price', axis=1, inplace=True)	表データdfの'price'表属性をドロップして、インプレースする
df.drop('price', axis=1, inplace=True)	dfの'price'カラムを削除し、置き換える
df.drop('price', axis=1, inplace=True)	データフレームdfの'price'コラムを削除して、置き換える
df.drop('price', axis=1, inplace=True)	表データdfの'price'列をドロップし、インプレースする
df.drop('price', axis=1, inplace=True)	データフレームdfの'price'コラムをドロップして、インプレースする
df.drop('price', axis=1, inplace=True)	データフレームdfの'price'を落として、置き換える
df.drop('price', axis=1, inplace=True)	表dfの'price'カラムを削除し、インプレースする
df.drop('price', axis=1, inplace=True)	データフレームdfのカラム'price'を削除して、置き換える
df.drop('price', axis=1, inplace=True)	表dfの'price'を削除し、インプレースする
df.drop('price', axis=1, inplace=True)	表データdfの'price'を落とし、置き換える
df.drop('price', axis=1, inplace=True)	表dfのカラム'price'を削除して、インプレースする
df.drop('price', axis=1, inplace=True)	dfの'price'を落として、インプレースする
df.drop('price', axis=1, inplace=True)	表dfの'price'をドロップし、置き換える
df.drop('price', axis=1, inplace=True)	dfの'price'を削除して、置き換える
df.drop('price', axis=1, inplace=True)	データフレームdfのコラム'price'を落とし、置き換える
df.drop('price', axis=1, inplace=True)	dfの'price'を消し、インプレースする
df.drop('price', axis=1, inplace=True)	表データdfの'price'を削除して、インプレースする
df.drop('price', axis=1, inplace=True)	データフレームdfの'price'列を削除して、インプレースする
df.drop('price', axis=1, inplace=True)	表dfの'price'を消して、インプレースする
df.drop('price', axis=1, inplace=True)	dfの表属性'price'を削除して、インプレースする
df.drop('price', axis=1, inplace=True)	データフレームdfの'price'を消し、置き換える
df.drop('price', axis=1, inplace=True)	dfのカラム'price'を落とし、置き換える
df.drop('price', axis=1, inplace=True)	データフレームdfの'price'をドロップし、置き換える
df.drop('price', axis=1, inplace=True)	dfの'price'をドロップして、置き換える
df.drop(['price', 'year'], axis=1)	表dfの'price'と'year'を落とす
df.drop(['price', 'year'], axis=1)	dfのカラム'price'と'year'を落とす
df.drop(['price', 'year'], axis=1)	dfの'price'列と'year'列をドロップする
df.drop(['price', 'year'], axis=1)	表データdfのコラム'price'と'year'を削除する
df.drop(['price', 'year'], axis=1)	表dfの'price'とコラム'year'を削除する
df.drop(['price', 'year'], axis=1)	表dfの'price'コラムと'year'を消す
df.drop(['price', 'year'], axis=1)	データフレームdfの表属性'price'と'year'を落とす
df.drop(['price', 'year'], axis=1)	データフレームdfのコラム'price'とコラム'year'を削除する
df.drop(['price', 'year'], axis=1)	表データdfの'price'列と列'year'をドロップする
df.drop(['price', 'year'], axis=1)	dfの'price'と'year'を落とす
df.drop(['price', 'year'], axis=1)	表データdfの'price'表属性と'year'を消す
df.drop(['price', 'year'], axis=1)	データフレームdfの列'price'と'year'列を消す
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'と'year'表属性を落とす
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'と'year'を落とす
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'表属性と'year'を消す
df.drop(['price', 'year'], axis=1)	表データdfの列'price'と'year'列を落とす
df.drop(['price', 'year'], axis=1)	dfの'price'コラムと'year'をドロップする
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'と表属性'year'を削除する
df.drop(['price', 'year'], axis=1)	dfの'price'と'year'表属性を落とす
df.drop(['price', 'year'], axis=1)	表dfの'price'と'year'を削除する
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'表属性と表属性'year'を落とす
df.drop(['price', 'year'], axis=1)	dfの'price'とカラム'year'を消す
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'と'year'を消す
df.drop(['price', 'year'], axis=1)	表データdfの'price'表属性と'year'を削除する
df.drop(['price', 'year'], axis=1)	表データdfの'price'と'year'を削除する
df.drop(['price', 'year'], axis=1)	表データdfの'price'と'year'をドロップする
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'コラムと'year'コラムをドロップする
df.drop(['price', 'year'], axis=1)	表データdfの'price'と表属性'year'を消す
df.drop(['price', 'year'], axis=1)	データフレームdfの'price'と'year'を削除する
df.drop(['price', 'year'], axis=1)	データフレームdfのカラム'price'と'year'を消す
df.drop(['price', 'year'], axis=1)	dfの'price'とカラム'year'を落とす
df.drop(['price', 'year'], axis=1)	dfの'price'列と列'year'を落とす
df.drop(['price', 'year'], axis=1)	データフレームdfのカラム'price'とカラム'year'を削除する
df.drop(['price', 'year'], axis=1)	表データdfの列'price'と列'year'を落とす
df.drop(['price', 'year'], axis=1)	表データdfのカラム'price'と'year'をドロップする
df.dropna()	データフレームdfのNaNがある行を落とす
df.dropna()	表データdfの欠損値がある行を消す
df.dropna()	表dfの欠損値がある行を消す
df.dropna()	データフレームdfのNaNが存在する行を落とす
df.dropna()	表dfの欠損値がある行を削除する
df.dropna()	表dfの欠損がある行を削除する
df.dropna()	データフレームdfのNaNが存在する行を消す
df.dropna()	dfのNaNがある行をドロップする
df.dropna()	データフレームdfのNaNが存在する行をドロップする
df.dropna()	表データdfの欠損値が存在する行を消す
df.dropna()	データフレームdfの欠損値がある行を消す
df.dropna()	表dfの欠損がある行を落とす
df.dropna()	表データdfの欠損がある行を削除する
df.dropna()	データフレームdfの欠損が存在する行を落とす
df.dropna()	dfの欠損がある行を削除する
df.dropna()	データフレームdfの欠損値が存在する行をドロップする
df.dropna()	dfのNaNが存在する行を削除する
df.dropna()	データフレームdfの欠損がある行を落とす
df.dropna()	dfのNaNが存在する行をドロップする
df.dropna()	dfの欠損値が存在する行を削除する
df.dropna()	表dfの欠損値がある行をドロップする
df.dropna()	表データdfの欠損がある行を落とす
df.dropna()	表dfの欠損値が存在する行を消す
df.dropna()	dfのNaNがある行を消す
df.dropna()	データフレームdfのNaNが存在する行を削除する
df.dropna()	データフレームdfの欠損が存在する行をドロップする
df.dropna()	表dfの欠損が存在する行を落とす
df.dropna()	dfのNaNがある行を削除する
df.dropna()	表dfのNaNが存在する行を削除する
df.dropna()	表dfの欠損を落とす
df.dropna()	dfの欠損を含む行を落とす
df.dropna()	dfの欠損値をドロップする
df.dropna()	表dfのNaNを含む行をドロップする
df.dropna()	表dfの欠損を含む行を消す
df.dropna()	dfの欠損値を落とす
df.dropna()	データフレームdfの欠損を消す
df.dropna()	表データdfのNaNをドロップする
df.dropna()	表dfの欠損を含む行を削除する
df.dropna()	dfの欠損を含む行をドロップする
df.dropna()	データフレームdfのNaNを含む行を消す
df.dropna()	dfの欠損を削除する
df.dropna()	データフレームdfの欠損をドロップする
df.dropna()	データフレームdfの欠損値を削除する
df.dropna()	表データdfの欠損を含む行を削除する
df.dropna()	dfの欠損を消す
df.dropna()	データフレームdfのNaNを消す
df.dropna()	データフレームdfの欠損を削除する
df.dropna()	dfの欠損をドロップする
df.dropna()	表dfの欠損値を含む行を落とす
df.dropna()	表データdfのNaNを含む行を削除する
df.dropna()	dfのNaNを削除する
df.dropna()	表dfの欠損を消す
df.dropna()	表データdfのNaNを落とす
df.dropna()	表dfのNaNを落とす
df.dropna()	dfのNaNを含む行を消す
df.dropna()	表dfの欠損値をドロップする
df.dropna()	表dfの欠損値を含む行を消す
df.dropna()	表dfのNaNを含む行を消す
df.dropna()	表データdfの欠損を含む行を落とす
df.dropna()	データフレームdfの欠損値を消す
df.dropna()	dfの欠損値を含む行を落とす
df.dropna()	dfの欠損値を消す
df.dropna()	dfの欠損値を含む行を消す
df.dropna()	データフレームdfの欠損を含む行をドロップする
df.dropna()	表dfのNaNを削除する
df.dropna()	dfのNaNをドロップする
df.fillna(symbol)	データフレームdf中の欠損をsymbolに置換する
df.fillna(symbol)	表df内のNaNをsymbolに置き換える
df.fillna(symbol)	df中の欠損値をsymbolに置き換える
df.fillna(symbol)	dfのNaNをsymbolに置き換える
df.fillna(symbol)	表df中の欠損値をsymbolに置換する
df.fillna(symbol)	df中のNaNをsymbolに置き換える
df.fillna(symbol)	表データdf内の欠損値をsymbolに置き換える
df.fillna(symbol)	データフレームdf中のNaNをsymbolとする
df.fillna(symbol)	表df内の欠損をsymbolに置換する
df.fillna(symbol)	df内の欠損をsymbolに置換する
df.fillna(symbol)	df内の欠損値をsymbolに置き換える
df.fillna(symbol)	表データdf内の欠損をsymbolに置換する
df.fillna(symbol)	表データdf内のNaNをsymbolとする
df.fillna(symbol)	データフレームdf中の欠損をsymbolに置き換える
df.fillna(symbol)	表df中の欠損をsymbolとする
df.fillna(symbol)	表データdfの欠損値をsymbolに置換する
df.fillna(symbol)	表df中のNaNをsymbolに置換する
df.fillna(symbol)	表データdf中のNaNをsymbolとする
df.fillna(symbol)	df内のNaNをsymbolに置換する
df.fillna(symbol)	データフレームdf内の欠損値をsymbolに置換する
df.fillna(symbol)	df内の欠損値をsymbolに置換する
df.fillna(symbol)	データフレームdf中のNaNをsymbolに置換する
df.fillna(symbol)	表データdfの欠損をsymbolに置換する
df.fillna(symbol)	表df内の欠損値をsymbolに置き換える
df.fillna(symbol)	df内の欠損値をsymbolとする
df.fillna(symbol)	表データdfの欠損をsymbolに置き換える
df.fillna(symbol)	表dfのNaNをsymbolに置き換える
df.fillna(symbol)	df内の欠損をsymbolとする
df.fillna(symbol)	データフレームdf内のNaNをsymbolに置換する
df.fillna(symbol)	データフレームdfの欠損をsymbolに置換する
df.fillna(method='ffill')	df内の欠損値を直前の行の値で埋める
df.fillna(method='ffill')	表データdf中の欠損値を直前の行の値で補う
df.fillna(method='ffill')	データフレームdf中の欠損を直前の行の値で埋める
df.fillna(method='ffill')	表df中の欠損を直前の行の値で埋める
df.fillna(method='ffill')	データフレームdf中のNaNを直前の行の値で補う
df.fillna(method='ffill')	表df内の欠損値を直前の行の値で補う
df.fillna(method='ffill')	表df内のNaNを直前の行の値で埋める
df.fillna(method='ffill')	データフレームdfのNaNを直前の行の値で補う
df.fillna(method='ffill')	表データdfの欠損を直前の行の値で埋める
df.fillna(method='ffill')	データフレームdf内の欠損値を直前の行の値で補う
df.fillna(method='ffill')	dfのNaNを直前の行の値で補う
df.fillna(method='ffill')	df内の欠損を直前の行の値で補う
df.fillna(method='ffill')	表データdf中のNaNを直前の行の値で補う
df.fillna(method='ffill')	dfの欠損値を直前の行の値で埋める
df.fillna(method='ffill')	df中の欠損値を直前の行の値で埋める
df.fillna(method='ffill')	データフレームdfのNaNを直前の行の値で埋める
df.fillna(method='ffill')	表データdf内のNaNを直前の行の値で埋める
df.fillna(method='ffill')	データフレームdf内のNaNを直前の行の値で埋める
df.fillna(method='ffill')	データフレームdf中の欠損値を直前の行の値で埋める
df.fillna(method='ffill')	df内の欠損値を直前の行の値で補う
df.fillna(method='ffill')	df中の欠損を直前の行の値で補う
df.fillna(method='ffill')	表dfのNaNを直前の行の値で補う
df.fillna(method='ffill')	表データdfの欠損を直前の行の値で補う
df.fillna(method='ffill')	表df中の欠損値を直前の行の値で埋める
df.fillna(method='ffill')	表df中のNaNを直前の行の値で埋める
df.fillna(method='ffill')	表データdf中の欠損値を直前の行の値で埋める
df.fillna(df.mean())	df内の欠損値を表データdfの平均値で補う
df.fillna(df.mean())	表df内のNaNをdfの平均値で埋める
df.fillna(df.mean())	表df中のNaNをdf表の平均値で補う
df.fillna(df.mean())	df中の欠損をdfの平均値で補う
df.fillna(df.mean())	データフレームdf中の欠損値をdfの平均値で埋める
df.fillna(df.mean())	dfのNaNをdfデータフレームの平均値で埋める
df.fillna(df.mean())	表df中のNaNをデータフレームdfの平均値で埋める
df.fillna(df.mean())	表データdfのNaNをdf表データの平均値で埋める
df.fillna(df.mean())	表データdfの欠損値をdfの平均値で埋める
df.fillna(df.mean())	表データdf中のNaNをdfの平均値で補う
df.fillna(df.mean())	表df内のNaNを表dfの平均値で補う
df.fillna(df.mean())	表df内の欠損値をdfの平均値で補う
df.fillna(df.mean())	表データdf中の欠損値をdfの平均値で補う
df.fillna(df.mean())	データフレームdf中の欠損をdf表データの平均値で埋める
df.fillna(df.mean())	表データdf中の欠損値を表データdfの平均値で埋める
df.fillna(df.mean())	表df内の欠損値をdfの平均値で埋める
df.fillna(df.mean())	表データdf中のNaNを表dfの平均値で補う
df.fillna(df.mean())	df内の欠損をdf表の平均値で埋める
df.fillna(df.mean())	表df中のNaNをdfの平均値で補う
df.fillna(df.mean())	df内の欠損をdf表データの平均値で埋める
df.fillna(df.mean())	表データdf内のNaNをdf表の平均値で埋める
df.fillna(df.mean())	表df内の欠損をdfの平均値で埋める
df.fillna(df.mean())	dfの欠損をdfの平均値で埋める
df.fillna(df.mean())	df内の欠損をdf表データの平均値で補う
df.fillna(df.mean())	データフレームdf内の欠損値をdfの平均値で補う
df.fillna(df.mean())	df中の欠損値をdf表の平均値で埋める
df.fillna(df.mean())	df中のNaNをdfの平均値で補う
df.fillna(df.mean())	表データdf中の欠損を表dfの平均値で埋める
df.fillna(df.mean())	dfのNaNをdf表の平均値で補う
df.fillna(df.mean())	表df内の欠損を表dfの平均値で埋める
df.fillna(df.mean())	データフレームdf中のNaNをdfの平均値で補う
df.fillna(df.mean())	df内の欠損値をdf表の平均値で埋める
df.fillna(df.mean())	表df内の欠損値をdf表の平均値で補う
df.fillna(df.mean())	データフレームdf内の欠損をdfデータフレームの平均値で補う
df.fillna(df.mean())	表dfのNaNをdf表の平均値で埋める
df.fillna(df.mean())	データフレームdf内の欠損をdf表の平均値で埋める
df.fillna(df.mean())	データフレームdf中のNaNをdf表の平均値で埋める
df.fillna(df.mean())	表df中の欠損値をデータフレームdfの平均値で埋める
df.fillna(df.mean())	df内のNaNをdfの平均値で補う
df.fillna(df.mean())	表データdf内のNaNをdfの平均値で埋める
df.fillna(df.mean())	表df内の欠損を表dfの平均値で補う
df.fillna(df.mean())	表データdf内の欠損値をdf表データの平均値で補う
df.fillna(df.mean())	データフレームdf内のNaNを表データdfの平均値で埋める
df.fillna(df.mean())	データフレームdf内のNaNをdfの平均値で埋める
df.fillna(df.mean())	表データdf中のNaNをdfデータフレームの平均値で補う
df.fillna(df.mean())	表データdf内の欠損値を表dfの平均値で補う
df.fillna(df.mean())	表データdfの欠損をdf表データの平均値で埋める
df.fillna(df.mean())	表データdfのNaNをdfの平均値で補う
df.fillna(df.mean())	表dfのNaNをdfデータフレームの平均値で埋める
df.fillna(df.mean())	表df中のNaNをdfの平均値で埋める
df.fillna(df.mean())	表dfの欠損値をdfの平均値で補う
df.fillna(df.mean())	表df中の欠損をdf表データの平均値で補う
df.fillna(df.mean())	df中のNaNをdfデータフレームの平均値で補う
df.fillna(df.mean())	df中の欠損をdfの平均値で埋める
df.fillna(df.mean())	データフレームdf内のNaNをdfの平均値で補う
df.fillna(df.mean())	df内の欠損をdfの平均値で補う
df.fillna(df.mean())	表データdf内の欠損をdfの平均値で埋める
df.fillna(df.mean())	dfの欠損値を表dfの平均値で補う
df.fillna(df.mean())	表df中の欠損値をdfの平均値で埋める
df.fillna(df.mean())	データフレームdf内の欠損値を表データdfの平均値で埋める
df.fillna(df.mean())	df内の欠損値をdfの平均値で補う
df.fillna(df.mean())	df内の欠損を表データdfの平均値で埋める
df.fillna(df.mean())	dfのNaNをdfの平均値で補う
df.fillna(df.mean())	データフレームdfのNaNをデータフレームdfの平均値で埋める
df.fillna(df.mean())	表df内の欠損をdf表の平均値で埋める
df.fillna(df.mean())	df内の欠損値をデータフレームdfの平均値で埋める
df.fillna(df.mean())	dfの欠損を表dfの平均値で埋める
df.fillna(df.mean())	表df中の欠損値を表dfの平均値で補う
df.fillna(df.mean())	df内の欠損をdfの平均値で埋める
df.replace('?', np.nan).dropna()	df中の'?'をNaNに置換し、NaNがある行をドロップする
df.replace('?', np.nan).dropna()	表df中の'?'を欠損値に置換し、欠損値がある行をドロップする
df.replace('?', np.nan).dropna()	df中の'?'を欠損値に置換し、欠損値がある行を落とす
df.replace('?', np.nan).dropna()	表df内の'?'を欠損に置換し、欠損がある行を落とす
df.replace('?', np.nan).dropna()	df中の'?'を欠損に置換し、欠損が存在する行を落とす
df.replace('?', np.nan).dropna()	表df中の'?'をNaNに置換し、NaNが存在する行を落とす
df.replace('?', np.nan).dropna()	df中の'?'を欠損値に置換し、欠損値が存在する行を消す
df.replace('?', np.nan).dropna()	表df中の'?'をNaNに置換し、NaNが存在する行をドロップする
df.replace('?', np.nan).dropna()	データフレームdf中の'?'を欠損に置換し、欠損が存在する行を削除する
df.replace('?', np.nan).dropna()	表データdf内の'?'を欠損値に置換し、欠損値がある行を消す
df.replace('?', np.nan).dropna()	表df内の'?'を欠損値に置換し、欠損値が存在する行を消す
df.replace('?', np.nan).dropna()	表データdf内の'?'を欠損に置換し、欠損がある行を消す
df.replace('?', np.nan).dropna()	表データdf内の'?'をNaNに置換し、NaNがある行を消す
df.replace('?', np.nan).dropna()	データフレームdf中の'?'をNaNに置換し、NaNがある行を消す
df.replace('?', np.nan).dropna()	表df内の'?'を欠損に置換し、欠損がある行を削除する
df.replace('?', np.nan).dropna()	df中の'?'を欠損値に置換し、欠損値がある行を削除する
df.replace('?', np.nan).dropna()	データフレームdfの'?'をNaNに置換し、NaNが存在する行を消す
df.replace('?', np.nan).dropna()	表df内の'?'を欠損値に置換し、欠損値がある行をドロップする
df.replace('?', np.nan).dropna()	表データdf中の'?'を欠損値に置換し、欠損値がある行をドロップする
df.replace('?', np.nan).dropna()	表df内の'?'を欠損値に置換し、欠損値がある行を消す
df.replace('?', np.nan).dropna()	df中の'?'を欠損に置換し、欠損がある行を削除する
df.replace('?', np.nan).dropna()	df内の'?'を欠損値に置換し、欠損値がある行をドロップする
df.replace('?', np.nan).dropna()	表df内の'?'を欠損に置換し、欠損がある行を消す
df.replace('?', np.nan).dropna()	表データdf中の'?'を欠損に置換し、欠損が存在する行をドロップする
df.replace('?', np.nan).dropna()	表df中の'?'を欠損値に置換し、欠損値が存在する行を消す
df.replace('?', np.nan).dropna()	表データdfの'?'をNaNに置換し、NaNがある行を落とす
df.replace('?', np.nan).dropna()	表dfの'?'を欠損値に置換し、欠損値がある行を落とす
df.replace('?', np.nan).dropna()	dfの'?'をNaNに置換し、NaNがある行をドロップする
df.replace('?', np.nan).dropna()	dfの'?'をNaNに置換し、NaNがある行を消す
df.replace('?', np.nan).dropna()	df内の'?'を欠損値に置換し、欠損値がある行を削除する
df.replace('?', np.nan).dropna()	df内の'?'を欠損値に置換し、欠損値が存在する行を落とす
df.replace('?', np.nan).dropna()	データフレームdf内の'?'をNaNに置換し、NaNがある行をドロップする
df.replace('?', np.nan).dropna()	表df内の'?'をNaNに置換し、NaNがある行をドロップする
df.replace('?', np.nan).dropna()	dfの'?'を欠損に置換し、欠損が存在する行を落とす
df.replace('?', np.nan).dropna()	表df中の'?'を欠損値に置換し、欠損値がある行を削除する
df.replace('?', np.nan).dropna()	表データdfの'?'を欠損に置換し、欠損がある行をドロップする
df.replace('?', np.nan).dropna()	データフレームdf内の'?'を欠損値に置換し、欠損値が存在する行を消す
df.replace('?', np.nan).dropna()	表df内の'?'を欠損値に置換し、欠損値が存在する行を落とす
df.replace('?', np.nan).dropna()	表データdf内の'?'をNaNに置換し、NaNが存在する行を落とす
df.replace('?', np.nan)	表df中に存在する'?'をNaNに置き換える
df.replace('?', np.nan)	表df中に存在する'?'を欠損とする
df.replace('?', np.nan)	df内にある'?'を欠損に置き換える
df.replace('?', np.nan)	表データdf中にある'?'を欠損値に置換する
df.replace('?', np.nan)	表df中に存在する'?'をNaNとする
df.replace('?', np.nan)	表df内にある'?'をNaNとする
df.replace('?', np.nan)	表dfに存在する'?'を欠損に置き換える
df.replace('?', np.nan)	dfにある'?'を欠損値に置き換える
df.replace('?', np.nan)	df中に存在する'?'をNaNとする
df.replace('?', np.nan)	表データdf内に存在する'?'を欠損に置き換える
df.replace('?', np.nan)	表データdf内に存在する'?'をNaNに置き換える
df.replace('?', np.nan)	データフレームdfに存在する'?'を欠損値に置き換える
df.replace('?', np.nan)	df内に存在する'?'をNaNに置き換える
df.replace('?', np.nan)	データフレームdf中に存在する'?'をNaNに置換する
df.replace('?', np.nan)	データフレームdf内にある'?'をNaNに置き換える
df.replace('?', np.nan)	データフレームdfに存在する'?'を欠損に置き換える
df.replace('?', np.nan)	表データdfに存在する'?'を欠損値に置換する
df.replace('?', np.nan)	表dfにある'?'をNaNとする
df.replace('?', np.nan)	表データdf内にある'?'を欠損値に置き換える
df.replace('?', np.nan)	表df中にある'?'を欠損値に置き換える
df.replace('?', np.nan)	df内にある'?'をNaNとする
df.replace('?', np.nan)	df中にある'?'を欠損とする
df.replace('?', np.nan)	表df中にある'?'を欠損値に置換する
df.replace('?', np.nan)	df中にある'?'を欠損値に置き換える
df.replace('?', np.nan)	表データdf中に存在する'?'を欠損値に置き換える
df.replace('?', np.nan)	dfに存在する'?'をNaNとする
df.replace('?', np.nan)	表データdf中にある'?'をNaNに置換する
df.replace('?', np.nan)	データフレームdf内にある'?'を欠損に置換する
df.replace('?', np.nan)	表df内にある'?'を欠損とする
df.replace('?', np.nan)	データフレームdf内に存在する'?'をNaNとする
df.replace('?', np.nan)	dfにある'?'を欠損値に置換する
df.replace('?', np.nan)	df中にある'?'をNaNとする
df.replace('?', np.nan)	表データdf中に存在する'?'をNaNに置換する
df.replace('?', np.nan)	df中にある'?'を欠損値に置換する
df.replace('?', np.nan)	表データdfにある'?'をNaNに置換する
df.replace('?', np.nan)	データフレームdf内に存在する'?'を欠損に置換する
df.replace('?', np.nan)	表dfに存在する'?'をNaNに置換する
df.replace('?', np.nan)	データフレームdf内にある'?'をNaNとする
df.replace('?', np.nan)	データフレームdfに存在する'?'を欠損に置換する
df.replace('?', np.nan)	表df内にある'?'をNaNに置き換える
df.replace('?', np.nan)	表データdf中にある'?'を欠損値に置き換える
df.replace('?', np.nan)	表データdf内にある'?'を欠損に置き換える
df.replace('?', np.nan)	表dfにある'?'をNaNに置換する
df.replace('?', np.nan)	データフレームdf中にある'?'をNaNとする
df.replace('?', np.nan)	表データdfに存在する'?'を欠損に置き換える
df.replace('?', np.nan)	dfにある'?'を欠損とする
df.replace('?', np.nan)	表データdfに存在する'?'を欠損値に置き換える
df.replace('?', np.nan)	df中にある'?'を欠損に置換する
df.replace('?', np.nan)	表データdfにある'?'をNaNとする
df.replace('?', np.nan)	dfにある'?'をNaNに置き換える
df.replace('?', np.nan)	df内に存在する'?'を欠損とする
df.replace('?', np.nan)	表dfにある'?'を欠損とする
df.replace('?', np.nan)	データフレームdf内に存在する'?'を欠損に置き換える
df.replace('?', np.nan)	データフレームdfにある'?'をNaNに置き換える
df.replace('?', np.nan)	表df内に存在する'?'をNaNに置き換える
df.replace('?', np.nan)	dfにある'?'をNaNとする
df.replace('?', np.nan)	データフレームdf内にある'?'をNaNに置換する
df.replace('?', np.nan)	データフレームdf中にある'?'を欠損値に置き換える
df.replace('?', np.nan)	表データdf内にある'?'を欠損とする
df.replace('?', np.nan)	表dfにある'?'を欠損値とする
df.replace('?', np.nan)	df中に存在する'?'をNaNに置換する
df.replace('?', np.nan)	表df中にある'?'をNaNとする
df.replace('?', np.nan)	df中にある'?'をNaNに置換する
df.replace('?', np.nan)	表データdf内に存在する'?'をNaNに置換する
df.replace('?', np.nan)	df中に存在する'?'をNaNに置き換える
df.replace('?', np.nan)	df中にある'?'を欠損に置き換える
df.replace('?', np.nan)	表df内にある'?'を欠損値に置換する
df.replace('?', np.nan)	表df中にある'?'を欠損値とする
df.replace('?', np.nan)	表df中に存在する'?'を欠損値に置換する
df.replace('?', np.nan)	df中に存在する'?'を欠損値に置換する
df.replace('?', np.nan)	df内に存在する'?'を欠損に置換する
df.replace('?', np.nan)	データフレームdf中に存在する'?'を欠損に置換する
df.replace('?', np.nan)	df内にある'?'を欠損値に置換する
df.replace('?', np.nan)	データフレームdf中にある'?'を欠損値とする
pd.merge(df1, df2)	df1とdf2を結合する
pd.merge(df1, df2)	表df1とdf2を一つにまとめる
pd.merge(df1, df2)	表df1と表df2を結合する
pd.merge(df1, df2)	データフレームdf1とデータフレームdf2を結合する
pd.merge(df1, df2)	df1とdf2データフレームを結合する
pd.merge(df1, df2)	データフレームdf1とdf2を結合する
pd.merge(df1, df2)	データフレームdf1とdf2をマージする
pd.merge(df1, df2)	表データdf1とdf2を一つにまとめる
pd.merge(df1, df2)	df1と表データdf2を結合する
pd.merge(df1, df2)	表df1と表df2をマージする
pd.merge(df1, df2)	df1と表データdf2を一つにまとめる
pd.merge(df1, df2)	表df1とdf2データフレームをマージする
pd.merge(df1, df2)	表データdf1とdf2表を一つにまとめる
pd.merge(df1, df2)	表データdf1とdf2表データを結合する
pd.merge(df1, df2)	データフレームdf1とdf2データフレームをマージする
pd.merge(df1, df2)	表df1とデータフレームdf2をマージする
pd.merge(df1, df2)	df1とdf2を一つにまとめる
pd.merge(df1, df2)	表df1とdf2を結合する
pd.merge(df1, df2)	df1とデータフレームdf2を一つにまとめる
pd.merge(df1, df2)	df1と表df2をマージする
pd.merge(df1, df2)	データフレームdf1とdf2を一つにまとめる
pd.merge(df1, df2)	df1とdf2データフレームをマージする
pd.merge(df1, df2)	表データdf1とデータフレームdf2をマージする
pd.merge(df1, df2)	df1とdf2をマージする
pd.merge(df1, df2)	df1と表df2を結合する
pd.merge(df1, df2)	データフレームdf1とdf2データフレームを一つにまとめる
pd.merge(df1, df2)	データフレームdf1とdf2表を一つにまとめる
pd.merge(df1, df2)	表データdf1とdf2を結合する
pd.merge(df1, df2)	データフレームdf1と表df2をマージする
pd.merge(df1, df2, on='id')	'id'コラムをキーとして、df1データフレームとdf2を結合する
pd.merge(df1, df2, on='id')	'id'をキーとして、表df1とdf2表をマージする
pd.merge(df1, df2, on='id')	'id'を項目名として、df1表と表df2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'をキーとして、df1と表df2をマージする
pd.merge(df1, df2, on='id')	'id'を項目名として、表データdf1とdf2表データをマージする
pd.merge(df1, df2, on='id')	表属性'id'をキーとして、df1とデータフレームdf2をマージする
pd.merge(df1, df2, on='id')	'id'を項目名として、df1とdf2データフレームをマージする
pd.merge(df1, df2, on='id')	'id'をキーとして、df1表データとdf2表データを一つにまとめる
pd.merge(df1, df2, on='id')	表属性'id'をキーとして、表データdf1とdf2表データを結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1と表データdf2を結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1とdf2をマージする
pd.merge(df1, df2, on='id')	'id'表属性をキーとして、df1とdf2を結合する
pd.merge(df1, df2, on='id')	'id'をキーとして、表データdf1とdf2表データを結合する
pd.merge(df1, df2, on='id')	'id'カラムをキーとして、df1とdf2表データを結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、データフレームdf1とデータフレームdf2を一つにまとめる
pd.merge(df1, df2, on='id')	カラム'id'をキーとして、df1表データとdf2表データを結合する
pd.merge(df1, df2, on='id')	表属性'id'を項目名として、df1表データとdf2表データを結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1表データとdf2表データをマージする
pd.merge(df1, df2, on='id')	'id'をキーとして、df1表データとdf2を結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1データフレームとデータフレームdf2を結合する
pd.merge(df1, df2, on='id')	'id'をキーとして、df1とdf2表データをマージする
pd.merge(df1, df2, on='id')	'id'を項目名として、表データdf1とdf2を結合する
pd.merge(df1, df2, on='id')	列'id'をキーとして、df1表と表df2をマージする
pd.merge(df1, df2, on='id')	列'id'をキーとして、df1表データと表データdf2をマージする
pd.merge(df1, df2, on='id')	カラム'id'を項目名として、df1データフレームとデータフレームdf2をマージする
pd.merge(df1, df2, on='id')	表属性'id'を項目名として、df1とdf2をマージする
pd.merge(df1, df2, on='id')	'id'をキーとして、df1とデータフレームdf2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'をキーとして、df1とdf2をマージする
pd.merge(df1, df2, on='id')	'id'をキーとして、df1表と表df2を一つにまとめる
pd.merge(df1, df2, on='id')	カラム'id'を項目名として、表データdf1とdf2を結合する
pd.merge(df1, df2, on='id')	'id'列を項目名として、df1とdf2をマージする
pd.merge(df1, df2, on='id')	'id'コラムをキーとして、df1表とdf2表をマージする
pd.merge(df1, df2, on='id')	'id'を項目名として、df1データフレームとデータフレームdf2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'をキーとして、df1と表df2を結合する
pd.merge(df1, df2, on='id')	'id'をキーとして、df1とdf2表を結合する
pd.merge(df1, df2, on='id')	列'id'をキーとして、df1表とdf2表を一つにまとめる
pd.merge(df1, df2, on='id')	'id'を項目名として、表データdf1と表データdf2をマージする
pd.merge(df1, df2, on='id')	表属性'id'を項目名として、df1とdf2表を一つにまとめる
pd.merge(df1, df2, on='id')	'id'表属性をキーとして、df1と表df2をマージする
pd.merge(df1, df2, on='id')	'id'をキーとして、df1とデータフレームdf2を結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1表データと表データdf2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'を項目名として、df1とdf2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'カラムを項目名として、df1データフレームとデータフレームdf2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'をキーとして、データフレームdf1とdf2データフレームを一つにまとめる
pd.merge(df1, df2, on='id')	'id'を項目名として、df1とdf2表データを一つにまとめる
pd.merge(df1, df2, on='id')	'id'をキーとして、df1とdf2を一つにまとめる
pd.merge(df1, df2, on='id')	'id'を項目名として、df1表とdf2を結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1とdf2表を一つにまとめる
pd.merge(df1, df2, on='id')	'id'をキーとして、df1表とdf2を結合する
pd.merge(df1, df2, on='id')	'id'を項目名として、df1表とdf2をマージする
pd.merge(df1, df2, on='id')	'id'をキーとして、表データdf1とdf2を結合する
pd.merge(df1, df2, on='id')	'id'をキーとして、表df1とdf2を一つにまとめる
pd.merge(df1, df2, how='outer')	全結合でdf1とdf2をマージする
pd.merge(df1, df2, how='outer')	全結合でdf1とdf2表データを結合する
pd.merge(df1, df2, how='outer')	全結合でdf1データフレームとdf2を一つにまとめる
pd.merge(df1, df2, how='outer')	全結合でdf1と表df2を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1表データとdf2表データをマージする
pd.merge(df1, df2, how='outer')	全結合でdf1データフレームとデータフレームdf2を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1表とdf2を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1とデータフレームdf2を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1とdf2表を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1表データとdf2をマージする
pd.merge(df1, df2, how='outer')	全結合でdf1とdf2データフレームを結合する
pd.merge(df1, df2, how='outer')	全結合で表データdf1とdf2を一つにまとめる
pd.merge(df1, df2, how='outer')	全結合でdf1と表データdf2をマージする
pd.merge(df1, df2, how='outer')	全結合で表データdf1とdf2表データを一つにまとめる
pd.merge(df1, df2, how='outer')	全結合でデータフレームdf1とdf2を一つにまとめる
pd.merge(df1, df2, how='outer')	全結合で表データdf1とdf2を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1表と表df2を一つにまとめる
pd.merge(df1, df2, how='outer')	全結合でdf1とdf2表データをマージする
pd.merge(df1, df2, how='outer')	全結合でデータフレームdf1とデータフレームdf2を結合する
pd.merge(df1, df2, how='outer')	全結合でdf1とdf2を一つにまとめる
pd.merge(df1, df2, how='outer')	全結合でdf1データフレームとdf2データフレームを一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてdf1表データとdf2表データを結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'をキーとしてdf1とdf2表データを一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1表データとdf2表データをマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1データフレームとデータフレームdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'をキーとしてdf1とdf2データフレームをマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてdf1とdf2表をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1表とdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名として表データdf1と表データdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'コラムをキーとしてdf1とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスとコラム'index_num'を項目名としてdf1とdf2表をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'を項目名としてdf1データフレームとdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'をキーとして表データdf1とdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置とコラム'index_num'を項目名としてdf1とdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置とカラム'index_num'をキーとしてdf1表と表df2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてdf1とdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1とdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'表属性を項目名としてdf1とdf2表をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてデータフレームdf1とデータフレームdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'を項目名としてdf1とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'カラムを項目名としてdf1データフレームとdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'列をキーとしてdf1とdf2データフレームをマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'列を項目名としてdf1表データとdf2表データを一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'表属性をキーとして表df1と表df2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名として表データdf1とdf2表データを一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'をキーとして表df1とdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名として表df1と表df2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'コラムをキーとして表データdf1とdf2表データを結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置とカラム'index_num'をキーとしてdf1表とdf2表をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'をキーとしてdf1と表df2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名として表df1と表df2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'を項目名としてdf1表データとdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'表属性をキーとして表df1と表df2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてdf1表とdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとして表df1とdf2表を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'を項目名としてデータフレームdf1とdf2データフレームをマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と表属性'index_num'をキーとして表データdf1と表データdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'表属性をキーとしてdf1とdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとして表df1とdf2表を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'を項目名としてデータフレームdf1とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'列を項目名としてdf1とdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'表属性を項目名としてdf1とデータフレームdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名として表データdf1とdf2表データをマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてdf1とdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1とdf2表を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'カラムを項目名としてdf1とdf2表を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスとコラム'index_num'を項目名としてdf1とdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置とコラム'index_num'を項目名としてdf1と表df2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1と表df2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'を項目名としてデータフレームdf1とdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてdf1と表データdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスとカラム'index_num'を項目名としてdf1表とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置とカラム'index_num'を項目名としてdf1表データとdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1データフレームとデータフレームdf2を結合する
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と表属性'index_num'を項目名としてdf1とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と表属性'index_num'をキーとしてdf1表と表df2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名として表df1とdf2を一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと列'index_num'を項目名としてdf1とdf2データフレームを一つにまとめる
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'を項目名としてデータフレームdf1とデータフレームdf2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスと'index_num'をキーとしてdf1表と表df2をマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	インデックスとコラム'index_num'を項目名としてdf1とdf2データフレームをマージする
pd.merge(df1, df2, left_index=True, right_on='index_num')	位置と'index_num'をキーとして表df1と表df2をマージする
pd.merge(df1, df2, how='left')	左外部結合でdf1とdf2表を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1表と表df2を一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合でdf1とdf2表データを一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合で表データdf1とdf2をマージする
pd.merge(df1, df2, how='left')	左外部結合でdf1データフレームとdf2を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1表データとdf2表データを一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合で表df1とdf2を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1とdf2表データをマージする
pd.merge(df1, df2, how='left')	左外部結合でdf1と表データdf2を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1表とdf2を一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合でdf1表とdf2表を一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合でデータフレームdf1とdf2を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1表データと表データdf2を一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合でdf1とdf2をマージする
pd.merge(df1, df2, how='left')	左外部結合でデータフレームdf1とデータフレームdf2を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1と表データdf2をマージする
pd.merge(df1, df2, how='left')	左外部結合でdf1と表df2を結合する
pd.merge(df1, df2, how='left')	左外部結合で表データdf1と表データdf2を結合する
pd.merge(df1, df2, how='left')	左外部結合でdf1とdf2データフレームを一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合でdf1とdf2表データを結合する
pd.merge(df1, df2, how='left')	左外部結合で表df1と表df2をマージする
pd.merge(df1, df2, how='left')	左外部結合でdf1表データとdf2表データを結合する
pd.merge(df1, df2, how='left')	左外部結合でデータフレームdf1とdf2データフレームを一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合で表df1とdf2を一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合で表データdf1と表データdf2を一つにまとめる
pd.merge(df1, df2, how='left')	左外部結合でdf1表データとdf2を結合する
pd.concat([df1, df2])	データフレームdf1とdf2を縦方向で一つにまとめる
pd.concat([df1, df2])	df1と表df2を縦方向でマージする
pd.concat([df1, df2])	データフレームdf1とdf2を縦方向でマージする
pd.concat([df1, df2])	表df1と表df2を縦方向でマージする
pd.concat([df1, df2])	表データdf1とdf2データフレームを縦方向で一つにまとめる
pd.concat([df1, df2])	表df1とdf2を縦方向で結合する
pd.concat([df1, df2])	df1とdf2データフレームを縦方向で結合する
pd.concat([df1, df2])	表データdf1とdf2データフレームを縦方向でマージする
pd.concat([df1, df2])	表df1と表df2を縦方向で一つにまとめる
pd.concat([df1, df2])	df1とdf2表を縦方向で結合する
pd.concat([df1, df2])	データフレームdf1とdf2表を縦方向で一つにまとめる
pd.concat([df1, df2])	df1とdf2表を縦方向で一つにまとめる
pd.concat([df1, df2])	表データdf1とdf2を縦方向でマージする
pd.concat([df1, df2])	df1と表データdf2を縦方向で結合する
pd.concat([df1, df2])	df1と表df2を縦方向で結合する
pd.concat([df1, df2])	データフレームdf1とdf2を縦方向で結合する
pd.concat([df1, df2])	df1とdf2を縦方向で一つにまとめる
pd.concat([df1, df2])	表df1とdf2を縦方向で一つにまとめる
pd.concat([df1, df2])	df1とdf2表データを縦方向で結合する
pd.concat([df1, df2])	表データdf1と表データdf2を縦方向で一つにまとめる
pd.concat([df1, df2])	表df1とdf2を縦方向でマージする
pd.concat([df1, df2])	表df1と表データdf2を縦結合する
pd.concat([df1, df2])	表データdf1とdf2表データを縦結合する
pd.concat([df1, df2])	表データdf1と表df2を縦結合する
pd.concat([df1, df2])	データフレームdf1とdf2を縦結合する
pd.concat([df1, df2])	df1とdf2を縦結合する
pd.concat([df1, df2])	表df1とデータフレームdf2を縦結合する
pd.concat([df1, df2])	データフレームdf1と表データdf2を縦結合する
pd.concat([df1, df2])	表df1とdf2データフレームを縦結合する
pd.concat([df1, df2])	表df1とdf2を縦結合する
pd.concat([df1, df2])	表データdf1とdf2を縦結合する
pd.concat([df1, df2])	表df1とdf2表データを縦結合する
pd.concat([df1, df2])	表データdf1とデータフレームdf2を縦結合する
pd.concat([df1, df2])	表データdf1とdf2表を縦結合する
df.stack()	ピボット操作で表dfの列を行に変更する
df.stack()	ピボット操作でdf表の列を行に変更する
df.stack()	ピボット操作でデータフレームdfの列を行に変更する
df.stack()	ピボット操作でdfの列を行に変更する
df.stack()	ピボット操作でdf表データの列を行に変更する
df.unstack()	ピボット操作でdfの行を列に変更する
df.unstack()	ピボット操作で表データdfの行を列に変更する
df.unstack()	ピボット操作でdf表データの行を列に変更する
df.unstack()	ピボット操作でdf表の行を列に変更する
df.unstack()	ピボット操作で表dfの行を列に変更する
df.duplicated()	表dfに重複があるか確認する
df.duplicated()	データフレームdfに重複があるか確認する
df.duplicated()	表データdfに重複があるか確認する
df.duplicated()	dfに重複があるか確認する
df.drop_duplicates()	表dfから重複している行をドロップする
df.drop_duplicates()	表dfの中から重複している行を消す
df.drop_duplicates()	表dfから重複している行を落とす
df.drop_duplicates()	dfの中から重複している行をドロップする
df.drop_duplicates()	表データdfから重複している行を消す
df.drop_duplicates()	dfから重複している行を落とす
df.drop_duplicates()	データフレームdfの中から重複している行をドロップする
df.drop_duplicates()	表dfの中から重複している行をドロップする
df.drop_duplicates()	表データdfの中から重複している行をドロップする
df.drop_duplicates()	表dfから重複している行を削除する
pd.cut(df['birth_year'], data_bins)	データフレームdfの'birth_year'を境界値をdata_binsとしてビン分割する
pd.cut(df['birth_year'], data_bins)	表dfの'birth_year'を境界値をdata_binsとして分割する
pd.cut(df['birth_year'], data_bins)	表データdfのカラム'birth_year'を境界値をリストdata_binsとしてビン分割する
pd.cut(df['birth_year'], data_bins)	表dfの'birth_year'を境界値をリストdata_binsとして分割する
pd.cut(df['birth_year'], data_bins)	表dfの'birth_year'を境界値をリストdata_binsとしてビン分割する
pd.cut(df['birth_year'], data_bins)	表データdfのコラム'birth_year'を境界値をdata_binsとして分割する
pd.cut(df['birth_year'], data_bins)	表dfの'birth_year'を境界値をdata_binsとしてビン分割する
pd.cut(df['birth_year'], data_bins)	表データdfの'birth_year'を境界値をdata_binsとしてビン分割する
pd.cut(df['birth_year'], data_bins)	表dfの表属性'birth_year'を境界値をリストdata_binsとしてビン分割する
pd.cut(df['birth_year'], data_bins)	dfの'birth_year'を境界値をdata_binsリストとして分割する
pd.cut(df['birth_year'], data_bins)	dfのコラム'birth_year'を境界値をdata_binsリストとして分割する
pd.cut(df['birth_year'], data_bins)	dfの'birth_year'コラムを境界値をリストdata_binsとして分割する
pd.cut(df['birth_year'], data_bins)	表データdfの表属性'birth_year'を境界値をdata_binsリストとしてビン分割する
pd.cut(df['birth_year'], data_bins)	表データdfの'birth_year'を境界値をdata_binsとして分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'列をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	dfの列'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表データdfのカラム'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'列を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'カラムをビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'コラムを分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfの表属性'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'列を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfのコラム'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'表属性を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfのカラム'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表データdfのコラム'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'コラムを分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfのカラム'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'コラムを分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'列を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'カラムを分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'表属性をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	dfの列'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'列をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの列'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	dfの表属性'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfのコラム'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfの列'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'コラムをビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	dfのコラム'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表データdfの列'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	データフレームdfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfのカラム'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num)	dfのカラム'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表データdfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num)	表dfの列'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num)	dfの'birth_year'列を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfのカラム'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、df表のコラム'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、df表データの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、df表データの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'列をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、df表データのカラム'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの列'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、データフレームdfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、データフレームdfの'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、データフレームdfのコラム'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、df表の'birth_year'コラムを分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの表属性'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、表dfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfデータフレームの'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、データフレームdfの'birth_year'カラムを分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'コラムを分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'列をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの列'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、データフレームdfの'birth_year'コラムをビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、表データdfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfデータフレームの'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、データフレームdfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'コラムを分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、データフレームdfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、データフレームdfの'birth_year'コラムをビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、df表の'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、df表データの表属性'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの列'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、dfの'birth_year'コラムをビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、表dfの列'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの列'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfデータフレームの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、データフレームdfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、表データdfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、df表のコラム'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'列を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、表データdfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、表データdfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、データフレームdfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、df表の'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、df表データの'birth_year'カラムをビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfデータフレームの'birth_year'表属性を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、df表データの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'コラムをビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、df表の'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfデータフレームの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、dfの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'コラムを分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'コラムをビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfのコラム'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、df表のカラム'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、データフレームdfの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfデータフレームの表属性'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfのカラム'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、df表データの'birth_year'列をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの列'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、表dfのコラム'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、dfの'birth_year'カラムを分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、データフレームdfのコラム'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、df表の'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、表dfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの'birth_year'カラムをビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、データフレームdfの'birth_year'コラムを分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfデータフレームの'birth_year'コラムを分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、df表の'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfデータフレームのコラム'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、データフレームdfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfデータフレームの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'表属性をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、df表の'birth_year'列をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、dfの'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、df表データの'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、df表データの'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、データフレームdfの'birth_year'表属性を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの列'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesとして、表データdfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfのコラム'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、データフレームdfの'birth_year'列をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、dfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesリストとして、dfの'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、df表の'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、df表の'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、データフレームdfの列'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをリストgroup_namesとして、dfの'birth_year'カラムを分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をリストgroup_namesとして、dfの列'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンのラベルをgroup_namesリストとして、dfの'birth_year'表属性をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfデータフレームの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、表dfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=group_names)	ビンの名前をgroup_namesとして、dfの'birth_year'コラムをビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfのコラム'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfのカラム'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、データフレームdfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、表dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、表データdfのコラム'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、データフレームdfの'birth_year'コラムをビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、dfデータフレームの表属性'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfのカラム'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfの'birth_year'列を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを0始まりの連番として、データフレームdfの'birth_year'カラムをビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、表データdfの列'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、df表の'birth_year'を分割数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、df表の'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、表dfの'birth_year'列をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、dfデータフレームの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを0始まりの連番として、df表データの列'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、表dfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、df表の'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'をビン数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、dfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、表dfの'birth_year'コラムをビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、dfの'birth_year'カラムを分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、df表の表属性'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、表データdfの'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを0始まりの連番として、dfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、df表データのカラム'birth_year'をビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、表dfの'birth_year'列をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、表dfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、表データdfの'birth_year'をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、dfの表属性'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを0始まりの連番として、表dfの列'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、dfの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを0始まりの連番として、dfの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、表dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、df表データの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfデータフレームの'birth_year'列をビン数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'カラムを分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、表dfの'birth_year'カラムをビン数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'カラムを分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、表dfの'birth_year'をビン数をbins_num整数値としてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfデータフレームの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、df表データの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、dfのコラム'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、dfの'birth_year'を分割数をbins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、データフレームdfの'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、dfの'birth_year'列を分割数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、df表データの'birth_year'をビン数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'表属性を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルをインデックスとして、dfの'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンのラベルを整数値として、dfデータフレームの表属性'birth_year'を分割数をbins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を0始まりの連番として、表dfの表属性'birth_year'を分割数を整数値bins_numとして分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前を整数値として、dfデータフレームの'birth_year'を分割数をbins_num整数値として分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfデータフレームの'birth_year'をビン数を整数値bins_numとしてビン分割する
pd.cut(df['birth_year'], bins_num, label=False)	ビンの名前をインデックスとして、dfの'birth_year'を分割数を整数値bins_numとしてビン分割する
pd.qcut(df['birth_year'], 2)	表dfの'birth_year'を中央値で分割する
pd.qcut(df['birth_year'], 2)	表データdfの'birth_year'列を中央値で分割する
pd.qcut(df['birth_year'], 2)	表dfの'birth_year'コラムを中央値で分割する
pd.qcut(df['birth_year'], 2)	dfの'birth_year'を中央値で分割する
pd.qcut(df['birth_year'], 2)	表dfのカラム'birth_year'を中央値で分割する
pd.qcut(df['birth_year'], 2)	データフレームdfの'birth_year'を中央値で分割する
pd.qcut(df['birth_year'], 2)	dfのカラム'birth_year'を中央値でビン分割する
pd.qcut(df['birth_year'], 2)	データフレームdfの'birth_year'カラムを中央値で分割する
pd.qcut(df['birth_year'], 2)	表データdfの'birth_year'を中央値で分割する
pd.qcut(df['birth_year'], 2)	表データdfの'birth_year'コラムを中央値で分割する
pd.qcut(df['birth_year'], 2)	表dfの'birth_year'を中央値でビン分割する
pd.qcut(df['birth_year'], 2)	表データdfの'birth_year'を中央値でビン分割する
pd.qcut(df['birth_year'], 4)	dfの'birth_year'を四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの'birth_year'を四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	表データdfの'birth_year'カラムを四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	表dfの'birth_year'を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの'birth_year'カラムを四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの'birth_year'列を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの'birth_year'を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの'birth_year'表属性を四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの列'birth_year'を四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	表データdfの'birth_year'を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	表dfの'birth_year'列を四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	表dfの'birth_year'カラムを四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの'birth_year'表属性を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	表データdfの'birth_year'を四分位数ごとで分割する
pd.qcut(df['birth_year'], 4)	データフレームdfの列'birth_year'を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], 4)	表データdfの列'birth_year'を四分位数ごとでビン分割する
pd.qcut(df['birth_year'], bins_num)	表dfの表属性'birth_year'をビン数をbins_numとしてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数をbins_num整数値として要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'を分割数をbins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'カラムを分割数を整数値bins_numとしてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数をbins_numとしてビンに含まれる個数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'コラムをビン数を整数値bins_numとしてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	表dfの'birth_year'カラムをビン数をbins_num整数値として要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'表属性を分割数をbins_num整数値として要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数を整数値bins_numとして要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'表属性をビン数をbins_num整数値としてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'列をビン数をbins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'をビン数をbins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数をbins_num整数値としてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'をビン数をbins_num整数値としてビンに含まれる個数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'コラムを分割数を整数値bins_numとしてビンに含まれる個数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'を分割数をbins_num整数値としてビンに含まれる個数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'を分割数をbins_num整数値としてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	表dfの'birth_year'列を分割数をbins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数をbins_num整数値として要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'カラムを分割数をbins_num整数値として要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'を分割数をbins_num整数値として要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'をビン数を整数値bins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'カラムを分割数をbins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'コラムを分割数を整数値bins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	dfのコラム'birth_year'を分割数をbins_numとして要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'を分割数をbins_num整数値として要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'をビン数をbins_numとして要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'列をビン数をbins_num整数値として要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'をビン数をbins_num整数値として要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	dfの'birth_year'カラムをビン数を整数値bins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'を分割数をbins_num整数値として要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表dfの'birth_year'をビン数をbins_num整数値としてビンに含まれる個数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表dfの'birth_year'を分割数をbins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの列'birth_year'をビン数を整数値bins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	表dfの表属性'birth_year'をビン数を整数値bins_numとして要素数が等しくなるように分割する
pd.qcut(df['birth_year'], bins_num)	データフレームdfの'birth_year'表属性を分割数をbins_numとしてビンに含まれる個数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	dfの列'birth_year'をビン数をbins_num整数値として要素数が等しくなるようにビン分割する
pd.qcut(df['birth_year'], bins_num)	表データdfの'birth_year'をビン数をbins_numとして要素数が等しくなるように分割する
df.groupby('flg-50K').size()	表データdfの列'flg-50K'をグループ化して、値ごとのデータの数
df.groupby('flg-50K').size()	データフレームdfの'flg-50K'表属性をグループ化して、値ごとのデータの数
df.groupby('flg-50K').size()	データフレームdfの'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	表データdfの'flg-50K'をグループ化して、値ごとのデータの数
df.groupby('flg-50K').size()	表データdfのコラム'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	データフレームdfの列'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	表dfの'flg-50K'コラムをグループ化して、値ごとのデータの数
df.groupby('flg-50K').size()	表dfの'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	表データdfの'flg-50K'表属性をグループ化して、値ごとのデータの数
df.groupby('flg-50K').size()	dfのカラム'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	dfの'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	表データdfの'flg-50K'をグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	データフレームdfの'flg-50K'コラムをグループ化して、値ごとのデータ数
df.groupby('flg-50K').size()	表データdfの列'flg-50K'をグループ化して、値ごとのデータの数を見る
df.groupby('flg-50K').size()	データフレームdfの'flg-50K'表属性をグループ化して、値ごとのデータの数を見る
df.groupby('flg-50K').size()	データフレームdfの'flg-50K'をグループ化して、値ごとのデータ数を調べる
df.groupby('flg-50K').size()	表データdfの'flg-50K'をグループ化して、値ごとのデータの数を調べる
df.groupby('flg-50K').size()	表データdfのコラム'flg-50K'をグループ化して、値ごとのデータ数を表示する
df.groupby('flg-50K').size()	データフレームdfの列'flg-50K'をグループ化して、値ごとのデータ数を見る
df.groupby('flg-50K').size()	表dfの'flg-50K'コラムをグループ化して、値ごとのデータの数を調べる
df.groupby('flg-50K').size()	表dfの'flg-50K'をグループ化して、値ごとのデータ数を調べる
df.groupby('flg-50K').size()	表データdfの'flg-50K'表属性をグループ化して、値ごとのデータの数を確認する
df.groupby('flg-50K').size()	dfのカラム'flg-50K'をグループ化して、値ごとのデータ数を調べる
df.groupby('flg-50K').size()	dfの'flg-50K'をグループ化して、値ごとのデータ数を調べる
df.groupby('flg-50K').size()	表データdfの'flg-50K'をグループ化して、値ごとのデータ数を確認する
df.groupby('flg-50K').size()	データフレームdfの'flg-50K'コラムをグループ化して、値ごとのデータ数を調べる
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'コラムごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'とコラム'period'ごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'とコラム'period'ごとに'sales'の値の合計値を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとに'sales'の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとに'sales'列の値の和を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとに'sales'コラムの値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'表属性ごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'表属性ごとに表属性'sales'の値の和を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'とカラム'period'ごとに'sales'カラムの値の和を計算する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'ごとにカラム'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'の値の和を算出する
df.groupby(['month', 'period'])['sales'].sum()	表dfのコラム'month'と'period'ごとに'sales'の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'ごとに'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの表属性'month'と'period'ごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとにコラム'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'カラムごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとに'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfのカラム'month'と'period'ごとに'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの表属性'month'と'period'表属性ごとに'sales'の値の和を計算する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'表属性ごとに'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'列と'period'ごとに'sales'の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'コラムごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfのコラム'month'と'period'ごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'コラムごとに'sales'の値の和を計算する
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'とコラム'period'ごとに'sales'コラムの値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と表属性'period'ごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'ごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfのカラム'month'と'period'ごとに'sales'カラムの値の合計値を計算する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と表属性'period'ごとに'sales'表属性の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの列'month'と'period'ごとに'sales'の値の和を算出する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとに'sales'表属性の値の和を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'ごとに列'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfのコラム'month'と'period'ごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'表属性と'period'表属性ごとに表属性'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'ごとにコラム'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'ごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と表属性'period'ごとに'sales'表属性の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'表属性の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'とコラム'period'ごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'とコラム'period'ごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'ごとに'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとに'sales'の値の和を計算する
df.groupby(['month', 'period'])['sales'].sum()	表データdfの表属性'month'と表属性'period'ごとに'sales'の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と'period'ごとにカラム'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'コラムと'period'ごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'ごとに列'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'ごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'コラムの値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'ごとに表属性'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfのコラム'month'と'period'コラムごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'とカラム'period'ごとに'sales'カラムの値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'コラムと'period'ごとに'sales'コラムの値の合計値を計算する
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'表属性ごとに'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの表属性'month'と'period'ごとに'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'列と列'period'ごとに'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'列と'period'ごとに'sales'の値の和を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'列と'period'ごとに'sales'の値の合計を算出する
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'とカラム'period'ごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と表属性'period'ごとに'sales'の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	表dfの表属性'month'と'period'ごとに'sales'の値の合計を計算する
df.groupby(['month', 'period'])['sales'].sum()	dfの'month'と'period'カラムごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'列と'period'ごとに列'sales'の値の合計値を求める
df.groupby(['month', 'period'])['sales'].sum()	dfの列'month'と'period'列ごとに'sales'の値の合計値を計算する
df.groupby(['month', 'period'])['sales'].sum()	表dfの'month'と表属性'period'ごとに'sales'の値の合計を求める
df.groupby(['month', 'period'])['sales'].sum()	表データdfの'month'と'period'ごとに'sales'表属性の値の合計値を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'ごとに'sales'の値の和を算出する
df.groupby(['month', 'period'])['sales'].sum()	データフレームdfの'month'と'period'ごとに列'sales'の値の和を求める
df.groupby(['weather'])['temperature'].mean()	データフレームdfの表属性'weather'ごとに'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'列ごとに'temperature'列の平均値を計算する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'の平均値を求める
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'ごとに'temperature'コラムの平均を算出する
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'ごとに'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	dfの'weather'ごとに'temperature'の平均値を求める
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'列ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'表属性ごとに表属性'temperature'の平均値を算出する
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'ごとに'temperature'コラムの平均値を算出する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'の平均値を計算する
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'ごとに'temperature'列の平均値を算出する
df.groupby(['weather'])['temperature'].mean()	dfの'weather'カラムごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	表dfの'weather'ごとにコラム'temperature'の平均値を求める
df.groupby(['weather'])['temperature'].mean()	データフレームdfのカラム'weather'ごとに'temperature'の平均を計算する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'表属性の平均を求める
df.groupby(['weather'])['temperature'].mean()	dfの列'weather'ごとに列'temperature'の平均値を算出する
df.groupby(['weather'])['temperature'].mean()	dfの'weather'ごとに'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	表dfのカラム'weather'ごとに'temperature'カラムの平均を求める
df.groupby(['weather'])['temperature'].mean()	表dfの'weather'ごとに'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	dfの'weather'ごとに'temperature'列の平均を求める
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'コラムの平均値を算出する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'カラムごとに'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	dfの列'weather'ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	dfの'weather'ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	表dfの表属性'weather'ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'の平均を計算する
df.groupby(['weather'])['temperature'].mean()	dfの列'weather'ごとに'temperature'列の平均を計算する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに'temperature'の平均値を算出する
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'ごとに表属性'temperature'の平均を計算する
df.groupby(['weather'])['temperature'].mean()	dfのコラム'weather'ごとにコラム'temperature'の平均を求める
df.groupby(['weather'])['temperature'].mean()	表dfの'weather'ごとに'temperature'表属性の平均値を求める
df.groupby(['weather'])['temperature'].mean()	dfのカラム'weather'ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	表データdfの'weather'表属性ごとに'temperature'の平均値を求める
df.groupby(['weather'])['temperature'].mean()	データフレームdfの'weather'列ごとに'temperature'の平均値を算出する
df.groupby(['weather'])['temperature'].mean()	表dfの'weather'列ごとに'temperature'の平均値を求める
df.groupby(['weather'])['temperature'].mean()	データフレームdfのカラム'weather'ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	表dfの'weather'ごとに'temperature'の平均を算出する
df.groupby(['weather'])['temperature'].mean()	表dfの'weather'コラムごとに'temperature'コラムの平均値を算出する
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'列ごとに'soldout'列の数を数える
df.groupby(['week'])['soldout'].count()	表dfの'week'ごとに'soldout'カラムの数をカウントする
df.groupby(['week'])['soldout'].count()	dfの'week'ごとに'soldout'表属性の個数をカウントする
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'コラムごとに'soldout'コラムの個数を数える
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'列ごとに'soldout'の数を数える
df.groupby(['week'])['soldout'].count()	dfの'week'ごとに'soldout'表属性の数をカウントする
df.groupby(['week'])['soldout'].count()	表データdfの'week'表属性ごとに'soldout'の数を数える
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'ごとに'soldout'表属性の個数をカウントする
df.groupby(['week'])['soldout'].count()	表dfの'week'ごとに'soldout'の数をカウントする
df.groupby(['week'])['soldout'].count()	表dfの表属性'week'ごとに'soldout'の数を数える
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'ごとに'soldout'の個数を数える
df.groupby(['week'])['soldout'].count()	表dfの表属性'week'ごとに'soldout'の個数をカウントする
df.groupby(['week'])['soldout'].count()	dfのカラム'week'ごとに'soldout'カラムの数をカウントする
df.groupby(['week'])['soldout'].count()	表データdfの'week'ごとに'soldout'の数をカウントする
df.groupby(['week'])['soldout'].count()	dfの'week'カラムごとに'soldout'の数をカウントする
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'ごとに'soldout'列の数を数える
df.groupby(['week'])['soldout'].count()	dfの'week'ごとに'soldout'の数をカウントする
df.groupby(['week'])['soldout'].count()	dfの'week'列ごとに'soldout'の数を数える
df.groupby(['week'])['soldout'].count()	dfの'week'ごとに'soldout'の個数をカウントする
df.groupby(['week'])['soldout'].count()	表データdfの'week'表属性ごとに表属性'soldout'の数を数える
df.groupby(['week'])['soldout'].count()	dfの'week'ごとに'soldout'コラムの数を数える
df.groupby(['week'])['soldout'].count()	表dfの'week'カラムごとに'soldout'の個数を数える
df.groupby(['week'])['soldout'].count()	表dfの'week'ごとに表属性'soldout'の数をカウントする
df.groupby(['week'])['soldout'].count()	表dfの'week'ごとに'soldout'列の個数をカウントする
df.groupby(['week'])['soldout'].count()	dfのカラム'week'ごとに'soldout'カラムの数を数える
df.groupby(['week'])['soldout'].count()	表dfの'week'ごとに'soldout'カラムの数を数える
df.groupby(['week'])['soldout'].count()	dfの'week'ごとに'soldout'の個数を数える
df.groupby(['week'])['soldout'].count()	データフレームdfの'week'ごとに'soldout'の数をカウントする
df.sort_index()	表dfをインデックスで並び替える
df.sort_index()	データフレームdfを位置でソートする
df.sort_index()	表dfをインデックスで整列する
df.sort_index()	表データdfをインデックスでソートする
df.sort_index()	表dfをインデックスでソートする
df.sort_index()	データフレームdfをインデックスで整列する
df.sort_index()	データフレームdfをインデックスでソートする
df.sort_index()	dfをインデックスで並べ変える
df.sort_index()	表dfをインデックスで並べ直す
df.sort_index()	dfを位置でソートする
df.sort_index()	dfを位置で並べる
df.sort_index()	データフレームdfを位置で並べ直す
df.sort_index()	dfをインデックスでソートする
df.sort_index()	表dfを位置で並べ変える
df.sort_index()	表dfを位置で並び替える
df.sort_index()	表データdfをインデックスで並び替える
df.sort_index()	表データdfを位置で並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と表属性'temperature'を降順に並べ直す
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'とカラム'temperature'を降順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'を大きい順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と表属性'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'コラムと'temperature'を大きい順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの列'sales'と列'temperature'を降順に並べ直す
df.sort_values(['sales', 'temperature'], ascending=False)	表dfのコラム'sales'と'temperature'を降順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfのコラム'sales'とコラム'temperature'を大きい順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'を降順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'コラムと'temperature'を降順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'を降順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの表属性'sales'と'temperature'を大きい順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'を逆順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'を大きい順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'カラムを大きい順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'を大きい順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'とカラム'temperature'を降順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と列'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	表dfのカラム'sales'と'temperature'を大きい順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'を降順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'と'temperature'を大きい順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'と'temperature'カラムを逆順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'を大きい順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfのカラム'sales'と'temperature'を降順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'コラムを大きい順に並べ直す
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'表属性を大きい順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'を大きい順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'列と'temperature'列を大きい順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'と'temperature'を逆順に並べ直す
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの表属性'sales'と'temperature'表属性を逆順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'列と'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'カラムと'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'を降順に並べ直す
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの表属性'sales'と'temperature'表属性を大きい順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'とカラム'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfのコラム'sales'と'temperature'コラムを大きい順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの列'sales'と'temperature'列を降順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'を逆順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'列と'temperature'を降順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	表dfのコラム'sales'と'temperature'コラムを逆順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	dfの'sales'カラムと'temperature'を大きい順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'を大きい順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'列と'temperature'列を降順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'とコラム'temperature'を降順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'を逆順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'と'temperature'を降順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの列'sales'と'temperature'を降順に整列する
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの表属性'sales'と'temperature'を大きい順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'を逆順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'を逆順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'列と'temperature'を逆順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'コラムと'temperature'を降順に並べ直す
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'と'temperature'列を大きい順に並び替える
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'と'temperature'カラムを大きい順に並べ変える
df.sort_values(['sales', 'temperature'], ascending=False)	表dfの'sales'とカラム'temperature'を逆順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	表データdfの'sales'と'temperature'を大きい順にソートする
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'表属性と'temperature'を逆順に並べる
df.sort_values(['sales', 'temperature'], ascending=False)	データフレームdfの'sales'カラムと'temperature'を大きい順に整列する
df.sort_values('sales')	データフレームdfの'sales'を昇順に整列する
df.sort_values('sales')	表データdfの'sales'を昇順に並べ直す
df.sort_values('sales')	表データdfの'sales'を並べ変える
df.sort_values('sales')	表dfの'sales'を並び替える
df.sort_values('sales')	表dfのカラム'sales'をソートする
df.sort_values('sales')	表データdfの'sales'を昇順に並べ変える
df.sort_values('sales')	dfの'sales'列を昇順に並べ変える
df.sort_values('sales')	表dfの'sales'を昇順にソートする
df.sort_values('sales')	表データdfの'sales'をソートする
df.sort_values('sales')	dfの'sales'を昇順に並べ直す
df.sort_values('sales')	dfのカラム'sales'を昇順に並べ変える
df.sort_values('sales')	表データdfの'sales'を昇順にソートする
df.sort_values('sales')	表データdfの'sales'コラムを昇順に整列する
df.sort_values('sales')	データフレームdfの'sales'を整列する
df.sort_values('sales')	データフレームdfの'sales'を昇順に並べ直す
df.isnull().sum()	表データdfのNaNの合計
df.isnull().sum()	表df内のnullの合計
df.isnull().sum()	データフレームdf内のnullの合計
df.isnull().sum()	dfの欠損値の数
df.isnull().sum()	表データdf中のNaNの数
df.isnull().sum()	表データdf中のNaNの合計
df.isnull().sum()	表データdf内の欠損値の合計
df.isnull().sum()	表dfのNaNの数
df.isnull().sum()	データフレームdf中のNaNの合計
df.isnull().sum()	df内の欠損値の合計
df.isnull().sum()	データフレームdf中の欠損値の合計
df.isnull().sum()	表データdf内のnullの合計
df.isnull().sum()	df中のnullの合計
df.isnull().sum()	表df中のnullの数
df.isnull().sum()	表データdf中の欠損値の合計
df.isnull().sum()	データフレームdf内のnullの数
df.isnull().sum()	表dfの欠損値の数
df.isnull().sum()	表df内の欠損値の合計
df.isnull().sum()	df内のNaNの数
df.isnull().sum()	表df中の欠損値の数
df.isnull().sum()	表データdf内のNaNの合計
df.isnull().sum()	表データdf内の欠損値の数
df.isnull().sum()	データフレームdf内のNaNの合計
df.isnull().sum()	df内のnullの合計
df.isnull().sum()	表データdf内のNaNの数
df.isnull().sum()	df中の欠損値の合計
df.isnull().sum()	データフレームdfのNaNの数
df.isin(['?']).sum()	データフレームdf内のそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	表df内のそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	データフレームdfのそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	データフレームdf内のそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	df内のそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	表dfのそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	表df内のそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	表dfのそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	df中のそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	df中のそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	データフレームdf中のそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	表データdf中のそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	データフレームdfのそれぞれのカラムにある'?'の個数の合計値
df.isin(['?']).sum()	表df中のそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	表データdf内のそれぞれのカラムに存在する'?'の個数の合計値
df.isin(['?']).sum()	データフレームdf内のそれぞれのカラムにある'?'の個数の合計値を見る
df.isin(['?']).sum()	表df内のそれぞれのカラムにある'?'の個数の合計値を表示する
df.isin(['?']).sum()	データフレームdfのそれぞれのカラムに存在する'?'の個数の合計値を見る
df.isin(['?']).sum()	データフレームdf内のそれぞれのカラムに存在する'?'の個数の合計値を表示する
df.isin(['?']).sum()	df内のそれぞれのカラムにある'?'の個数の合計値を見る
df.isin(['?']).sum()	表dfのそれぞれのカラムに存在する'?'の個数の合計値を調べる
df.isin(['?']).sum()	表df内のそれぞれのカラムに存在する'?'の個数の合計値を確認する
df.isin(['?']).sum()	表dfのそれぞれのカラムにある'?'の個数の合計値を確認する
df.isin(['?']).sum()	df中のそれぞれのカラムにある'?'の個数の合計値を確認する
df.isin(['?']).sum()	df中のそれぞれのカラムに存在する'?'の個数の合計値を見る
df.isin(['?']).sum()	データフレームdf中のそれぞれのカラムにある'?'の個数の合計値を調べる
df.isin(['?']).sum()	表データdf中のそれぞれのカラムにある'?'の個数の合計値を調べる
df.isin(['?']).sum()	データフレームdfのそれぞれのカラムにある'?'の個数の合計値を表示する
df.isin(['?']).sum()	表df中のそれぞれのカラムに存在する'?'の個数の合計値を確認する
df.isin(['?']).sum()	表データdf内のそれぞれのカラムに存在する'?'の個数の合計値を見る
pd.get_dummies(df)	データフレームdfのカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	df内のカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	表データdf中のカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	dfのカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	データフレームdf中のカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	表dfのカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	表データdf内のカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	データフレームdf内のカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	df中のカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	表データdfのカテゴリ変数をダミー変数に変換する
pd.get_dummies(df)	データフレームdfについてダミー変数を作成する
pd.get_dummies(df)	dfについてダミー変数を生成する
pd.get_dummies(df)	dfについてダミー変数を作成する
pd.get_dummies(df)	データフレームdfについてダミー変数を生成する
pd.get_dummies(df)	表dfについてダミー変数を生成する
pd.get_dummies(df)	表データdfについてダミー変数を作成する
pd.get_dummies(df)	表dfについてダミー変数を作成する
pd.get_dummies(df['sex'])	表dfの'sex'コラムをone-hot表現に変換する
pd.get_dummies(df['sex'])	dfの'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	表dfの'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	表dfのコラム'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	表データdfの'sex'をダミー変数化する
pd.get_dummies(df['sex'])	表データdfのコラム'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	データフレームdfの'sex'表属性をone-hot表現に変換する
pd.get_dummies(df['sex'])	データフレームdfの'sex'をダミー変数化する
pd.get_dummies(df['sex'])	表データdfのコラム'sex'をダミー変数化する
pd.get_dummies(df['sex'])	表データdfの列'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	dfの'sex'をダミー変数化する
pd.get_dummies(df['sex'])	表データdfの'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	dfの'sex'表属性をone-hot表現に変換する
pd.get_dummies(df['sex'])	表データdfの'sex'表属性をダミー変数化する
pd.get_dummies(df['sex'])	データフレームdfの'sex'列をone-hot表現に変換する
pd.get_dummies(df['sex'])	データフレームdfの'sex'をone-hot表現に変換する
pd.get_dummies(df['sex'])	表dfの'sex'表属性をダミー変数化する
from matplotlib import pyplot as plt	マットプロットリブを使用する
from matplotlib import pyplot as plt	Matplotlibをインポートする
from matplotlib import pyplot as plt	Matplotlibライブラリをpltとしてインポートする
from matplotlib import pyplot as plt	Matplotlibライブラリをインポートする
from matplotlib import pyplot as plt	グラフ描画用のライブラリをインポートする
from matplotlib import pyplot as plt	Matplotlibライブラリを用意する
import seaborn as sns	Seabornをインポートする
import seaborn as sns	Seabornライブラリをインポートする
import seaborn as sns	Seabornをsnsとしてインポートする
import seaborn as sns	Seabornライブラリをsnsとしてインポートする
import seaborn as sns	Seabornライブラリを用意する
import seaborn as sns	シーボンを使用する
import seaborn as sns	可視化用のライブラリをインポートする
sns.set(font="IPAexGothic",style="white")	グラフ内で日本語を表示できるようにする
sns.set(font="IPAexGothic",style="white")	グラフの日本語表示を設定する
sns.set(font="IPAexGothic",style="white")	グラフの日本語フォントを設定する
sns.set(font="IPAexGothic",style="white")	グラフの日本語表示をセットする
plt.title('figure')	タイトルを'figure'と設定する
plt.title('figure')	グラフの題名を'figure'と指定する
plt.title('figure')	グラフのタイトルを'figure'と指定する
plt.title('figure')	グラフの題名を'figure'にする
plt.title('figure')	グラフの題名を'figure'に指定する
plt.title('figure')	グラフのタイトルを'figure'とする
plt.title('figure')	グラフの題名を'figure'とする
plt.title('figure')	グラフの題名を'figure'にセットする
plt.title('figure')	タイトルを'figure'に指定する
plt.title('figure')	グラフのタイトルを'figure'にセットする
plt.title('figure')	グラフのタイトルを'figure'とセットする
plt.title('figure')	グラフの題名を'figure'に設定する
plt.title('figure')	グラフの題名を'figure'に変更する
plt.title('figure')	タイトルを'figure'にする
plt.title('figure')	グラフのタイトルを'figure'と設定する
plt.title('figure')	タイトルを'figure'にセットする
plt.figure(figsize=(20, 6))	グラフの大きさを20x6と設定する
plt.figure(figsize=(20, 6))	グラフのサイズを20x6に設定する
plt.figure(figsize=(20, 6))	グラフのサイズを横20縦6とセットする
plt.figure(figsize=(20, 6))	グラフの大きさを20x6と指定する
plt.figure(figsize=(20, 6))	グラフの大きさを20x6に指定する
plt.figure(figsize=(20, 6))	グラフのサイズを横20縦6に指定する
plt.figure(figsize=(20, 6))	グラフのサイズを横20縦6とする
plt.figure(figsize=(20, 6))	グラフの大きさを横20縦6にする
plt.figure(figsize=(20, 6))	グラフのサイズを横20縦6にする
plt.figure(figsize=(20, 6))	グラフのサイズを20x6とセットする
plt.figure(figsize=(20, 6))	グラフの大きさを20x6にする
plt.figure(figsize=(20, 6))	グラフのサイズを横20縦6と設定する
plt.figure(figsize=(20, 6))	グラフのサイズを20x6に変更する
plt.figure(figsize=(20, 6))	グラフの大きさを20x6に変更する
plt.figure(figsize=(20, 6))	グラフのサイズを横20縦6に変更する
plt.figure(figsize=(20, 6))	グラフのサイズを20x6と設定する
plt.figure(figsize=(20, 6))	グラフの大きさを横20縦6と設定する
plt.figure(figsize=(20, 6))	グラフの大きさを横20縦6にセットする
plt.figure(figsize=(20, 6))	グラフのサイズを20x6と指定する
x軸=x軸|グラフのx軸|x座標	y座標
x軸=x軸|グラフのx軸|x座標	グラフのy軸
x軸=x軸|グラフのx軸|x座標	y軸=y軸
x軸=x軸|グラフのx軸|x座標	z座標
x軸=x軸|グラフのx軸|x座標	z軸=z軸
x軸=x軸|グラフのx軸|x座標	グラフのz軸
plt.xlabel('X')	x軸の軸ラベルを'X'に設定する
plt.xlabel('X')	x軸のラベルを'X'にセットする
plt.xlabel('X')	x軸のラベルを'X'に設定する
plt.xlabel('X')	x軸の軸ラベルを'X'とセットする
plt.xlabel('X')	x軸の軸ラベルを'X'とする
plt.xlabel('X')	x軸のラベルを'X'にする
plt.xlabel('X')	x軸のラベルを'X'に指定する
plt.xlabel('X')	x軸の軸ラベルを'X'と設定する
plt.xlabel('X')	x軸の軸ラベルを'X'にセットする
plt.xlabel('X')	x軸の軸ラベルを'X'に変更する
plt.xlabel('X')	x軸のラベルを'X'と設定する
plt.xlabel('X')	x軸のラベルを'X'とする
plt.xlabel('X')	x軸の軸ラベルを'X'にする
plt.xlabel('X')	x軸に'X'というラベルをつける
plt.xlabel('X')	'X'という軸ラベルをx軸に付ける
plt.xlabel('X')	x軸に'X'というラベルを付ける
plt.xlabel('X')	'X'というラベルをx軸に付ける
plt.xlabel('X')	x軸に'X'という軸ラベルを付ける
plt.xlabel('X')	'X'をx軸に付ける
plt.xlabel('X')	x軸に'X'軸ラベルを加える
plt.xlabel('X')	x軸に軸ラベル'X'をつける
plt.xlabel('X')	x軸に'X'ラベルを付ける
plt.xlabel('X')	x軸に'X'を付ける
plt.xlabel('X')	x軸に'X'を加える
plt.xlabel('X')	'X'をx軸に加える
plt.xlabel('X')	x軸に'X'軸ラベルをつける
plt.xlabel('X')	軸ラベル'X'をx軸につける
plt.xlabel('X')	x軸に'X'をつける
plt.xlabel('X')	'X'軸ラベルをx軸に付ける
plt.ylabel('Y')	y軸の軸ラベルを'Y'に指定する
plt.ylabel('Y')	y軸のラベルを'Y'と指定する
plt.ylabel('Y')	y軸の軸ラベルを'Y'にする
plt.ylabel('Y')	y軸のラベルを'Y'に指定する
plt.ylabel('Y')	y軸のラベルを'Y'にセットする
plt.ylabel('Y')	y軸の軸ラベルを'Y'に設定する
plt.ylabel('Y')	y軸のラベルを'Y'とセットする
plt.ylabel('Y')	y軸の軸ラベルを'Y'に変更する
plt.ylabel('Y')	y軸のラベルを'Y'にする
plt.ylabel('Y')	y軸のラベルを'Y'と設定する
plt.ylabel('Y')	y軸の軸ラベルを'Y'とセットする
plt.ylabel('Y')	y軸の軸ラベルを'Y'とする
plt.ylabel('Y')	'Y'というラベルをy軸に付ける
plt.ylabel('Y')	'Y'という軸ラベルをy軸に加える
plt.ylabel('Y')	'Y'という軸ラベルをy軸に付ける
plt.ylabel('Y')	y軸に'Y'というラベルを加える
plt.ylabel('Y')	y軸に'Y'というラベルを付ける
plt.ylabel('Y')	'Y'というラベルをy軸に加える
plt.ylabel('Y')	y軸に'Y'という軸ラベルを加える
plt.ylabel('Y')	'Y'というラベルをy軸につける
plt.ylabel('Y')	y軸に'Y'というラベルをつける
plt.ylabel('Y')	y軸に'Y'を加える
plt.ylabel('Y')	y軸に'Y'軸ラベルを加える
plt.ylabel('Y')	y軸に'Y'を付ける
plt.ylabel('Y')	'Y'をy軸に付ける
plt.grid(True)	グリッドをグラフに加える
plt.grid(True)	グリッドをグラフにつける
plt.grid(True)	グリッドをグラフに付ける
plt.grid(True)	グラフにグリッドを付ける
plt.legend()	凡例を加える
plt.legend()	凡例を付ける
plt.legend()	凡例をつける
plt.legend()	グラフ内に凡例を付ける
plt.legend()	グラフ内に凡例を加える
plt.legend(loc = 'best')	凡例をグラフ内の最適な位置につける
plt.legend(loc = 'best')	凡例を最適な位置に付ける
plt.legend(loc = 'best')	凡例を最適な位置に加える
plt.legend(loc = 'best')	凡例を最適な位置につける
plt.subplot(x, y, 2)	x行y列の2つ目のグラフ指定
plt.scatter(x, y)	xとyの散布図をプロットする
plt.scatter(x, y)	xとyの散布図を表示する
plt.scatter(x, y)	xとyの散布図を描写する
plt.scatter(x, y)	xとyの散布図を描く
plt.plot(x, y, label="test")	ラベルを"test"として、xとyのグラフをプロットする
plt.plot(x, y, label="test")	ラベルを"test"として、xとyの折れ線グラフをプロットする
plt.plot(x, y, label="test")	ラベルを"test"として、xとyのグラフを描画する
plt.plot(x, y, label="test")	ラベルを"test"として、xとyの折れ線グラフを描画する
plt.plot(x, y, color="	グラフの色を"
plt.plot(x, y, color="	色を"
plt.plot(x, y, color=(e00))	色をe00として、xとyのグラフを描く
plt.plot(x, y, color=(e00))	グラフの色をe00RGB値として、xとyの折れ線グラフを描く
plt.plot(x, y, color=(e00))	グラフの色をRGB値e00として、xとyのグラフを描写する
plt.plot(x, y, color=(e00))	色をe00として、xとyのグラフを表示する
plt.plot(x, y, color=(e00))	色をe00RGB値として、xとyのグラフをプロットする
plt.plot(x, y, color=(e00))	色をe00として、xとyの折れ線グラフを描画する
plt.plot(x, y, color=(e00))	グラフの色をe00として、xとyの折れ線グラフをプロットする
plt.plot(x, y, color=(e00))	色をe00として、xとyの折れ線グラフをプロットする
plt.plot(x, y, color=(e00))	グラフの色をRGB値e00として、xとyのグラフを描く
plt.plot(x, y, color=(e00))	グラフの色をe00RGB値として、xとyの折れ線グラフを表示する
plt.plot(x, y, color=(e00))	色をe00として、xとyのグラフをプロットする
plt.plot(x, y, color=(e00))	グラフの色をe00として、xとyのグラフを描画する
plt.plot(x, y, color=(e00))	グラフの色をe00として、xとyのグラフを描写する
plt.plot(x, y, color=(e00))	グラフの色をe00RGB値として、xとyのグラフをプロットする
plt.plot(x, y, color=(e00))	グラフの色をe00RGB値として、xとyの折れ線グラフを描写する
plt.plot(x, y, color=(e00))	色をe00RGB値として、xとyの折れ線グラフを描写する
plt.plot(x, y, color=(e00))	色をRGB値e00として、xとyのグラフをプロットする
plt.plot(x, y, color=(e00))	グラフの色をe00RGB値として、xとyの折れ線グラフを描画する
plt.plot(x, y, color=(e00))	色をRGB値e00として、xとyのグラフを表示する
plt.hist(x)	xのヒストグラムを描画する
plt.hist(x)	xのヒストグラムをプロットする
plt.hist(x, bins=60)	ビンを60として、xのヒストグラムを描画する
plt.hist(x, bins=60)	区関の数を60として、xのヒストグラムを描画する
plt.hist(x, bins=60)	ビンの数を60として、xのヒストグラムを描画する
plt.hist(x, bins=60)	区関の数を60として、xのヒストグラムを描写する
plt.hist(x, bins=60)	ビンの数を60として、xのヒストグラムを描く
plt.hist(x, bins=60)	ビンを60として、xのヒストグラムを描写する
plt.hist(x, bins=60)	ビンを60として、xのヒストグラムをプロットする
plt.hist(x, bins=60)	ビンの数を60として、xのヒストグラムをプロットする
plt.hist(x, range = (20, 80))	値のレンジを20から80として、xのヒストグラムをプロットする
plt.hist(x, range = (20, 80))	レンジを20から80として、xのヒストグラムをプロットする
plt.hist(x, range = (20, 80))	値の範囲を20から80として、xのヒストグラムをプロットする
plt.hist(x, range = (20, 80))	値の範囲を20から80として、xのヒストグラムを表示する
plt.hist(x, range = (20, 80))	レンジを20から80として、xのヒストグラムを描画する
plt.hist(x, range = (20, 80))	値のレンジを20から80として、xのヒストグラムを描画する
plt.hist(x, range = (20, 80))	範囲を20から80として、xのヒストグラムをプロットする
plt.hist(x, range = (20, 80))	レンジを20から80として、xのヒストグラムを描く
plt.hist(x, range = (20, 80))	範囲を20から80として、xのヒストグラムを描画する
plt.hist(df['absences'])	表dfの'absences'についてのヒストグラムを描画する
plt.hist(df['absences'])	表データdfの'absences'についてのヒストグラムをプロットする
plt.hist(df['absences'])	表dfの'absences'についてのヒストグラムを表示する
plt.hist(df['absences'])	dfの'absences'についてのヒストグラムをプロットする
plt.hist(df['absences'])	データフレームdfの'absences'についてのヒストグラムを描く
plt.hist(df['absences'])	データフレームdfのコラム'absences'についてのヒストグラムを描画する
plt.hist(df['absences'])	dfの'absences'についてのヒストグラムを表示する
plt.hist(df['absences'])	データフレームdfの'absences'カラムについてのヒストグラムを描画する
plt.hist(df['absences'])	表dfの'absences'についてのヒストグラムをプロットする
plt.hist(df['absences'])	表dfの'absences'列についてのヒストグラムを描画する
plt.hist(df['absences'])	データフレームdfの列'absences'についてのヒストグラムをプロットする
plt.hist(df['absences'])	データフレームdfの'absences'についてのヒストグラムを表示する
plt.hist(df['absences'])	データフレームdfの'absences'列についてのヒストグラムを表示する
plt.hist(df['absences'])	表データdfの'absences'についてのヒストグラムを描写する
plt.hist(df['absences'])	表データdfの'absences'表属性についてのヒストグラムを表示する
plt.hist(df['absences'])	データフレームdfの'absences'についてのヒストグラムを描画する
plt.hist(df['absences'])	dfの表属性'absences'についてのヒストグラムをプロットする
plt.hist(df['absences'])	データフレームdfの'absences'コラムについてのヒストグラムを描画する
plt.hist(df['absences'])	表データdfの列'absences'についてのヒストグラムをプロットする
plt.hist(df['absences'])	表データdfの'absences'表属性についてのヒストグラムを描写する
plt.hist(df['absences'])	dfの'absences'についてのヒストグラムを描画する
plt.hist(df['absences'])	表dfの列'absences'についてのヒストグラムをプロットする
plt.boxplot(df['absences'])	表データdfの'absences'についての箱ひげ図を描写する
plt.boxplot(df['absences'])	dfの'absences'についての箱ひげ図をプロットする
plt.boxplot(df['absences'])	表dfの'absences'についての箱ひげ図をプロットする
plt.boxplot(df['absences'])	表データdfの'absences'についての箱ひげ図を表示する
plt.boxplot(df['absences'])	データフレームdfの'absences'についての箱ひげ図をプロットする
plt.boxplot(df['absences'])	dfの'absences'についての箱ひげ図を描画する
plt.boxplot(df['absences'])	データフレームdfの'absences'についての箱ひげ図を描画する
plt.boxplot(df['absences'])	表データdfの'absences'についての箱ひげ図をプロットする
plt.boxplot(df['absences'])	表dfの列'absences'についての箱ひげ図をプロットする
plt.boxplot(df['absences'])	データフレームdfの'absences'についての箱ひげ図を描写する
plt.boxplot(df['absences'])	dfの'absences'についての箱ひげ図を表示する
plt.boxplot(df['absences'])	表データdfの'absences'についての箱ひげ図を描画する
plt.boxplot(df['absences'])	dfのコラム'absences'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'表属性と'G2'表属性と'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'と列'G2'と'G3'列についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'表属性と表属性'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfのカラム'G1'と'G2'カラムと'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの列'G1'と'G2'と'G3'列についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'と'G2'と'G3'についての箱ひげ図を描く
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'と'G2'と'G3'カラムについての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'と'G2'表属性と表属性'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'表属性と'G2'表属性と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの列'G1'と'G2'と列'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'コラムと'G2'とコラム'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfのカラム'G1'とカラム'G2'と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'カラムと'G2'と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'とコラム'G2'と'G3'コラムについての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'と'G3'についての箱ひげ図を描写する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'と'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'列と'G2'と列'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と表属性'G2'と'G3'についての箱ひげ図を描写する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'とカラム'G2'と'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'コラムと'G2'と'G3'コラムについての箱ひげ図を描く
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'カラムと'G2'カラムと'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と列'G2'と列'G3'についての箱ひげ図を描く
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'と'G2'と'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'カラムと'G2'と'G3'カラムについての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'とコラム'G2'とコラム'G3'についての箱ひげ図を描く
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'とカラム'G2'と'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'と'G2'カラムと'G3'カラムについての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの表属性'G1'と'G2'と'G3'表属性についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と'G2'とカラム'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'列と'G2'と'G3'列についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'と'G3'についての箱ひげ図を描く
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と'G2'カラムとカラム'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'と'G2'と列'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの表属性'G1'と'G2'表属性と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と'G2'カラムと'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'カラムと'G3'カラムについての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'と'G3'カラムについての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'表属性と'G2'と'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'カラムと'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'と'G2'と'G3'カラムについての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'コラムとコラム'G2'と'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	dfの'G1'と'G2'コラムと'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの'G1'とコラム'G2'と'G3'コラムについての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と'G2'と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの表属性'G1'と'G2'と'G3'についての箱ひげ図を描画する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'と'G2'と'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と'G2'と'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'表属性と'G2'と'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	データフレームdfの表属性'G1'と'G2'と表属性'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの'G1'と'G2'と列'G3'についての箱ひげ図をプロットする
plt.boxplot([df['G1'], df['G2'], df['G3']])	表dfの'G1'と'G2'と'G3'についての箱ひげ図を表示する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfのカラム'G1'と'G2'カラムとカラム'G3'についての箱ひげ図を描く
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの表属性'G1'と'G2'と'G3'についての箱ひげ図を描写する
plt.boxplot([df['G1'], df['G2'], df['G3']])	表データdfの表属性'G1'と'G2'と'G3'についての箱ひげ図をプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'カラムと'G2'カラムと'G3'について関係性を一気に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'列と'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの列'G1'と'G2'と'G3'列について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfのカラム'G1'と'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfのカラム'G1'と'G2'とカラム'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'コラムと'G2'コラムとコラム'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'コラムについて関係性を一気に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と列'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と表属性'G2'と'G3'表属性について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'表属性と'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'コラムと'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの列'G1'と列'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'カラムと'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの表属性'G1'と'G2'と表属性'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'とカラム'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfのコラム'G1'と'G2'コラムと'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'列と'G3'列について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'とカラム'G2'とカラム'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'カラムと'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'カラムと'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'について関係性を一度に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と'G3'コラムについて関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'とコラム'G2'と'G3'コラムについて関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'列と列'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'列と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'カラムと'G2'と'G3'カラムについて関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfのカラム'G1'と'G2'と'G3'カラムについて関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'列と'G3'について関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	dfのコラム'G1'と'G2'コラムと'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfのコラム'G1'と'G2'と'G3'コラムについて関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの表属性'G1'と'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'コラムと'G2'とコラム'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と'G3'表属性について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの表属性'G1'と'G2'表属性と'G3'表属性について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'表属性と'G3'表属性について関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'表属性と'G2'表属性と表属性'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'とカラム'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfのコラム'G1'と'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'列と列'G2'と'G3'列について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'コラムと'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'表属性と'G3'表属性について関係性を一度に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'列と'G2'列と列'G3'について関係性を一度に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfのカラム'G1'と'G2'と'G3'について関係性を一度に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'表属性と'G2'表属性と表属性'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'とコラム'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'とカラム'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'カラムと'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と表属性'G2'と'G3'について関係性を一気に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と表属性'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'コラムと'G2'コラムと'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と表属性'G2'と表属性'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'とコラム'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'コラムと'G2'と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'表属性と'G2'と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'コラムと'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'とコラム'G2'とコラム'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'コラムと'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfのカラム'G1'と'G2'カラムと'G3'について関係性を一度に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'コラムとコラム'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'について関係性を一気に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'と'G3'表属性について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfのコラム'G1'と'G2'コラムとコラム'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfのコラム'G1'と'G2'と'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'列と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'カラムと'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'列と列'G2'と'G3'について関係性を一気に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'コラムと'G2'とコラム'G3'について関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'表属性と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfのコラム'G1'と'G2'と'G3'について関係性を一気に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの列'G1'と'G2'と'G3'列について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'列について関係性を一気に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'コラムと'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfのカラム'G1'と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と表属性'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'列と'G3'列について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの表属性'G1'と'G2'と表属性'G3'について関係性を一気に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの表属性'G1'と表属性'G2'と表属性'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'表属性について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの表属性'G1'と'G2'と表属性'G3'について関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'カラムと'G2'カラムと'G3'カラムについて関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'カラムと'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と列'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'とコラム'G3'について関係性を一度に描く
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'と'G2'コラムと'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfのカラム'G1'と'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'カラムと'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と'G3'表属性について関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	表データdfの'G1'と'G2'と'G3'について関係性を一気に描写する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfのカラム'G1'と'G2'と'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'カラムについて関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'表属性と'G2'と表属性'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と列'G3'について関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfのカラム'G1'と'G2'と'G3'について関係性を一気に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	データフレームdfの'G1'と'G2'と'G3'コラムについて関係性を一度に表示する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'表属性と表属性'G2'と'G3'について関係性を一度に描画する
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'と'G2'と'G3'コラムについて関係性を一度にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	dfの'G1'表属性と表属性'G2'と'G3'について関係性を一気にプロットする
sns.pairplot(df[['G1', 'G2', 'G3']])	表dfの'G1'とカラム'G2'と'G3'について関係性を一度に描画する
plt.bar(x, y)	x軸をxとしたyの棒グラフを描画する
plt.bar(x, y)	x軸をxとしたyの棒グラフをプロットする
plt.bar(x, y)	x軸をxとしたyの棒グラフを表示する
plt.bar(x, y, width = 0.5)	グラフ幅を0.5として、x軸をxとしたyの棒グラフを表示する
plt.bar(x, y, width = 0.5)	グラフ幅を0.5として、x軸をxとしたyの棒グラフを描画する
plt.bar(x, y, width = 0.5)	グラフ幅を0.5として、x軸をxとしたyの棒グラフを描写する
plt.bar(x, y, width = 0.5)	グラフ幅を0.5として、x軸をxとしたyの棒グラフをプロットする
plt.bar(x, y, align='center')	棒グラフの位置を真ん中として、x軸をxとしたyの棒グラフを描写する
plt.bar(x, y, align='center')	棒グラフの位置を真ん中として、x軸をxとしたyの棒グラフをプロットする
plt.bar(x, y, align='center')	棒グラフの位置を真ん中として、x軸をxとしたyの棒グラフを描画する
plt.xticks(x, ['A Class', 'B Class', 'C Class'])	x軸のラベルをxから'A Class'、'B Class'、'C Class'へ変更する
plt.barh(y, x, align = 'center')	棒グラフの位置を真ん中として、y軸をyとしたxの棒グラフを描画する
plt.barh(y, x, align = 'center')	棒グラフの位置を真ん中として、y軸をyとしたxの棒グラフを表示する
plt.barh(y, x, align = 'center')	棒グラフの位置を真ん中として、y軸をyとしたxの棒グラフを描写する
plt.barh(y, x, align = 'center')	棒グラフの位置を真ん中として、y軸をyとしたxの棒グラフをプロットする
plt.barh(y, x, align = 'center')	棒グラフの位置を真ん中として、y軸をyとしたxの棒グラフを描く
plt.yticks(y, ['A Class','B Class','C Class'])	y軸のラベルをyから'A Class'、'B Class'、'C Class'へ変更する
plt.pie(x)	xの円グラフを描画する
plt.pie(x)	xの円グラフをプロットする
plt.pie(x)	xの円グラフを表示する
plt.pie(x)	xの円グラフを描写する
plt.pie(x)	xの円グラフを描く
plt.savefig("foo.png")	"foo.png"としてグラフを保存する
plt.savefig("foo.png")	グラフを"foo.png"として保存する
plt.savefig("foo.png")	"foo.png"としてプロットを保存する
plt.savefig("foo.png")	図を"foo.png"として保存する
plt.savefig("foo.png")	"foo.png"として図を保存する
plt.savefig("foo.png")	プロットを"foo.png"として保存する
plt.savefig("foo.png")	"foo.png"という名前でグラフを保存する
plt.savefig("foo.png")	グラフを"foo.png"という名前で保存する
plt.savefig("foo.png")	"foo.png"という名前でプロットを保存する
plt.savefig("foo.png")	"foo.png"という名前で図を保存する
plt.savefig("foo.png")	プロットを"foo.png"という名前で保存する
plt.show()	プロットを表示する
plt.show()	グラフを表示する
plt.show()	プロットを描画する
plt.show()	グラフを描画する
plt.show()	図を表示する
