表 <B> の <a> をソートして、置き換える	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> の表属性 <c> を四分位数ごとで分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	df = pd . qcut ( <B> [ <c> ] , 4 )
<B> のカラム <a> をインデックスとして設定する	<B> . set_index ( <a> )	<B> . set_index ( <a> )
データフレーム <C> のカラム <b> と <a> を逆順にソートして、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> の <b> とコラム <c> を落として、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
<B> をインデックスを元にソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<B> とデータフレーム <C> に対して、 <d> カラムをキーとしてデータを内部結合して、 <A> に代入する	<A> = pd . merge ( <B> , <C> , on = <d> )	@option <A> = pd . merge ( <B> , <C> , on = <d> )
<E> の列名を <d> から <c> に、 <b> から <a> に変更して、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <A> から重複する値がある行をドロップし、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
表データ <A> の <b> に重複があるのかどうかチェック	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <B> 内の未入力の値を直前の行の値で補い、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	'ffill' = <B> . fillna ( method = 'ffill' )
グラフにグリッドを付ける	plt . grid ( True )	@option color = True )
<A> のカラムにある <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
表データ <B> の未記入の値をドロップを <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <A> の <b> と <c> 表属性を逆順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
<a> 区切りで CSV ファイル <b> を読み込み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	df = pd . read_csv ( <b> , sep = <a> )
表 <A> の <b> を欠損に置換し、欠損がある行を落とし、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> の <b> と <c> をドロップして、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
データフレーム <A> 内の未記入の値がある行を落とし、 <B> にする	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
データフレーム <B> の <a> を欠損に置換し、欠損が存在する行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
<A> で重複した行数を表示する	<A> . duplicated ( ) . sum ( )	plt . duplicated ( <A> ) . sum ( )
<C> の <b> が <a> のデータ	<C> [ <C> [ <b> ] == <a> ]	<A> [ <C> [ <b> ] == <a> ]
データフレーム <A> と <B> データフレームを横に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
<A> 内の列それぞれに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
エクセルの <a> を読み込んで表にする	pd . read_excel ( <a> )	<B> . to_excel ( <a> )
表データ <C> 内の <b> と <a> に重複はあるのか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <C> の <b> ごとに <a> コラムの平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表 <B> 内の <a> に重複はあるのかどうか確認	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表データ <B> の中の NaN を <C> として、 <A> に代入する	<A> = <B> . fillna ( <C> )	@option <C> = <B> . fillna ( <A> )
表データ <B> の中の <a> を NaN に置換し、 NaN が存在する行を削除を <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> の <a> を落とし、インプレースする	<B> . drop ( <a> , axis = 1 , inplace = True )	drop <B> . drop ( <a> , axis = 1 , inplace = True )
データフレーム <A> の <b> の名前を <c> に、 <d> の名前を <e> にリネームし、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <B> 中の列それぞれにある <a> の個数の合計値を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
エクセルファイル <b> の <a> 番目のシートを指定して読み込み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
<B> を <a> に書き出す	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
<a> という名前のエクセルデータの全部のシートを読んで、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	step = pd . read_excel ( <a> , sheet_name = None )
表 <A> の <b> を並び替え、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
<B> の <a> カラムの月を表示する	<B> [ <a> ] . dt . month	[ <B> [ <a> ] . dt . month
一番左の列を位置に指定して、 <a> から読み込んで、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	'outer' = pd . merge ( <A> , <B> , how = 'outer' )
<A> のカラム <b> と <c> カラムの相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
表データ <A> を one - hot 表現にする	pd . get_dummies ( <A> )	) pd . get_dummies ( <A> )
凡例を加える	plt . legend ( )	<A> . None ( )
<B> の列 <a> を昇順でソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<A> 中の重複する値がある行を取り除いて、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<B> とデータフレーム <A> を縦方向で結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<B> ( データフレーム ) の <a> コラムを順番になるようにし、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<b> と <c> を値が大きい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )
CSV ファイル <a> ( ファイル名 ) を表データとして読む	pd . read_csv ( <a> )	<B> pd . read_csv ( <a> )
表 <A> の行数や列数を見る	<A> . shape	<A> . isnull ( ) . sum ( )
データフレーム <A> の <b> をインデックス、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	index . pivot_table ( index = <b> , columns = <c> )
<B> ( データフレーム ) の <a> コラムを値が小さい順にし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<E> . sort_values ( <a> , inplace = True )
<A> 中の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<A> ( データフレーム ) の <b> と <c> を値が大きい順にして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> 中の NaN の合計を算出する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<A> の <d> について、 <b> を位置、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<A> ( データフレーム ) の <b> 列をソートを <A> に代入する	<A> = <A> . sort_values ( <b> )	subset = <A> . sort_values ( <b> )
表 <B> の列 <a> に重複がある行を消して、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	step <B> = <B> . drop_duplicates ( subset = <a> )
<B> を <a> を元に昇順でソートし、置き換える	<B> . sort_values ( <a> , inplace = True )	<E> = <B> . sort_values ( <a> )
左側のデータのインデックスと右側のデータの <a> をキーとして、 <C> 表と表 <B> をマージして、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<B> = pd . merge ( <C> , left_index = True , right_on = <a> )
データフレーム <A> のコラム <b> を落とす	<A> . drop ( <b> , axis = 1 )	<A> . drop ( <b> , axis = 1 )
<A> の <b> カラムと <c> と <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	sns . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
分割数を <C> 、ビンの名前を整数値として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
列番号 <a> をインデックスにして、 <b> から読み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	index_col <C> = pd . read_csv ( <b> , index_col = <a> )
表 <B> 内のコラム <a> に重複はあるかどうかチェックを見る	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表 <A> の最初の <b> 行を確認する	<A> . tail ( <b> )	x <A> . head ( <b> )
表データ <A> の未記入の値を表データ <A> の平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表 <A> の全ての列の重複する行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<B> の <a> 表属性の各要素の出現回数を確認する	<B> [ <a> ] . value_counts ( )	<E> [ <B> [ <a> ] . value_counts ( )
表 <A> の行の名前を <b> から <c> にリネームして、 <A> にする	<A> = <A> . rename ( index = { <b> : <c> } )	<E> = <A> . rename ( index = { <b> : <c> } )
左側のデータの位置と右側のデータのコラム <a> をキーとして、表データ <C> と <B> 表データをマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> の中の <a> を欠損値に置換し、欠損値がある行を消して、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> . replace ( <a> , np . nan ) . dropna ( inplace = True )
データフレーム <A> の NaN を <B> とする	<A> . fillna ( <B> )	fillna <A> <B> . fillna ( <B> )
データフレーム <B> と <A> を縦向きにくっつける	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
データフレーム <B> 内の重複する行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
<A> の <b> の値を昇順でソートする	<A> . sort_values ( <b> )	<B> . sort_values ( <b> )
表 <B> から重複する行を取り除き、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表データ <B> 内にある <a> を NaN とする	<B> . replace ( <a> , np . nan )	scatter <B> . replace ( <a> , np . nan )
<A> ( データフレーム ) の <b> 表属性と <c> を大きい順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
先頭の列を位置に設定して、 <b> をデータフレームとして読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<e> <A> = pd . read_csv ( <b> , index_col = 0 )
<A> の <d> について、カラム <b> をインデックス、 <c> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
データフレーム <B> 中の未入力の値を <A> として、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
データフレーム <B> 中の <a> に重複が存在するのか確認を見る	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行をドロップを <A> とする	<A> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
データフレーム <A> を列 <b> の値を元に昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<a> と <b> を降順に並び替えて、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
表 <A> の <c> 列の時間を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . hour	<b> <A> [ <c> ] = <A> [ <b> ] . dt . hour
表 <A> の <b> と列 <c> を降順にソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> 内の <a> コラムに重複はあるのか見る	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
左側のデータのインデックスと右側のデータの <d> をキーとして、 <B> と <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表 <A> の中の重複している行を落として、 <A> に代入する	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
表 <B> 中の未記入の値を <A> とし、 <C> とする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
データフレーム <A> を位置に基づいてソートし、 <B> に代入する	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
データフレーム <A> 中の列に存在する <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <B> の表属性 <a> を削除を <B> にする	<B> = <B> . drop ( <a> , axis = 1 )	drop <B> = <B> . drop ( <a> , axis = 1 )
<A> の先頭の 5 行を確認する	<A> . head ( )	0 . head ( <A> )
全結合で <B> データフレームと <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	@option <C> = pd . merge ( <B> , <A> , how = 'outer' )
<A> の <b> 表属性の値を昇順でソートして、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <E> の <d> カラムの名前を <c> に、カラム <b> の名前を <a> にリネームし、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
エクセルファイル <a> の全てのシートをデータフレームとして読み、 <B> にする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
<A> 内の NaN を表データ <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <B> の振り直して、元のインデックスを削除し、 <A> にする	<A> = <B> . reset_index ( drop = True )	<C> <A> = <B> . reset_index ( drop = True )
<b> という名前のエクセルの <a> 番目のシートを表データに格納し、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
インデックスと <d> を項目名としてデータフレーム <B> と <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
<a> と <b> 表属性を大から小へとして、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
<a> と <b> に重複はあるかどうかチェック	df . duplicated ( subset = [ <a> , <b> ] )	<A> . duplicated ( subset = [ <a> , <b> ] )
表データ <B> 全体を <a> コラムを軸にソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<E> . sort_values ( <a> , inplace = True )
データフレーム <B> 内の <c> を未記入の値に置換し、未記入の値が存在する行を削除し、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
エクセルファイル <b> の <a> から読んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	@option <b> = pd . read_excel ( <b> , sheet_name = <a> )
表データ <A> の <b> と <c> と <d> について関係性を一度に描写する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> = <A> . pairplot ( [ <b> , <c> , <d> ] ] )
データフレーム <C> のコラム <a> の前後の行の差分を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )	<A> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )
そこで、マーカーのエッジの色を赤とする	@option markeredgecolor = 'red'	<B> = pd . merge ( df1 , df2 , how = 'outer' )
データフレーム <B> と <A> を縦方向にマージして、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<B> のコラム <a> を中央値でビン分割して、 <C> とする	<C> = pd . qcut ( <B> [ <a> ] , 2 )	df = pd . qcut ( <B> [ <a> ] , 2 )
全結合で <B> 表と <A> を結合して、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
<a> と <b> を降順にソートする	df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> . sort_values ( [ <a> , <b> ] , ascending = False )
表データ <B> の <a> カラムをインデックスとする	<B> . set_index ( <a> )	<B> . set_index ( <a> )
データフレーム <A> の全ての列の重複する行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
データフレーム <B> 内のそれぞれの列に存在する <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> 中の欠損値を <A> とし、 <C> に代入する	<C> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表データ <A> の <b> 内の前後の行の差分を算出する	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <b> ] = <A> [ <a> ] . diff ( periods = 1 )
表データ <B> をエクセルファイル <a> という名前で書き出す	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
<B> 中の <a> を NaN に置換し、 NaN が存在する行をドロップして、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> 全体をカラム <b> に基づいてソートして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <B> 全体を <a> を軸に並び替えて、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表属性 <b> と <a> を降順にし、 <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 中の <b> に重複があるかどうかチェックする	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
エクセル <b> をデータフレームに格納し、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> )
表データ <B> の中の未入力の値を <A> とし、 <C> とする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
<A> をコラム <b> の値でソートして、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> の列 <b> についての標準偏差を得る	<A> [ <b> ] . std ( )	<b> <A> [ <b> ] . std ( )
<a> という軸ラベルを x 軸に付ける	plt . xlabel ( <a> )	xlabel . xlabel ( <a> )
エクセルファイル <b> から読み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	df = pd . read_excel ( <b> , sheet_name = None )
<a> と <b> に重複はあるのか表示してみる	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
表データとしてファイル名 <a> をカンマ区切りで読む	pd . read_csv ( <a> , sep = ',' )	pd . read_csv ( <a> , sep = ',' )
<a> 番目の列をインデックスにして、 <b> ファイルを表に格納する	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表データ <B> の列それぞれに存在する <a> の個数を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> の <b> カラムと <c> を消し、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <B> と表 <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
表データ <B> を <a> を軸にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> のそれぞれの列にある <b> の個数の合計を表示する	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
表データ <A> 全体をインデックスを軸にソートを <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
フォーマットを指定して、 <A> の <b> を日付型に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	'%Y-%m-%d' = pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )
表 <A> の <b> と <c> を消す	<A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> の <b> に重複があるか確認	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表データ <E> の列 <d> の名前を <c> に、 <b> の名前を <a> に変更し、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
先頭の列をインデックスに設定して、 <a> を表データに格納して、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
<A> で重複した行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> ( データフレーム ) の <b> コラムをソートを <A> にする	<A> = <A> . sort_values ( <b> )	subset = <A> . sort_values ( <b> )
<C> の表属性 <a> の月を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<A> [ <b> ] = <C> [ <a> ] . dt . month
表 <B> 全体を <a> の値でソートし、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> 全体をインデックスを元に並び替え、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<A> 全体を <b> の値を元に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
エクセルファイル <a> の <b> 番目のシートから読み込む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
ビン数を <D> 、ビンのラベルを 0 始まりの連番として、 <B> データフレームの <c> 列をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
<a> をキーとして、 <C> と <B> を結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	@option <D> = pd . merge ( <C> , <B> , on = <a> )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行をドロップして、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	<E> = <A> . drop_duplicates ( keep = False )
ビン数を <C> 、ビンのラベルを <D> リストとして、 <A> データフレームのコラム <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
<C> のインデックス名を <b> から <a> に変更して、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	<A> = <C> . rename ( index = { <b> : <a> } )
表データ <D> の <a> について、 <c> 列をインデックス、 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <B> と表 <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
データフレーム <B> 内の <c> に重複がある行を削除して、 <A> に代入する	<A> = <B> . drop_duplicates ( subset = <c> )	<D> = <B> . drop_duplicates ( subset = <c> )
表データ <C> の <b> を位置、 <a> をコラムとしたピボットテーブルを作成して、 <D> に代入する	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<F> = <C> . pivot_table ( index = <b> , columns = <a> )
表データ <A> の <b> をダミー変数化する	pd . get_dummies ( <A> [ <b> ] )	) pd . get_dummies ( <A> [ <b> ] )
表 <B> と <A> 表データを縦にマージする	pd . concat ( [ <B> , <A> ] )	@option pd . concat ( [ <B> , <A> ] )
データフレーム <A> から重複する値がある行を取り除いて、再代入する	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<b> というエクセルデータの <c> 番目のシートを読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> <A> = pd . read_excel ( <b> , sheet_name = <c> )
表 <B> と表データ <A> を縦方向に連結	pd . concat ( [ <B> , <A> ] )	plt pd . concat ( [ <B> , <A> ] )
表 <C> と <B> 表データに対して、 <a> を項目名としてデータを結合する	pd . merge ( <C> , <B> , on = <a> )	sheet_name pd . merge ( <C> , <B> , on = <a> )
表 <A> の未記入の値がある行を削除し、 <B> に代入する	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
表 <A> の中の重複している行を落とし、再代入する	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
表データ <A> と <B> 表を横に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
表 <B> 全体をコラム <a> の値に沿ってソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
<B> 内の <a> を欠損に置換し、欠損が存在する行をドロップして、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> 内の未記入の値の数を見る	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表データ <A> を転置する	<A> . T	<A> . T
<B> 内の <a> 表属性に重複があるのかどうか確認する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
データフレーム <A> のコラム <b> の名前を <c> に、 <d> の名前を <e> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
重複した最後の行を残して <A> ( データフレーム ) 内の重複した行を落として、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
データフレーム <A> の <b> についての箱ひげ図を描画する	plt . boxplot ( <A> [ <b> ] )	@option plt . boxplot ( <A> [ <b> ] )
データフレーム <B> の <e> について、 <c> カラムをインデックス、カラム <d> をカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
データフレーム <C> 内の <b> と <a> 表属性に重複があるのかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<c> 番目の列を位置に設定して、 <b> をデータフレームに格納して、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<e> <A> = pd . read_csv ( <b> , index_col = <c> )
表 <A> の中のカテゴリ変数をダミー変数化する	pd . get_dummies ( <A> )	) pd . get_dummies ( <A> )
<A> ( データフレーム ) の <b> と <c> を逆順にソートし、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
カラム <b> と <a> カラムを値が大きい順にして、再代入する	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = df . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> の <a> に重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
一番左の列をインデックスに設定して、ファイル名 <a> からデータフレームとを読み込んで、 <B> に代入する	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
先頭の列を位置として、 <a> を読み込み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
<b> というエクセルファイルの <a> を表に格納する	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
x 軸に <a> 軸ラベルをつける	plt . xlabel ( <a> )	<B> plt . xlabel ( <a> )
表として <b> 区切りで <a> を読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
データフレーム <A> をインデックスを軸にソートして、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<A> の重複する行を削除し、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <B> の <a> の秒	<B> [ <a> ] . dt . second	second <B> [ <a> ] . dt . second
<a> というエクセルの全てのシートを読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<A> の重複する行を取り除く	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<B> ( データフレーム ) のカラム <c> を順番になるように並び替え、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
一番左の列を位置に、 <a> をデータフレームとして読む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
<a> というエクセルファイルの <b> をデータフレームとして読む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
一番左の列をインデックスに、 <a> を表データに格納する	pd . read_csv ( <a> , index_col = 0 )	'left' pd . read_csv ( <a> , index_col = 0 )
表 <C> 内のカラム <b> と <a> カラムに重複はあるのかどうか	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<B> をコラム <a> の値を元に並び替え、置き換える	<B> = <B> . sort_values ( <a> )	<A> . sort_values ( <a> , inplace = True )
表 <B> の中の未入力の値を <A> とする	<B> . fillna ( <A> )	scatter <B> . fillna ( <A> )
データフレーム <A> の <b> 行を調べる	<A> . head ( <b> )	<A> . head ( <b> )
<A> の中に存在する <b> を欠損とする	<A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan )
<A> の重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> 全体を <b> の値を元に昇順でソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
データフレーム <B> と表 <A> を横方向にくっつける	pd . merge ( <B> , <A> )	<B> . pd ( <A> , <B> )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <A> 表を結合する	pd . merge ( <B> , <A> , how = 'outer' )	pd . merge ( <B> , <A> , how = 'outer' )
データフレーム <B> の <a> 内の前後の行の差分を求める	<B> [ <a> ] . diff ( periods = 1 )	<B> [ <a> ] . diff ( periods = 1 )
<B> 内にある <a> を未入力の値に置換し、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
マーカーの大きさを <a> とする	markersize = <a>	plt . figure ( figsize = ( <a> , <b> ) )
<a> という名前のエクセルデータのシート全てから読み込む	pd . read_excel ( <a> , sheet_name = None )	sheet_name pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> 中の NaN を含む行を消して、 <A> とする	<A> = <A> . dropna ( )	<C> = <A> . dropna ( )
データフレーム <A> 全体を <b> を軸に並び替えて、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
データフレーム <A> の未入力の値の数を算出する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表 <A> 内の未入力の値を直前の行の値で補い、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	<A> = <A> . fillna ( method = 'ffill' )
表 <A> の <d> カラムについて、 <b> カラムをインデックス、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
そのとき、マーカーの色を紫色とする	@option markerfacecolor = 'purple'	@option markerfacecolor = 'purple'
表データ <A> の列 <b> の名前を <c> に、 <d> 列の名前を <e> にリネームし、 <A> にする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <B> とデータフレーム <A> を縦方向で結合して、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<B> と表データ <A> を縦方向にくっつけ、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
データフレーム <A> の <b> についてのヒストグラムをプロットする	plt . hist ( <A> [ <b> ] )	@option plt . hist ( <A> [ <b> ] )
ビン数を <A> として、表データ <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	sheet_name pd . cut ( <C> [ <b> ] , <A> )
表 <A> の列 <b> をインデックス、 <c> 列を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	df . pivot_table ( index = <b> , columns = <c> )
表データ <C> の <b> ごとに <a> の個数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
表 <A> の <b> カラムと <c> を削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	axis <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <C> 中の <b> コラムと <a> コラムに重複があるかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> 内の <a> を未記入の値に置換し、未記入の値がある行を消し、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
分割数を <C> として、 <A> の <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	qcut pd . qcut ( <A> [ <b> ] , <C> )
<C> ( データフレーム ) の <b> コラムとコラム <a> を降順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
そのとき、文字コードは shift - jis を使うことにする	@option encoding = 'shift_jis'	'shift_jis' = pd . read_csv ( <a> , encoding = 'shift_jis' )
カンマ区切りで <a> を読んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
表データ <B> 内の欠損を <A> に置き換え、置き換える	<B> = <B> . fillna ( <A> )	df . fillna ( <B> , inplace = True )
表 <B> を <a> という名前にして CSV ファイルで保存する	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
表データ <A> と <B> 表データを縦向きに結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
ビン数を <A> 、ビンの名前を 0 始まりの連番として、表データ <C> の列 <b> をビン分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	<A> = pd . cut ( <C> [ <b> ] , <A> , label = False )
表データ <B> 全体を <a> コラムの値を元にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) から表を読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = ',' )	@option sep = pd . read_csv ( <a> , sep = ',' )
<A> の中の <b> に重複は存在するのか確認を確認する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表 <A> の <b> カラムの曜日の数値型	<A> [ <b> ] . dt . dayofweek	<b> <A> [ <b> ] . dt . dayofweek
表 <A> のカラム <b> についての標準偏差を得る	<A> [ <b> ] . std ( )	df [ <A> [ <b> ] . std ( )
<A> の中の重複した行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表 <A> 中にいくつ欠損値があるか確認する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<D> の <c> と <b> コラムごとに <a> の値の和	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )
表 <A> 内の <b> と <c> に重複があるのかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> 内の未入力の値を直前の行の値で埋め、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	<E> = <A> . fillna ( method = 'ffill' )
<B> の <a> を未記入の値に置換し、未記入の値がある行を削除を <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> の中の欠損値がある行を削除を <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
もし <A> 中の <b> カラムに重複があるならば	if <A> . duplicated ( subset = <b> ) :	<E> = <A> . duplicated ( subset = <b> )
エクセルファイル <b> のシート名 <c> を表データに格納して、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <A> の欠損の数を調べる	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表データ <B> 内のカラムそれぞれにある <a> の個数の合計値を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
フォーマットを指定して、 <B> のカラム <a> を datetime 型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	format pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )
<A> 全体を <b> 表属性を元に昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表データ <B> 中の欠損値を <A> で埋め、 <B> にする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
<A> 中の NaN を表データ <A> の平均値で埋めて、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <B> と <A> を縦方向でマージして、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <A> ] )
表 <A> 内にある <b> を未記入の値に置換し、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
<B> の <a> 表属性を軸にソートして、 <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
データフレーム <B> 中の欠損がある行をドロップを <A> に代入する	<A> = <B> . dropna ( )	loc = <B> . dropna ( )
<A> 中のそれぞれのカラムにある <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
<A> の表属性 <b> が <c> より多いデータを抽出する	<A> [ <A> [ <b> ] >  <c> ]	plt <A> [ <A> [ <b> ] > <c> ]
<c> 区切りで <b> を読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
表 <A> 内の未入力の値を <A> 表の平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> の中の重複している値がある行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	<B> = <A> . drop_duplicates ( )
<C> の <b> コラムが <a> 以下データを得る	<C> [ <C> [ <b> ] <= <a> ]	<D> [ <C> [ <b> ] <= <a> ]
<a> 番目の列を位置として、ファイル名 <b> をデータフレームとして読む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
データフレーム <A> の <b> を未入力の値に置換し、未入力の値がある行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 内の未入力の値を表 <A> の平均値で補って、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	plt . <A> ( <A> , . mean ( ) , inplace = True )
<A> の列名を <b> から <c> に、 <d> から <e> に変更し、置き換える	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
列 <d> を項目名として、 <B> データフレームとデータフレーム <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	df = pd . merge ( <C> , <B> , on = <d> )
データフレーム <A> 全体を <b> を元にソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表データ <A> 全体をインデックスを元に昇順で並び替え、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<B> をインデックスでソートし、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> の <b> カラムと <c> と <d> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> [ [ <b> , <c> , <d> ] ] . corr ( )
表 <B> を <a> という名前で書き出す	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
データフレーム <B> の先頭の <a> 行	<B> . head ( <a> )	head <B> . head ( <a> )
<A> の中の重複している値がある行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<B> の未記入の値を落とし、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <A> の <b> と <c> に重複は存在するのか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表データ <A> の <b> 行目を消して、 <A> とする	<A> = <A> . drop ( <b> )	@option <b> = <A> . drop ( <b> )
棒グラフの位置を真ん中として、 <B> 軸を <B> とした <A> の棒グラフを描画する	plt . bar ( <B> , <A> , align = 'center' )	<A> = pd . merge ( <B> , <A> , align = 'center' )
データフレーム <A> 中の欠損値を表 <A> の平均値で埋めて、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	plt . <A> ( <A> , . mean ( ) , inplace = True )
<B> の <c> 行目をドロップを <A> とする	<A> = <B> . drop ( <c> )	drop <A> = <B> . drop ( <c> )
データフレーム <A> 内の重複した行を落とし、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <B> を <a> の値を元に昇順で並び替え、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
<b> というエクセルデータのシート全てをデータフレームとして読み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
表 <C> の表属性 <a> の分を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . minute	df [ <b> ] = <C> [ <a> ] . dt . minute
<B> ( データフレーム ) のコラム <c> とコラム <d> を降順にして、 <A> に代入する	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表データ <A> 内で重複した行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <D> の <a> について、 <c> 列を位置、 <b> を列としたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データを <a> からタブ区切りで読み込む	pd . read_csv ( <a> , sep = '\t' )	pd . read_csv ( <a> , sep = '\t' )
<A> ( データフレーム ) の列 <b> と列 <c> を大から小へとソートを <A> に代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	loc = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
ファイル <a> を表として読み込んで、 <B> に代入する	<B> = pd . read_csv ( <a> )	step <B> = pd . read_csv ( <a> )
<b> 区切りでデータフレームとして <a> を読む	pd . read_csv ( <a> , sep = <b> )	set_index pd . read_csv ( <a> , sep = <b> )
データフレーム <B> の最初から <a> 行目までを確認する	<B> [ : <a> ]	<B> [ : <a> ]
<A> の <b> 列を軸にソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<b> というエクセルデータのシート名 <a> を表に格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name . read_excel ( <b> , <a> = None )
データフレーム <B> と表 <C> を縦結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表データ <A> の <b> についての中央値	<A> [ <b> ] . median ( )	<b> <A> [ <b> ] . median ( )
データフレーム <A> のコラム <b> と <c> コラムに重複はあるか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<B> 内のそれぞれのカラムに存在する <a> の個数の合計値を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表データ <A> 中の重複しているデータを取得する	<A> [ <A> . duplicated ( ) ]	<B> [ <A> . duplicated ( ) ]
<B> 内の <a> を欠損に置換し、欠損が存在する行を消し、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> 中の欠損を <A> とし、置き換える	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
データフレーム <A> 中の列それぞれにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <A> の <b> が <c> か <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	[ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]
そこで、リトルエンディアンを使う	@option byteorder = "little"	df2 = pd . read_csv ( <a> )
データフレーム <B> の未記入の値を含む行を落とし、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> 内の <b> と <c> コラムに重複はあるかどうか表示してみる	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
表データ <D> の <c> と <b> と <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	sns . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> からデータフレームを <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	read_csv pd . read_csv ( <b> , sep = <a> )
表データ <A> を位置を元にソートし、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<A> の <b> の値を軸に昇順で並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<C> ( データフレーム ) の <b> と <a> を大から小へとして、 <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の <b> についての分散	<A> [ <b> ] . var ( )	<b> <A> [ <b> ] . var ( )
表データ <A> 中の表属性 <b> に重複がある行を消し、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<B> = <A> . drop_duplicates ( subset = <b> )
表 <A> 中の <b> に重複はあるのかどうか見る	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <A> 中の <b> と <c> に重複はあるのか確認	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <B> 内の欠損を落とし、 <A> に代入する	<A> = <B> . dropna ( )	@option <A> = <B> . dropna ( )
<b> という名前のエクセルデータの <a> 番目のシートからデータフレームを読んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	sheet_name <C> = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の <b> の分を表示する	<A> [ <b> ] . dt . minute	<b> <A> [ <b> ] . dt . minute
<C> の <b> が <a> より多いデータを得る	<C> [ <C> [ <b> ] >  <a> ]	plt <C> [ <C> [ <b> ] > <a> ]
データフレーム <A> に存在する <b> を未記入の値に置換し、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
データフレーム <A> の中の欠損がある行を削除して、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <A> 全体を <b> を軸に並び替え、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
表 <A> の列名を <b> から <c> にリネームして、インプレースする	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<E> . rename ( columns = { <b> : <c> } , inplace = True )
データフレーム <A> のインデックスを振り直す	<A> . reset_index ( )	True <A> . reset_index ( )
<A> の中の未記入の値を表データ <A> の平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> 中の未入力の値を <A> の平均値で埋めて、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <B> 全体を <a> コラムの値を軸にソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
<B> の列 <c> の値を軸にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <A> の <c> カラムの分を確認し、  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . minute	<A> [ <b> ] = <A> [ <c> ] . dt . minute
<A> の <b> 列の値を昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <A> 内の欠損を <B> に置き換え、置き換える	<A> = <A> . fillna ( <B> )	df . fillna ( <A> , <B> , inplace = True )
<A> 中の <b> を NaN に置換し、 NaN が存在する行をドロップして、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
<A> 中に存在する <b> を欠損値に置換して、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
ファイル <a> から表データをタブ区切りで読んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = '\t' )	value_counts = pd . read_csv ( <a> , sep = '\t' )
表データ <A> 内の欠損値を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表 <A> 全体を <b> を元に昇順でソートし、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> の <b> カラム中の前後の行の差分を算出する	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <b> ] . diff ( periods = 1 )
表 <B> の <e> について、 <c> をインデックス、 <d> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
<A> 全体を <b> でソートし、 <A> にする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <A> の <b> を消す	<A> . drop ( <b> , axis = 1 )	<A> . drop ( <b> , axis = 1 )
グラフを描画する	plt . show ( )	plt . show ( )
表データを <a> から読み込む	pd . read_csv ( <a> )	'left' pd . read_csv ( <a> )
分割数を <C> 、ビンのラベルを <D> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表データ <B> にある <a> を欠損に置換して、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	<A> = <B> . replace ( <a> , np . nan )
表データ <A> 全体をコラム <b> の値に基づいてソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <A> の <b> をソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
エクセルファイル <a> の全てのシートを読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
データフレーム <B> 中の欠損値を <A> で埋めて、 <C> とする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
<A> のカラム <b> の値を軸に昇順でソートして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <C> の <b> カラムと <a> カラムに重複があるのかどうか確認を見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <C> の <b> カラムが <a> より小さいデータを取得する	<C> [ <C> [ <b> ] <  <a> ]	< <C> [ <C> [ <b> ] < <a> ]
表データ <A> 内のカラムそれぞれに存在する <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<C> の <b> コラムとコラム <a> に重複が存在するのか確認を表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> 中の重複する行を取り除き、 <B> とする	<B> = <A> . drop_duplicates ( )	step <B> = <A> . drop_duplicates ( )
表 <B> を <a> を軸にソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> 内の未入力の値を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
表データ <B> のカラム <a> を年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] )	format pd . to_datetime ( <B> [ <a> ] )
表データ <B> の <c> と <d> コラムを降順にソートを <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<a> 列を順番になるようにソートを <B> とする	<B> = df . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> 中に存在する <a> を未入力の値に置き換え、再代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
データフレーム <B> を <c> 表属性を元に昇順で並び替えて、 <A> に代入する	<A> = <B> . sort_values ( <c> )	df = <B> . sort_values ( <c> )
表 <B> 内の未入力の値を <A> に置換し、 <B> にする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
データフレーム <B> を <a> 表属性を元に昇順で並び替えて、置き換える	<B> = <B> . sort_values ( <a> )	df . sort_values ( <a> , inplace = True )
データフレーム <A> をインデックスを軸にソートする	<A> . sort_index ( )	<A> . sort_index ( )
<A> の <b> カラムを軸に昇順で並び替えて、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> の <b> カラムの時間	<A> [ <b> ] . dt . hour	<b> <A> [ <b> ] . dt . hour
表を <a> ファイル名から読む	pd . read_csv ( <a> )	read_csv pd . read_csv ( <a> )
データフレーム <B> の列名を <c> から <d> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	<E> = <B> . rename ( columns = { <c> : <d> } )
<A> の <b> を表示する	<A> [ <b> ]	@option <b> ]
表データ <B> 中の欠損値を含む行をドロップして、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> ( データフレーム ) の <b> カラムと <c> を逆順に並び替え、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> 中のカラムにある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <D> の <c> カラムと <b> ごとに <a> の値の和を計算する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( )
表 <A> 中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	<C> [ <A> . duplicated ( ) ]
<A> 内の NaN を表データ <A> の平均値で補い、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> の未記入の値を含む行を削除を <A> とする	<A> = <A> . dropna ( )	loc = <A> . dropna ( )
<A> の <b> カラムごとにカラム <c> の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
<A> 内の <b> に重複がある行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<D> = <A> . drop_duplicates ( subset = <b> )
表データ <B> を <a> 表属性の値を元にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の <c> の曜日の数値型を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	@option <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
表 <A> 内の NaN を <B> に置換して、 <A> に代入する	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
データフレーム <A> 内の <b> カラムに重複はあるのかどうかチェックを表示する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
<A> の <b> 列を軸にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> 中の欠損値を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
<B> の <a> のユニークな要素の個数	<B> [ <a> ] . nunique ( )	<E> [ <B> [ <a> ] . nunique ( )
データフレーム <A> をエクセルファイル <b> というファイル名で書き込む	<A> . to_excel ( <b> )	@option <b> = <A> . to_excel ( <b> )
データフレーム <B> 内の NaN を <C> に置き換え、 <A> にする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
<B> ( データフレーム ) の <a> を順にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
x 軸の軸ラベルを <a> に変更する	plt . xlabel ( <a> )	<B> plt . xlabel ( <a> )
表データ <A> の <c> の曜日を  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name
<B> 全体を <a> の値を元にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> の内容を確認	<A> . head ( )	head <A> . head ( )
表データ <A> を <b> で並び替え、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
一番左の列を位置に設定して、ファイル <a> を読み込む	pd . read_csv ( <a> , index_col = 0 )	df = pd . read_csv ( <a> , index_col = 0 )
表 <C> の <b> と <a> を降順に並び替え、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
エクセルファイル <b> の全部のシートからデータフレームを読み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	<B> <A> = pd . read_excel ( <b> , sheet_name = None )
左外部結合で表データ <B> と表データ <A> をマージする	pd . merge ( <B> , <A> , how = 'left' )	merge pd . merge ( <B> , <A> , how = 'left' )
表データ <B> 中にある <a> を NaN として、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
表データ <B> 内の <c> を欠損値に置換し、欠損値が存在する行を落とし、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<B> = <B> . replace ( <c> , np . nan ) . dropna ( )
<A> 中の <b> を未記入の値に置換し、未記入の値が存在する行を落とし、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> を <b> を軸にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <C> の列 <a> の曜日の数値型を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . dayofweek	<A> [ <b> ] = <C> [ <a> ] . dt . dayofweek
データフレーム <A> の中に存在する <b> を NaN に置き換える	<A> . replace ( <b> , np . nan )	<B> . replace ( <b> , np . nan )
表データ <A> 中の <b> を欠損値に置換し、欠損値が存在する行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
<A> 中のカテゴリ変数をダミー変数にする	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表 <B> の <a> に重複があるか調べる	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表 <A> 全体を表属性 <b> の値でソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <A> の <b> コラムと <c> の相関を調べる	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
表データ <C> の <b> カラムと <a> カラムを削除を <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> 内のカテゴリ変数をダミー変数に変換し、 <A> とする	<A> = pd . get_dummies ( <A> )	@option <A> = pd . get_dummies ( <A> )
データフレーム <A> 内の欠損の数を表示する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<A> の <b> 行から <c> 行まで	<A> [ <b> : <c> ]	<A> [ <b> : <c> ]
表 <A> の表属性 <b> の秒を確認する	<A> [ <b> ] . dt . second	<b> <A> [ <b> ] . dt . second
データフレーム <A> と <B> を横にくっつける	pd . merge ( <A> , <B> )	<B> . pd ( <A> , <B> )
<A> の先頭から <b> 行まで	<A> [ : <b> ]	pd . : ( <A> [ <b> ] )
<B> の <a> を NaN に置換し、 NaN が存在する行を落とし、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <C> の <b> コラムごとに <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
全結合で <B> 表と <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	@option <A> = pd . merge ( <B> , <C> , how = 'outer' )
表データ <A> 全体をインデックスを軸にソートし、 <B> とする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
表データ <A> 中の <b> と <c> に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> から重複する行を削除し、 <A> に代入する	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<C> ( データフレーム ) のコラム <b> とコラム <a> を降順にし、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
そこで、マーカーのエッジの色をマゼンタとする	@option markeredgecolor = 'magenta'	markeredgewidth = 'blue'
表データ <A> の重複している行を削除して、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> の全ての列で重複している行を取り除いて、 <B> にする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
表データ <B> の <a> のそれぞれのデータの出現回数	<B> [ <a> ] . value_counts ( )	<E> [ <B> [ <a> ] . value_counts ( )
データフレームを CSV ファイル <a> ( ファイル名 ) から読み込む	pd . read_csv ( <a> )	<B> pd . read_csv ( <a> )
データフレーム <C> の <b> とカラム <a> を逆順に並び替え、 <D> に代入する	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> をダミー変数にする	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
<A> の列の名前を <b> から <c> に変更する	<A> . rename ( columns = { <b> : <c> } )	<A> . rename ( columns = { <b> : <c> } )
表 <A> の <b> の名前を <c> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	<D> = <A> . rename ( index = { <b> : <c> } )
表データ <A> の欠損を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表 <A> 中の未入力の値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( <B> )
先頭の列をインデックスに設定して、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	<A> = pd . read_csv ( <a> , index_col = 0 )
表データ <B> の中の欠損値を直前の行の値で埋めて、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	df = <B> . fillna ( method = 'ffill' )
データフレーム <A> を <b> 表属性の値を元にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <D> のコラム <c> が <b> または <a> のデータ	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	<B> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]
表データ <B> 内の <a> を欠損値に置換し、欠損値がある行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> に存在する <b> を未記入の値とし、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
列番号 <a> を位置と設定して、 <b> を表に格納する	pd . read_csv ( <b> , index_col = <a> )	sns . read_csv ( <b> , index_col = <a> )
<B> の中の欠損を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<A> 内に重複はあるかどうか調べる	<A> . duplicated ( )	<A> . duplicated ( )
列番号 <b> を位置に指定して、ファイル名 <a> を表に格納する	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
<b> からデータフレームを <c> 区切りで読み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <B> 全体をインデックスを元に昇順でソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<B> を <a> という名前で保存する	<B> . to_csv ( <a> )	<B> . to_excel ( <a> )
表 <B> 内の未入力の値を <A> に置き換えて、 <C> にする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
<B> の <a> を NaN に置換し、 NaN が存在する行を落とし、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> の <a> を未入力の値に置換し、未入力の値が存在する行を落として、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> 中の <a> カラムに重複があるかどうか確認する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
エクセルファイル <a> の全部のシートを表に格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> の列 <b> の名前を <c> に、 <d> の名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
先頭の列をインデックスに、 <b> からデータフレームとを読み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<e> <A> = pd . read_csv ( <b> , index_col = 0 )
<a> カラムについてダミー変数をつくって、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	<E> = pd . get_dummies ( <B> [ <a> ] )
表 <A> の欠損を <B> に置換して、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
表 <B> の中の列にある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表 <A> 中の <b> を NaN に置換し、 NaN が存在する行を削除し、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )
表 <A> の列 <b> のユニークな要素数	<A> [ <b> ] . nunique ( )	<b> <A> [ <b> ] . nunique ( )
データフレーム <B> を <a> を元に昇順でソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表 <A> 中の未入力の値を <B> に置き換え、インプレースする	<A> . fillna ( <B> , inplace = True )	plt . fillna ( <A> , <B> , inplace = True )
表データ <A> 内のカラムそれぞれに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
データフレーム <A> 内の重複する行を取り除く	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<D> の <a> について、 <c> をインデックス、 <b> カラムをカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <A> 中の表属性 <b> に重複がある行をドロップし、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	<D> . drop_duplicates ( subset = <b> , inplace = True )
データフレーム <B> の <a> 列の秒	<B> [ <a> ] . dt . second	<B> [ <a> ] . dt . second
<A> ( データフレーム ) の <b> を順にソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表 <C> 内の <b> とコラム <a> に重複があるか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> 中の重複している行をドロップ	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<B> 全体を <a> カラムの値を元にソートを <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<a> 番目の列をインデックスに指定して、 <b> ファイルパスを表に格納し、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
表 <B> 内の未入力の値を <A> とする	<B> . fillna ( <A> )	<A> . fillna ( <B> )
データフレーム <A> のそれぞれのカラムに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <C> の中の <b> と <a> コラムに重複があるかどうかチェックを表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <B> 中の <a> コラムに重複が存在するのか確認する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
<B> を <a> コラムを元にソートを <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<D> のコラム <c> と <b> と <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> のそれぞれの列に存在する <a> の個数を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
列番号 <b> をインデックスとして、 <a> を表に格納する	pd . read_csv ( <a> , index_col = <b> )	's' pd . read_csv ( <a> , index_col = <b> )
表データ <A> のデータ型	<A> . dtypes	<A> . dtypes
表 <B> 内の <a> に重複があるのか調べる	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
カンマ区切りで表を CSV ファイル <b> ( ファイル名 ) から読み込んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
<E> の <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームし、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<a> というエクセル <a> の全てのシートを表データに格納する	pd . read_excel ( <a> , sheet_name = None )	sheet_name pd . read_excel ( <a> , sheet_name = None )
<a> という名前のエクセルの全部のシートから読み込み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	value_counts <B> = pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> の列 <b> の名前を <c> にリネームし、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<A> = <A> . rename ( columns = { <b> : <c> } )
<A> の <b> インデックスの名前を <c> に変更する	<A> . rename ( index = { <b> : <c> } )	<A> . rename ( index = { <b> : <c> } )
データフレーム <A> の <b> 列をグループ化して、値ごとのデータ数を算出する	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
<B> の先頭から <a> 行までを見る	<B> [ : <a> ]	<B> [ : <a> ]
表データ <A> にある <b> を未入力の値に置換して、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
<B> 内の <a> を NaN に置換し、 NaN が存在する行を落とし、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
<C> 中の <b> コラムと <a> に重複があるのか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <C> の <b> と <a> を消し、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	<A> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )
<b> コラムに重複がある行を drop して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<D> = df . drop_duplicates ( subset = <b> )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) から表データを読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
データフレーム <C> の <a> の秒を調べて、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . second	<A> [ <b> ] = <C> [ <a> ] . dt . second
<C> と <B> 表データに対して、コラム <a> を項目名としてデータを内部結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	df = pd . merge ( <C> , <B> , on = <a> )
ファイルパス <b> を <a> 区切りで表として読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
表データ <A> の NaN の数	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表属性 <b> と <a> を降順にして、インプレースする	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
<A> をエクセルファイル <b> というファイル名で保存する	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> , sheet_name = None )
表データ <C> の行の名前を <b> から <a> に変更する	<C> . rename ( index = { <b> : <a> } )	<A> . rename ( index = { <b> : <a> } )
データフレームをファイルパス <a> からタブ区切りで読み込み、 <B> とする	<B> = pd . read_csv ( <a> , sep = '\t' )	step = pd . read_csv ( <a> , sep = '\t' )
表としてカンマ区切りで <a> を読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
表 <B> のカラムにある <a> の個数の合計を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表データ <B> の <c> コラムと <d> コラムを削除して、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )
表データ <A> 中に存在する <b> を NaN に置き換えて、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
<B> の中の欠損を <C> に置換し、 <A> にする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
表データ <A> 中のそれぞれの列にある <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
<A> から重複する値がある行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
表 <B> 内の <a> を NaN に置換し、 NaN がある行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
文字コードが shift_jis のファイル <a> を読む	pd . read_csv ( <a> , encoding = 'shift_jis' )	read_csv pd . read_csv ( <a> , encoding = 'shift_jis' )
表データ <A> の <b> に重複があるのかどうか調べる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表 <A> の全ての列で重複している行を取り除く	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<a> カラムに重複がある行を drop を <B> とする	<B> = df . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
<A> の全ての列の重複する値がある行を取り除き、 <B> にする	<B> = <A> . drop_duplicates ( )	step <B> = <A> . drop_duplicates ( )
<b> と表属性 <a> を大きい順にソートし、置き換える	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
<A> ( データフレーム ) の <b> とコラム <c> を降順にし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> と <C> を縦方向に結合し、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<B> の列にある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> を位置でソートを <A> にする	<A> = <A> . sort_index ( )	loc <A> = <A> . sort_index ( )
表 <A> の行ごとに重複があるかどうか検出する	<A> . duplicated ( )	<A> . duplicated ( )
表データ <B> 中の <a> を未記入の値に置換し、未記入の値が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<B> . replace ( <a> , np . nan ) . dropna ( )
分割数を <C> として、表データ <A> の <b> カラムを分割する	pd . cut ( <A> [ <b> ] , <C> )	sheet_name pd . cut ( <A> <b> ] , <C> )
<A> 中の NaN を表データ <A> の平均値で埋めて、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<a> をキーとして、 <C> 表データと <B> をマージする	pd . merge ( <C> , <B> , on = <a> )	merge pd . merge ( <C> , <B> , on = <a> )
エクセルファイル <a> のシート名 <b> を読み込む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表データ <A> 全体を <b> を元にソートし、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
左側のデータの位置と右側のデータの <c> 表属性をキーとして、 <A> と <B> 表をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <B> を <a> という名前にして保存する	<B> . to_csv ( <a> )	<B> . to_excel ( <a> )
カンマ区切りで <a> を表として読んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
左側のデータの位置と右側のデータの <d> を項目名として、 <B> と <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<C> の <b> カラムと <a> を降順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> という名前のエクセルデータのシート名 <a> を表に格納して、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) から表を読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
一番左の列を位置と設定して、 <a> から読んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
<A> をコラム <b> の値に基づいてソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
エクセルデータ <b> の <a> 番目のシートを表データに格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
表データ <A> の <b> と <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表データ <A> 内の <b> と表属性 <c> に重複があるかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
<B> の全ての列で重複している値がある行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
<A> 内の欠損値の数を確認する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<A> 内の NaN の合計	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表データ <B> と表データ <C> に対して、 <d> を項目名としてデータを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	<D> = pd . merge ( <C> , <B> , on = <d> )
データフレーム <A> 内の <b> を NaN に置換し、 NaN がある行を消し、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<E> = <A> . replace ( <b> , np . nan ) . dropna ( )
<B> 内の <a> を NaN に置換し、 NaN がある行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
<E> の <d> の名前を <c> に、 <b> の名前を <a> に変更して、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	@option <E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<B> 全体を <c> を元にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <A> の <b> 表属性と表属性 <c> を消して、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
先頭の列を位置として、 <a> パスを読み込む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
データフレームを <a> 区切りで CSV ファイル <b> ( ファイル名 ) から読み込み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<F> = pd . read_csv ( <b> , sep = <a> )
表データ <A> の中の表属性 <b> と <c> 表属性に重複があるかどうか	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
そこで、ラインスタイルを一点鎖線とする	@option linestyle = 'dashbot'	<E> = pd . read_excel ( <a> , sheet_name = None )
列番号 <c> を位置にして、 <b> から読み込み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<e> <A> = pd . read_csv ( <b> , index_col = <c> )
<A> の中で重複している行数の合計を見る	<A> . duplicated ( ) . sum ( )	plt . duplicated ( <A> ) . sum ( )
<A> の <b> カラムの月	<A> [ <b> ] . dt . month	<b> <A> [ <b> ] . dt . month
<A> を <b> という名前でエクセルファイルに書き出す	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
エクセルデータ <b> の <a> 番目のシートを表に格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
境界値をリスト <C> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	sheet_name pd . cut ( <A> [ <b> ] , <C> )
データフレーム <A> の欠損の合計を求める	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表データを <b> 区切りでファイルパス <a> から読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
データフレーム <A> のコラム <b> が <c> より多いデータを抽出する	<A> [ <A> [ <b> ] >  <c> ]	df <A> [ <A> [ <b> ] > <c> ]
<B> と <A> 表を縦に結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表 <B> 内の NaN を <A> に置換する	<B> . fillna ( <A> )	<A> . fillna ( <B> )
<C> の <b> と <a> カラムを大きい順に並び替え、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
とりあえず <A> 表の内容をを見る	<A> . head ( )	head <A> . head ( )
表データ <C> の <b> とコラム <a> の相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	<A> [ [ <b> , <a> ] ] . corr ( )
<a> というエクセルの全てのシートを読み、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
表 <A> 内の重複をチェックする	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> 内の <b> を NaN に置換し、 NaN がある行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <B> 内の未入力の値を <A> とし、置き換える	<B> . fillna ( <A> , inplace = True )	df . fillna ( <A> , inplace = True )
データフレーム <B> 中の <a> に重複はあるかどうかチェックを確認する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表 <A> 内の重複を表示する	<A> . duplicated ( )	<A> . duplicated ( )
<C> の <b> と <a> 列を落とし、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	df = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <B> の <c> の名前を <d> にリネームし、 <A> にする	<A> = <B> . rename ( index = { <c> : <d> } )	@option <A> = <B> . rename ( columns = { <c> : <d> } )
<A> 中の <b> に重複はあるかどうか調べる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <B> と <A> を縦方向に結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
<D> の <a> 表属性について、 <c> をインデックス、表属性 <b> を表属性としたピボットテーブルを作成し、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <C> の <b> の名前を <a> にリネームし、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
データフレーム <A> の <b> の曜日を確認する	<A> [ <b> ] . dt . weekday_name	<b> <A> [ <b> ] . dt . weekday_name
表 <A> の <b> の年	<A> [ <b> ] . dt . year	year [ <A> <b> ] . dt . year
データフレーム <A> に存在する <b> を未記入の値とする	<A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan )
レンジを <b> から <c> として、 <A> のヒストグラムを表示する	plt . hist ( <A> , range = ( <b> , <c> ) )	plt . hist ( <A> , range = ( <b> , <c> ) )
<A> の欠損を含む行を落として、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
エクセルデータ <b> を表データに格納し、 <A> とする	<A> = pd . read_excel ( <b> )	<B> = pd . read_excel ( <b> )
データフレーム <A> の行の名前を <B> に代入する	<B> = <A> . index	step <B> = <A> . index
<b> から <c> 区切りで表データを読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <B> のカラム <c> と <d> を逆順にソートして、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<C> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<b> というエクセルデータのシート全部をデータフレームとして読んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	<B> = pd . read_excel ( <b> , sheet_name = None )
データフレーム <B> の先頭から <a> 行まで	<B> [ : <a> ]	<B> [ : <a> ]
<b> と <a> に重複はあるのかチェックする	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
<A> と表 <B> を一つにまとめる	pd . merge ( <A> , <B> )	'outer' pd . merge ( <A> , <B> )
表データ <A> で重複している行数の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> 中の未記入の値の合計	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
データフレーム <A> の <b> が <c> 以下データを得る	<A> [ <A> [ <b> ] <= <c> ]	<= <A> [ <A> [ <b> ] <= <c> ]
<b> と <a> コラムに重複はあるか	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
表 <C> の <b> と列 <a> の相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	<C> [ [ <b> , <a> ] ] . corr ( )
表データとして <b> 区切りで <a> を読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <b> , sep = <a> )
位置と表属性 <a> をキーとして <C> と表データ <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> の重複した行数の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<b> というエクセルデータの <a> をデータフレームとして読み込み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	sheet_name = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> の <c> の日にちを  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . day	df [ <A> [ <b> ] = <A> [ <c> ] . dt . day
<a> と表属性 <b> を大きい順にソートして、再代入する	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
<a> という名前のエクセルファイルを読み込む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表 <A> の <b> をソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> を位置で並び替え、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<A> 内のカラムそれぞれにある <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<B> 全体を <a> の値で並び替え、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> 内の列 <a> に重複が存在するのかチェックする	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表 <B> をファイルパス <a> という名前にして CSV ファイルに書き出す	<B> . to_csv ( <a> )	<E> . to_csv ( <a> )
一番左の列をインデックスに、 <b> を読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = 0 )	loc <A> = pd . read_csv ( <b> , index_col = 0 )
表データ <C> 内のコラム <b> と <a> に重複があるか表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<C> ( データフレーム ) の <b> 表属性と <a> 表属性を大から小へとソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> 内の <a> を NaN に置換し、 NaN がある行をドロップを <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> と表データ <A> を縦に一つにまとめ、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
表データ <A> 中のそれぞれの列に存在する <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<b> 表属性を順番になるようにし、 <A> にする	<A> = <A> . sort_values ( <b> )	<B> = df . sort_values ( <b> )
表 <D> の <c> と <b> と <a> コラムについて関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表 <C> の <b> ごとに <a> の平均値を求める	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
そこで、マーカーのエッジの色を青色とする	@option markeredgecolor = 'blue'	markeredgewidth = 'blue'
全結合で <A> と表 <B> を結合する	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
全結合で <B> データフレームとデータフレーム <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	merge pd . merge ( <B> , <A> , how = 'outer' )
表データ <A> 内に存在する <b> を欠損値に置換し、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
表 <B> と <A> を結合し、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
分割数を <A> として、データフレーム <C> の <b> を要素数が等しくなるように分割する	pd . qcut ( <C> [ <b> ] , <A> )	qcut pd . qcut ( <C> [ <b> ] , <A> )
表 <B> 内のそれぞれの列に存在する <a> の個数を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> ( データフレーム ) の <c> と列 <d> を逆順にし、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<C> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<A> の <b> 列が <c> または <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]
データフレーム <A> の <b> カラムが <c> 以下データ	<A> [ <A> [ <b> ] <= <c> ]	<= <A> [ <A> [ <b> ] <= <c> ]
表データ <D> の列 <c> が <b> もしくは <a> のデータを抽出する	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	<B> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]
表データ <B> を <a> 列の値を軸にソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
グラフの色を e00RGB 値として、 <A> と <B> のグラフを表示する	plt . plot ( <A> , <B> , color = ( e00 ) )	<B> = plt . plot ( <A> , color = ( e00 ) )
データフレーム <B> 全体を <a> を元にソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
境界値を <A> リストとして、 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	sheet_name = pd . cut ( <C> [ <b> ] , <A> )
表データ <A> をインデックスでソート	<A> . sort_index ( )	sort_index <A> . sort_index ( )
<B> の表属性 <a> を昇順にソートし、置き換える	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<B> の中の <a> カラムに重複はあるのかどうか表示してみる	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表 <A> の全ての列の重複する値がある行を取り除く	<A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<A> にある <b> を未入力の値として、再代入する	<A> = <A> . replace ( <b> , np . nan )	df = <A> . replace ( <b> , np . nan )
<A> の位置をソートして、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<b> というエクセルデータの <a> をデータフレームに格納し、 <C> に代入する	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> 中の NaN を削除して、置き換える	<A> . dropna ( inplace = True )	<C> = <A> . dropna ( )
表データ <A> の <b> カラムの名前を <c> に、カラム <d> の名前を <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表 <B> の <a> を並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> の <b> 行目を削除	<A> . drop ( <b> )	<B> . drop ( <b> )
先頭の列を位置にして、 <a> を読み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
表 <A> の <b> カラムが <c> より小さいデータを取得する	<A> [ <A> [ <b> ] <  <c> ]	<A> [ <A> [ <b> ] < <c> ]
表データ <C> の <b> とコラム <a> に重複はあるか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> をインデックスでソートを <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
タイトルを <a> と設定する	plt . title ( <a> )	sns . title ( <a> )
表データ <C> のインデックス <b> の名前を <a> に変更して、再代入する	<C> = <C> . rename ( index = { <b> : <a> } )	<A> = <C> . rename ( index = { <b> : <a> } )
<d> 表属性を項目名として、 <B> 表と <C> 表をマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <d> )	df = pd . merge ( <C> , <B> , on = <d> )
表 <C> の <b> と <a> コラムに重複は存在するのかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
ビン数を <A> として、 <C> 表データの <b> を分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	df = pd . cut ( <C> [ <b> ] , <A> )
<B> 中の <a> を欠損値に置換し、欠損値がある行をドロップして、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> . replace ( <a> , np . nan ) . dropna ( inplace = True )
<A> 中の重複する行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
データフレーム <E> の列 <d> の名前を <c> に、 <b> の名前を <a> にリネームして、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
データフレーム <A> 全体を <b> を元にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <A> の <d> について、 <b> 列をインデックス、 <c> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
データフレームを CSV ファイル <a> ( ファイル名 ) から読む	pd . read_csv ( <a> )	sns . read_csv ( <a> )
表 <A> の中の未記入の値をドロップを <B> にする	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
データフレーム <B> の <a> 行目を消して、 <B> とする	<B> = <B> . drop ( <a> )	axis <B> = <B> . drop ( <a> )
表データ <B> の <c> を四分位数ごとでビン分割して、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	df = pd . qcut ( <B> [ <c> ] , 4 )
表データ <A> 内の重複した行数を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <B> 内の <a> に重複はあるか調べる	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
インデックスと列 <c> を項目名として <A> 表と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	set_index = pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> の <c> をインデックス、 <d> を列としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<B> = <B> . pivot_table ( index = <c> , columns = <d> )
データフレーム <A> 中の NaN がある行を落とし、再代入する	<A> = <A> . dropna ( )	loc = <A> . dropna ( )
表 <B> の中にある <a> を欠損とし、再代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
<a> 区切りでデータフレームとして CSV ファイル <b> ( ファイル名 ) を読む	pd . read_csv ( <b> , sep = <a> )	read_csv pd . read_csv ( <b> , sep = <a> )
表データ <A> 中の重複している行を消し、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
<a> 番目の列を位置にして、ファイル名 <b> から読む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
データフレーム <B> 中にある <c> を欠損に置き換え、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan )	<B> = <B> . replace ( <c> , np . nan )
表 <A> の <b> ごとに <c> の個数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )
データフレーム <A> 中の NaN を削除して、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <E> の <d> の名前を <c> に、 <b> の名前を <a> に変更して、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <A> 内の <b> と <c> 列に重複はあるか確認	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<a> というエクセルデータ <a> のシート全てを表データに格納し、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	<E> = pd . read_excel ( <a> , sheet_name = None )
表 <C> の <b> と <a> 表属性を削除	<C> . drop ( [ <b> , <a> ] , axis = 1 )	pd . drop ( <C> , [ <b> , <a> ] , axis = 1 )
表データ <B> の中の NaN を <A> として、 <C> に代入する	<C> = <B> . fillna ( <A> )	@option <C> = <B> . fillna ( <A> )
<A> の <b> と <c> と <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> = <A> . pairplot ( [ <b> , <c> , <d> ] ] )
<B> 中の <a> に重複は存在するのか表示する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
データフレーム <B> 全体を <c> の値を元に昇順で並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <C> の <b> が <a> 以上のデータを抽出する	<C> [ <C> [ <b> ] >= <a> ]	<A> [ <C> [ <b> ] >= <a> ]
<A> の <c> の曜日の数値型を表示し、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
表データ <A> から <b> というエクセルファイルにする	<A> . to_excel ( <b> )	@option <b> = <A> . to_excel ( <b> )
グラフの大きさを <a> x6 と指定する	plt . figure ( figsize = ( <a> , 6 ) )	plt . figure ( figsize = ( <a> , 6 ) )
一番左の列を位置と設定して、 <b> から読み込んで、 <A> にする	<A> = pd . read_csv ( <b> , index_col = 0 )	loc <A> = pd . read_csv ( <b> , index_col = 0 )
表データ <A> 中に重複があるならば	if <A> . duplicated ( ) :	<A> if <A> . duplicated ( ) :
さらに、文字コードはシフト JIS ことにする	@option encoding = 'shift_jis'	'shift_jis' = pd . read_csv ( <a> , encoding = 'shift_jis' )
データフレーム <C> の列 <b> と <a> を大から小へとソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の NaN を <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
データフレーム <B> 内の <c> を未入力の値に置換し、未入力の値がある行を削除し、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <A> を位置を元に並び替えて、 <B> とする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
ビン数を <D> 、ビンのラベルを 0 始まりの連番として、 <B> の <c> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	df = pd . cut ( <B> [ <c> ] , <D> , label = False )
データフレーム <B> 中のカラムそれぞれにある <a> の個数の合計を見る	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> の中の重複する行をドロップして、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
もしデータフレーム <A> 中の <b> 表属性と <c> に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表 <A> の未記入の値の数	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表 <B> 全体をコラム <c> の値を軸にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> の <b> についてのヒストグラムをプロットする	plt . hist ( <A> [ <b> ] )	sns . hist ( <A> [ <b> ] )
データフレーム <B> の列名を <c> から <d> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	@option <A> = <B> . rename ( columns = { <c> : <d> } )
データフレーム <B> の <a> 行目を消し、置き換える	<B> = <B> . drop ( <a> )	<E> = <B> . drop ( <a> )
データフレーム <A> の <b> が <c> より多いデータを得る	<A> [ <A> [ <b> ] >  <c> ]	df <A> [ <A> [ <b> ] > <c> ]
<B> の <c> を位置に設定し、 <A> にする	<A> = <B> . set_index ( <c> )	<B> = <B> . set_index ( <c> )
一番左の列を位置に指定して、 <a> から読んで、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
分割数を <A> として、 <C> 表の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	pd . cut ( <C> [ <b> ] , <A> )
表 <A> 中の <b> を未記入の値に置換し、未記入の値が存在する行をドロップを <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> の中の欠損値を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
位置と <c> をキーとして表データ <A> と <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <A> の <b> と <c> の相関係数を表示する	<A> [ [ <b> , <c> ] ] . corr ( )	<C> [ [ <b> , <c> ] ] . corr ( )
<A> のインデックス名を <b> から <c> に変更して、置き換える	<A> . rename ( index = { <b> : <c> } , inplace = True )	<A> = <A> . rename ( index = { <b> : <c> } )
ビン数を <A> 、ビンのラベルを整数値として、表 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <A> , label = False )
<B> ( データフレーム ) の <a> を小から大へとし、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> の位置を並び替えて、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <B> 全体を <a> コラムの値に沿ってソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> 内の欠損を <A> の平均値で埋めて、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表 <A> の列 <b> に重複がある行を消して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	@option <A> = <A> . drop_duplicates ( subset = <b> )
データフレーム <C> の中の <b> と <a> に重複はあるののとき	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
データフレーム <A> の中の欠損の合計を見る	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
<A> の欠損値を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <A> をインデックスを元にソート	<A> . sort_index ( )	<A> . sort_index ( )
データフレーム <A> のそれぞれの行において重複があるかどうかを検出する	<A> . duplicated ( )	<A> . duplicated ( )
列 <a> に重複は存在するのかを表示する	df . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) を表データとして読んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	pd = pd . read_csv ( <a> , sep = ',' )
カンマ区切りで CSV ファイル <a> を読む	pd . read_csv ( <a> , sep = ',' )	pd . read_csv ( <a> , sep = ',' )
分割数を <A> 、ビンのラベルを 0 始まりの連番として、 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <A> , label = False )
分割数を <D> として、 <B> 表の <c> を分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	df = pd . cut ( <B> [ <c> ] , <D> )
<A> の位置を軸にソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
データフレーム <B> 中のそれぞれのカラムに存在する <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表 <C> の <b> 行から <a> 行まで	<C> [ <b> : <a> ]	<b> <C> [ <a> : ]
表データ <B> を <c> 表属性を元に並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
左外部結合でデータフレーム <B> と <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'left' )	merge pd . merge ( <B> , <A> , how = 'left' )
データフレーム <B> 中の表属性 <c> に重複がある行を落として、 <A> にする	<A> = <B> . drop_duplicates ( subset = <c> )	@option <A> = <B> . drop_duplicates ( subset = <c> )
<A> 全体をインデックスを元に昇順で並び替え、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
左外部結合で <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'left' )	merge pd . merge ( <A> , <B> , how = 'left' )
データフレーム <C> のカラム <b> とカラム <a> を削除	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<A> . drop ( [ <b> , <a> ] , axis = 1 )
分割数を <D> として、表 <B> の <c> カラムを要素数が等しくなるようにビン分割して、 <A> に代入する	<A> = pd . qcut ( <B> [ <c> ] , <D> )	<D> = pd . qcut ( <B> [ <c> ] , <D> )
<b> コラムとコラム <a> を大から小へとする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> の <a> を昇順でソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <B> の中の未入力の値を <A> として、置き換える	<B> = <B> . fillna ( <A> )	df . fillna ( <A> , inplace = True )
グラフの色を <A> として、 <C> と <B> のグラフを描画する	plt . plot ( <C> , <B> , color = ( <A> ) )	plt . plot ( <C> , <B> , color = ( <A> ) )
表データ <C> のコラム <b> の名前を <a> にリネームして、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
<B> 中のそれぞれのカラムにある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレームを CSV ファイル <b> ( ファイル名 ) から <c> 区切りで読み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <A> のデータ型	<A> . dtypes	<A> . dtypes
表データ <A> 内のそれぞれのカラムに存在する <b> の個数の合計を求める	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
分割数を <B> 、ビンの名前をリスト <A> として、表データ <D> の <c> をビン分割して、 <E> に代入する	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表データ <B> と <A> データフレームを横方向にくっつけて、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
表データ <B> から重複する値がある行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <C> の <b> と <a> 表属性を削除を <C> とする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<A> をエクセルファイル <b> という名前にして保存する	<A> . to_excel ( <b> )	<B> . to_excel ( <b> )
<b> カラムについてダミー変数をつくって、 <A> にする	<A> = pd . get_dummies ( <A> [ <b> ] )	loc <A> = pd . get_dummies ( <A> [ <b> ] )
データフレーム <A> の中の <b> を NaN に置換し、 NaN がある行をドロップを <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <C> の <b> ごとに <a> の個数を算出する	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
表 <B> を <a> コラムでソートして、 <C> とする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
表データ <A> の <b> が <c> もしくは <d> のデータを抽出する	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	<C> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]
<A> の全ての列の重複する値がある行を削除する	<A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
データフレーム <B> から <a> というエクセルファイルにする	<B> . to_excel ( <a> )	<B> . to_excel ( <a> )
表データ <A> の列 <b> の名前を <c> に、 <d> 列の名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
<A> の <b> が <c> より少ないデータ	<A> [ <A> [ <b> ] <  <c> ]	@option <A> [ <A> [ <b> ] < <c> ]
<A> 内の重複する行をドロップし、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
ビン数を <A> として、表 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	sheet_name pd . cut ( <C> [ <b> ] , <A> )
<A> ( データフレーム ) の <b> カラムを値が小さい順にする	<A> . sort_values ( <b> )	'IPAexGothic' <A> . sort_values ( <b> )
<B> を <a> を軸にソートして、 <C> にする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
もし表データ <A> の中の <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	<E> = <A> . duplicated ( subset = <b> )
<B> 中の <a> を NaN に置換し、 NaN が存在する行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	plt . replace ( <a> , np . nan ) . dropna ( )
<b> という名前のエクセルの <c> からデータフレームを読んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
<A> の <b> の年を見る	<A> [ <b> ] . dt . year	<b> <A> [ <b> ] . dt . year
<A> のインデックス <b> の名前を <c> に変更して、インプレースする	<A> . rename ( index = { <b> : <c> } , inplace = True )	<A> . rename ( index = { <b> : <c> } , inplace = True )
表 <C> の <b> と <a> をドロップ	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<A> . drop ( [ <b> , <a> ] , axis = 1 )
そこで、バイトオーダーはリトルエンディアンとする	@option byteorder = "little"	"big" = pd . read_csv ( <a> , sheet_name = None )
分割数を <B> 、ビンの名前をリスト <A> として、表データ <D> の <c> を分割して、 <E> に代入する	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表データ <C> の <b> と <a> 表属性を大きい順にソートして、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
データフレーム <A> の中にある <b> を未入力の値に置き換えて、再代入する	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
データフレーム <B> のコラム <a> に重複があるのかチェック	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表 <A> 内の欠損を含む行をドロップ	<A> . dropna ( )	<A> . dropna ( )
エクセルファイル <b> の <a> からデータフレームを読んで、 <C> に代入する	<C> = pd . read_excel ( <b> , sheet_name = <a> )	@option <b> = pd . read_excel ( <b> , sheet_name = <a> )
<C> のコラム <b> を位置、 <a> をコラムとしたピボットテーブルを作成して、 <D> とする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<c> <D> = <C> . pivot_table ( index = <b> , columns = <a> )
データフレーム <B> と <C> を縦にマージして、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の先頭 <b> 行を確認する	<A> . head ( <b> )	head <A> . head ( <b> )
表データ <B> 内の NaN がある行をドロップを <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> 全体を <b> の値を軸にソートして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<B> の <c> の値を軸に昇順でソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表 <A> 内に重複は存在するのかを表示する	<A> . duplicated ( )	<A> . duplicated ( )
グラフを <a> という名前で保存する	plt . savefig ( <a> )	plt . savefig ( <a> )
データフレーム <A> のカラム <b> ごとにカラム <c> の個数を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )
<a> という名前のエクセルデータの <b> を表データに格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表データ <B> 内の <a> に重複がある行を削除	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
表データ <A> 内の重複要素がある行を取り除いて、 <B> とする	<B> = <A> . drop_duplicates ( )	step <B> = <A> . drop_duplicates ( )
表 <B> の下 <a> 行を表示する	<B> . tail ( <a> )	<E> . tail ( <a> )
表 <A> の <b> の名前を <c> に、 <d> の名前を <e> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<A> の重複する値がある行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
表データ <B> 中の欠損を <A> で埋め、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表 <A> 内の <b> に重複が存在するのか確認する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表 <A> 内の <b> を欠損値に置換し、欠損値が存在する行を削除を <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <E> のカラム <d> 、 <c> 、 <b> 、 <a> を選択する	<E> [ [ <d> , <c> , <b> , <a> ] ]	[ <E> [ [ <d> , <c> , <b> , <a> ] ]
<a> 列を項目名として、データフレーム <C> と <B> データフレームを一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	sns = pd . merge ( <C> , <B> , on = <a> )
<a> ファイル名から表を読み込む	pd . read_csv ( <a> )	<B> pd . read_csv ( <a> )
表データ <C> の <a> の年を調べて、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . year	<b> <C> [ <b> ] = <C> [ <a> ] . dt . year
<a> を読み、 <B> とする	<B> = pd . read_csv ( <a> )	step <B> = pd . read_csv ( <a> )
データフレーム <A> の中の重複した行を落とす	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表データ <A> の <b> が <c> のデータ	<A> [ <A> [ <b> ] == <c> ]	loc <A> [ <A> [ <b> ] == <c> ]
<C> の <b> ごとに <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表データ <B> を <a> カラムを元にソートを <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
表データ <A> 中の列 <b> と <c> に重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
インデックスと <d> を項目名として <B> と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表データ <B> 全体を <a> コラムを元に並び替え、 <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
<A> ( データフレーム ) の <b> を数値データで置き換える	pd . get_dummies ( <A> [ <b> ] )	pd . get_dummies ( <A> [ <b> ] )
表 <B> の表属性 <e> について、 <c> をインデックス、 <d> を表属性としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表 <B> 全体を <a> 表属性の値を元にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> ( データフレーム ) の <a> を順にして、 <C> とする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
CSV ファイル <b> ( ファイル名 ) から表をカンマ区切りで読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
<a> という名前でプロットを保存する	plt . savefig ( <a> )	pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> を <b> の値でソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
<A> 内の重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> の全ての列で重複している行を削除して、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<C> ( データフレーム ) の <b> カラムと <a> を大から小へとして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> の <a> の値をソートして、置き換える	<B> = <B> . sort_values ( <a> )	df . sort_values ( <a> , inplace = True )
データフレーム <A> の先頭から <b> 行目までを見る	<A> [ : <b> ]	pd . : ( <A> [ <b> ] )
そこで、マーカーのエッジカラーをネイビーとする	@option markeredgecolor = 'navy'	markeredgewidth = 'blue'
エクセルファイル <a> の <b> 番目のシートからデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = <b> )	's' pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <A> の中の重複しているデータを抽出する	<A> [ <A> . duplicated ( ) ]	x <A> [ <A> . duplicated ( ) ]
<A> 中の NaN を <A> の平均値で補って、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> の全ての列で重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
分割数を <A> 、ビンの名前を整数値として、表データ <C> のカラム <b> をビン分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	<A> = pd . cut ( <C> [ <b> ] , <A> , label = False )
<A> の <b> の値をソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<C> の列名を <b> から <a> にリネームして、インプレースする	<C> . rename ( columns = { <b> : <a> } , inplace = True )	<A> . rename ( columns = { <b> : <a> } , inplace = True )
データフレーム <B> の <a> 表属性をインデックスとする	<B> . set_index ( <a> )	<B> . set_index ( <a> )
ビン数を <C> 、ビンのラベルを <D> として、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
先頭の列をインデックスとして、 <a> ファイルを読む	pd . read_csv ( <a> , index_col = 0 )	set_index = pd . read_csv ( <a> , index_col = 0 )
表データ <B> をファイル名 <a> という名前にして書き出す	<B> . to_csv ( <a> )	<E> . to_csv ( <a> )
表データ <B> の <a> を中央値でビン分割する	pd . qcut ( <B> [ <a> ] , 2 )	pd . qcut ( <B> [ <a> ] , 2 )
<B> 内のそれぞれのカラムにある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> の中の NaN を <B> に置換して、置き換える	<A> . fillna ( <B> , inplace = True )	df . fillna ( <A> , <B> , inplace = True )
<A> の <b> と <c> と列 <d> について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表 <A> 全体をインデックスを元に昇順でソートを <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
ヘッダーなしで <a> を読み込み、 <B> とする	<B> = pd . read_csv ( <a> , header = None )	<B> = pd . read_csv ( <a> , header = None )
<A> の統計情報	<A> . describe ( )	<A> . describe ( )
表 <A> 中の未入力の値を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<A> 内の重複している行数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <C> のコラム <b> と <a> コラムに重複はあるか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> を <b> という名前でエクセル形式に書き込む	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
<A> 全体をカラム <b> に基づいてソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<a> からデータフレームを読んで、 <B> とする	<B> = pd . read_csv ( <a> )	label <B> = pd . read_csv ( <a> )
<b> というエクセルファイルの <c> シート名を表に格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <A> の中の未入力の値を削除し、置き換える	<A> = <A> . dropna ( )	<C> = <A> . dropna ( )
<b> という名前のエクセルデータのシート名 <a> を表データに格納する	pd . read_excel ( <b> , sheet_name = <a> )	None pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> のカラム <d> について、 <b> カラムをインデックス、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<B> ( データフレーム ) の <c> 列を順番になるように並び替え、 <A> にする	<A> = <B> . sort_values ( <c> )	df = <B> . sort_values ( <c> )
そこで、文字コードが shift - jis であることとする	@option encoding = 'shift_jis'	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )
<B> の <c> 表属性の値を軸にソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <A> の欠損の数	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表 <A> の中の未入力の値を <B> とし、置き換える	<A> . fillna ( <B> , inplace = True )	<C> = <A> . fillna ( <B> )
左側のデータのインデックスと右側のデータの <b> を項目名として 2 つのデータを結合し、 <A> に代入する	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <b> )	<C> = pd . merge ( df1 , df2 , left_index = True , right_on = <b> )
一番左の列をインデックスに指定して、 <a> から読み込み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
<B> と表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> )	'IPAexGothic' = pd . merge ( <C> , <B> )
分割数を <C> として、 <A> 表の <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	qcut pd . qcut ( <A> [ <b> ] , <C> )
エクセルデータ <b> の <c> 番目のシートをデータフレームに格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
分割数を <A> 、ビンのラベルを 0 始まりの連番として、 <C> 表の列 <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <A> , label = False )
表データ <B> の <a> を落とす	<B> . drop ( <a> , axis = 1 )	df . drop ( <a> , axis = 1 )
<B> 中の <a> を欠損値に置換し、欠損値がある行をドロップする	<B> . replace ( <a> , np . nan ) . dropna ( )	plt . replace ( <a> , np . nan ) . dropna ( )
表 <B> をエクセルファイル <a> という名前にして書き出す	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
左外部結合でデータフレーム <B> と <A> データフレームを結合して、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
<b> と <a> を逆順にソートし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	False <C> = df . sort_values ( [ <b> , <a> ] , ascending = False )
<b> という名前のエクセルデータの <a> 番目のシートをデータフレームとして読み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
<A> 内の未記入の値の合計を求める	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <B> の先頭から <a> 行目までを見る	<B> [ : <a> ]	pd . : ( <B> [ <a> ] )
表 <B> と表 <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> )	'IPAexGothic' <A> = pd . merge ( <B> , <C> )
<B> ( データフレーム ) の <a> を順番になるようにソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
分割数を <C> として、 <A> データフレームの <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	pd . cut ( <A> [ <b> ] , <C> )
データフレーム <C> 内の表属性 <b> と <a> に重複があるか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<a> というエクセルデータを読み込む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
データフレーム <B> の <a> を欠損値に置換し、欠損値が存在する行を削除し、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> の <b> のそれぞれのデータの出現頻度を見る	<A> [ <b> ] . value_counts ( )	<b> <A> [ <b> ] . value_counts ( )
グラフの色を RGB 値 <A> として、 <C> と <B> のグラフを描画する	plt . plot ( <C> , <B> , color = ( <A> ) )	plt . plot ( <C> , <B> , color = ( <A> ) )
データフレーム <B> 内の表属性 <a> に重複がある行をドロップする	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
<a> を小さい順にして、インプレースする	df . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表 <A> 内に存在する <b> を欠損に置き換え、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
<A> の全ての列の重複する値がある行を取り除き、 <A> とする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
<a> というエクセルをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表データ <B> 全体を <c> を軸に並び替えて、 <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<B> 内の <a> を欠損値に置換し、欠損値が存在する行をドロップして、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
表属性 <d> を項目名として、データフレーム <B> と <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	@option <A> = pd . merge ( <B> , <C> , on = <d> )
エクセルファイル <a> の <b> を表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <B> 内の未入力の値を <B> の平均値で埋め、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	<B> = <B> . fillna ( <A> . mean ( ) )
データフレーム <A> から <b> というエクセルファイルに変換する	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
<B> 内の <a> カラムに重複があるのか確認	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表データ <A> 内の重複した行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表 <A> の <b> をインデックスに設定し、インプレースする	<A> . set_index ( <b> , inplace = True )	<D> . set_index ( <b> , inplace = True )
表 <A> 内の欠損を <A> 表の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
データフレーム <A> の <b> が <c> 以上のデータを得る	<A> [ <A> [ <b> ] >= <c> ]	<E> [ <A> [ <b> ] >= <c> ]
一番左の列をインデックスと設定して、ファイル名 <b> をデータフレームに格納し、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<e> <A> = pd . read_csv ( <b> , index_col = 0 )
表 <C> の <b> ごとにコラム <a> の平均を求める	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
ビン数を <D> として、 <B> の表属性 <c> をビン分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	df = pd . cut ( <B> [ <c> ] , <D> )
<A> の重複した行を削除を <B> にする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<A> と <B> データフレームを結合する	pd . merge ( <A> , <B> )	) pd . merge ( <A> , <B> )
データフレーム <C> の <b> コラムと <a> を降順にソートを <D> に代入する	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
さらに、フォントサイズを <a> とする	@option fontsize = <a>	iloc = pd . read_csv ( <a> , encoding = 'shift_jis' )
<b> というエクセルの <a> からデータフレームを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
<a> をキーとして、 <C> と <B> を結合する	pd . merge ( <C> , <B> , on = <a> )	merge pd . merge ( <C> , <B> , on = <a> )
<C> ( データフレーム ) のカラム <b> と <a> を大から小へと並び替えて、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> を数値データで置き換えて、 <A> にする	<A> = pd . get_dummies ( <A> )	df = pd . get_dummies ( <A> )
<D> の <c> と <b> ごとに列 <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<E> . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( )
<A> の <b> とカラム <c> に重複はあるのか	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<B> 全体をコラム <a> を元に昇順で並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> の <b> を軸にソートし、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <A> 内の <b> コラムとコラム <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <A> の <b> コラムを四分位数ごとで分割する	pd . qcut ( <A> [ <b> ] , 4 )	qcut pd . qcut ( <A> [ <b> ] , 4 )
表 <A> の <b> と <c> カラムを大きい順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> 中の未入力の値を <A> とし、 <C> に代入する	<C> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<b> からデータフレームをタブ区切りで読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	@option sep = pd . read_csv ( <b> , sep = '\t' )
表データ <A> の <b> に重複があるかチェック	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表データ <B> と <A> 表を縦方向に一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
表 <A> の <b> とコラム <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	sns . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> のカラム <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] )	format pd . to_datetime ( <A> [ <b> ] )
表データ <A> 中に重複があるか	<A> . duplicated ( )	<A> . duplicated ( )
表 <B> の <c> を欠損に置換し、欠損がある行をドロップを <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <B> の <a> 表属性をドロップを <B> にする	<B> = <B> . drop ( <a> , axis = 1 )	drop <B> = <B> . drop ( <a> , axis = 1 )
<B> の列にある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <B> を <c> カラムを元にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> の重複する行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
データフレーム <B> 中の NaN を <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
データフレーム <A> の <b> と <c> ごとに <d> の値の和を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	plt . groupby ( [ <A> [ <b> , <c> ] ) [ <d> ] . sum ( )
表 <A> の <b> と <c> をドロップし、インプレースする	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )
表 <A> にある <b> を欠損に置換し、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
重複する最後の行を残して <A> ( データフレーム ) の重複する行を落とす	<A> . drop_duplicates ( keep = False )	pd . drop_duplicates ( <A> , keep = False )
<a> をソートし、 <B> にする	<B> = df . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
ヘッダーを指定せずに <a> パスを読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , header = None )	<B> = pd . read_csv ( <a> , header = None )
表 <A> の <b> 行目を削除を <A> とする	<A> = <A> . drop ( <b> )	<C> = <A> . drop ( <b> )
列番号 <a> を位置と設定して、 <b> を読んで、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	index_col <C> = pd . read_csv ( <b> , index_col = <a> )
<A> の中の重複している値がある行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
エクセルファイル <a> の全てのシートをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
位置と列 <d> をキーとして <B> と <C> データフレームをマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
とりあえずデータフレーム <A> の内容をを調べる	<A> . head ( )	head <A> . head ( )
表 <A> の <b> と <c> を値が大きい順に並び替え、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> の <a> を欠損値に置換し、欠損値がある行をドロップを <B> に代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
<C> のコラム <a> の月を見て、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<A> [ <b> ] = <C> [ <a> ] . dt . month
<B> と <C> 表データに対して、コラム <d> を項目名としてデータを内部結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	<D> = pd . merge ( <C> , <B> , on = <d> )
データフレーム <B> を <a> コラムの値を元にソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> のインデックス <b> の名前を <c> に変更し、再代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( index = { <b> : <c> } )
<B> 中の欠損を <A> とし、インプレースする	<B> . fillna ( <A> , inplace = True )	<D> . fillna ( <A> , inplace = True )
表 <A> 中の <b> カラムに重複はあるか確認する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <A> のそれぞれの行について重複があるかどうかを検出する	<A> . duplicated ( )	<A> . duplicated ( )
<A> 中の欠損を <A> の平均値で補い、 <B> に代入する	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<B> 中に存在する <a> を欠損値に置換して、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<B> . replace ( <a> , np . nan , inplace = True )
データフレーム <B> の <a> を未入力の値に置換し、未入力の値がある行をドロップし、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> 中の欠損を <A> とする	<B> . fillna ( <A> )	scatter <B> . fillna ( <A> )
<B> の <c> カラムとカラム <d> を値が大きい順に並び替えて、 <A> にする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表データ <A> 中で重複した行の合計を見る	<A> . duplicated ( ) . sum ( )	<B> . duplicated ( ) . sum ( )
<A> のインデックス <b> の名前を <c> に変更する	<A> . rename ( index = { <b> : <c> } )	<A> . rename ( index = { <b> : <c> } )
データフレーム <A> 内の欠損を <B> とし、再代入する	<A> = <A> . fillna ( <B> )	<C> = <A> . fillna ( <B> )
データフレーム <A> をインデックスでソートを <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <A> 内の未記入の値を <A> 表の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<a> というエクセルファイルのシート全部をデータフレームとして読み込んで、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
<C> の列名を <b> から <a> にリネームして、 <C> に代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
<B> の重複する値がある行を取り除き、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> をダミー変数にする	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表 <A> の重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> 内の <b> と <c> 列に重複はあるか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> 内の未入力の値を含む行を消す	<A> . dropna ( )	<A> . dropna ( )
一番左の列を位置に、ファイル <a> からデータフレームとを読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
<a> をデータフレームとして読み込み、 <B> にする	<B> = pd . read_csv ( <a> )	step <B> = pd . read_csv ( <a> )
表データ <A> の中の欠損値を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<E> のカラム <d> の名前を <c> に、カラム <b> の名前を <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<B> の重複する行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <B> の <a> 表属性をグループ化して、値ごとのデータ数を求める	<B> . groupby ( <a> ) . size ( )	<E> . groupby ( <a> ) . size ( )
表 <A> の <b> と <c> をドロップ	<A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> . drop ( [ <b> , <c> ] , axis = 1 )
データフレーム <A> の <b> とコラム <c> ごとに <d> コラムの値の合計値を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
表 <A> の <b> 列の名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	} <A> . rename ( columns = { <b> : <c> } )
全結合で <B> データフレームと <A> データフレームをマージして、 <C> に代入する	<C> = pd . merge ( <B> , <A> , how = 'outer' )	df = pd . merge ( <B> , <A> , how = 'outer' )
表 <B> を <a> に基づいてソートし、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> 内の <a> を未入力の値に置換し、未入力の値がある行を削除して、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> にある <a> を欠損に置換して、再代入する	<B> = <B> . replace ( <a> , np . nan )	@option <B> = <B> . replace ( <a> , np . nan )
<A> 中のそれぞれの列に存在する <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <C> の表属性 <b> ごとに <a> の平均値を求める	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表データ <B> の中の <a> に重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
表データ <A> を <b> の値を軸にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <A> 内の未入力の値が存在する行を削除して、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
データフレーム <A> とデータフレーム <B> を縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> を <c> を元に昇順でソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <D> の <a> について、 <c> カラムをインデックス、 <b> をカラムとしたピボットテーブルを作成し、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <B> と表データ <C> を縦結合して、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	df = pd . concat ( [ <B> , <C> ] )
表データ <A> を位置を元に昇順で並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<B> の列の名前を <c> から <d> に、 <e> から <f> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	df = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
表 <A> のカラムそれぞれにある <b> の個数を見る	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
表データ <A> を <b> を元にソートして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <B> の <a> を欠損に置換し、欠損が存在する行を削除して、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> 中の <b> を NaN に置換し、 NaN が存在する行をドロップして、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <B> を <c> を元にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<b> という名前のエクセルデータの <a> をデータフレームとして読み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
列番号 <c> をインデックスに指定して、 <b> から読み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	@option <A> = pd . read_csv ( <b> , index_col = <c> )
表データ <B> の中の未記入の値を <A> に置換し、置き換える	<B> = <B> . fillna ( <A> )	df . fillna ( <A> , <B> , inplace = True )
<A> 内の NaN がある行をドロップして、置き換える	<A> . dropna ( inplace = True )	<A> = <A> . dropna ( )
表データ <A> の <b> と <c> を逆順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<a> カラムと <b> に重複があるのかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
データフレーム <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームして、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
表属性 <b> と <a> を大から小へとする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
左側のデータの位置と右側のデータの表属性 <a> を項目名として、 <C> データフレームと <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<B> = pd . merge ( <C> , left_index = True , right_on = <a> )
文字コードをシフト JIS として、 <a> を読む	pd . read_csv ( <a> , encoding = 'shift_jis' )	@option encoding = pd . read_csv ( <a> , encoding = 'shift_jis' )
表 <B> 中の未入力の値を <C> に置き換え、 <A> にする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
<B> の <a> の値を昇順で並び替え、 <B> とする	<B> = <B> . sort_values ( <a> )	<A> = <B> . sort_values ( <a> )
表データ <A> 中の欠損値を <B> に置換し、置き換える	<A> . fillna ( <B> , inplace = True )	df . fillna ( <A> , inplace = True )
表 <A> を <b> を軸にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> 全体を <b> カラムの値を元にソートを <A> にする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> のカラム <c> の曜日の数値型を表示し、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	@option <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
ビン数を <B> 、ビンのラベルを <A> として、 <D> の列 <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	set_index = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<A> 中の重複する値がある行を取り除いて、インプレースする	<A> . drop_duplicates ( inplace = True )	plt <A> . drop_duplicates ( inplace = True )
表 <A> をエクセルファイル <b> というファイル名で保存する	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
ビン数を <A> として、 <C> の <b> をビンに含まれる個数が等しくなるように分割して、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	df = pd . qcut ( <C> [ <b> ] , <A> )
<D> の <a> について、列 <c> を位置、 <b> を列としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<b> 番目の列を位置に設定して、ファイルパス <a> から読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <B> 中の <a> に重複はあるのかチェックを調べる	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
<A> の <b> コラムの名前を <c> に、 <d> コラムの名前を <e> に変更して、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } , inplace = True )
表 <C> の <b> と <a> を消して、 <C> とする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<A> の重複している行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <B> の <a> を one - hot 表現に変換し、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
左外部結合で表データ <B> と <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'left' )	merge pd . merge ( <B> , <A> , how = 'left' )
<a> から表をタブ区切りで読む	pd . read_csv ( <a> , sep = '\t' )	plt . pd ( <a> , sep = '\t' )
そこで、マーカーのエッジカラーを紫色とする	@option markeredgecolor = 'purple'	dropna = 'purple'
表 <A> 内の未記入の値を <B> に置換し、インプレースする	<A> . fillna ( <B> , inplace = True )	plt . fillna ( <A> , <B> , inplace = True )
<A> の <b> の名前を <c> に、 <d> の名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <b> : <c> , <d> : <e> } )
<C> の <b> が <a> 以下データを得る	<C> [ <C> [ <b> ] <= <a> ]	<D> [ <C> [ <b> ] <= <a> ]
表 <B> と表データ <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表データとして <a> パスをカンマ区切りで読み込む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
ビン数を <D> 、ビンの名前を 0 始まりの連番として、データフレーム <B> の <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	@option <A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
<A> の <b> コラムの値を軸に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <B> 内の未記入の値を <A> で埋めて、 <B> とする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
<A> 全体を <b> コラムの値を元にソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <A> の要約統計量を見る	<A> . describe ( )	<A> = <A> . describe ( )
データフレーム <B> を <c> の値に沿ってソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> の表属性 <d> について、 <b> をインデックス、 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
表 <A> の列それぞれに存在する <b> の個数を表示する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<b> という名前のエクセルの <a> 番目のシートを読む	pd . read_excel ( <b> , sheet_name = <a> )	read_excel <b> pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> 内で重複する行数の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<B> の <a> の値を昇順で並び替えて、インプレースする	<B> . sort_values ( <a> , inplace = True )	plt . sort_values ( <B> , <a> , inplace = True )
<B> ( データフレーム ) のカラム <a> を順番になるように並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の <b> カラムごとに <c> の平均を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
<A> の行名を <b> から <c> に変更し、再代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<E> = <A> . rename ( index = { <b> : <c> } )
先頭の列をインデックスに、 <a> をデータフレームとして読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
表 <C> 中のカラム <b> と <a> カラムに重複があるか確認	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <B> の <a> をグループ化して、値ごとのデータ数を算出する	<B> . groupby ( <a> ) . size ( )	<E> . groupby ( <a> ) . size ( )
<C> 中のカラム <b> と <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
列番号 <b> をインデックスに、 <a> ファイルからデータフレームとを読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
<A> の重複した行を削除を <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表データ <B> 内のそれぞれのカラムに存在する <a> の個数の合計を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> 中の重複する行を消し、再代入する	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
データフレーム <A> のコラム <b> の名前を <c> に、 <d> コラムの名前を <e> にリネームし、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	df . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
表 <B> の中の NaN を <A> に置き換え、 <C> とする	<C> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
エクセルの <a> から読んで、 <B> とする	<B> = pd . read_excel ( <a> )	label <B> = pd . read_excel ( <a> )
<B> の <a> に重複があるかどうか確認する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
そこで、マーカースタイルをひし形とする	@option marker = 'D'	<B> = pd . read_excel ( <a> , sheet_name = None )
<D> の <a> について、カラム <c> を位置、 <b> をカラムとしたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <A> 中の <b> に重複があるかどうか表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <A> 内の <b> を未記入の値に置換し、未記入の値が存在する行を削除し、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )
表 <B> 内の <c> に重複がある行をドロップを <A> にする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
表データ <B> を <a> カラムを軸にソートして、置き換える	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> と <B> 表を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <A> 内の重複を見る	<A> . duplicated ( )	<B> . duplicated ( )
<c> 区切りで表として <b> パスを読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = <c> )	df = pd . read_csv ( <b> , sep = <c> )
<C> ( データフレーム ) の <b> と <a> 列を大きい順にし、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の先頭から <b> 行までを見る	<A> [ : <b> ]	pd . : ( <A> [ <b> ] )
<B> 全体を <a> 表属性を元に昇順で並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	plt . sort_values ( <B> , <a> , inplace = True )
表 <B> の中の未入力の値を <A> とし、 <C> にする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
表データ <B> を <a> の値に基づいてソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> をコラム <b> の値でソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <C> の中のコラム <b> と <a> コラムに重複があるのかどうか表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> 全体を <b> 表属性を元に昇順で並び替え、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表データ <A> 中の欠損値の合計	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表 <B> の中の <a> に重複があるのかどうかチェック	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
データフレーム <C> の <b> カラムをインデックス、 <a> をカラムとしたピボットテーブルを作成して、 <D> とする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<c> <D> = <C> . pivot_table ( index = <b> , columns = <a> )
表データ <B> 中の <a> に重複があるかどうかチェック	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表 <B> の <a> 表属性のバリュー	<B> [ <a> ] . values	<E> [ <B> [ <a> ] . values
表 <B> 内の <a> に重複がある行を落とす	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
表データ <A> の列の名前を <b> から <c> に、 <d> から <e> にリネームして、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<A> の <b> 列をインデックス、 <c> 列を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	df . pivot_table ( index = <b> , columns = <c> )
表データ <A> をインデックスを軸にソートする	<A> . sort_index ( )	<A> . sort_index ( )
分割数を <A> 、ビンの名前を整数値として、データフレーム <C> のコラム <b> を分割して、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	@option <D> = pd . cut ( <C> [ <b> ] , <A> , label = False )
データフレーム <A> 内の重複している行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表 <A> 中の欠損値を数える	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表データ <A> 中の欠損の数を計算する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表 <A> をインデックスで並び替えて、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
表 <A> をインデックスでソートし、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<A> 中の欠損が存在する行を消し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表データ <A> 内の <b> と <c> に重複があるかチェックを見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <A> の欠損を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
表 <A> にある <b> を欠損に置換する	<A> . replace ( <b> , np . nan )	replace <A> np . replace ( <b> , np . nan )
データフレーム <A> の中の欠損を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<C> = <A> . fillna ( <B> )
表データ <B> 内の欠損値を <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
<B> の index が <a> の行	<B> . loc [ <a> ]	<= . loc [ <a> ]
<A> の <b> の値を軸にソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
エクセルの <a> を読み込んでデータフレームにして、 <B> にする	<B> = pd . read_excel ( <a> )	<E> = pd . read_excel ( <a> )
表 <C> と <B> に対して、列 <a> を項目名としてデータを結合し、 <D> に代入する	<D> = pd . merge ( <C> , <B> , on = <a> )	df = pd . merge ( <C> , <B> , on = <a> )
<b> という名前のエクセルファイルのシート全部から読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
表データ <B> をエクセルファイル <a> に変換する	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
表データ <A> をカラム <b> でソートして、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<a> 番目の列をインデックスに設定して、 <b> から読み、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
<b> とコラム <a> に重複があるか調べる	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
表 <C> の <b> ごとに <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表データ <B> 中の <a> に重複はあるのか	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
<A> 中の NaN の合計を見る	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<a> カラムと <b> を逆順にして、再代入する	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <C> の <b> と <a> に重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> 全体を <b> コラムの値に沿ってソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表 <B> を <a> を軸に並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	step <B> = <B> . sort_values ( <a> )
表データ <B> 内の未記入の値を <A> に置換する	<B> . fillna ( <A> )	<A> . fillna ( <B> )
データフレーム <A> 内の欠損したセル数をカウントする	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<A> の <b> インデックスの名前を <c> に変更して、再代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( index = { <b> : <c> } )
<B> 中の <a> を未入力の値に置換し、未入力の値がある行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 内の欠損値を表データ <A> の平均値で埋めて、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<B> ( データフレーム ) の表属性 <a> を順番になるように並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <B> 中の <a> を未記入の値に置換し、未記入の値が存在する行を削除する	<B> . replace ( <a> , np . nan ) . dropna ( )	<B> . replace ( <a> , np . nan ) . dropna ( )
<B> 中の未記入の値を落とし、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
分割数を <B> 、ビンの名前を <A> リストとして、データフレーム <D> の <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	sheet_name pd . cut ( <D> [ <c> ] , <B> , label = <A> )
データフレーム <A> 内の NaN の数を見る	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表データ <A> の <b> についてのヒストグラムを描画する	plt . hist ( <A> [ <b> ] )	@option plt . hist ( <A> [ <b> ] )
表 <B> のカラム名を <A> とする	<A> = <B> . columns	<A> = <B> . columns
<B> のカラムにある <a> の個数の合計値を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> と <C> データフレームを横方向にマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	<A> = pd . merge ( <B> , <C> )
データフレーム <B> の <c> 行目を消し、 <A> にする	<A> = <B> . drop ( <c> )	@option <c> = <B> . drop ( <c> )
<B> 全体を <a> の値を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<A> 中にある <b> を欠損とする	<A> . replace ( <b> , np . nan )	@option np . replace ( <b> , np . nan )
表 <B> 中の <a> に重複がある行をドロップし、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
エクセルファイル <b> の <a> 番目のシートを ] [ データフレームとして読み込んで、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> のカラム <b> ごとに <c> の平均値を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
<A> に重複は存在するのか	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> から重複している行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
列番号 <a> を位置に設定して、 <b> からデータフレームとを読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
<A> のインデックスをソートして、 <B> に代入する	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <A> の <b> を昇順に並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> の <b> コラムの名前を <c> に、 <d> コラムの名前を <e> に変更して、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <A> 全体を <b> を軸に並び替え、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
表データ <A> 全体をインデックスを軸にソート	<A> . sort_index ( )	<A> . sort_index ( )
表 <A> 内の重複している行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
データフレーム <A> をインデックスでソートを <B> に代入する	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
<B> の <a> 列の値を軸にソートし、置き換える	<B> = <B> . sort_values ( <a> )	df . sort_values ( <a> , inplace = True )
データフレーム <A> 中に重複があるかどうか確認	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <B> 全体を <a> を元に並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	'greenyellow' . sort_values ( <a> , inplace = True )
データフレーム <A> の <b> の名前を <c> にリネームして、再代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<E> = <A> . rename ( index = { <b> : <c> } )
データフレーム <A> の表属性 <c> の曜日を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	df [ <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name
左側のデータのインデックスと右側のデータのカラム <a> をキーとして、 <C> とデータフレーム <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<b> という名前のエクセルから読み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
凡例をつける	plt . legend ( )	<B> . head ( <a> )
データフレーム <A> を位置を元にソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
ビン数を <D> 、ビンの名前を整数値として、 <B> の表属性 <c> をビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	df = pd . cut ( <B> [ <c> ] , <D> , label = False )
<a> を x 軸に付ける	plt . xlabel ( <a> )	xlabel . xlabel ( <a> )
位置と <a> コラムをキーとして <C> 表と <B> 表を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <B> 内の <c> を NaN に置換し、 NaN が存在する行をドロップを <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <B> の <a> をインデックスに設定して、 <C> とする	<C> = <B> . set_index ( <a> )	False <C> = <B> . set_index ( <a> )
<A> 内の未記入の値を含む行を落とし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表データ <B> 内の重複している行を落とし、 <A> に代入する	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
境界値を <A> として、表 <C> の <b> カラムをビン分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	df = pd . cut ( <C> [ <b> ] , <A> )
表データ <A> の列それぞれに存在する <b> の個数を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <C> の <b> カラムと <a> を大きい順に並び替え、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> のカラム <a> の値を昇順で並び替えて、 <C> とする	<C> = <B> . sort_values ( <a> )	<A> = <B> . sort_values ( <a> )
表 <A> の <b> に重複があるか確認を見る	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<a> という名前のエクセルファイルの <b> 番目のシートを読む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
表データ <B> 全体を <a> コラムを軸にソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
表 <A> の行の名前	<A> . index	index <A> . index
データフレームとして <a> 区切りで <b> を読んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
表データ <B> にある <c> を未入力の値に置換して、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	@option <A> = <B> . replace ( <c> , np . nan )
表 <A> 内の欠損が存在する行を落とす	<A> . dropna ( )	loc <A> . dropna ( )
全結合で <B> と <A> データフレームを一つにまとめて、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	@option <C> = pd . merge ( <B> , <A> , how = 'outer' )
<A> の <c> の日にちを確認し、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . day	<A> [ <b> ] = <A> [ <c> ] . dt . day
データフレーム <A> 内の <b> を欠損値に置換し、欠損値が存在する行を削除	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <B> の <a> コラムに重複は存在するのかチェックする	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表データ <B> の NaN が存在する行をドロップして、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
カンマ区切りで表を CSV ファイル <a> ( ファイル名 ) から読み込んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	pd = pd . read_csv ( <a> , sep = ',' )
<a> を <b> 区切りで読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
表 <A> を位置でソート	<A> . sort_index ( )	<A> . sort_index ( )
ビン数を <C> として、 <A> の列 <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	qcut pd . qcut ( <A> [ <b> ] , <C> )
データフレーム <D> の列 <a> について、 <c> をインデックス、 <b> を列としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> 中の欠損値を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表 <A> の <b> と列 <c> を降順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> の <b> に重複がある行を消す	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
表 <B> 内の欠損を <C> として、 <A> とする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
<B> と <A> を一つにまとめる	pd . merge ( <B> , <A> )	'outer' pd . merge ( <B> , <A> )
表 <A> を <b> を軸に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
カンマ区切りで表をパス <a> から読み込み、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
<B> にある <a> を NaN に置換して、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
<B> のカラム <a> をインデックスとして設定し、 <B> とする	<B> = <B> . set_index ( <a> )	step <B> = <B> . set_index ( <a> )
エクセルファイル <a> を読む	pd . read_excel ( <a> )	sheet_name pd . read_excel ( <a> )
カンマ区切りでデータフレームを <a> から読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
<A> の列 <b> と <c> を大から小へと並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> の <e> 表属性について、表属性 <c> をインデックス、表属性 <d> を表属性としたピボットテーブルを作成し、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表データ <A> を <b> という名前にして CSV ファイルで保存する	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
データフレーム <A> の <b> カラムに重複が存在するのか	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
ピボット操作で <A> データフレームの列を行に変更する	<A> . stack ( )	<A> . unstack ( )
表データ <A> にある <b> を未記入の値として、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
<B> 全体を <a> を軸にソートを <C> とする	<C> = <B> . sort_values ( <a> )	<A> = <B> . sort_values ( <a> )
表データ <A> 中の欠損を <A> の平均値で埋め、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <B> 中の <a> を未入力の値に置換し、未入力の値が存在する行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<B> . replace ( <a> , np . nan ) . dropna ( )
カラム <a> をダミー変数化して、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	<E> = pd . get_dummies ( <B> [ <a> ] )
<A> から重複する行を取り除く	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<a> 番目の列を位置に指定して、 <b> を表に格納する	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表 <B> の <a> 行目を落とし、 <C> とする	<C> = <B> . drop ( <a> )	dropna = <B> . drop ( <a> )
表 <B> の <a> 行から末尾までを確認する	<B> [ <a> : ]	<B> [ <a> : ]
<B> と <C> を縦に連結を <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <B> と <A> を結合する	pd . merge ( <B> , <A> )	'outer' pd . merge ( <B> , <A> )
データフレーム <A> の <b> が <c> のデータ	<A> [ <A> [ <b> ] == <c> ]	loc <A> [ <A> [ <b> ] == <c> ]
表 <B> の <c> 表属性を四分位数ごとで分割し、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	df = pd . qcut ( <B> [ <c> ] , 4 )
表データ <B> 中の欠損を <A> に置換し、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
ビン数を <D> 、ビンの名前を 0 始まりの連番として、 <B> 表の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	df = pd . cut ( <B> [ <c> ] , <D> , label = False )
データフレーム <A> と <B> を縦方向に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> についてダミー変数を作って、 <A> に代入する	<A> = pd . get_dummies ( <A> )	<B> = pd . get_dummies ( <A> )
エクセルファイル <b> の全てのシートから読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
<b> と <a> 列を値が大きい順にして、再代入する	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = df . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <C> の表属性 <b> を位置、 <a> 表属性を表属性としたピボットテーブルを作成し、 <D> とする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<c> <D> = <C> . pivot_table ( index = <b> , columns = <a> )
表データ <A> 中の未記入の値を消して、置き換える	<A> . dropna ( inplace = True )	<C> = <A> . dropna ( )
<A> から重複する行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表 <A> 内の <b> 表属性に重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
データフレーム <C> と <B> に対して、 <a> をキーとしてデータを内部結合し、 <D> にする	<D> = pd . merge ( <C> , <B> , on = <a> )	@option <D> = pd . merge ( <C> , <B> , on = <a> )
<B> 全体を <c> の値を元にソートし、 <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> 内の <b> に重複は存在するのか表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表データ <A> 全体を <b> コラムを軸にソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表データ <A> 中の未入力の値がある行を落として、置き換える	<A> = <A> . dropna ( )	<C> = <A> . dropna ( )
<b> という名前のエクセルファイルの <a> をデータフレームとして読む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <C> の行の名前を <b> から <a> にリネームして、 <C> に代入する	<C> = <C> . rename ( index = { <b> : <a> } )	<E> = <C> . rename ( index = { <b> : <a> } )
<A> と表データ <B> を縦方向にくっつける	pd . concat ( [ <A> , <B> ] )	@option pd . concat ( [ <A> , <B> ] )
<A> 中の <b> 表属性と <c> に重複が存在するのか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
表データ <A> 内の欠損値を <B> で埋め、 <A> にする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
<A> の <b> と <c> に重複は存在するのかを確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> の <b> と <c> カラムを逆順にソートし、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 中に存在する <b> を NaN とし、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<B> = <A> . replace ( <b> , np . nan )
表データ <A> の欠損値の数を調べる	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <A> 中の <b> 表属性と <c> に重複があるかどうか	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
表データ <D> の <c> と <b> と <a> について関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
<a> からカンマ区切りで表を読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
データフレーム <A> についてダミー変数を作る	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表 <A> の中の欠損値を含む行を消して、 <A> とする	<A> = <A> . dropna ( )	<C> = <A> . dropna ( )
表データ <A> 内にある <b> を NaN とし、置き換える	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
データフレーム <A> の <b> ごとに <c> の数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )
表 <A> の列 <b> と <c> と <d> について関係性を一度に描く	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
<a> を <b> 区切りで読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
データフレーム <A> の <b> をインデックス、 <c> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	index . pivot_table ( index = <b> , columns = <c> )
表 <A> 内の表属性 <b> と <c> 表属性に重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
<B> を <a> を元に昇順でソートする	<B> . sort_values ( <a> )	<a> <B> . sort_values ( <a> )
<A> 中の未記入の値を含む行を落とす	<A> . dropna ( )	<A> . dropna ( )
表データ <C> の <b> とカラム <a> を大きい順にソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> の <c> 列を位置、 <d> 列を列としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	df = <B> . pivot_table ( index = <c> , columns = <d> )
表 <A> を位置を元に並び替えて、 <A> にする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <B> を位置で並び替え、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
エクセルファイル <a> の全部のシートをデータフレームとして読んで、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
左側のデータの位置と右側のデータの <a> を項目名として、データフレーム <C> と <B> データフレームを一つにまとめて、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<a> 番目の列を位置にして、 <b> からデータフレームとを読み込み、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
表データ <A> をインデックスを元に昇順でソートし、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
両方の列を使って <B> ( データフレーム ) と表 <C> をマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , how = 'outer' )	df = pd . merge ( <B> , <C> , how = 'outer' )
そこで、マーカーの色を黄緑色とする	@option markerfacecolor = 'greenyellow'	'greenyellow' = 'greenyellow'
<A> ( データフレーム ) の <b> を順にソートして、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
表 <B> の列 <a> に重複がある行を消す	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
<A> の <b> の値を軸に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
表 <B> を <a> の値でソートし、置き換える	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<a> という名前のエクセルのシート全部を読み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
表データ <B> の <a> 列の一意の値	<B> [ <a> ] . unique ( )	<B> [ <a> ] . unique ( )
<C> の <b> が <a> のデータを抽出する	<C> [ <C> [ <b> ] == <a> ]	<A> [ <C> [ <b> ] == <a> ]
<b> というエクセルの <c> 番目のシートから読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	read_excel <A> = pd . read_excel ( <b> , sheet_name = <c> )
<C> 内の <b> と <a> に重複があるかどうか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
位置と <d> 表属性をキーとしてデータフレーム <B> とデータフレーム <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
データフレーム <A> の列 <b> と <c> を大から小へとソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <C> の列名を <b> から <a> にリネームし、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
左外部結合で表 <B> と表 <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'left' )	merge pd . merge ( <B> , <A> , how = 'left' )
エクセルファイル <a> をデータフレームにする	pd . read_excel ( <a> )	None . to_excel ( <a> )
表属性 <a> と <b> を大から小へとする	df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> . sort_values ( [ <a> , <b> ] , ascending = False )
表 <B> の <a> の分	<B> [ <a> ] . dt . minute	<E> [ <B> [ <a> ] . dt . minute
データフレーム <A> の列の名前を <b> から <c> に、 <d> から <e> にリネームして、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <A> 全体をインデックスに基づいてソートして、 <A> にする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <B> の上 <a> 行を確認する	<B> . head ( <a> )	head <B> . head ( <a> )
<a> というエクセルデータの全てのシートをデータフレームとして読み込んで、 <B> にする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
<A> のインデックスをソートして、 <A> に代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <A> の NaN を <B> とし、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
データフレーム <B> 全体を <c> 列の値でソートを <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <B> を <a> という名前で CSV ファイルで保存する	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
データフレーム <A> に存在する <b> を未入力の値として、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
表データ <B> と <C> データフレームを縦方向に一つにまとめ、 <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	df = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	<B> [ <A> . duplicated ( ) ]
一番左の列をインデックスとして、 <b> を読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	loc <A> = pd . read_csv ( <b> , index_col = 0 )
<A> の未入力の値を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
<B> の表属性 <a> の曜日の数値型	<B> [ <a> ] . dt . dayofweek	<E> [ <B> [ <a> ] . dt . dayofweek
<C> の <b> カラムと <a> を降順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> の中の未記入の値を表 <A> の平均値で埋め、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
ビン数を <D> として、データフレーム <B> の <c> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
表 <B> の中の未入力の値を <A> として、 <B> に代入する	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
表データ <A> の <b> と <c> と <d> について関係性を一気に描く	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> [ [ <b> , <c> , <d> ] ] . corr ( )
データフレーム <B> の <a> をインデックスとし、 <B> にする	<B> = <B> . set_index ( <a> )	step <B> = <B> . set_index ( <a> )
<B> の中の <a> を NaN に置換し、 NaN が存在する行をドロップし、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <B> の重複している値がある行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	<D> = <B> . drop_duplicates ( )
<B> 中に存在する <a> を NaN とし、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	step <B> = <B> . replace ( <a> , np . nan )
表データ <D> の <c> が <b> か <a> のデータ	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	<B> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]
ファイル名 <b> から表データを <a> 区切りで読み込む	pd . read_csv ( <b> , sep = <a> )	read_csv pd . read_csv ( <b> , sep = <a> )
<A> ( データフレーム ) のカラム <b> についてダミー変数をつくる	pd . get_dummies ( <A> [ <b> ] )	) pd . get_dummies ( <A> [ <b> ] )
表データ <E> の <d> カラムの名前を <c> に、カラム <b> の名前を <a> にリネームし、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
表データ <A> 中の欠損値を含む行を消し、 <A> とする	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> の <b> を位置に設定する	<A> . set_index ( <b> )	<A> . set_index ( <b> )
<B> ( データフレーム ) の <a> カラムを値が小さい順にして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<A> = <B> . sort_values ( <a> )
表属性 <a> をキーとして、表 <C> と表 <B> をマージして、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	<F> = pd . merge ( <C> , <B> , on = <a> )
データフレーム <A> の <b> と <c> に重複があるかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
グラフのサイズを横 <b> 縦 <a> にセットする	plt . figure ( figsize = ( <b> , <a> ) )	plt . figure ( figsize = ( <b> , <a> ) )
データフレーム <C> の <b> と <a> カラムの相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	<C> [ [ <b> , <a> ] ] . corr ( )
表 <A> 中に存在する <b> を未記入の値に置き換える	<A> . replace ( <b> , np . nan )	<B> . replace ( <b> , np . nan )
<B> ( データフレーム ) の表属性 <a> を値が小さい順にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
カラム <a> についてダミー変数を作成する	pd . get_dummies ( df [ <a> ] )	get_dummies pd . get_dummies ( df [ <a> ] )
<A> の行の名前を見る	<A> . index	index <A> . index
分割数を <C> 、ビンの名前をインデックスとして、 <A> 表データの <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index pd . cut ( <A> [ <b> ] , <C> , label = False )
表データ <B> 全体を <c> の値を元に並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <C> の <a> 列の時間を調べて、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . hour	<A> [ <b> ] = <C> [ <a> ] . dt . hour
データフレーム <C> の <a> 表属性の曜日の数値型を調べて、  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . dt . dayofweek	<A> [ <b> ] = <C> [ <a> ] . dt . dayofweek
データフレーム <A> の <b> に重複があるかどうか調べる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<C> ( データフレーム ) の表属性 <b> と <a> を値が大きい順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の列それぞれに存在する <b> の個数を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
ヘッダーなしで <a> を読み、 <B> とする	<B> = pd . read_csv ( <a> , header = None )	step = pd . read_csv ( <a> , header = None )
CSV ファイル <b> ( ファイル名 ) を表データとして読んで、 <A> にする	<A> = pd . read_csv ( <b> )	@option <b> = pd . read_csv ( <b> )
表データ <B> の列 <a> を昇順にソートを <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表 <A> を位置でソートを <A> にする	<A> = <A> . sort_index ( )	loc <A> = <A> . sort_index ( )
<A> と表 <B> を縦方向に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
重複する最後の行を残して <A> ( データフレーム ) 内の重複する行をドロップして、 <B> とする	<B> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
<B> の <c> コラムの名前を <d> に、 <e> コラムの名前を <f> に変更し、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<E> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
データフレーム <A> 中に重複はあるかどうか確認	<A> . duplicated ( )	<A> . duplicated ( )
<a> を表データとして読む	pd . read_csv ( <a> )	2 pd . read_csv ( <a> )
表データ <A> 内の重複する値がある行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> から重複している行を取り除いて、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の <b> の出現回数を調べる	<A> [ <b> ] . value_counts ( )	<b> <A> [ <b> ] . value_counts ( )
表 <C> のコラム <b> ごとに <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
データフレーム <B> 内の NaN を <A> とし、 <C> とする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
<B> の <a> カラムの時間	<B> [ <a> ] . dt . hour	<B> [ <a> ] . dt . hour
ファイルパス <a> を <b> 区切りで表として読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
<B> 全体を <c> の値に基づいてソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	@option <A> = <B> . sort_values ( <c> )
表データ <A> を <b> に沿ってソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<a> 番目の列を位置に、 <b> をデータフレームとして読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表 <A> 中の重複する値がある行をドロップして、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<A> を <b> コラムを元にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
左外部結合で <B> と <C> 表をマージして、 <A> にする	<A> = pd . merge ( <B> , <C> , how = 'left' )	df = pd . merge ( <C> , <B> , how = 'left' )
表データ <E> の <d> の名前を <c> に、 <b> の名前を <a> にリネームして、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <A> をダミー変数にして、 <A> にする	<A> = pd . get_dummies ( <A> )	@option <A> = pd . get_dummies ( <A> )
先頭の列をインデックスとして、 <b> を表データに格納して、 <A> にする	<A> = pd . read_csv ( <b> , index_col = 0 )	<C> <A> = pd . read_csv ( <b> , index_col = 0 )
データフレーム <A> 中のカラムそれぞれにある <b> の個数の合計を見る	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
データフレーム <C> のカラム <b> と <a> を大から小へと並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
カンマ区切りで <a> をデータフレームとして読んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
<A> 内に重複があるのかどうか表示する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <C> の <b> をインデックス、 <a> を列としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	index . pivot_table ( index = <b> , columns = <a> )
<b> という名前のエクセルデータの <c> シート名からデータフレームを読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> <A> = pd . read_excel ( <b> , sheet_name = <c> )
<b> というエクセルファイルのシート全部をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	<B> = pd . read_excel ( <b> , sheet_name = None )
表データ <A> 中の欠損値をドロップして、置き換える	<A> . dropna ( inplace = True )	<C> = <A> . dropna ( )
<a> 表属性を順番になるようにする	df . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> の全ての列で重複している行を取り除いて、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<a> 番目の列を位置として、 <b> を表に格納する	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
<A> 中の重複している値がある行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
<a> から表を読み、 <B> とする	<B> = pd . read_csv ( <a> )	label <B> = pd . read_csv ( <a> )
<A> 中の重複している行をドロップ	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<B> と <C> 表データのどちらにも存在するデータでマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	df = pd . merge ( <C> , <B> , how = 'outer' )
データフレーム <A> 中の表属性 <b> に重複がある行を落として、置き換える	<A> . drop_duplicates ( subset = <b> , inplace = True )	df . drop_duplicates ( subset = <b> , inplace = True )
<A> 中の重複している行を消し、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表データ <A> 内の <b> に重複がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<D> = <A> . drop_duplicates ( subset = <b> )
表データ <A> のコラム <c> の秒を調べて、  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . second	@option <A> [ <b> ] = <A> [ <c> ] . dt . second
データフレーム <B> に存在する <a> を未記入の値に置換する	<B> . replace ( <a> , np . nan )	scatter <B> . replace ( <a> , np . nan )
表データ <A> 中の重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <C> の <b> が <a> のデータを抽出する	<C> [ <C> [ <b> ] == <a> ]	<A> [ <C> [ <b> ] == <a> ]
<C> の <b> が <a> より小さいデータ	<C> [ <C> [ <b> ] <  <a> ]	< <C> [ <b> ] < <a> ]
<D> の <c> 列と <b> と <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	pd . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> 番目の列を位置と設定して、ファイル <a> を表データに格納する	pd . read_csv ( <a> , index_col = <b> )	df . pd ( [ <b> , <a> ] , index_col = 0 )
データフレーム <A> 中の <b> と <c> に重複があるのかを表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<C> の <b> を位置、 <a> を表属性としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	index = <C> . pivot_table ( index = <b> , columns = <a> )
データフレーム <B> を <a> を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 内の未入力の値を <A> の平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<b> コラムに重複がある行を drop して、 <A> に代入する	<A> = df . drop_duplicates ( subset = <b> )	<D> = df . drop_duplicates ( subset = <b> )
表 <A> の列 <b> に重複がある行を消し、置き換える	<A> = <A> . drop_duplicates ( subset = <b> )	df . drop_duplicates ( subset = <b> , inplace = True )
エクセル <a> のシート全部を表データに格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<A> 中の <b> を NaN に置換し、 NaN が存在する行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> 中の <b> と <c> コラムに重複はあるか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> を <b> という名前にして CSV ファイルに書き出す	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
表 <B> を <a> を元に昇順で並び替え、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <C> の <b> とコラム <a> を逆順にソートし、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
<A> 中の重複している値がある行をドロップし、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
表データ <A> をインデックスでソートして、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <A> の上 <b> 行を確認する	<A> . head ( <b> )	<b> <A> . head ( <b> )
<B> 中の NaN を <A> に置換して、 <B> にする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
<B> 中の列にある <a> の個数を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表 <B> 内の <a> を未入力の値に置換し、未入力の値がある行を削除して、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> . replace ( <a> , np . nan ) . dropna ( inplace = True )
表 <A> 内の未入力の値の数を計算する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
文字コードをシフト JIS として、 <a> を読み込む	pd . read_csv ( <a> , encoding = 'shift_jis' )	encoding = pd . read_csv ( <a> , encoding = 'shift_jis' )
表 <B> をエクセルファイル <a> というファイル名で保存する	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
色を <A> として、 <C> と <B> のグラフをプロットする	plt . plot ( <C> , <B> , color = ( <A> ) )	plt . plot ( <C> , <B> , color = ( <A> ) )
データフレーム <C> 内の <b> と <a> に重複があるかどうか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
グラフタイトルを <a> にする	plt . title ( <a> )	sns . title ( <a> )
データフレーム <B> 中の未記入の値を <A> に置換し、 <C> に代入する	<C> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<b> 区切りで CSV ファイル <a> ( ファイル名 ) をデータフレームとして読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
<A> ( データフレーム ) の列 <b> と列 <c> を降順にする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> の <c> と <d> を大から小へとソートして、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
データフレーム <A> 内の <b> カラムと <c> に重複はあるか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<B> の中の欠損値をドロップを <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> の中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	<C> [ <A> . duplicated ( ) ]
データフレーム <A> のカラムそれぞれにある <b> の個数を求める	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <A> 内に重複はあるかどうかチェックする	<A> . duplicated ( )	<A> = <A> . duplicated ( )
表 <A> の中の欠損値の数を計算する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
ビン数を <A> 、ビンのラベルをインデックスとして、データフレーム <C> のコラム <b> を分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	<A> = pd . cut ( <C> [ <b> ] , <A> , label = False )
<c> 区切りでファイル <b> をデータフレームとして読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
表データ <A> 中の <b> を NaN に置換し、 NaN が存在する行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> 内の欠損を <B> として、置き換える	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( <B> )
表データ <B> を <a> 表属性の値を元にソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<b> に重複がある行をドロップを <A> に代入する	<A> = df . drop_duplicates ( subset = <b> )	subset <A> = df . drop_duplicates ( subset = <b> )
分割数を <C> 、ビンのラベルをリスト <D> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表 <A> 全体を <b> の値を軸にソートを <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <A> の中に重複があるか表示する	<A> . duplicated ( )	<A> . duplicated ( )
<B> 全体を <a> の値を元にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の未記入の値を直前の行の値で補って、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<E> = <A> . fillna ( method = 'ffill' )
<A> 全体をインデックスを元にソートし、 <A> にする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <A> のオブジェクトデータの統計情報	<A> . describe ( include = "O" )	<A> . describe ( include = "O" )
<b> という名前のエクセルデータの <c> 番目のシートを表に格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
<B> と表データ <A> を横方向に結合して、 <C> にする	<C> = pd . merge ( <B> , <A> )	df = pd . merge ( <B> , <A> )
<A> の未記入の値の数を表示する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表データ <A> から重複している値がある行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
ビン数を <B> 、ビンのラベルを <A> リストとして、 <D> 表の <c> カラムを分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	set_index pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<B> 中の欠損値を <A> に置換し、 <C> とする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
そのとき、文字コード <A> をすることとする	@option encoding = <A>	<E> = <A> . encoding ( )
<A> の中の <b> を NaN に置換し、 NaN が存在する行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> のインデックス <b> の名前を <c> に変更し、置き換える	<A> . rename ( index = { <b> : <c> } , inplace = True )	<E> = <A> . rename ( index = { <b> : <c> } )
<A> のコラム <b> を軸にソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
そこで、マーカーのエッジの色をシアンとする	@option markeredgecolor = 'cyan'	markeredgecolor = 'cyan' . reset_index ( drop = True )
<b> コラムに重複がある行をドロップを <A> とする	<A> = df . drop_duplicates ( subset = <b> )	<D> = df . drop_duplicates ( subset = <b> )
表 <B> の <c> をインデックス、 <d> を列としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<B> = <B> . pivot_table ( index = <c> , columns = <d> )
表データ <A> を <b> 列の値に基づいてソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <B> 内の <a> に重複がある行を削除する	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
<A> 中の未入力の値がある行をドロップして、 <B> とする	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
分割数を <A> として、 <C> 表データの <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <C> [ <b> ] , <A> )	qcut pd . qcut ( <C> [ <b> ] , <A> )
<B> と <A> を縦方向で一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<A> の <b> を軸にソートして、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
カンマ区切りで表を CSV ファイル <b> ( ファイル名 ) から読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
表 <A> 中の重複する行の数を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <B> の <c> をインデックス、 <d> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<B> = <B> . pivot_table ( index = <c> , columns = <d> )
全結合で <B> データフレームと <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	'IPAexGothic' <A> = pd . merge ( <B> , <C> , how = 'outer' )
データフレーム <C> の <b> と <a> をドロップして、置き換える	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	df = <C> . drop ( [ <b> , <a> ] , axis = 1 )
色を RGB 値 <A> として、 <C> と <B> のグラフを描画する	plt . plot ( <C> , <B> , color = ( <A> ) )	plt . plot ( <C> , <B> , color = ( <A> ) )
データフレーム <B> 全体を <a> に基づいてソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> 全体を位置でソートする	<A> . sort_index ( )	<A> . sort_index ( )
<B> の <c> を削除を <A> にする	<A> = <B> . drop ( <c> , axis = 1 )	drop <A> = <B> . drop ( <c> , axis = 1 )
表データ <C> の <a> の分を見て、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . minute	df [ <b> ] = <C> [ <a> ] . dt . minute
左外部結合で <B> と <C> 表データをマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , how = 'left' )	@option <A> = pd . merge ( <B> , <C> , how = 'left' )
<a> という名前のエクセルのシート全てをデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<A> 中の <b> と <c> に重複はあるのかチェック	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> から重複している行を取り除く	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<B> 内のそれぞれのカラムに存在する <a> の個数を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
左側のデータのインデックスと右側のデータの <c> を項目名として、 <A> データフレームと <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	merge pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表 <B> の中の未入力の値を <C> とし、 <A> にする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
データフレーム <B> の中の重複する行をドロップして、 <A> に代入する	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
データフレーム <A> の <b> コラムと <c> を大から小へとソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> 全体を <a> を軸にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<b> と <a> を値が大きい順にし、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> 中の欠損値をドロップする	<A> . dropna ( )	dropna = <A> . dropna ( )
<A> 内の欠損を直前の行の値で補い、 <B> にする	<B> = <A> . fillna ( method = 'ffill' )	<B> = <A> . fillna ( method = 'ffill' )
そこで、区切り文字として <A> をすることにする	@option sep = <A>	<B> = pd . read_csv ( <b> , sep = <A> )
表データ <A> に重複はあるのかどうか調べる	<A> . duplicated ( )	<A> = <A> . duplicated ( )
表 <A> の <b> の各要素の出現頻度を確認する	<A> [ <b> ] . value_counts ( )	<b> <A> [ <b> ] . value_counts ( )
データフレーム <B> の未入力の値を <A> に置換して、インプレースする	<B> . fillna ( <A> , inplace = True )	plt . fillna ( <B> , <A> , inplace = True )
<A> の中の <b> コラムに重複があるか確認する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <C> の列 <b> と <a> を大から小へとソートし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<a> をデータフレームとしてカンマ区切りで読み込み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を落とし、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	<E> = <A> . drop_duplicates ( keep = False )
左側のデータのインデックスと右側のデータの <d> を項目名として、 <B> 表データと表データ <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
データフレーム <B> を <a> の値に基づいてソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の <b> とカラム <c> の相関を調べる	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
表 <A> の <b> 表属性が <c> 以下データを得る	<A> [ <A> [ <b> ] <= <c> ]	<= <A> [ <A> [ <b> ] <= <c> ]
データフレーム <B> の <a> の秒	<B> [ <a> ] . dt . second	<B> [ <a> ] . dt . second
<A> 中にある <b> を未入力の値として、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
<C> 中の <b> と <a> に重複が存在するのか表示してみる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<a> という名前のエクセルデータのシート全てから読み込み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	value_counts = pd . read_excel ( <a> , sheet_name = None )
表 <A> の <b> 列の月を確認する	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
表 <A> 中の重複する行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表データ <A> の <b> と <c> 表属性と <d> について関係性を一気に表示する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> [ [ <b> , <c> , <d> ] ] . corr ( )
表データ <B> の <e> 表属性について、表属性 <c> を位置、表属性 <d> を表属性としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
左外部結合で表データ <B> と表データ <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
位置と <a> を項目名として <C> とデータフレーム <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
CSV ファイル <b> ( ファイル名 ) を表に格納して、 <A> とする	<A> = pd . read_csv ( <b> )	@option <b> = pd . read_csv ( <b> )
先頭の列をインデックスに設定して、 <b> を読み、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = 0 )	loc = pd . read_csv ( <b> , index_col = 0 )
<b> というエクセルファイルをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
表データ <A> の <b> コラムとコラム <c> を逆順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
<a> から <b> 区切りで表を読む	pd . read_csv ( <a> , sep = <b> )	df . pd ( <a> , sep = <b> )
表データ <D> の <c> とカラム <b> と <a> カラムについて関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表データ <A> 中の欠損値を含む行をドロップする	<A> . dropna ( )	dropna = <A> . dropna ( )
<D> の <a> カラムについて、 <c> をインデックス、 <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データを <b> からタブ区切りで読み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = '\t' )	@option sep = pd . read_csv ( <b> , sep = '\t' )
データフレーム <A> 内に重複があるかどうかチェック	<A> . duplicated ( )	<A> . duplicated ( )
<A> ( データフレーム ) の列 <b> を並び替え、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表 <D> の表属性 <a> について、 <c> をインデックス、 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
データフレーム <B> 全体を列 <a> の値を元にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <B> のカラム <a> の月を見る	<B> [ <a> ] . dt . month	[ <B> [ <a> ] . dt . month
表データ <A> の <b> とコラム <c> を削除して、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <C> 中の <b> と <a> 列に重複があるのかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<E> の <d> の名前を <c> に、 <b> の名前を <a> にリネームし、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<A> の全ての列で重複している行を削除して、再代入する	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
データフレーム <B> 内の欠損を <C> に置換して、 <A> にする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
データフレーム <A> のコラム <b> と <c> コラムを降順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> の中の <a> に重複がある行を消し、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
<d> を項目名として、 <B> データフレームとデータフレーム <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	df = pd . merge ( <C> , <B> , on = <d> )
<A> の <b> コラムの値を軸に並び替えて、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <C> の <b> と <a> コラムに重複は存在するのかチェックを見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> とデータフレーム <C> のどちらにも存在するデータでマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	@option <A> = pd . merge ( <B> , <C> , how = 'outer' )
表データ <B> の重複する行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	loc = <B> . drop_duplicates ( )
表 <A> の <b> と <c> に重複があるのかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> のそれぞれの列にある <b> の個数の合計を求める	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
<A> 中の欠損値を <A> の平均値で埋め、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<C> の <b> 行から <a> 行まで	<C> [ <b> : <a> ]	<b> <C> [ <a> : ]
<A> 中の重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <B> とデータフレーム <A> を縦方向でマージし、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<c> 番目の列をインデックスとして、ファイル <b> をデータフレームとして読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = <c> )	loc <A> = pd . read_csv ( <b> , index_col = <c> )
カラム <b> をキーとしてデータを内部結合して、 <A> にする	<A> = pd . merge ( df1 , df2 , on = <b> )	<B> = pd . merge ( df1 , df2 , on = <b> )
分割数を <A> として、 <C> のコラム <b> を分割し、 <D> に代入する	<D> = pd . cut ( <C> [ <b> ] , <A> )	df = pd . cut ( <C> [ <b> ] , <A> )
<b> というエクセルの <a> から読む	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> 中の未入力の値を <B> として、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表 <B> を位置でソートし、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> 中の欠損値を <A> の平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <B> 全体を <a> でソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
もしデータフレーム <C> 内の <b> と <a> に重複があるならば	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <B> を <c> の値を元に昇順でソートして、 <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表 <A> についてダミー変数を生成し、 <A> とする	<A> = pd . get_dummies ( <A> )	@option <A> = pd . get_dummies ( <A> )
列番号 <c> を位置に、 <b> を表に格納し、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = <c> )	loc = pd . read_csv ( <b> , index_col = <c> )
データフレーム <B> の <a> 表属性の月	<B> [ <a> ] . dt . month	[ <B> [ <a> ] . dt . month
データフレーム <B> 中の <a> を欠損値に置換し、欠損値がある行を削除し、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> 中の <b> 列と <c> 列に重複があるかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
表データ <B> と <A> を結合して、 <C> にする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
データフレーム <A> 内の重複する行を落とす	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表データ <A> 内の NaN を <A> の平均値で補い、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> の <c> の年を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . year	<A> [ <b> ] = <A> [ <c> ] . dt . year
表データ <C> の <b> 列と <a> を降順にソートを <D> に代入する	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <C> の <b> コラムとコラム <a> を大きい順にソートを <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の中の NaN が存在する行を消して、 <B> とする	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
表データ <A> 内の重複している行を取り除き、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<C> の <b> と <a> 列を落とす	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<A> . drop ( [ <b> , <a> ] , axis = 1 )
<A> をインデックスで並び替えて、 <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
データフレーム <A> の中の列に存在する <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
データフレーム <C> 中の <b> コラムと <a> に重複はあるのかチェックする	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> の <b> の秒	<A> [ <b> ] . dt . second	<b> <A> [ <b> ] . dt . second
表データ <B> 内の <a> を未記入の値に置換し、未記入の値がある行をドロップし、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
コラム <b> と <a> を大きい順にし、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 内の <b> を NaN に置換し、 NaN がある行を落とし、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <C> の表属性 <b> ごとに <a> の個数を求める	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
データフレーム <E> の <d> の名前を <c> に、 <b> の名前を <a> にリネームし、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <D> の <c> と <b> 表属性と <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	sns . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の未記入の値がある行をドロップ	<A> . dropna ( )	<A> . dropna ( )
データフレーム <C> の <a> の日にちを  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . day	<b> <C> [ <a> ] = <C> [ <b> ] . dt . day
データフレーム <A> 内の <b> と <c> に重複はあるかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <B> の欠損値を <C> に置き換えて、 <A> にする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
<b> という名前のエクセルデータの <c> 番目のシートを読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> <A> = pd . read_excel ( <b> , sheet_name = <c> )
インデックスと <a> 表属性をキーとして <C> とデータフレーム <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> の <a> のバリュー	<B> [ <a> ] . values	<E> [ <B> [ <a> ] . values
表データ <A> から重複している行を削除して、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の中のそれぞれのカラムに存在する <b> の個数を表示する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<A> の <b> カラムと <c> を降順にソートし、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<E> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> 全体を <a> の値を軸にソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
重複した行を削除	df . drop_duplicates ( )	<D> . drop_duplicates ( )
<A> のカラムにある <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
データフレーム <A> 内の NaN を <B> に置き換え、再代入する	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( method = 'ffill' )
<A> 全体を表属性 <b> を元に並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> の中の欠損をドロップし、置き換える	<A> = <A> . dropna ( )	<C> = <A> . dropna ( )
データフレーム <B> の最初の <a> 行	<B> . head ( <a> )	head <B> . head ( <a> )
軸を <A> として、 <B> の横向きの棒グラフをプロットする	plt . barh ( <A> , <B> , align = 'center' )	pd . barh ( <A> , <B> , align = 'center' )
データフレーム <A> から重複している行をドロップして、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> 全体を <b> に基づいてソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> の欠損値を直前の行の値で補い、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<A> . fillna ( method = 'ffill' , inplace = True )
データフレーム <A> を位置を元に昇順でソートして、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<b> というエクセルのシート名 <a> から読み込む	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
表属性 <b> と <c> を降順にし、 <A> に代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<b> というエクセルのシート全部をデータフレームとして読み込み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	<B> = pd . read_excel ( <b> , sheet_name = None )
<A> 内の欠損値がある行を削除して、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <C> の <b> と列 <a> を降順にソートして、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <C> の <b> ごとに表属性 <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
<B> 中にある <a> を NaN とし、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	<F> = <B> . replace ( <a> , np . nan )
データフレーム <A> の相関係数を調べる	<A> . corr ( )	<A> . corr ( )
データフレーム <A> の全ての列で重複している行をドロップし、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
エクセルの <b> をデータフレームとして読んで、 <A> に代入する	<A> = pd . read_excel ( <b> )	<A> = pd . read_excel ( <b> )
データフレーム <B> の <a> をソートを <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
先頭の列を位置に設定して、ファイルパス <a> から読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
<A> の <b> を位置、 <c> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	plt . pivot_table ( <A> , index = <b> , columns = <c> )
データフレーム <A> 全体を <b> を軸にソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <B> の列にある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
カラム <d> を項目名として、 <B> と <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	df = pd . merge ( <C> , <B> , on = <d> )
位置とコラム <d> をキーとして <B> と <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
表データ <A> 中の欠損値の合計を計算する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表 <D> の <c> と表属性 <b> と表属性 <a> について関係性を一度にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表 <B> の <c> の名前を <d> に変更して、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> } )	<A> = <B> . rename ( index = { <c> : <d> } )
表属性 <a> と表属性 <b> を逆順に並び替える	df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> . sort_values ( [ <a> , <b> ] , ascending = False )
<A> 内の未入力の値を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表データ <A> の中の列に存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<D> の <a> 表属性について、表属性 <c> をインデックス、表属性 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> のカラム <b> の秒を調べる	<A> [ <b> ] . dt . second	<b> <A> [ <b> ] . dt . second
データフレーム <B> を <a> 表属性を元に昇順で並び替えて、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
データフレーム <A> の <b> を欠損値に置換し、欠損値が存在する行を削除し、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<E> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 中の重複している行数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <B> をインデックスを軸にソートして、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <A> と <B> を縦に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<B> ( データフレーム ) のカラム <a> をダミー変数化して、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	<E> = pd . get_dummies ( <B> [ <a> ] )
表データ <A> 内の未記入の値の合計を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<D> の <a> 表属性について、 <c> をインデックス、表属性 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> 内に存在する <b> を NaN とし、再代入する	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
表データ <A> 中の未記入の値がある行を削除して、置き換える	<A> . dropna ( inplace = True )	<E> = <A> . dropna ( )
表データ <A> を <b> の値を元に昇順で並び替えて、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表データ <A> の未記入の値を表データ <A> の平均値で埋め、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <A> 中のカラム <b> に重複が存在するのか確認	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表 <A> の NaN を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<b> というエクセルデータの <a> 番目のシートを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	read_excel <b> pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> 全体を <b> を元に昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> 内の <b> を欠損値に置換し、欠損値がある行をドロップ	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> の行ごとに重複があるかどうかを確認する	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> の全ての列の重複する値がある行を削除して、 <A> にする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
表 <A> の <b> カラムと <c> を削除して、 <A> にする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
<B> 内のカラムそれぞれに存在する <a> の個数の合計値を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> から重複する行を取り除き、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表 <B> の中にある <a> を欠損とし、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレーム <B> 中の <a> を未入力の値に置換し、未入力の値がある行をドロップを <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> の <e> カラムについて、 <c> を位置、 <d> をカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表 <A> の中の未入力の値が存在する行を消し、インプレースする	<A> . dropna ( inplace = True )	x <A> . dropna ( inplace = True )
表データ <A> 内の重複している行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
<B> をコラム <a> の値に沿ってソートし、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<A> = <B> . sort_values ( <a> )
表データ <B> のコラム <c> を四分位数ごとでビン分割して、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	df = pd . qcut ( <B> [ <c> ] , 4 )
<b> 表属性と <c> を降順にし、 <A> とする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
左外部結合で表 <B> と <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	'IPAexGothic' = pd . merge ( <C> , <B> , how = 'left' )
<C> のカラム <b> とカラム <a> を値が大きい順に並び替えて、 <D> に代入する	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> ( データフレーム ) の <b> を順に並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<C> = <A> . sort_values ( <b> )
表データ <C> 内の <b> と <a> に重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> 全体をインデックスに沿ってソートし、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
データフレーム <B> 中の列それぞれにある <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
<A> ( データフレーム ) の <b> コラムを小さい順に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <A> の中にある <b> を欠損とする	<A> . replace ( <b> , np . nan )	@option np . replace ( <b> , np . nan )
<A> 全体をインデックスに沿ってソートし、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
両方の列を使って <A> ( データフレーム ) と <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
データフレーム <A> 内の NaN を削除を <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
全結合で表 <B> と表 <A> をマージし、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	df = pd . merge ( <B> , <A> , how = 'outer' )
表 <A> を <b> を元に昇順で並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> の <b> カラムの時間を表示する	<A> [ <b> ] . dt . hour	<b> <A> [ <b> ] . dt . hour
表データ <B> の列 <e> について、 <c> を位置、列 <d> を列としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
<B> ( データフレーム ) の表属性 <c> を順番になるようにソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> 内の欠損を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表 <D> のカラム <c> 、 <b> 、 <a> を調べる	<D> [ [ <c> , <b> , <a> ] ]	[ <D> [ [ <c> , <b> , <a> ] ]
<B> と <A> を結合し、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
そのとき、出力先として <A> を使うこととする	@option file = <A>	<A> = pd . read_excel ( <b> , sheet_name = None )
データフレーム <B> 内の欠損値が存在する行を消して、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> 全体を <b> の値を元にソートし、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <A> の全ての列の重複する行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
表 <B> のカラム <c> の名前を <d> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	<E> = <B> . rename ( columns = { <c> : <d> } )
ビン数を <B> 、ビンの名前をリスト <A> として、 <D> 表の <c> をビン分割して、 <E> に代入する	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<D> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
分割数を <D> 、ビンの名前をリスト <E> として、 <B> データフレームのコラム <c> をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	df = pd . cut ( <B> [ <c> ] , <D> , label = <E> )
<A> の表属性 <b> と <c> 表属性の相関	<A> [ [ <b> , <c> ] ] . corr ( )	[ <A> [ [ <b> , <c> ] ] . corr ( )
表データ <B> の中の未記入の値を <A> に置換して、置き換える	<B> = <B> . fillna ( <A> )	df . fillna ( <A> , <B> , inplace = True )
表データ <B> 内の <a> を NaN に置換し、 NaN がある行をドロップして、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> . replace ( <a> , np . nan ) . dropna ( inplace = True )
表 <B> の欠損を <A> に置換して、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
表 <A> を <b> を軸にソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <E> の <d> の名前を <c> に、 <b> 表属性の名前を <a> に変更し、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
先頭の列をインデックスに、 <a> をデータフレームとして読み込む	pd . read_csv ( <a> , index_col = 0 )	replace pd . read_csv ( <a> , index_col = 0 )
データフレーム <A> 全体を位置でソートし、 <B> に代入する	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
表 <B> 中の未入力の値を <A> に置換し、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
グラフの y 軸	x 軸 = x 軸|グラフの x 軸| x 座標	sns . x ( <a> , sheet_name = None )
表データ <A> に重複があるかどうかを判定する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <A> 中の <b> を欠損値に置換し、欠損値がある行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> の <b> についての最頻値	<A> [ <b> ] . mode ( )	<b> <A> [ <a> ] . mode ( )
表データ <B> 中の欠損を <B> の平均値で埋めて、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
表 <A> 中の NaN をドロップを <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <B> の表属性 <e> について、 <c> を位置、 <d> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
データフレーム <B> 内の <a> に重複がある行をドロップして、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	<E> = <B> . drop_duplicates ( subset = <a> )
もし表 <C> 中の <b> と <a> に重複はあるのならば	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<A> を <b> の値に基づいてソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <C> の <b> コラムと <a> を大から小へとソートして、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> 中の列それぞれに存在する <a> の個数を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
位置と <d> をキーとして <B> 表と表 <C> をマージして、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<c> をキーとして、データフレーム <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , on = <c> )	's' pd . merge ( <A> , <B> , on = <c> )
表データ <A> 全体を位置を元に昇順で並び替え、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<b> 番目の列を位置に設定して、 <a> ファイル名を読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表 <C> の <b> ごとにコラム <a> の平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表 <B> を <a> の値でソートして、 <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
表 <A> 中の重複する行を取り除いて、インプレースする	<A> . drop_duplicates ( inplace = True )	plt . drop_duplicates ( <A> , inplace = True )
データフレーム <A> のカラム <b> と <c> に重複はあるか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <B> と <C> 表を縦方向で結合して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<B> をエクセルファイル <a> に書き出す	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
<B> の <a> 行目をドロップして、 <B> にする	<B> = <B> . drop ( <a> )	<E> = <B> . drop ( <a> )
<A> の <b> の値を昇順で並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <A> の <b> を落とす	<A> . drop ( <b> , axis = 1 )	axis <A> . drop ( <b> , axis = 1 )
<A> の <b> についての要約統計量	<A> [ <b> ] . describe ( )	@option <b> ] = <A> [ <b> ] . describe ( )
分割数を <C> 、ビンのラベルを整数値として、データフレーム <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
データフレーム <B> 中のカラムにある <a> の個数の合計を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
<A> 中の未入力の値を <A> の平均値で埋めて、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <B> の中の重複した行を落とし、 <A> に代入する	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
データフレーム <A> の位置をリセットして、置き換える	<A> = <A> . reset_index ( )	<A> . reset_index ( inplace = True )
データフレーム <B> と <A> を縦方向にマージする	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
ファイル <b> を <a> 区切りでデータフレームとして読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
<B> の <a> を one - hot 表現に変換する	pd . get_dummies ( <B> [ <a> ] )	) pd . get_dummies ( <B> [ <a> ] )
<B> 中の <a> を欠損値に置換し、欠損値がある行をドロップして、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
<a> というエクセル <a> を表データに格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<A> 中のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表データ <A> の欠損値の数を計算する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<a> をキーとして、データフレーム <C> と <B> データフレームを結合する	pd . merge ( <C> , <B> , on = <a> )	merge pd . merge ( <C> , <B> , on = <a> )
表 <B> の全ての列の重複する値がある行を取り除いて、 <A> とする	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
表 <D> の <c> コラムと <b> ごとに <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<E> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )
データフレーム <A> をインデックスで並び替えて、 <B> とする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
<A> の <b> ごとに <c> の数を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )
表データ <A> の <b> 列の名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	} <A> . rename ( columns = { <b> : <c> } )
<B> と表 <C> を縦に連結を <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	df = pd . concat ( [ <B> , <C> ] )
データフレーム <A> 内の未入力の値を直前の行の値で補い、インプレースする	<A> . fillna ( method = 'ffill' , inplace = True )	fillna <A> . fillna ( method = 'ffill' , inplace = True )
<B> の中の欠損を <A> とし、 <C> とする	<C> = <B> . fillna ( <A> )	<D> = <B> . fillna ( <A> )
表 <B> 全体を <a> 表属性で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<A> 中の NaN の合計	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<B> 内の <a> を欠損値に置換し、欠損値が存在する行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	plt . replace ( <a> , np . nan ) . dropna ( )
<A> 中の <b> を未入力の値に置換し、未入力の値がある行を削除を <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
<A> をカラム <b> を元に昇順でソートし、置き換える	<A> = <A> . sort_values ( <b> )	<E> = <A> . sort_values ( <b> )
表 <A> の形状を表示する	<A> . shape	df . shape
表データ <B> の <a> に重複はあるか確認を調べる	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表 <A> の <b> と <c> と <d> コラムについて関係性を一気にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	pairplot sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
<D> の <c> とカラム <b> ごとに <a> の値の合計を計算する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<E> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )
表 <A> 中の <b> に重複があるのかどうか表示してみる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<B> 内のそれぞれのカラムにある <a> の個数を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> の欠損値を <B> として、置き換える	<A> . fillna ( <B> , inplace = True )	<B> = <A> . fillna ( <B> )
データフレーム <A> 内の重複する行の数を見る	<A> . duplicated ( ) . sum ( )	<b> <A> . duplicated ( ) . sum ( )
表 <B> の欠損を <A> に置換し、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
<a> というエクセルデータの全てのシートからデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = None )	sheet_name pd . read_excel ( <a> , sheet_name = None )
表データ <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表データ <B> 全体を表属性 <a> に沿ってソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <C> の <b> が <a> より大きいデータを得る	<C> [ <C> [ <b> ] >  <a> ]	<A> [ <C> [ <b> ] > <a> ]
表 <B> 中の <a> を欠損値に置換し、欠損値がある行を削除して、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> をコラム <b> の値を元に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
一番左の列をインデックスに指定して、 <a> からデータフレームとを読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
<B> のカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> 内の NaN がある行をドロップを <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<b> を表として読み込んで、 <A> にする	<A> = pd . read_csv ( <b> )	@option <b> = pd . read_csv ( <b> )
データフレーム <A> の表属性 <b> のユニークな要素数を調べる	<A> [ <b> ] . nunique ( )	<b> <A> [ <b> ] . nunique ( )
データフレーム <D> の <a> について、コラム <c> を位置、 <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> の未記入の値をドロップを <B> に代入する	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
表 <B> を <a> に沿ってソートし、 <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
そこで、文字コードはシフト JIS をすることとする	@option encoding = 'shift_jis'	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )
CSV ファイル <a> ( ファイル名 ) をデータフレームに格納する	pd . read_csv ( <a> )	pd . read_csv ( <a> )
表データ <D> の <c> と <b> ごとに <a> 列の値の合計値を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( )
表 <B> 中の <a> に重複があるかどうか見る	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
<a> と表属性 <b> を大きい順にソートし、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<B> = df . sort_values ( [ <a> , <b> ] , ascending = False )
表 <B> と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> )	@option <A> = pd . merge ( <B> , <C> )
先頭の列を位置として、 <a> から読み込む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
<A> 内の未記入の値をドロップを <B> とする	<B> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> 中のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
表 <A> 全体を <b> 表属性の値を元にソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <B> 中の重複する行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
表データ <B> 全体を <a> コラムの値を軸に並び替え、 <C> とする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
表 <B> のコラム <e> について、 <c> を位置、 <d> をコラムとしたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表データ <B> 内の <c> を NaN に置換し、 NaN がある行をドロップして、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表データ <A> 中の NaN を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> ( データフレーム ) の <b> 表属性と <c> 表属性を大から小へとソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> ( データフレーム ) の <a> カラムを小から大へとソートを <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<B> 全体を <a> の値を軸にソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
表 <A> の全ての列で重複している値がある行を取り除く	<A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
<A> の中のカラムにある <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<A> のコラム <b> の値を並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<C> の <b> と <a> を大きい順にソートを <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 内の <b> を NaN に置換し、 NaN がある行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
<A> ( データフレーム ) の <b> と列 <c> を逆順にし、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<b> という名前のエクセルデータの <a> 番目のシートを読み込み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
<A> 内の <b> と <c> に重複はあるののとき	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> の未記入の値を <B> に置き換えて、インプレースする	<A> . fillna ( <B> , inplace = True )	plt . fillna ( <A> , <B> , inplace = True )
<A> 中の NaN を削除を <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <B> の <a> を落として、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	drop <B> = <B> . drop ( <a> , axis = 1 )
<A> 全体をインデックスを元にソートする	<A> . sort_index ( )	<A> . sort_index ( )
データフレーム <B> の中に存在する <a> を NaN として、 <B> に代入する	<B> = <B> . replace ( <a> , np . nan )	step <B> = <B> . replace ( <a> , np . nan )
表データ <A> の <b> と <c> 表属性を大きい順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <A> 中で重複した行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <B> の <e> について、カラム <c> をインデックス、 <d> カラムをカラムとしたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
<A> のコラム <b> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
インデックスと <a> をキーとして表 <C> と <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
左外部結合で表データ <A> と表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'left' )	'left' pd . merge ( <A> , <B> , how = 'left' )
<b> カラムとカラム <a> を逆順にする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 内の欠損を <A> の平均値で補って、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <A> のコラム <b> の名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	} <A> . rename ( columns = { <b> : <c> } )
表 <B> の <a> についてのヒストグラムをプロットする	plt . hist ( <B> [ <a> ] )	@option plt . hist ( <B> [ <a> ] )
<A> の <b> 列の値を軸にソートし、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <C> の <a> の曜日を確認して、  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	<A> [ <b> ] = <C> [ <a> ] . dt . weekday_name
<a> という名前のエクセルファイルの全部のシートをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<a> というエクセルデータをデータフレームとして読み、 <B> に代入する	<B> = pd . read_excel ( <a> )	step <B> = pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> の <b> 中の前後の行の差分	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <b> ] . diff ( periods = 1 )
文字コードが shift_jis のファイル <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , encoding = 'shift_jis' )	loc <A> = pd . read_csv ( <b> , encoding = 'shift_jis' )
データフレーム <A> の列 <b> を中央値で分割する	pd . qcut ( <A> [ <b> ] , 2 )	pd . qcut ( <A> [ <b> ] , 2 )
<B> の <a> の値を並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
<a> という名前のエクセルファイルの全部のシートを読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表データ <B> の <a> 行目を消して、再代入する	<B> = <B> . drop ( <a> )	<E> = <B> . drop ( <a> )
データフレーム <A> 内のカラムに存在する <b> の個数の合計を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <C> の <b> と <a> をドロップし、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <A> の <b> 列と <c> を降順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
<a> 区切りで CSV ファイル <b> を読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
表データ <A> の <b> とカラム <c> と <d> カラムについて関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	pairplot sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表 <B> にある <a> を欠損に置換して、置き換える	<B> = <B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan , inplace = True )
<b> と <a> に重複があるのか	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
<a> 番目の列を位置に指定して、 <b> をデータフレームとして読み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	df = pd . read_csv ( <b> , index_col = <a> )
表データ <A> 内の重複をチェックする	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <B> 全体を <c> の値に沿ってソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> 中の重複している行を消し、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
分割数を <A> として、 <C> 表データの <b> カラムを分割する	pd . cut ( <C> [ <b> ] , <A> )	sheet_name pd . cut ( <C> [ <b> ] , <A> )
表データ <A> の中の欠損値を <A> 表データの平均値で補って、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	@option <A> = <A> . fillna ( <A> . mean ( ) )
<A> の <b> と <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> の <b> をインデックスとして設定して、置き換える	<A> . set_index ( <b> , inplace = True )	df . set_index ( <b> , inplace = True )
<a> カラムに重複はあるのかどうか見る	df . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表データ <A> の <b> ごとに <c> コラムの平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
色を e00RGB 値として、 <B> と <A> の折れ線グラフをプロットする	plt . plot ( <B> , <A> , color = ( e00 ) )	plt . plot ( <B> , <A> , color = ( e00 ) )
表データ <B> の <a> 行目を削除	<B> . drop ( <a> )	<B> . drop ( <a> )
<C> の <b> と <a> の相関を見る	<C> [ [ <b> , <a> ] ] . corr ( )	<A> [ [ <b> , <a> ] ] . corr ( )
データフレーム <B> 中の欠損値を <A> で埋める	<B> . fillna ( <A> )	<A> . fillna ( <B> )
表 <A> の欠損を直前の行の値で埋めて、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<E> = <A> . fillna ( method = 'ffill' )
データフレーム <A> の <b> カラムと <c> カラムを値が大きい順に並び替えて、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<E> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> 内のカラムそれぞれに存在する <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> の列 <b> の月	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
表データ <B> 中の列 <a> に重複はあるのか	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
データフレーム <D> の <c> と <b> と <a> について関係性を一度に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
データフレーム <A> 中の欠損値を <B> に置換して、インプレースする	<A> . fillna ( <B> , inplace = True )	plt . fillna ( <A> , <B> , inplace = True )
表 <B> 中の未記入の値を <A> として、 <B> とする	<B> = <B> . fillna ( <A> )	step <B> = <B> . fillna ( <A> )
一番左の列をインデックスに設定して、 <a> を表データに格納する	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
表 <B> 中の未入力の値を <A> として、 <B> にする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
データフレーム <A> 中にある <b> を未入力の値とし、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
<B> 全体を <a> 表属性を元に昇順で並び替え、 <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
データフレーム <A> 中の重複している行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
エクセルファイル <b> のシート全部をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	<B> = pd . read_excel ( <b> , sheet_name = None )
表 <A> を <b> コラムでソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> ( データフレーム ) の表属性 <b> を順番になるようにソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <B> をエクセルファイル <a> という名前で書き込む	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
そこで、エラー処理はしないこととする	@option errors = 'ignore'	df = pd . concat ( [ <a> ] , format = '%Y-%m-%d' )
表データ <B> のバリューを <A> とする	<A> = <B> . values	<A> = <B> . values
データフレーム <B> 内の NaN を <A> で埋めて、 <C> とする	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
表データ <C> の <b> と <a> を逆順に並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> の <a> を欠損に置換し、欠損が存在する行を落として、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <C> の <b> カラムが <a> 以下データを取得する	<C> [ <C> [ <b> ] <= <a> ]	<D> [ <C> [ <b> ] <= <a> ]
データフレーム <A> のカテゴリ変数を数値データにする	pd . get_dummies ( <A> )	<A> pd . get_dummies ( <A> )
データフレーム <B> の中に存在する <a> を NaN とする	<B> . replace ( <a> , np . nan )	scatter <B> . replace ( <a> , np . nan )
先頭の列をインデックスと設定して、 <a> からデータフレームとを読んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
ビン数を <D> 、ビンの名前を整数値として、 <B> の <c> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	df = pd . cut ( <B> [ <c> ] , <D> , label = False )
<A> を <b> の値を軸にソートして、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<B> ( データフレーム ) の <a> カラムを値が小さい順にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> のコラム <b> の名前を <c> にリネームし、 <A> にする	<A> = <A> . rename ( columns = { <b> : <c> } )	<D> = <A> . rename ( columns = { <b> : <c> } )
<b> という列を削除を <A> とする	<A> = df . drop ( <b> , axis = 1 )	df = <A> . drop ( <b> , axis = 1 )
表 <E> のコラム <d> の名前を <c> に、コラム <b> の名前を <a> に変更して、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
表データ <B> の表属性 <e> について、 <c> をインデックス、 <d> 表属性を表属性としたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> 表データと表データ <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <A> の全ての列で重複している値がある行を削除して、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
データフレーム <A> のコラム <b> が <c> 以上のデータ	<A> [ <A> [ <b> ] >= <c> ]	<E> [ <A> [ <b> ] >= <c> ]
表データ <B> と表データ <A> を横にマージして、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
データフレーム <B> 内に存在する <c> を未記入の値に置換し、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	<A> = <B> . replace ( <c> , np . nan )
表データ <B> の欠損を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
<a> という名前のエクセルから読み込む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表データ <A> をカラム <b> でソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<D> . sort_values ( <b> , inplace = True )
表データ <A> の <b> を見る	<A> [ <b> ]	<B> [ <b> ]
表 <A> 内の重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <B> の欠損を直前の行の値で埋め、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	df = <B> . fillna ( method = 'ffill' )
<b> という名前のエクセルファイルの <a> シート名をデータフレームに格納し、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
x 軸のラベルを <a> に設定する	plt . xlabel ( <a> )	<B> plt . xlabel ( <a> )
データフレーム <C> の中の <b> と <a> に重複があるか否か	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> 内にある <b> を NaN とする	<A> . replace ( <b> , np . nan )	@option np . replace ( <b> , np . nan )
表データ <A> の <b> のユニークな要素の個数を確認する	<A> [ <b> ] . nunique ( )	<b> <A> [ <b> ] . nunique ( )
カラム <a> を順にソートして、置き換える	df = df . sort_values ( <a> )	<B> = df . sort_values ( <a> )
表 <A> の中の重複している行をドロップし、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> 中のカラム <b> と <c> に重複があるのか確認を見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> をダミー変数化して、 <A> とする	<A> = pd . get_dummies ( <A> )	@option <A> = pd . get_dummies ( <A> )
データフレーム <A> の振り直して、元の位置を削除し、 <A> とする	<A> = <A> . reset_index ( drop = True )	<B> <A> = <A> . reset_index ( drop = True )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を落として、 <B> とする	<B> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
表 <B> 中の <a> を未記入の値に置換し、未記入の値がある行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> 全体を <b> コラムを元に並び替え、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
左側のデータのインデックスと右側のデータの <a> コラムを項目名として、 <C> と <B> を結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<E> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <A> 中のカラム <b> に重複はあるのか	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表データ <A> をインデックスに沿ってソートし、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
表 <A> 中の未記入の値を消す	<A> . dropna ( )	<A> . dropna ( )
表 <B> 内の重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <A> の中の <b> に重複が存在するのか	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
一番左の列をインデックスに設定して、 <b> を表に格納して、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	loc = pd . read_csv ( <b> , index_col = 0 )
エクセル <a> を読み込んで、 <B> にする	<B> = pd . read_excel ( <a> )	label <B> = pd . read_excel ( <a> )
<A> と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> )	'outer' pd . merge ( <A> , <B> )
表 <B> 内の <a> を欠損値に置換し、欠損値が存在する行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> の中のそれぞれのカラムに存在する <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表 <B> にある <a> を欠損に置換し、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<B> . replace ( <a> , np . nan , inplace = True )
<c> 番目の列を位置と設定して、 <b> ファイルから読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	@option <A> = pd . read_csv ( <b> , index_col = <c> )
データフレーム <A> をインデックスでソートして、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
一番左の列を位置に指定して、ファイル名 <a> からデータフレームとを読み込み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
位置と <d> を項目名として <B> とデータフレーム <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
<B> 中にある <a> を NaN に置き換えて、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
表 <C> の <b> の名前を <a> に変更して、 <D> に代入する	<D> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
表 <C> の <b> とコラム <a> を降順にソートを <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
左側のデータの位置と右側のデータの <c> コラムを項目名として、 <A> 表と <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	merge pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<A> 中の欠損値を削除し、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <A> 中の欠損値を含む行を消して、 <B> にする	<B> = <A> . dropna ( )	step <B> = <A> . dropna ( )
<A> を <b> の値を元に昇順でソート	<A> . sort_values ( <b> )	<B> . sort_values ( <b> )
データフレーム <B> を位置で並び替え、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <A> の欠損値が存在する行を削除を <B> とする	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
<A> 内の NaN がある行をドロップして、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<B> にある <a> を未入力の値として、再代入する	<B> = <B> . replace ( <a> , np . nan )	plt <B> = <B> . replace ( <a> , np . nan )
表データ <A> 内の未入力の値を <A> 表の平均値で補い、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> ( データフレーム ) の <b> を小から大へとし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表 <A> の <b> をインデックスに設定し、 <A> とする	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
データフレーム <A> の未入力の値の個数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <D> の <c> 列と <b> ごとに列 <a> の値の合計を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( )
<B> の列 <a> の値を軸にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> 内のカラムに存在する <a> の個数の合計を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表データ <B> 中の <a> を欠損値に置換し、欠損値が存在する行を消し、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> . replace ( <a> , np . nan ) . dropna ( inplace = True )
表データ <A> の <b> を中央値でビン分割する	pd . qcut ( <A> [ <b> ] , 2 )	pd . qcut ( <A> [ <b> ] , 2 )
データフレーム <B> を <c> を元に昇順でソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<B> の <a> の時間	<B> [ <a> ] . dt . hour	<E> [ <B> [ <a> ] . dt . hour
データフレーム <A> の <b> とカラム <c> ごとに <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
<B> の <a> をインデックスとして設定して、置き換える	<B> . set_index ( <a> , inplace = True )	df = <B> . set_index ( <a> )
<A> のカラム <b> をソートして、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
重複している最後の行を残して <A> ( データフレーム ) 内の重複している行を消し、置き換える	<A> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
<b> という名前のエクセルデータの <a> を表データに格納して、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
表データ <A> をインデックスに沿ってソートして、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<C> 内のカラム <b> と <a> に重複はあるのか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> の中の NaN を数える	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表 <A> の <b> と <c> を削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	axis <A> . drop ( [ <b> , <c> ] , axis = 1 )
ビン数を <A> として、 <C> 表データの <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <C> [ <b> ] , <A> )	qcut pd . qcut ( <C> [ <b> ] , <A> )
表として <a> をカンマ区切りで読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
<B> に存在する <a> を欠損に置換する	<B> . replace ( <a> , np . nan )	scatter <B> . replace ( <a> , np . nan )
データフレーム <A> 内のそれぞれのカラムに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
データフレーム <A> のコラム <b> が <c> 以上のデータを取得する	<A> [ <A> [ <b> ] >= <c> ]	<E> [ <A> [ <b> ] >= <c> ]
表 <A> の <b> 表属性をダミー変数化し、 <A> とする	<A> = pd . get_dummies ( <A> [ <b> ] )	df = pd . get_dummies ( <A> [ <b> ] )
マーカーのエッジの大きさを <a> とする	markeredgewidth = <a>	<D> = pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> 中の NaN を含む行を消して、置き換える	<A> = <A> . dropna ( )	<C> = <A> . dropna ( )
表 <B> 内の未入力の値を含む行を消して、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表データ <B> の <a> のユニークな要素の個数を確認する	<B> [ <a> ] . nunique ( )	'greenyellow' <B> [ <a> ] . nunique ( )
表 <A> の行数と列数を見る	<A> . shape	df . isnull ( ) . sum ( )
<A> 中の NaN を <A> 表データの平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<b> というエクセルデータの <c> を表データに格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
<A> 中の NaN を <B> で埋め、置き換える	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( <B> )
ビン数を <B> 、ビンの名前を <A> リストとして、 <D> 表データの <c> をビン分割して、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
さらに、改行の代わりに <A> を使うことにする	@option end = <A>	@option end = <A> )
データフレーム <B> と <A> を横に結合して、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
表 <A> の列名を <b> から <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	} <A> . rename ( columns = { <b> : <c> } )
データフレーム <A> の全ての列で重複している行をドロップし、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<B> ( データフレーム ) の <a> を小から大へとし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<A> . sort_values ( <a> , inplace = True )
エクセル <a> をデータフレームに格納し、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> )
表データ <A> の <b> のそれぞれのデータの出現回数を見る	<A> [ <b> ] . value_counts ( )	<b> <A> [ <b> ] . value_counts ( )
<B> を <c> を軸にソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <D> の <a> 列について、列 <c> をインデックス、列 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <B> 内のそれぞれのカラムにある <a> の個数の合計値を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <C> の <b> とコラム <a> を削除する	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<A> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <A> を <b> に基づいてソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<a> という名前のエクセルの <b> 番目のシートをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
表データ <A> の未記入の値を含む行をドロップし、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
左側のデータのインデックスと右側のデータのコラム <a> をキーとして、 <C> と表 <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <B> の欠損を含む行をドロップし、 <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <C> の <b> を位置、 <a> 表属性を表属性としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	index = <C> . pivot_table ( index = <b> , columns = <a> )
データフレーム <C> の <b> を位置、コラム <a> をコラムとしたピボットテーブルを作成し、 <D> にする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<F> = <C> . pivot_table ( index = <b> , columns = <a> )
表 <A> 内の欠損を <A> 表の平均値で埋め、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	plt . <A> ( <A> , <A> . mean ( ) , inplace = True )
表 <C> の <b> と <a> を大きい順にソートを <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> の <b> 表属性と <c> 表属性を落とし、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <C> のカラム <b> と <a> を大きい順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> をエクセルファイル <a> という名前にして書き込む	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
<A> 中の欠損値を <A> の平均値で埋め、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<a> と <b> カラムに重複はあるのかどうか確認を調べる	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
グラフの色を e00RGB 値として、 <A> と <B> の折れ線グラフを描写する	plt . plot ( <A> , <B> , color = ( e00 ) )	plt . plot ( <A> , <B> , color = ( e00 ) )
エクセルファイル <b> の <a> 番目のシートを読み込み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <B> と表データ <C> を横方向に結合し、 <A> にする	<A> = pd . merge ( <B> , <C> )	<D> = pd . merge ( <C> , <B> )
表データ <B> をインデックスを元に昇順でソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <B> 内に存在する <a> を未入力の値として、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	<B> . replace ( <a> , np . nan , inplace = True )
<a> に重複はあるのか確認	df . duplicated ( subset = <a> )	<A> . duplicated ( subset = <a> )
<A> 中の未記入の値の数を求める	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <A> の中の <b> を欠損値に置換し、欠損値がある行を消して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )
インデックスと表属性 <a> を項目名として表 <C> と <B> を一つにまとめ、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <A> の中の重複する行を消し、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<A> 内の欠損値を <B> に置き換えて、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
<B> と <A> データフレームを縦方向に連結	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
データフレーム <A> のコラム <b> についての分散	<A> [ <b> ] . var ( )	<b> <A> [ <b> ] . var ( )
<A> の列名を <b> から <c> にリネームし、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	<E> = <A> . rename ( columns = { <b> : <c> } )
<A> 全体を <b> で並び替えて、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <C> の <b> と <a> を大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> と <A> データフレームを縦方向にマージし、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<B> 中にある <a> を NaN に置き換えて、再代入する	<B> = <B> . replace ( <a> , np . nan )	plt <B> . replace ( <a> , np . nan , inplace = True )
表データ <A> の列 <b> と <c> と列 <d> について関係性を一気に描写する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> [ [ <b> , <c> , <d> ] ] . corr ( )
表 <A> の <b> 列の名前を <c> に、 <d> の名前を <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
エクセルファイル <a> の <b> 番目のシートをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<a> という名前のエクセルファイルの全部のシートを読み込む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<A> の <b> についての箱ひげ図をプロットする	plt . boxplot ( <A> [ <b> ] )	@option plt . boxplot ( <A> [ <b> ] )
表データ <A> 内にある <b> を未記入の値に置き換え、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
<A> をインデックスでソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <E> の <d> の名前を <c> に、 <b> の名前を <a> にリネームし、 <F> にする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <A> の欠損を直前の行の値で埋め、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	<B> = <A> . fillna ( method = 'ffill' )
データフレームを CSV ファイル <a> ( ファイル名 ) から読み込んで、 <B> とする	<B> = pd . read_csv ( <a> )	step = pd . read_csv ( <a> )
<c> 番目の列をインデックスに設定して、 <b> をデータフレームに格納し、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = <c> )	@option <A> = pd . read_csv ( <b> , index_col = <c> )
表データ <D> の <a> コラムについて、 <c> コラムをインデックス、コラム <b> をコラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> の表属性 <b> の分を見る	<A> [ <b> ] . dt . minute	<b> <A> [ <b> ] . dt . minute
データフレーム <A> の <b> を欠損値に置換し、欠損値が存在する行を削除して、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 中の未入力の値がある行を削除する	<A> . dropna ( )	dropna = <A> . dropna ( )
<a> というエクセルをデータフレームとして読んで、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> 内にある <b> を欠損値に置換して、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
表データ <A> 中の <b> を欠損値に置換し、欠損値がある行を落とし、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
分割数を <A> として、 <C> データフレームの <b> を要素数が等しくなるようにビン分割し、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	<C> = pd . qcut ( <b> ] , <A> )
データフレーム <B> の <a> に重複はあるかチェックする	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
<A> を <b> コラムに沿ってソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表データ <C> の <b> とコラム <a> を削除して、再代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<B> ( データフレーム ) のカラム <a> を並び替え、置き換える	<B> = <B> . sort_values ( <a> )	<A> . sort_values ( <a> , inplace = True )
表データ <B> 内に存在する <a> を未入力の値として、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<A> 内の <b> カラムに重複はあるかチェックを見る	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <A> 内 ] [ で重複した行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
重複する最後の行を残して <A> ( データフレーム ) の重複する行を落として、 <B> とする	<B> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
表データ <B> 内の列それぞれに存在する <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <C> の <b> と <a> を大きい順に並び替え、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表として <a> 区切りで <b> を読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
表データ <C> の <b> 列が <a> より多いデータ	<C> [ <C> [ <b> ] >  <a> ]	<A> [ <C> [ <b> ] > <a> ]
データフレーム <A> を <b> を軸にソートを <A> にする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <B> を <a> の値を軸にソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> 内の <b> と <c> 表属性に重複があるのかどうか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
<A> 中の <b> と <c> に重複はあるかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
境界値をリスト <C> として、表データ <A> の <b> カラムをビン分割する	pd . cut ( <A> [ <b> ] , <C> )	set_index pd . cut ( <A> [ <b> ] , <C> )
表 <B> の <c> をインデックス、 <d> 列を列としたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	df = <B> . pivot_table ( index = <c> , columns = <d> )
表 <A> の列 <b> に重複はあるのかを表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表 <A> 中の NaN をカウントする	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <A> 中のそれぞれのカラムにある <b> の個数を見る	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
ビン数を <D> として、 <B> 表の <c> を要素数が等しくなるようにビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	<D> = pd . qcut ( <B> [ <c> ] , <D> )
表 <C> の <b> ごとに表属性 <a> の平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表 <B> の <a> 列の月	<B> [ <a> ] . dt . month	[ <B> [ <a> ] . dt . month
表データ <D> の <a> について、 <c> をインデックス、 <b> コラムをコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
ビン数を <C> 、ビンの名前をリスト <D> として、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表 <A> 中のカテゴリ変数を数値データに変換する	pd . get_dummies ( <A> )	<A> pd . get_dummies ( <A> )
データフレーム <D> の <a> について、 <c> カラムをインデックス、カラム <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
データフレーム <A> 中の欠損値を表 <A> の平均値で埋めて、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <A> の <b> を昇順に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<B> の <a> を軸に昇順で並び替え、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
表データ <A> のそれぞれのカラムにある <b> の個数の合計値を算出する	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
<b> というエクセルの <a> 番目のシートを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	read_excel <b> pd . read_excel ( <b> , sheet_name = <a> )
左側のデータのインデックスと右側のデータの表属性 <a> を項目名として 2 つのデータを結合する	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
表 <A> の <b> と <c> カラムを大きい順に並び替え、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	df = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> の <b> の日にちを見る	<A> [ <b> ] . dt . day	<b> <A> [ <b> ] . dt . day
表データ <A> の中の欠損を <A> の平均値で補って、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <C> の <b> コラムとコラム <a> を消し、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	<A> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )
<b> という名前のエクセルの <a> シート名を表データに格納する	pd . read_excel ( <b> , sheet_name = <a> )	None pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> 全体をインデックスに基づいてソートし、 <B> に代入する	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
左側のデータのインデックスと右側のデータの <a> をキーとして、 <C> データフレームとデータフレーム <B> を一つにまとめて、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<a> ファイル名から表データを読んで、 <B> にする	<B> = pd . read_csv ( <a> )	label <B> = pd . read_csv ( <a> )
インデックスと <d> をキーとして <B> データフレームと <C> データフレームを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
左側のデータフレームに合わせてデータを一つにまとめて、 <A> にする	<A> = pd . merge ( df1 , df2 , how = 'left' )	merge = pd . merge ( df1 , df2 , how = 'left' )
<A> の中の欠損をドロップし、置き換える	<A> . dropna ( inplace = True )	<C> = <A> . dropna ( )
エクセルファイル <b> の <a> を読み込んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	@option <b> = pd . read_excel ( <b> , sheet_name = <a> )
両方の列を使って <B> ( データフレーム ) とデータフレーム <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	merge pd . merge ( <B> , <A> , how = 'outer' )
<C> 内のコラム <b> と <a> コラムに重複が存在するのかチェックを表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> 内の列に存在する <b> の個数の合計を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <B> の中の未記入の値を <A> に置換し、 <B> にする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<b> という名前のエクセルからデータフレームを読んで、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
<A> の重複した行をドロップを <B> に代入する	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<a> という名前のエクセルデータの <b> シート名から読む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <D> の <c> と <b> カラムと <a> について関係性を一度にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
<a> という列をドロップして、再代入する	df = df . drop ( <a> , axis = 1 )	<E> = df . drop ( <a> , axis = 1 )
<b> から <a> 区切りで表を読み、 <C> に代入する	<C> = pd . read_csv ( <b> , sep = <a> )	@option sep = pd . read_csv ( <b> , sep = <a> )
<a> というエクセルの <b> を表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <B> 中のコラム <a> に重複があるか否か	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
データフレーム <E> のコラム <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームし、 <F> に代入する	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
色を <C> として、 <A> と <B> のグラフをプロットする	plt . plot ( <A> , <B> , color = ( <C> ) )	plt . plot ( <A> , <B> , color = ( <C> ) )
データフレーム <B> と <C> を縦に連結を <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表データ <A> 中の <b> に重複はあるのかを表示する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
データフレームを <b> からタブ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	'IPAexGothic' = pd . read_csv ( <b> , sep = '\t' )
<D> の <c> と <b> と <a> について関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ [ <c> , <b> , <a> ] ] . corr ( )
<B> をエクセルファイル <a> という名前にして保存する	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
ビン数を <C> 、ビンの名前を <D> として、 <A> データフレームの <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表 <A> と <B> 表データを一つにまとめる	pd . merge ( <A> , <B> )	'outer' pd . merge ( <A> , <B> )
コラム <a> をキーとしてデータを内部結合する	pd . merge ( df1 , df2 , on = <a> )	df1 pd . merge ( df1 , df2 , on = <a> )
<A> の中の NaN がある行を消し、インプレースする	<A> . dropna ( inplace = True )	df = <A> . dropna ( )
表 <B> と表データ <A> を一つにまとめて、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
エクセルファイル <a> の全てのシートから読み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	None <B> = pd . read_excel ( <a> , sheet_name = None )
表 <B> の <a> 行目を消し、置き換える	<B> = <B> . drop ( <a> )	inplace = <B> . drop ( <a> )
データフレーム <E> の <d> の名前を <c> に、 <b> の名前を <a> に変更し、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
分割数を <C> 、ビンの名前をインデックスとして、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
データフレーム <A> のカラム <b> が <c> 以下データを抽出する	<A> [ <A> [ <b> ] <= <c> ]	<= <A> [ <A> [ <b> ] <= <c> ]
表 <A> 内の NaN が存在する行を削除する	<A> . dropna ( )	dropna = <A> . dropna ( )
エクセルデータ <b> をデータフレームに読み、 <A> とする	<A> = pd . read_excel ( <b> )	<A> = pd . read_excel ( <b> )
データフレーム <A> 中の NaN を <A> 表の平均値で埋め、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <A> 内の列にある <b> の個数の合計値を見る	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
データフレーム <A> の欠損をドロップする	<A> . dropna ( )	<A> . dropna ( )
<B> 中に存在する <a> を欠損値に置換し、再代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
表データ <B> を <c> の値を軸にソートを <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <A> の <b> が <c> 以上のデータ	<A> [ <A> [ <b> ] >= <c> ]	>= <A> [ <A> [ <b> ] >= <c> ]
表データ <A> 内で重複している行の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> の内容をチェック	<A> . head ( )	head <A> . head ( )
表 <B> 内の <a> を欠損に置換し、欠損がある行を削除を <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> の <b> コラムと <c> とコラム <d> について関係性を一気に描写する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
<B> 全体をカラム <a> に基づいてソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
データフレーム <C> のカラム <b> と <a> の相関を表示する	<C> [ [ <b> , <a> ] ] . corr ( )	<C> [ [ <b> , <a> ] ] . corr ( )
データフレームとして CSV ファイル <b> ( ファイル名 ) を <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
表 <A> 内の未入力の値を含む行を消す	<A> . dropna ( )	<A> . dropna ( )
データフレーム <A> の中の未記入の値を表 <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
データフレーム <B> の列 <c> の名前を <d> にリネームして、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	@option <A> = <B> . rename ( columns = { <c> : <d> } )
<b> を値が小さい順にし、 <A> とする	<A> = df . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <A> データフレームを一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	'outer' = pd . merge ( <B> , <A> , how = 'outer' )
データフレーム <C> の <b> とカラム <a> を逆順に並び替えて、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
<c> 番目の列を位置として、 <b> ファイルをデータフレームとして読み込み、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	pd . cut ( <A> [ <b> ] , <c> ] , index_col = False )
コラム <b> と <a> を大きい順にし、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> のそれぞれのカラムにある <a> の個数を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
CSV ファイル <a> ( ファイル名 ) を表に格納して、 <B> とする	<B> = pd . read_csv ( <a> )	step <B> = pd . read_csv ( <a> )
表データ <A> を <b> 表属性を元に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
<A> 中の未記入の値を落とし、置き換える	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
インデックスと <d> をキーとして表 <B> と <C> をマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<a> という名前のエクセル <a> の全てのシートを表に格納し、 <B> にする	<B> = pd . read_excel ( <a> , sheet_name = None )	<E> = pd . read_excel ( <a> , sheet_name = None )
表データ <A> 中の <b> を欠損値に置換し、欠損値が存在する行を消し、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )
<A> の中の重複している行を削除	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
列番号 <a> を位置に設定して、 <b> を表に格納し、 <C> に代入する	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
<A> の重複する行を取り除いて、 <A> にする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
データフレーム <A> を <b> に書き込む	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
<a> に重複がある行をドロップし、 <B> にする	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
<a> カラムを小さい順に並び替える	df . sort_values ( <a> )	<B> . sort_values ( <a> )
左外部結合で表データ <B> と <A> 表データを一つにまとめて、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
表データ <A> の NaN を含む行を消し、 <B> に代入する	<B> = <A> . dropna ( )	<A> = <A> . dropna ( )
グラフ幅を <c> として、 <A> 軸を <A> とした <B> の棒グラフをプロットする	plt . bar ( <A> , <B> , width = <c> )	<D> = pd . merge ( <A> , <B> , width = <c> )
表 <B> 中のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> の <a> 表属性の値を昇順でソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
ビン数を <D> として、 <B> の <c> をビンに含まれる個数が等しくなるように分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	<D> = pd . qcut ( <B> [ <c> ] , <D> )
表データ <B> から重複している行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <B> 内の未記入の値を <A> とし、 <C> に代入する	<C> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
左側のデータの位置と右側のデータの <a> を項目名として、 <C> と <B> を結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<E> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表属性 <c> を項目名として、 <A> 表データと <B> をマージする	pd . merge ( <A> , <B> , on = <c> )	merge pd . merge ( <A> , <B> , on = <c> )
<B> を <a> でソートする	<B> . sort_values ( <a> )	<E> . sort_values ( <a> )
表データ <A> を <b> の値を元に昇順でソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
表 <A> の中のカテゴリ変数をダミー変数化して、 <A> にする	<A> = pd . get_dummies ( <A> )	<C> <A> = pd . get_dummies ( <A> )
カラム <a> についてダミー変数を作成して、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	<E> = pd . get_dummies ( <B> [ <a> ] )
データフレーム <E> のコラム <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームして、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <D> の列 <a> について、 <c> を位置、列 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<b> というエクセルデータの <a> 番目のシートを読み込んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	sheet_name <C> = pd . read_excel ( <b> , sheet_name = <a> )
<a> 番目の列をインデックスに、 <b> からデータフレームとを読んで、 <C> に代入する	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
さらに、文字コード <A> を使うこととする	@option encoding = <A>	<A> = pd . merge ( <A> , encoding = 'shift_jis' )
表データ <C> の <b> とカラム <a> の相関	<C> [ [ <b> , <a> ] ] . corr ( )	<C> [ [ <b> , <a> ] ] . corr ( )
表データ <C> の <b> と <a> を消して、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
分割数を <A> として、表 <C> の <b> カラムを要素数が等しくなるようにビン分割する	pd . qcut ( <C> [ <b> ] , <A> )	qcut pd . qcut ( <C> [ <b> ] , <A> )
<B> のそれぞれの列にある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<a> というエクセルデータ <a> のシート全てを表に格納し、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	<E> = pd . read_excel ( <a> , sheet_name = None )
表データ <A> の未記入の値を直前の行の値で補い、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<E> = <A> . fillna ( method = 'ffill' )
表 <B> を <a> の値に基づいてソートし、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表 <C> の <b> と <a> に重複はあるのか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
<C> の <b> 位置の名前を <a> にリネームして、 <D> にする	<D> = <C> . rename ( index = { <b> : <a> } )	<A> = <C> . rename ( index = { <b> : <a> } )
表データ <B> の中にある <a> を欠損値に置き換えて、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	@option <B> = <B> . replace ( <a> , np . nan )
表データ <B> 内の <a> を NaN に置換し、 NaN がある行を消して、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> 中の <b> 列に重複があるのか	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
データフレーム <B> の中の <a> を NaN に置換し、 NaN がある行をドロップを <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> と <B> 表を結合する	pd . merge ( <A> , <B> )	'outer' pd . merge ( <A> , <B> )
表 <D> の列 <a> について、 <c> を位置、列 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<B> の <a> カラムを中央値で分割する	pd . qcut ( <B> [ <a> ] , 2 )	qcut pd . qcut ( <B> [ <a> ] , 2 )
表 <B> の <c> を位置、 <d> 表属性を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> )
データフレーム <A> の NaN をデータフレーム <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
<B> 内のそれぞれの列に存在する <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <C> の <b> の名前を <a> に変更し、 <D> とする	<D> = <C> . rename ( index = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
表データ <B> 中の未入力の値を <C> に置き換え、 <A> とする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
表 <A> 中の未記入の値を <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> から重複する値がある行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
<A> をインデックスを元にソートを <B> にする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレームとして <b> パスを <a> 区切りで読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
一番左の列をインデックスとして、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
表データ <E> の列名を <d> から <c> に、 <b> から <a> に変更し、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <A> の中にある <b> を未入力の値に置き換え、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
先頭の列をインデックスとして、ファイル名 <b> からデータフレームとを読み込んで、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = 0 )	loc <A> = pd . read_csv ( <b> , index_col = 0 )
表 <A> を位置でソートする	<A> . sort_index ( )	<A> . sort_index ( )
表 <A> 内の <b> に重複はあるかどうかチェックを表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表 <B> の列 <c> をインデックス、 <d> 列を列としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	df = <B> . pivot_table ( index = <c> , columns = <d> )
表 <A> の <c> の曜日を見、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name
表データ <A> を <b> 列の値を軸にソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	<E> = <A> . sort_values ( <b> )
<A> の重複する値がある行を取り除き、 <B> とする	<B> = <A> . drop_duplicates ( )	step <B> = <A> . drop_duplicates ( )
表データ <A> 中の NaN がある行をドロップを <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
データフレーム <B> と <A> データフレームを縦方向にマージする	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表データ <A> の <b> を位置として設定し、置き換える	<A> = <A> . set_index ( <b> )	df . set_index ( <b> , inplace = True )
そのとき、エンコーディング <A> をすることとする	@option encoding = <A>	<E> = <A> . encoding ( )
<B> の <a> を並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<b> 表属性と <a> を降順にし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
列番号 <c> を位置に、 <b> を読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	loc <A> = pd . read_csv ( <b> , index_col = <c> )
データフレーム <A> の <b> コラムごとに <c> コラムの平均を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <B> 中のそれぞれのカラムにある <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	. isin ( [ <B> . sum ( <a> ] )
データフレーム <D> の表属性 <a> について、 <c> を位置、 <b> を表属性としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<A> の位置を軸に昇順で並び替え、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
データフレーム <B> 全体を <c> の値を軸にソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
エクセルファイル <b> を表データに格納し、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	df = pd . read_excel ( <b> , sheet_name = None )
<C> の <b> 列をインデックス、 <a> 列を列としたピボットテーブルを作成し、 <D> にする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<E> = <C> . pivot_table ( index = <b> , columns = <a> )
エクセルファイル <b> をデータフレームとして読み込み、 <A> に代入する	<A> = pd . read_excel ( <b> )	to_excel <A> = pd . read_excel ( <b> )
エクセルデータ <a> を読み込んで表データにする	pd . read_excel ( <a> )	sheet_name pd . read_excel ( <a> )
<B> のカラム <c> をインデックスとして設定し、 <A> に代入する	<A> = <B> . set_index ( <c> )	<B> = <B> . set_index ( <c> )
表データ <B> 中のカラム <a> に重複が存在するのか確認	<B> . duplicated ( subset = <a> )	<D> . duplicated ( subset = <a> )
<B> に存在する <a> を欠損に置換して、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレーム <A> のコラム <b> の名前を <c> に、 <d> コラムの名前を <e> にリネームして、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<B> 内の欠損値を <A> に置き換えて、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<A> の中の <b> , <c> , <d> 行目の <e> , <c> 列目を取得する	<A> . iloc [ [ <b> , <c> , <d> ] , [ <e> , <c> ] ]	sns . iloc [ [ <b> , <c> , <d> ] , [ <e> , <c> ] ]
表 <B> 内の <a> に重複は存在するのかを見る	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表 <B> を列 <a> を軸にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
ビン数を <D> 、ビンの名前を <E> として、データフレーム <B> の列 <c> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	df = pd . cut ( <B> [ <c> ] , <D> , label = <E> )
データフレーム <B> の <a> カラムに重複があるのかどうか調べる	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
データフレーム <A> の中の重複している行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<A> 内の <b> と <c> 表属性に重複があるのか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
表 <A> の中の欠損値の合計を算出する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<b> と <a> に重複はあるのかどうか表示してみる	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <C> の表属性 <b> と <a> を大から小へとソートし、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> を <a> という名前のエクセルファイルにして保存する	<B> . to_excel ( <a> )	<B> . to_excel ( <a> )
カラム <a> を順番になるようにソートし、置き換える	df . sort_values ( <a> , inplace = True )	<B> = df . sort_values ( <a> )
インデックスと <d> をキーとして <B> 表データと <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<a> という名前のエクセル <a> のシート全てをデータフレームに格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表 <B> の中の <a> に重複が存在するのかを表示する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表 <A> 内の未入力の値がある行を落として、 <A> とする	<A> = <A> . dropna ( )	loc = <A> . dropna ( )
表データ <A> 内の <b> とカラム <c> に重複があるか否か	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
<A> ( データフレーム ) の列 <b> を小から大へとして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
一番左の列をインデックスとして、 <a> から読む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
<A> を <b> を元に昇順でソートして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> 内の欠損がある行を削除を <A> とする	<A> = <A> . dropna ( )	loc = <A> . dropna ( )
エクセルファイル <a> のシート全部を読み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	<B> = pd . read_excel ( <a> , sheet_name = None )
<A> の <b> 表属性を軸に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> 内の <b> に重複があるのかどうかチェック	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<a> 番目の列を位置として、 <b> から読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
<A> と <B> 表データに対して、 <c> をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <c> )	on pd . merge ( <A> , <B> , on = <c> )
<B> の重複する行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
データフレーム <B> 内の欠損を <C> とし、 <A> にする	<A> = <B> . fillna ( <C> )	<A> = <B> . fillna ( <C> )
<B> の <a> カラムを軸に昇順で並び替えて、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> を <a> の値を元に昇順でソートを <C> に代入する	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
表データ <B> 全体を <a> に沿ってソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 内の欠損の数	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
境界値を <A> として、表データ <C> の <b> を分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> )	df = pd . cut ( <C> [ <b> ] , <A> )
<a> 列を項目名としてデータを結合して、 <B> とする	<B> = pd . merge ( df1 , df2 , on = <a> )	<B> = pd . merge ( df1 , df2 , on = <a> )
データフレーム <B> 中の NaN を含む行を削除し、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <B> 中の欠損値を <A> に置き換えて、 <C> に代入する	<C> = <B> . fillna ( <A> )	<F> = <B> . fillna ( <A> )
データフレーム <A> に重複はあるか表示してみる	<A> . duplicated ( )	<A> . duplicated ( )
<D> のカラム <c> と <b> カラムと <a> カラムについて関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表 <A> のカラム名を <b> から <c> に変更し、インプレースする	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<E> . rename ( columns = { <b> : <c> } , inplace = True )
<A> の重複している行の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> の <b> ごとに <c> の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表 <B> 全体を <a> の値を軸にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> 中の未入力の値の数	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
データフレーム <A> で重複している行数の合計を確認する	<A> . duplicated ( ) . sum ( )	<b> <A> . duplicated ( ) . sum ( )
表データ <B> と <A> データフレームを縦向きにマージし、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<A> 中の重複している値がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
列番号 <a> をインデックスとして、 <b> を表に格納し、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	index_col <C> = pd . read_csv ( <b> , index_col = <a> )
<a> コラムを昇順にし、置き換える	df . sort_values ( <a> , inplace = True )	<E> = df . sort_values ( <a> )
表データ <A> の <b> と <c> を逆順に並び替えて、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
表 <A> の <b> を位置に設定して、 <A> にする	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
<b> と <a> カラムに重複はあるかどうか表示してみる	df . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> の表属性 <b> のユニークな要素数	<A> [ <b> ] . nunique ( )	<b> <A> [ <b> ] . nunique ( )
<b> というエクセルファイルのシート名 <a> をデータフレームとして読み込み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の <b> と <c> と表属性 <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
CSV ファイル <a> ( ファイル名 ) を表として読む	pd . read_csv ( <a> )	pd . read_csv ( <a> )
データフレーム <A> を <b> の値を軸に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
<a> と <b> を逆順にソートして、再代入する	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
<B> 中の <c> を NaN に置換し、 NaN が存在する行をドロップを <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <A> 内の <b> と <c> カラムに重複があるのか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> 中の未入力の値を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <A> の <b> ごとに表属性 <c> の平均を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> 中の <b> を欠損値に置換し、欠損値がある行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> の列名を <b> から <c> に、 <d> から <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<b> 列と列 <a> に重複はある場合	if df . duplicated ( subset = [ <b> , <a> ] ) :	duplicated if df . duplicated ( subset = [ <b> , <a> ] ) :
表データ <A> 全体をインデックスでソートし、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
表 <B> の列 <a> についての標準偏差を取得する	<B> [ <a> ] . std ( )	<E> [ <B> [ <a> ] . std ( )
データフレーム <A> と表データ <B> を横方向に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
境界値をリスト <A> として、データフレーム <C> の列 <b> を分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	df = pd . cut ( <C> [ <b> ] , <A> )
表データ <C> の行名を <b> から <a> にリネームし、置き換える	<C> = <C> . rename ( index = { <b> : <a> } )	<A> . rename ( index = { <b> : <a> } , inplace = True )
表 <A> の <b> の名前を <c> に、 <d> の名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
データフレーム <A> の <b> とカラム <c> ごとに <d> の値の和を求める	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
表 <A> の <b> と <c> コラムに重複は存在するのかチェックを見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <A> 内の未入力の値を <A> 表の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> = <A> . fillna ( <A> . mean ( ) )
列番号 <a> を位置に設定して、 <b> を読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表 <B> 内の <a> 表属性に重複がある行を落として、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
境界値をリスト <A> として、表データ <C> の <b> カラムをビン分割して、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> )	<E> = pd . cut ( <C> [ <b> ] , <A> )
データフレーム <A> 中に存在する <b> を NaN に置き換える	<A> . replace ( <b> , np . nan )	<B> . replace ( <b> , np . nan )
表データ <E> のカラム名を <d> から <c> に、 <b> から <a> にリネームし、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<A> 中の重複している行を落として、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
表データ <A> 中の表属性 <b> に重複がある行を消して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	@option <A> = <A> . drop_duplicates ( subset = <b> )
<B> ( データフレーム ) の列 <c> と列 <d> を降順にし、 <A> にする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
左側のデータの位置と右側のデータの <d> 表属性を項目名として、 <B> と <C> 表をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表データとしてカンマ区切りで <a> を読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
<A> 中の <b> 表属性に重複がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<D> = <A> . drop_duplicates ( subset = <b> )
<A> 中の重複する行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
表 <A> の列 <b> と <c> と <d> について関係性を一度に描写する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> = <A> . pairplot ( [ <b> , <c> , <d> ] ] )
コラム <a> と <b> に重複はあるのか確認する	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
<A> の列名を調べる	<A> . columns	x <A> . columns = <A> )
<A> の <b> が <c> より小さいデータを得る	<A> [ <A> [ <b> ] <  <c> ]	@option <A> [ <A> [ <b> ] < <c> ]
データフレーム <A> の列 <b> の名前を <c> に、 <d> の名前を <e> にリネームして、置き換える	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
表データ <B> と <A> 表データを縦向きに結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表データ <A> 全体をインデックスを元にソートを <A> とする	<A> = <A> . sort_index ( )	<B> <A> = <A> . sort_index ( )
<A> 中の未入力の値を直前の行の値で埋め、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<E> = <A> . fillna ( method = 'ffill' )
<B> のコラム <a> をインデックスとして設定する	<B> . set_index ( <a> )	<B> . set_index ( <a> )
データフレーム <A> をインデックスで並び替え、 <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
<A> の <b> カラムを位置に設定して、 <A> とする	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
<B> ( データフレーム ) の <c> を順にして、 <A> とする	<A> = <B> . sort_values ( <c> )	<B> = <B> . sort_values ( <c> )
ビン数を <C> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	pd . cut ( <A> [ <b> ] , <C> )
列 <a> に重複がある行を drop	df . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
表データ <B> 内の欠損値を <A> で埋め、置き換える	<B> = <B> . fillna ( <A> )	plt . fillna ( <B> , <A> , inplace = True )
表データ <A> の列 <b> をグループ化して、値ごとのデータ数を計算する	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
表 <A> の <b> とカラム <c> を値が大きい順にソートして、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<E> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
列番号 <a> をインデックスにして、 <b> をデータフレームとして読み、 <C> に代入する	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
表 <E> の <d> 表属性の名前を <c> に、表属性 <b> の名前を <a> にリネームし、 <E> にする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <B> をコラム <a> を元にソートし、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <A> 内に存在する <b> を未入力の値に置き換えて、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
<B> の <c> コラムをインデックスに設定して、 <A> とする	<A> = <B> . set_index ( <c> )	<B> = <B> . set_index ( <c> )
<C> ( データフレーム ) の列 <b> と列 <a> を降順にし、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 内の重複する行をドロップを <B> にする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
表 <A> の <b> ごとにカラム <c> の平均値を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
<a> と <b> に重複があるのかどうかを表示する	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
グラフ幅を <c> として、 <A> 軸を <A> とした <B> の棒グラフを表示する	plt . bar ( <A> , <B> , width = <c> )	<D> = pd . merge ( <A> , <B> , width = <c> )
表 <A> の行の名前を <b> から <c> にリネームする	<A> . rename ( index = { <b> : <c> } )	} <A> . rename ( index = { <b> : <c> } )
<a> と <b> 表属性に重複があるのか表示する	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
データフレーム <B> のカラムそれぞれにある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表 <A> の中の NaN を直前の行の値で埋めて、 <B> にする	<B> = <A> . fillna ( method = 'ffill' )	@option <B> = <A> . fillna ( method = 'ffill' )
表データ <C> の <b> の名前を <a> に変更し、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
表 <A> のインデックス名を <b> から <c> に変更して、 <A> とする	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( index = { <b> : <c> } )
<A> ( データフレーム ) の <b> カラムと <c> を大から小へとして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <C> の <b> コラムと <a> コラムを削除して、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	df = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <A> の中の欠損値がある行をドロップして、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <B> の <a> に重複があるか表示してみる	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表 <A> 中の欠損値を含む行を削除して、 <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> 中の NaN を削除を <A> にする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
重複する最後の行を残して <A> ( データフレーム ) 内の重複する行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	<C> = <A> . drop_duplicates ( keep = False )
<B> の index が <a> の行を得る	<B> . loc [ <a> ]	loc <B> [ <a> ] . loc [ <a> ]
<A> 内のそれぞれの列にある <b> の個数を表示する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<C> の <b> と <a> カラムを逆順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> 中の <a> に重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
表 <B> にある <a> を欠損に置換し、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	step <B> = <B> . replace ( <a> , np . nan )
<A> 内のカラムそれぞれに存在する <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
<a> 列をダミー変数に変換する	pd . get_dummies ( df [ <a> ] )	df pd . get_dummies ( df [ <a> ] )
データフレーム <A> の中の <b> を未記入の値に置換し、未記入の値がある行を落とし、 <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <B> 内の列に存在する <a> の個数の合計を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
<a> 番目の列をインデックスに設定して、 <b> からデータフレームとを読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
エンコーディングをシフト JIS として、 <a> ファイルパスを読み込む	pd . read_csv ( <a> , encoding = 'shift_jis' )	encoding = pd . read_csv ( <a> , encoding = 'shift_jis' )
<b> を小から大へとソートし、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<b> 列と <a> 列を大きい順にソート	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> の <a> 列についての分散を取得する	<B> [ <a> ] . var ( )	var <B> [ <a> ] . var ( )
表データ <B> の <a> をインデックスに設定し、インプレースする	<B> . set_index ( <a> , inplace = True )	<B> . set_index ( <a> , inplace = True )
<B> をカラム <a> を元に昇順でソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<a> カラムという列をドロップし、置き換える	df . drop ( <a> , axis = 1 , inplace = True )	df . drop ( <a> , axis = 1 , inplace = True )
表データ <B> 中のそれぞれのカラムにある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <C> 内の <b> と <a> に重複があるのかどうか表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> のコラム <b> と <c> を大きい順に並び替えて、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> ( データフレーム ) のコラム <b> と <c> コラムを値が大きい順にし、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
エクセルファイル <b> の <a> から読み込む	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の中の列に存在する <b> の個数を算出する	<A> . isin ( [ <b> ] ) . sum ( )	year . isin ( [ <b> ] ) . sum ( )
表データ <B> 内の未記入の値を直前の行の値で埋めて、 <A> にする	<A> = <B> . fillna ( method = 'ffill' )	<B> = <B> . fillna ( method = 'ffill' )
<A> の列 <b> の値を軸にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <A> 内の重複している行を取り除く	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表 <C> 内の <b> と <a> カラムに重複があるのか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> の <b> 表属性の名前を <c> に、 <d> の名前を <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
データフレーム <A> の <b> を落として、置き換える	<A> = <A> . drop ( <b> , axis = 1 )	<A> . drop ( <b> , axis = 1 , inplace = True )
<C> 中の <b> と <a> に重複は存在するのかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> 全体を <a> コラムの値を軸にソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	<E> = <B> . sort_values ( <a> )
表 <A> の <b> を昇順にソートして、置き換える	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> から重複している行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表データ <A> 中の欠損値を含む行を消す	<A> . dropna ( )	<A> . dropna ( )
<B> 全体を <a> の値を元にソートを <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
<b> 区切りで CSV ファイル <a> ( ファイル名 ) から表を読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
表 <B> 内に存在する <a> を NaN とし、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	step <B> = <B> . replace ( <a> , np . nan )
表データ <A> を <b> を軸にソートして、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> の <b> とコラム <c> を逆順にソートして、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<E> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 内の重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> 全体を位置を軸に並び替えて、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表データ <B> のコラム <a> を消して、 <C> とする	<C> = <B> . drop ( <a> , axis = 1 )	<C> = <B> . drop ( <a> , axis = 1 )
分割数を <A> 、ビンのラベルを 0 始まりの連番として、データフレーム <C> の <b> コラムをビン分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	<A> = pd . cut ( <C> [ <b> ] , <A> , label = False )
データフレーム <A> 全体を <b> の値に沿ってソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <A> 全体を位置を軸にソートして、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
表 <B> のカラムにある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> のカラム <a> についての標準偏差	<B> [ <a> ] . std ( )	<E> [ <B> [ <a> ] . std ( )
重複している行を消す	df . drop_duplicates ( )	<D> . drop_duplicates ( )
表 <B> と <A> 表データをマージし、 <C> に代入する	<C> = pd . merge ( <B> , <A> )	<C> = pd . merge ( <B> , <A> )
表 <A> の <b> とカラム <c> を値が大きい順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	plt . sort_values ( [ <A> , <b> ] , ascending = False )
表データ <B> の欠損を <A> とし、 <C> にする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
表 <B> 内にある <c> を NaN に置換し、 <A> にする	<A> = <B> . replace ( <c> , np . nan )	<C> <A> = <B> . replace ( <c> , np . nan )
表 <B> の <c> コラムを四分位数ごとで分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	df = pd . qcut ( <B> [ <c> ] , 4 )
表 <A> の <b> と <c> コラムと <d> について関係性を一気に描写する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
<B> の <a> 列を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> 内の欠損がある行を落とし、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<B> ( データフレーム ) の <a> についてダミー変数を生成する	pd . get_dummies ( <B> [ <a> ] )	pd . get_dummies ( <B> [ <a> ] )
表 <B> を <a> という名前で CSV ファイルに書き込む	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
データフレーム <A> の <b> 列の秒を見る	<A> [ <b> ] . dt . second	<b> <A> [ <b> ] . dt . second
ヘッダーを指定せずにファイル <a> を読む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
<A> 内の欠損値を含む行を削除し、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表データ <A> の列 <c> の曜日の数値型を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	@option <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
<A> 全体をインデックスを元に昇順でソートして、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
一番左の列を位置に、 <a> を読み込む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
表 <A> 中の <b> と <c> に重複はあるのかどうか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <B> 内の <a> に重複はあるかどうか確認する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
<A> ( データフレーム ) の列 <b> を昇順にして、再代入する	<A> = <A> . sort_values ( <b> )	<C> = <A> . sort_values ( <b> )
表データ <B> 内の <a> を NaN に置換し、 NaN が存在する行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
表 <B> の <a> を欠損値に置換し、欠損値がある行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <C> の <b> とコラム <a> を落として、置き換える	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	<A> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<b> とコラム <a> に重複はあるのか調べる	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
<a> をキーとして、 <C> と <B> 表をマージする	pd . merge ( <C> , <B> , on = <a> )	merge pd . merge ( <C> , <B> , on = <a> )
表データ <B> の <a> を NaN に置換し、 NaN がある行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	plt . replace ( <a> , np . nan ) . dropna ( )
左側のデータのインデックスと右側のデータの <c> 表属性をキーとして、データフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <c> )
<B> のカラム <c> の名前を <d> に、カラム <e> の名前を <f> にリネームして、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<B> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
表データ <A> の未記入の値を直前の行の値で埋めて、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	<A> = <A> . fillna ( method = 'ffill' )
<D> の <c> カラムと <b> と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
列番号 <b> をインデックスとして、パス <a> から読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <B> の表属性 <c> を位置、 <d> を表属性としたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	df = <B> . pivot_table ( index = <c> , columns = <d> )
エクセルファイル <b> の <a> シート名をデータフレームとして読み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
<b> とコラム <c> を大きい順にソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )
<A> のインデックスを並び替える	<A> . sort_index ( )	<A> . sort_index ( )
表データ <A> の <b> 中の前後の行の差分	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <b> ] . diff ( periods = 1 )
表 <C> の表属性 <b> が <a> より少ないデータを得る	<C> [ <C> [ <b> ] <  <a> ]	< <C> [ <C> [ <b> ] < <a> ]
<B> の中にある <a> を未記入の値とし、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
<C> のインデックス名を <b> から <a> に変更して、置き換える	<C> . rename ( index = { <b> : <a> } , inplace = True )	df . rename ( index = { <b> : <a> } , inplace = True )
データフレーム <A> と表データ <B> を縦に一つにまとめる	pd . concat ( [ <A> , <B> ] )	bar pd . concat ( [ <A> , <B> ] )
<a> 番目の列をインデックスとして、 <b> から読んで、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	df = pd . read_csv ( <b> , index_col = <a> )
表 <B> 内の NaN を <A> に置換して、 <B> に代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<A> のヒストグラムをプロットする	plt . hist ( <A> )	sns . hist ( <A> )
表データ <A> の <b> と <c> ごとに <d> の値の合計値を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
先頭の列をインデックスと設定して、 <a> から読み込む	pd . read_csv ( <a> , index_col = 0 )	df = pd . read_csv ( <a> , index_col = 0 )
表データ <A> の中の NaN を <B> とし、インプレースする	<A> . fillna ( <B> , inplace = True )	plt . fillna ( <A> , <B> , inplace = True )
<A> ( データフレーム ) の <b> カラムを順にソートを <A> にする	<A> = <A> . sort_values ( <b> )	subset = <A> . sort_values ( <b> )
<A> 内の未記入の値を直前の行の値で補い、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<E> = <A> . fillna ( method = 'ffill' )
表データ <A> 内で重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 中に重複はあるかどうか確認を表示する	<A> . duplicated ( )	<A> . duplicated ( )
<A> 中の <b> と <c> に重複があるか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <A> のカラム <b> の月を見る	<A> [ <b> ] . dt . month	<b> <A> [ <b> ] . dt . month
x 軸に <a> というラベルを付ける	plt . xlabel ( <a> )	<B> plt . xlabel ( <a> )
<A> 内のカラム <b> とカラム <c> に重複があるかどうかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<b> を昇順にして、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = df . sort_values ( <b> )
データフレーム <A> の <b> の名前を <c> に、 <d> の名前を <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <D> の <a> について、 <c> カラムをインデックス、カラム <b> をカラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <B> の <a> を欠損に置換し、欠損がある行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> を <b> を元に昇順でソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
重複した最後の行を残して <A> ( データフレーム ) の中の重複している行をドロップして、 <B> とする	<B> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
ビン数を <C> 、ビンのラベルを <D> として、データフレーム <A> のコラム <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表 <A> 全体を位置を軸に並び替えて、 <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
<A> のデータの詳細を調べる	<A> . info ( )	<A> . info ( )
ビン数を <A> 、ビンのラベルを 0 始まりの連番として、 <C> の列 <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <A> , label = False )
<A> 中のカラムそれぞれに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <B> を <a> の値を元に昇順でソートして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
データフレーム <B> に存在する <a> を未記入の値とし、再代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
<a> 番目の列をインデックスに、 <b> からデータフレームとを読む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表 <A> 中のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表 <E> の列名を <d> から <c> に、 <b> から <a> にリネームして、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <A> の <b> と <c> カラムを大きい順に並び替え、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	df = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> を <c> 表属性の値を元にソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <B> の <a> のユニークな要素の個数	<B> [ <a> ] . nunique ( )	<E> [ <B> [ <a> ] . nunique ( )
列番号 <a> を位置と設定して、ファイル <b> を読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表 <C> のカラム <a> の秒を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . second	<A> [ <b> ] = <C> [ <a> ] . dt . second
表データ <A> の欠損の合計	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
<A> の <b> カラムと <c> ごとに <d> カラムの値の和を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	plt . groupby ( [ <A> [ <b> , <c> ] ) [ <d> ] . sum ( )
両方の列を使って <B> ( データフレーム ) と <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	merge pd . merge ( <B> , <A> , how = 'outer' )
表データ <A> 内にある <b> を未記入の値に置き換える	<A> . replace ( <b> , np . nan )	<B> . replace ( <b> , np . nan )
表データ <C> 中の列 <b> と <a> に重複があるのか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<a> 番目の列をインデックスと設定して、ファイル <b> から読み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	index_col <C> = pd . read_csv ( <b> , index_col = <a> )
全結合で <B> とデータフレーム <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	@option <A> = pd . merge ( <B> , <C> , how = 'outer' )
<A> の <b> と <c> ごとに <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
データフレーム <A> の <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] )	format pd . to_datetime ( <A> [ <b> ] )
<A> の <b> が <c> 以下データを得る	<A> [ <A> [ <b> ] <= <c> ]	<= <A> [ <A> [ <b> ] <= <c> ]
<A> ( データフレーム ) の表属性 <b> を順番になるように並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<B> の位置を並び替えて、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
列番号 <a> をインデックスに、 <b> ファイルからデータフレームとを読み込む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
<a> からデータフレームをタブ区切りで読み込む	pd . read_csv ( <a> , sep = '\t' )	pd . read_csv ( <a> , sep = '\t' )
データフレーム <A> 内にある <b> を未記入の値に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
表 <A> 中に重複が存在するのかチェック	<A> . duplicated ( )	<A> . duplicated ( )
表データ <B> の <a> に重複があるのかどうかチェック	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表データ <B> の中の <a> に重複がある行を落として、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	<E> . drop_duplicates ( subset = <a> , inplace = True )
<A> 中の <b> と <c> コラムに重複はあるのかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表データ <B> の未記入の値を直前の行の値で埋め、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	<B> = <B> . fillna ( method = 'ffill' )
ファイル名 <a> をカンマ区切りで表データとして読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	= pd . read_csv ( <a> , sep = ',' )
エクセルファイル <a> をデータフレームとして読んで、 <B> にする	<B> = pd . read_excel ( <a> )	label <B> = pd . read_excel ( <a> )
表データ <B> 内の <c> を欠損値に置換し、欠損値がある行をドロップを <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<a> というエクセルから読み込んで、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step <B> = pd . read_excel ( <a> , sheet_name = None )
ファイル名 <b> を <a> 区切りで表として読み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
表 <D> の <c> と <b> と <a> 表属性について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表データ <B> の表属性 <a> の出現頻度を確認する	<B> [ <a> ] . value_counts ( )	value_counts <B> [ <a> ] . value_counts ( )
表データ <A> のカラム <b> と <c> を大きい順にソートし、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> 中の未入力の値を <A> として、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
<a> パスを表に格納し、 <B> とする	<B> = pd . read_csv ( <a> )	step <B> = pd . read_csv ( <a> )
<E> の <d> 列の名前を <c> に、 <b> の名前を <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <D> の <a> コラムについて、 <c> コラムをインデックス、コラム <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データを <b> ファイルから <a> 区切りで読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
<A> ( データフレーム ) の <b> とコラム <c> を降順にし、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
列番号 <b> をインデックスと設定して、 <a> を表に格納する	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表 <B> 全体をコラム <a> の値を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> に存在する <a> を未記入の値に置換し、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
データフレーム <C> の表属性 <b> と <a> を大から小へとソートし、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <C> の列 <b> が <a> のデータ	<C> [ <C> [ <b> ] == <a> ]	<A> [ <C> [ <b> ] == <a> ]
データフレーム <B> 中の欠損値を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
データフレーム <A> の <b> と <c> を削除を <A> にする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> の中の欠損値を含む行を消して、 <B> にする	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
表データ <A> をカラム <b> を元に昇順でソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	<C> = <A> . sort_values ( <b> )
データフレーム <B> のカラム <a> の年	<B> [ <a> ] . dt . year	<B> [ <a> ] . dt . year
表 <B> を <a> コラムでソートして、置き換える	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
左側のデータの位置と右側のデータの <a> を項目名として、表 <C> と <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	merge pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <A> 全体をコラム <b> の値を軸にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
インデックスと <d> を項目名として <B> 表と <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
データフレーム <B> の <a> の要素	<B> [ <a> ] . values	<E> [ <B> [ <a> ] . values
左外部結合で <B> と <A> データフレームをマージする	pd . merge ( <B> , <A> , how = 'left' )	merge pd . merge ( <B> , <A> , how = 'left' )
<A> 中の重複要素がある行をドロップし、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
先頭の列を位置として、 <a> ファイル名を読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
<a> カラムを小さい順に並び替え、再代入する	df = df . sort_values ( <a> )	<B> = df . sort_values ( <a> )
<A> の位置を昇順で並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) とデータフレーム <A> をマージして、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<C> = pd . merge ( <B> , <A> , how = 'outer' )
もしデータフレーム <A> の各行に重複があるならば	if <A> . duplicated ( ) :	<A> = <A> . duplicated ( ) :
表 <A> 内の列 <b> と <c> に重複はあるかチェック	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<b> コラムとコラム <c> を大から小へとソートを <A> にする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<C> ( データフレーム ) の <b> と <a> を値が大きい順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> 全体を <a> の値を元にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <B> と <C> を縦方向で結合して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
データフレーム <A> 中の未入力の値を <B> として、置き換える	<A> . fillna ( <B> , inplace = True )	df . fillna ( <A> , inplace = True )
境界値を <C> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	sheet_name pd . cut ( <A> [ <b> ] , <C> )
<B> の表属性 <c> と <d> を値が大きい順にソートして、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<C> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
データフレーム <B> のそれぞれのカラムにある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> の <b> 列を軸にソートし、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> と <B> の散布図をプロットする	plt . scatter ( <A> , <B> )	scatter plt . scatter ( <A> , <B> )
表 <B> 中の列 <a> に重複があるか否か	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
表データ <C> 中の列 <b> と <a> に重複があるとき	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	: if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<d> 列を項目名として、データフレーム <B> と <C> データフレームを一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	@option <A> = pd . merge ( <B> , <C> , on = <d> )
表データ <A> 中の <b> と <c> に重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表 <A> 内で重複している行数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> 中の列 <b> に重複がある行をドロップを <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<D> = <A> . drop_duplicates ( subset = <b> )
表データ <C> の <b> の名前を <a> に変更し、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
データフレーム <A> 中の <b> を欠損値に置換し、欠損値がある行を消して、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> の列名を <b> から <c> にリネームし、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	<E> = <A> . rename ( columns = { <b> : <c> } )
<b> 番目の列を位置にして、 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <E> の列の名前を <d> から <c> に、 <b> から <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<C> ( データフレーム ) のカラム <b> と <a> を大から小へと並び替えて、 <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 内 ] [ で重複している行数を見る	<A> . duplicated ( ) . sum ( )	plt . duplicated ( <A> ) . sum ( )
<B> と <C> を縦向きにくっつけて、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <B> の <c> を位置に設定し、 <A> にする	<A> = <B> . set_index ( <c> )	<B> = <B> . set_index ( <c> )
表データ <B> の <c> を欠損に置換し、欠損が存在する行を削除し、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <B> 内の <c> を未入力の値に置換し、未入力の値がある行を削除して、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <B> 内の <c> を NaN に置換し、 NaN がある行を削除を <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<A> の全ての列で重複している行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <C> の中のカラム <b> と <a> に重複がある場合	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<B> ( データフレーム ) の <a> コラムを小さい順に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> のそれぞれの列に存在する <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
ビン数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> 表データの <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
表 <A> 中の欠損値を <A> の平均値で埋めて、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> = <A> . fillna ( <A> . mean ( ) )
<A> の <b> カラムとカラム <c> を値が大きい順に並び替え、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
データフレーム <C> の <a> の曜日を  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	<A> [ <b> ] = <C> [ <a> ] . dt . weekday_name
<A> の未入力の値の数を調べる	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <A> を <b> ファイル名という名前にして CSV ファイルに書き出す	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
<B> 内のそれぞれのカラムに存在する <a> の個数の合計値を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> 内の未記入の値の数	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表 <A> の NaN を含む行を削除	<A> . dropna ( )	dropna = <A> . dropna ( )
コラム <b> と <c> を大きい順にし、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )
さらに、マーカーカラーを紫とする	@option markerfacecolor = 'purple'	markeredgecolor = pd . read_csv ( <a> , markerfacecolor = 'purple' )
データフレーム <A> 中の未入力の値を <B> に置換して、インプレースする	<A> . fillna ( <B> , inplace = True )	plt . fillna ( <A> , <B> , inplace = True )
<A> 全体をインデックスを元にソートし、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <C> の <a> の秒を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . second	<A> [ <b> ] = <C> [ <a> ] . dt . second
表データ <A> の未入力の値の数を表示する	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <A> の <b> と <c> カラムごとに <d> の値の和を求める	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
データフレーム <A> の表属性 <b> と <c> に重複はあるのかどうか確認	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
<B> の <a> 列の値を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <A> の位置を振り直して、置き換える	<A> = <A> . reset_index ( )	df . reset_index ( <A> , inplace = True )
<B> ( データフレーム ) の <a> 表属性を順番になるようにソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <A> 内の欠損値を消して、インプレースする	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
表 <B> のカラム <a> についての標準偏差	<B> [ <a> ] . std ( )	<E> [ <B> [ <a> ] . std ( )
<B> の欠損を <A> に置き換え、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<b> というエクセルの <a> 番目のシートを表に格納する	pd . read_excel ( <b> , sheet_name = <a> )	None pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の中で重複した行数の合計を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <B> の中にある <a> を未入力の値に置き換えて、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	@option <B> = <B> . replace ( <a> , np . nan )
<a> に重複がある行をドロップを <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
データフレーム <A> の <b> 表属性の名前を <c> に、 <d> の名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
表 <A> を表属性 <b> を元に昇順でソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
ビン数を <B> 、ビンのラベルを <A> として、 <D> の列 <c> をビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	set_index pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表 <B> 内にある <a> を欠損として、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<B> . replace ( <a> , np . nan , inplace = True )
ビン数を <C> 、ビンの名前を 0 始まりの連番として、表データ <A> の列 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <C> , label = False )
表データ <A> のコラム <b> とコラム <c> を大きい順にソートして、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<E> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> に重複があるかどうかを確認する	<A> . duplicated ( )	<A> . duplicated ( )
表データ <A> 内の列 <b> と <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> の全ての列の重複する行をドロップする	<A> . drop_duplicates ( )	<C> = <A> . drop_duplicates ( )
<B> の <a> カラムを表示する	<B> [ <a> ]	<B> [ <a> ]
表データ <B> 内のカラム <a> に重複があるとき	if <B> . duplicated ( subset = <a> ) :	<E> . duplicated ( subset = <a> ) :
表データ <A> を <b> にして保存する	<A> . to_csv ( <b> )	<B> . to_csv ( <b> )
表データ <D> の <a> について、カラム <c> を位置、 <b> をカラムとしたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <A> 全体を <b> コラムを元に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
表 <C> の <b> と <a> の相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	<C> [ [ <b> , <a> ] ] . corr ( )
データフレーム <B> 内の <a> を欠損値に置換し、欠損値がある行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
表 <B> の中にある <a> を欠損とし、 <B> にする	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
表 <B> の <a> 列の時間を見る	<B> [ <a> ] . dt . hour	<E> [ <a> ] . dt . hour
表データ <A> の欠損を <B> に置換して、置き換える	<A> . fillna ( <B> , inplace = True )	<A> = <A> . fillna ( <B> )
表データ <B> の <c> カラムの名前を <d> に、カラム <e> の名前を <f> にリネームして、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<E> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
表 <C> の <b> の名前を <a> に変更して、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
表 <A> の表属性 <b> ごとに <c> の個数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )
<A> 内の NaN がある行をドロップする	<A> . dropna ( )	dropna = <A> . dropna ( )
表 <A> 内の <b> を NaN に置換し、 NaN がある行を落として、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
<C> の <b> の名前を <a> にリネームして、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
<A> のカラム <b> をソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> に重複はあるかどうか表示してみる	<A> . duplicated ( )	<A> . duplicated ( )
<C> とデータフレーム <B> に対して、 <a> カラムをキーとしてデータを内部結合して、 <D> に代入する	<D> = pd . merge ( <C> , <B> , on = <a> )	<F> = pd . merge ( <C> , <B> , on = <a> )
データフレーム <B> 内の <a> 表属性に重複がある行を消す	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
<A> の <b> の名前を <c> に、列 <d> の名前を <e> に変更し、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	df . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
表 <A> の中の NaN を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	@option <B> = <A> . fillna ( <B> )
データフレーム <A> の <b> をインデックスとして設定する	<A> . set_index ( <b> )	<b> <A> . set_index ( <b> )
データフレーム <A> の上 <b> 行を表示する	<A> . head ( <b> )	<b> <A> . head ( <b> )
<C> の <a> の曜日の数値型を表示し、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . dayofweek	<A> [ <b> ] = <C> [ <a> ] . dt . dayofweek
<A> 内の <b> と <c> に重複があるのかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表データ <C> の表属性 <b> と <a> を降順にソートし、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> から重複する行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <B> の中に存在する <a> を欠損に置換して、再代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
表 <B> をコラム <a> の値に沿ってソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> の未記入の値を <A> に置換して、 <B> にする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
データフレーム <A> の中に重複が存在するのかチェック	<A> . duplicated ( )	<A> . duplicated ( )
<A> の <b> 表属性と表属性 <c> をドロップして、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	<E> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> の <b> の名前を <c> にリネームし、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	<E> = <A> . rename ( columns = { <b> : <c> } )
表データ <C> の <b> とコラム <a> を削除し、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<A> の未記入の値を <B> に置き換えて、再代入する	<A> = <A> . fillna ( <B> )	plt . <A> ( <B> , inplace = True )
表データ <B> の <a> のそれぞれのデータの出現頻度を見る	<B> [ <a> ] . value_counts ( )	<D> [ <B> [ <a> ] . value_counts ( )
表 <B> 中の <c> を未入力の値に置換し、未入力の値がある行を削除し、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
列番号 <c> をインデックスに、 <b> ファイルからデータフレームとを読み込み、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	loc <A> = pd . read_csv ( <b> , index_col = <c> )
<a> 番目の列をインデックスに設定して、 <b> から読む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表データ <C> と <B> に対して、 <a> をキーとしてデータを内部結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , on = <a> )	sns = pd . merge ( <C> , <B> , on = <a> )
エクセルファイル <a> の <b> 番目のシートから読む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
CSV ファイル <a> ( ファイル名 ) を表データとして読み込む	pd . read_csv ( <a> )	<B> pd . read_csv ( <a> )
<A> 全体を <b> の値に基づいてソートし、置き換える	<A> . sort_values ( <b> , inplace = True )	<E> = <A> . sort_values ( <b> )
ビン数を <B> 、ビンのラベルをリスト <A> として、 <D> データフレームの <c> をビン分割し、 <E> にする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<E> の <d> コラムの名前を <c> に、 <b> コラムの名前を <a> に変更し、 <F> に代入する	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
CSV ファイル <a> ( ファイル名 ) から表を読み込み、 <B> に代入する	<B> = pd . read_csv ( <a> )	step = pd . read_csv ( <a> )
データフレーム <E> の列 <d> の名前を <c> に、 <b> 列の名前を <a> にリネームして、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<A> の全ての列の重複する値がある行を取り除いて、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<B> と <C> データフレームを縦方向にマージし、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<C> = pd . concat ( [ <B> , <A> ] )
<A> 中の欠損値を直前の行の値で補い、再代入する	<A> = <A> . fillna ( method = 'ffill' )	fillna <A> = <A> . fillna ( method = 'ffill' )
データフレーム <C> の <b> が <a> より大きいデータ	<C> [ <C> [ <b> ] >  <a> ]	'yellow' <C> [ <C> [ <b> ] > <a> ]
そのとき、マーカーのエッジカラーを黄緑とする	@option markeredgecolor = 'greenyellow'	markeredgewidth = 'greenyellow'
<B> 内の <a> を NaN に置換し、 NaN がある行を落とし、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> と表データ <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表データ <A> 内の重複要素がある行を取り除いて、 <A> に代入する	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
先頭の列を位置として、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
表 <B> を <a> の値で並び替えて、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
表データ <A> 中の未記入の値の合計を計算する	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
分割数を <C> 、ビンの名前を <D> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
分割数を <C> として、 <A> 表データの <b> カラムを分割する	pd . cut ( <A> [ <b> ] , <C> )	sheet_name pd . cut ( <A> <b> ] , <C> )
データフレーム <A> 内の NaN を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表データ <A> の行数と列数を確認する	<A> . shape	<A> . shape
<b> コラムをキーとしてデータを結合して、 <A> とする	<A> = pd . merge ( df1 , df2 , on = <b> )	<B> = pd . merge ( df1 , df2 , on = <b> )
表 <A> を <b> を軸にソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<D> . sort_values ( <b> , inplace = True )
表属性 <a> と表属性 <b> を逆順に並び替え、再代入する	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> = df . sort_values ( [ <a> , <b> ] , ascending = False )
表データ <A> と <B> データフレームを縦方向に一つにまとめる	pd . concat ( [ <A> , <B> ] )	bar pd . concat ( [ <A> , <B> ] )
一番左の列を位置と設定して、 <a> をデータフレームとして読み込む	pd . read_csv ( <a> , index_col = 0 )	0 pd . read_csv ( <a> , index_col = 0 )
データフレーム <A> の <b> を位置、 <c> 表属性を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	df . pivot_table ( index = <b> , columns = <c> )
<D> の <c> 表属性と <b> 表属性ごとに <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( )
左外部結合で <B> とデータフレーム <A> を結合して、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<A> = pd . merge ( <B> , <C> , how = 'left' )
<c> 番目の列を位置として、 <b> パスから読み込んで、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = <c> )	loc <A> = pd . read_csv ( <b> , index_col = <c> )
<B> を <a> という名前で CSV ファイルに書き込む	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
左側のデータの位置と右側のデータの <a> コラムを項目名として 2 つのデータを一つにまとめ、 <B> にする	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	= pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
表データ <A> 全体を <b> の値を元に昇順で並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <C> の <b> の名前を <a> にリネームする	<C> . rename ( columns = { <b> : <a> } )	<A> . rename ( columns = { <b> : <a> } )
<A> 中のカラムにある <b> の個数を算出する	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
分割数を <D> 、ビンの名前を 0 始まりの連番として、データフレーム <B> の <c> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
<a> というエクセルデータのシート名 <b> を読み込む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
表データ <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行を削除して、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <C> 内の列 <b> と列 <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	<C> . duplicated ( subset = [ <b> , <a> ] )
<D> の <c> コラムと <b> コラムごとに <a> の値の和を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<E> . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( )
<A> をコラム <b> の値を元に並び替え、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
<b> というエクセルファイルの <c> を読み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	@option <A> = pd . read_excel ( <b> , sheet_name = <c> )
カンマ区切りで表を <a> から読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	sep <B> = pd . read_csv ( <a> , sep = ',' )
表データ <B> の列 <c> の名前を <d> に、 <e> 列の名前を <f> にリネームして、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<E> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
データフレーム <E> の列名を <d> から <c> に、 <b> から <a> に変更して、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<B> のカラム <c> の値を昇順で並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	@option <A> = <B> . sort_values ( <c> )
<b> という名前のエクセルの <a> 番目のシートからデータフレームを読み込み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
色を RGB 値 <C> として、 <A> と <B> の折れ線グラフを描画する	plt . plot ( <A> , <B> , color = ( <C> ) )	plt . plot ( <A> , <B> , color = ( <C> ) )
表 <B> の <e> について、 <c> 表属性を位置、表属性 <d> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) とデータフレーム <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	'outer' = pd . merge ( <B> , <A> , how = 'outer' )
データフレーム <A> の表属性 <d> について、 <b> を位置、 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<A> の中の重複している行を削除を <B> にする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
ビン数を <D> として、 <B> 表の <c> を要素数が等しくなるように分割して、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	<D> = pd . qcut ( <B> [ <c> ] , <D> )
<B> 中の <a> を NaN に置換し、 NaN が存在する行をドロップを <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> をコラム <b> の値に沿ってソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
左側のデータのインデックスと右側のデータの <c> をキーとして、 <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<D> の <c> コラムと <b> と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表 <B> と <C> データフレームをマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	<B> <A> = pd . merge ( <B> , <C> )
表データ <A> の <b> と <c> に重複があるかどうか	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <D> の <c> と <b> と表属性 <a> について関係性を一度に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
<B> の <a> コラムをインデックスに設定して、置き換える	<B> . set_index ( <a> , inplace = True )	df = <B> . set_index ( <a> )
<B> の表属性 <c> を昇順にソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<B> = <B> . sort_values ( <c> )
<C> のカラム <b> と <a> カラムの相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	<A> [ [ <b> , <a> ] ] . corr ( )
<A> の <b> をインデックス、 <c> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	plt . pivot_table ( <A> , index = <b> , columns = <c> )
データフレーム <C> の <b> 列と <a> を大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <C> の列名を <b> から <a> にリネームし、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
表データ <B> 中のカラム <a> に重複はあるのかどうかを確認する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
ビン数を <A> 、ビンのラベルを 0 始まりの連番として、 <C> のコラム <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <A> , label = False )
<C> の <b> 行目から <a> 行目まで	<C> [ <b> : <a> ]	<E> [ <b> : <a> ]
表データ <A> 中の重複している行を削除を <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<C> のインデックス <b> の名前を <a> に変更して、 <C> にする	<C> = <C> . rename ( index = { <b> : <a> } )	<A> = <C> . rename ( index = { <b> : <a> } )
データフレーム <B> 中の未記入の値を <C> で埋め、 <A> にする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
<b> というエクセルファイルの <c> 番目のシートからデータフレームを読み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> <A> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <A> の <b> コラムごとに <c> コラムの平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	plt . groupby ( <A> [ <b> ] ) [ <c> ] . mean ( )
<B> の <a> を軸に昇順でソートし、置き換える	<B> = <B> . sort_values ( <a> )	<E> . sort_values ( <a> , inplace = True )
<A> の中の <b> を NaN に置換し、 NaN が存在する行をドロップして、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
一番左の列を位置に指定して、ファイル名 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = 0 )	df = pd . read_csv ( <a> , index_col = 0 )
表 <A> の <b> の名前を <c> にリネームし、インプレースする	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<E> . rename ( columns = { <b> : <c> } , inplace = True )
表 <A> の <b> を位置、 <c> 表属性を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	index . pivot_table ( index = <b> , columns = <c> )
ビン数を <A> として、表 <C> の <b> を分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	<E> = pd . cut ( <C> [ <b> ] , <A> )
データフレーム <B> 全体を <a> でソートして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
<a> という名前のエクセルファイル <a> の全てのシートを表に格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<E> の <d> の名前を <c> に、列 <b> の名前を <a> に変更し、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<E> の <d> の名前を <c> に、列 <b> の名前を <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<a> 区切りで <b> を表データとして読み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
表 <A> を <b> の値を軸にソートして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<A> の <b> についての箱ひげ図を描画する	plt . boxplot ( <A> [ <b> ] )	@option plt . boxplot ( <A> [ <b> ] )
データフレーム <A> の <b> の要素を表示する	<A> [ <b> ] . values	<b> <A> [ <b> ] . values
分割数を <C> として、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	pd . cut ( <A> [ <b> ] , <C> )
データフレーム <B> 内に存在する <a> を欠損値として、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレーム <A> の <b> の中の前後の行の差分を求める	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <b> ] = <A> [ <a> ] . diff ( periods = 1 )
ビン数を <D> として、データフレーム <B> の表属性 <c> をビンに含まれる個数が等しくなるように分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	<B> = pd . qcut ( <D> [ <c> ] , <B> , label = <D> )
<A> 内の <b> を欠損に置換し、欠損が存在する行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表データ <B> を <c> 表属性の値を元にソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <A> 内の未入力の値を <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
<b> という名前のエクセルの <c> 番目のシートをデータフレームとして読み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	@option <A> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <A> の <b> カラムと <c> を大きい順に並び替え、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<C> ( データフレーム ) の <b> 表属性と表属性 <a> を大きい順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> をエクセルファイル <b> という名前で書き込む	<A> . to_excel ( <b> )	@option <b> = <A> . to_excel ( <b> )
<A> の <b> と <c> ごとに列 <d> の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
データフレーム <D> の列 <a> について、 <c> をインデックス、 <b> 列を列としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<A> ( データフレーム ) の <b> コラムを順番になるようにして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> 内の重複する値がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と <B> 表データを結合する	pd . merge ( <A> , <B> , how = 'outer' )	<B> = pd . merge ( <A> , <B> , how = 'outer' )
全結合で表 <B> と <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
表データ <A> の表属性 <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] )	format pd . to_datetime ( <A> [ <b> ] )
表 <A> 内に存在する <b> を欠損に置き換え、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
ヘッダーなしで <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , header = None )	@option encoding = pd . read_csv ( <b> , header = None )
データフレーム <A> の中のカラム <b> と <c> に重複がある場合	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> の <c> の分を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . minute	<A> [ <b> ] = <A> [ <c> ] . dt . minute
データフレーム <A> 内に存在する <b> を欠損値として、再代入する	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
表 <A> の先頭から <b> 行まで	<A> [ : <b> ]	pd . : ( <A> [ <b> ] )
表データ <A> の上 5 行を確認する	<A> . head ( )	head <A> . head ( )
データフレーム <C> の <b> と <a> を大きい順に並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の重複している行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> 全体を位置を元に昇順で並び替える	<A> . sort_index ( )	<A> . sort_index ( )
表 <A> の全ての列で重複している行を取り除いて、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <B> 全体を <a> を軸に並び替え、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
重複した行を削除して、再代入する	df = df . drop_duplicates ( )	<A> = df . drop_duplicates ( )
<B> の表属性 <a> を昇順にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> の <a> を位置に設定し、置き換える	<B> . set_index ( <a> , inplace = True )	df = <B> . set_index ( <a> )
<A> 中の未記入の値が存在する行を消して、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
データフレーム <B> と <A> 表データを縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
データフレーム <B> を <a> を元に昇順でソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	<E> . sort_values ( <a> , inplace = True )
表としてファイル名 <b> を <a> 区切りで読み込み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
データフレーム <A> 中の <b> と <c> 列に重複はあるののとき	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	duplicated if <A> . duplicated ( subset = [ <b> , <c> ] ) :
列番号 <c> を位置と設定して、ファイル <b> を読み込んで、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = <c> )	loc = pd . read_csv ( <b> , index_col = <c> )
<B> 中の欠損値を <A> に置換し、置き換える	<B> . fillna ( <A> , inplace = True )	df . fillna ( <A> , inplace = True )
列番号 <b> をインデックスに指定して、ファイル名 <a> を読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
エクセルファイル <b> の <a> 番目のシートから読み込んで、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
<c> 番目の列をインデックスにして、 <b> ファイルから読み込み、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	@option <A> = pd . read_csv ( <b> , index_col = <c> )
表 <A> 内のコラム <b> に重複はあるかどうかチェック	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表 <A> の <b> と <c> に重複があるのかどうか確認	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
CSV ファイル <b> ( ファイル名 ) から <c> 区切りで表を読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
表データ <A> の行の名前を <b> から <c> に変更して、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	<E> = <A> . rename ( index = { <b> : <c> } )
一番左の列を位置と設定して、 <b> ファイル名を表データに格納して、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = 0 )	<E> = pd . read_csv ( <b> , index_col = 0 )
データフレーム <B> をインデックスでソートを <A> に代入する	<A> = <B> . sort_index ( )	loc <A> = <B> . sort_index ( )
表データ <B> 中の表属性 <a> に重複がある行をドロップする	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
<B> 中のカラムそれぞれにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <B> 中の <c> を欠損値に置換し、欠損値が存在する行を消し、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<B> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <A> 内の <b> に重複があるのかどうかチェックする	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表データ <A> の中の欠損値を直前の行の値で埋め、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	<A> = <A> . fillna ( method = 'ffill' )
表 <B> の NaN がある行を消して、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> 内の重複している行を削除し、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表 <B> と表データ <C> のどちらにも存在するデータでマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	@option <A> = pd . merge ( <B> , <C> , how = 'outer' )
<A> 中の未入力の値がある行をドロップして、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> ( データフレーム ) の <b> と <c> を逆順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<a> 番目の列をインデックスに設定して、 <b> をデータフレームに格納する	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
表データ <C> 内の <b> コラムと <a> に重複がある場合	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<B> 中に存在する <a> を欠損とし、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	<B> = <B> . replace ( <a> , np . nan )
データフレーム <A> の <b> の名前を <c> に、列 <d> の名前を <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
<C> ( データフレーム ) の <b> と <a> を値が大きい順にして、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表データ <A> から重複する値がある行を削除して、 <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
表データ <A> 内の <b> に重複がある行を削除して、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<D> = <A> . drop_duplicates ( subset = <b> )
重複する最後の行を残して <A> ( データフレーム ) 内の重複する行を削除して、 <B> にする	<B> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
<A> 内の重複した行を削除を <A> にする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	: if <A> . duplicated ( subset = <b> ) :
表 <B> を列 <a> を元に昇順でソートして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<B> の重複する行を消して、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<B> の中にある <a> を未記入の値として、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
表データ <A> のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
<a> と <b> コラムを逆順にする	df . sort_values ( [ <a> , <b> ] , ascending = False )	<D> . sort_values ( [ <a> , <b> ] , ascending = False )
表 <B> の <a> をインデックスに設定し、インプレースする	<B> . set_index ( <a> , inplace = True )	<B> . set_index ( <a> , inplace = True )
表 <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
エクセル <a> の全部のシートを表に格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表 <A> 中で重複している行の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <B> のコラム <a> のバリューを確認する	<B> [ <a> ] . values	<E> [ <B> [ <a> ] . values
<B> ( データフレーム ) の <c> 表属性を順にソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<C> 中の <b> 列と列 <a> に重複があるのかどうかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> の欠損値を直前の行の値で補い、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
<b> と <a> を降順に並び替える	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> 中の欠損を <A> として、置き換える	<B> . fillna ( <A> , inplace = True )	df . fillna ( <A> , inplace = True )
<b> という名前のエクセルの <a> を表データに格納して、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> の未記入の値を <B> で埋め、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
表 <B> の列 <c> を四分位数ごとでビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	df = pd . qcut ( <B> [ <c> ] , 4 )
<a> と <b> 列を値が大きい順にする	df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <A> 内の <b> と <c> カラムに重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表データ <C> の <b> コラムとコラム <a> を大きい順にソートを <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
先頭の列をインデックスにして、 <a> ファイルパスから読み込む	pd . read_csv ( <a> , index_col = 0 )	df = pd . read_csv ( <a> , index_col = 0 )
<B> 中の <a> を未入力の値に置換し、未入力の値がある行をドロップを <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 内の未入力の値を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
エクセルファイル <b> から読み、 <A> にする	<A> = pd . read_excel ( <b> )	df = pd . read_excel ( <b> , sheet_name = None )
表データ <C> 内の <b> と <a> に重複は存在するのか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> の欠損を含む行をドロップして、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
x 軸のラベルを <a> と設定する	plt . xlabel ( <a> )	xlabel plt . xlabel ( <a> )
表 <A> 内のそれぞれの列に存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
表データ <C> の <b> の名前を <a> に変更する	<C> . rename ( columns = { <b> : <a> } )	index . rename ( columns = { <b> : <a> } )
表 <B> と <A> を横方向に結合する	pd . merge ( <B> , <A> )	plt . pd ( <B> , <A> )
<B> 中の列にある <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> の中の重複している行をドロップして、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> のそれぞれの行において重複があるかどうかを検出する	<A> . duplicated ( )	<A> . duplicated ( )
データフレーム <B> の <c> カラムを位置として設定して、 <A> とする	<A> = <B> . set_index ( <c> )	<B> = <B> . set_index ( <c> )
<B> と <A> を横方向に一つにまとめる	pd . merge ( <B> , <A> )	plt . pd ( <B> , <A> )
<b> と <a> コラムを降順にソートする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の NaN を <B> に置換し、置き換える	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
<A> 中に重複はあるのかチェック	<A> . duplicated ( )	<A> . duplicated ( )
表 <B> 全体を <a> 表属性で並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	'greenyellow' . sort_values ( <a> , inplace = True )
データフレーム <A> 内の NaN の個数	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
表 <B> 中の列 <a> に重複があるとき	if <B> . duplicated ( subset = <a> ) :	<E> . duplicated ( subset = <a> ) :
データフレーム <A> の <b> ごとに <c> コラムの平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
<A> の <b> 列と <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	sns . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> コラムとコラム <a> を消す	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<A> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <A> の中の欠損を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
カラム <a> についてダミー変数を作る	pd . get_dummies ( df [ <a> ] )	df pd . get_dummies ( df [ <a> ] )
エクセル <a> の全てのシートを表データに格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表 <A> 内の <b> を NaN に置換し、 NaN がある行を削除を <A> に代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 全体をコラム <b> を軸にソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
<B> 中の列それぞれにある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <B> 中の未入力の値を <A> に置き換えて、置き換える	<B> . fillna ( <A> , inplace = True )	df . fillna ( <A> , inplace = True )
表データ <B> の中の重複した行をドロップし、 <A> に代入する	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
<A> の <b> カラムが <c> か <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]
<B> の未記入の値を <A> に置き換える	<B> . fillna ( <A> )	<A> . fillna ( <B> )
表データ <B> 中の重複している行を削除を <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <A> 中の重複する値がある行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
表データ <C> の <b> と <a> を値が大きい順にソートし、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の <b> の名前を <c> に、 <d> の名前を <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
表 <A> 中の重複している行を落とす	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<B> ( データフレーム ) の列 <c> を昇順にし、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <A> の <b> とコラム <c> を逆順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> 全体を表属性 <a> を軸にソートして、置き換える	<B> = <B> . sort_values ( <a> )	plt . sort_values ( <B> , <a> , inplace = True )
データフレーム <A> 全体をインデックスに基づいてソートして、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <B> と <C> に対して、 <d> を項目名としてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	@option on = pd . merge ( <C> , <B> , on = <d> )
<a> という名前のエクセルファイルの <b> 番目のシートから読み込む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <B> 全体をコラム <a> を元にソートを <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
表をパス <b> から読み込んで、 <A> とする	<A> = pd . read_csv ( <b> )	loc = pd . read_csv ( <b> )
<A> ( データフレーム ) の <b> カラムを値が小さい順にして、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <A> の中の欠損値がある行をドロップし、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <D> の <a> カラムについて、 <c> カラムをインデックス、 <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> 全体を位置で並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<A> = <A> . sort_index ( )
ビン数を <D> として、 <B> の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	@option <A> = pd . cut ( <B> [ <c> ] , <D> )
<A> 中の未記入の値を削除して、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表データ <B> 中の <c> に重複がある行を消して、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	@option <A> = <B> . drop_duplicates ( subset = <c> )
データフレーム <B> の中に存在する <a> を NaN に置き換えて、置き換える	<B> = <B> . replace ( <a> , np . nan )	<B> . replace ( <a> , np . nan , inplace = True )
表データ <B> 中の欠損値を <A> に置換し、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
タブ区切りで <b> を読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = '\t' )	df = pd . read_csv ( <b> , sep = '\t' )
表データ <A> の <b> をグループ化して、値ごとのデータ件数	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
<A> 中の欠損がある行を消して、 <B> にする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> 中の未記入の値を表データ <A> の平均値で埋め、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
とりあえず <A> 表の内容を	<A> . head ( )	head <A> . head ( )
データフレーム <D> の <c> と <b> カラムとカラム <a> について関係性を一気に表示する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
データフレーム <B> を <a> の値を元に昇順でソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
エクセルの <a> を読み込んでデータフレームにする	pd . read_excel ( <a> )	<B> . to_excel ( <a> )
データフレーム <B> を <c> の値でソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
先頭の列を位置にして、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	df = pd . read_csv ( <a> , index_col = 0 )
データフレーム <C> の <b> と <a> の相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	<C> [ [ <b> , <a> ] ] . corr ( )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <A> 内の重複している行をドロップを <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
<A> の <b> 表属性の値を軸にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<a> というエクセルデータ <a> のシート全てを表に格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
さらに、マーカーカラーを黄色とする	@option markerfacecolor = 'yellow'	'yellow' = pd . read_excel ( <a> , sheet_name = None )
CSV ファイル <b> ( ファイル名 ) から <c> 区切りでデータフレームを読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
<a> をカンマ区切りで表データとして読む	pd . read_csv ( <a> , sep = ',' )	df . pd ( <a> , sep = ',' )
<A> から重複する行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
ファイル名 <a> からカンマ区切りで表を読み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<E> = pd . read_csv ( <a> , sep = ',' )
エクセルファイル <b> から読み込み、 <A> とする	<A> = pd . read_excel ( <b> )	to_excel <A> = pd . read_excel ( <b> )
データフレーム <A> の下 <b> 行	<A> . tail ( <b> )	<A> . tail ( <b> )
表 <D> の <a> について、 <c> をインデックス、 <b> 表属性を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<b> というエクセルの <a> 番目のシートを表データに格納して、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
表 <B> のコラム <a> の月	<B> [ <a> ] . dt . month	<a> <B> [ <a> ] . dt . month
表データ <B> の中の <a> に重複がある行を削除を <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	<D> = <B> . drop_duplicates ( subset = <a> )
表 <A> と <B> を縦方向で一つにまとめる	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<B> と <A> を縦向きにくっつけて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<C> の <b> と <a> を大から小へとソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
そこで、 UTF8 を用いることとする	@option encoding = 'utf-8'	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )
<B> のカラム <a> の出現頻度	<B> [ <a> ] . value_counts ( )	value_counts <B> [ <a> ] . value_counts ( )
データフレーム <A> の中の重複する行を消し、 <A> にする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
表 <A> 内の <b> と <c> 列に重複はあるか確認を調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <C> 中の列 <b> と列 <a> に重複はあるかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<C> . duplicated ( subset = [ <b> , <a> ] )
分割数を <C> として、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	pd . cut ( <A> [ <b> ] , <C> )
表データ <A> とデータフレーム <B> を横に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
データフレーム <A> の <c> の日にちを  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . day	df [ <A> [ <b> ] = <A> [ <c> ] . dt . day
表 <A> をインデックスに沿ってソートして、 <A> にする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
一番左の列をインデックスに設定して、 <a> を表に格納して、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
表データ <B> と <C> 表のどちらにも存在するデータでマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	@option <A> = pd . merge ( <B> , <C> , how = 'outer' )
ビン数を <C> として、 <A> 表データの <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	qcut pd . qcut ( <A> [ <b> ] , <C> )
データフレーム <C> の <b> カラムと <a> に重複があるとき	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	: if <C> . duplicated ( subset = [ <b> , <a> ] ) :
データフレーム <A> の <b> に重複があるか表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <C> 内の <b> とカラム <a> に重複はあるのかを確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<C> の <b> と <a> を大から小へとソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> の <b> の名前を <c> に、 <d> 表属性の名前を <e> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<B> 中の <a> に重複がある行を消し、置き換える	<B> = <B> . drop_duplicates ( subset = <a> )	<A> . drop_duplicates ( subset = <a> , inplace = True )
表 <A> を <b> を軸に並び替えて、 <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
そのとき、マーカーの色をマゼンタとする	@option markerfacecolor = 'magenta'	markerfacecolor @option marker = 'magenta'
<b> から表データをタブ区切りで読み、 <A> にする	<A> = pd . read_csv ( <b> , sep = '\t' )	@option sep = pd . read_csv ( <b> , sep = '\t' )
<A> のカラム <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] )	sheet_name pd . to_datetime ( <A> [ <b> ] )
<B> と <C> データフレームを縦にくっつけ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の <b> に重複はあるのかどうかを表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<A> のカラム <b> の値をソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<a> カラムに重複がある行をドロップし、再代入する	df = df . drop_duplicates ( subset = <a> )	<D> = df . drop_duplicates ( subset = <a> )
<B> のカラムにある <a> の個数の合計を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> 内 ] [ で重複している行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <B> の未入力の値を直前の行の値で埋め、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	<B> = <B> . fillna ( method = 'ffill' )
<A> の要素を <B> に代入する	<B> = <A> . values	<B> = <A> . values
表データ <A> の <b> を欠損に置換し、欠損が存在する行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
<b> というエクセルデータの <c> シート名からデータフレームを読んで、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = <c> )	@option <A> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <B> の <a> を未入力の値に置換し、未入力の値が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> の <a> をグループ化して、値ごとのデータ数	<B> . groupby ( <a> ) . size ( )	<E> . groupby ( <a> ) . size ( )
表データ <B> を <a> に書き出す	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
<B> ( データフレーム ) の <a> を one - hot 表現にして、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を消す	<A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False )
表 <E> の列名を <d> から <c> に、 <b> から <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<B> 全体をコラム <a> を元に昇順で並び替え、 <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
分割数を <D> 、ビンのラベルをインデックスとして、 <B> の <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
データフレーム <A> 中の重複する行数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<b> という名前のエクセルの <c> をデータフレームとして読み込み、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = <c> )	@option <A> = pd . read_excel ( <b> , sheet_name = <c> )
列番号 <c> をインデックスにして、 <b> からデータフレームとを読み込んで、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	loc = pd . read_csv ( <b> , index_col = <c> )
データフレーム <E> のカラム名を <d> から <c> に、 <b> から <a> にリネームして、 <F> にする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <B> の中の欠損値を削除して、 <A> とする	<A> = <B> . dropna ( )	<B> = <B> . dropna ( )
表 <B> 内の <a> 表属性に重複がある行をドロップして、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
<a> を小から大へとして、 <B> とする	<B> = df . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <D> のカラム <c> 、 <b> 、 <a>	<D> [ [ <c> , <b> , <a> ] ]	[ <D> [ [ <c> , <b> , <a> ] ]
表データ <A> 中の <b> を欠損値に置換し、欠損値が存在する行を消して、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
カンマ区切りでファイル <b> を表として読み込み、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	df = pd . read_csv ( <b> , sep = ',' )
表データ <A> 中の <b> を未入力の値に置換し、未入力の値が存在する行をドロップ	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> の <b> 行目を削除し、置き換える	<A> . drop ( <b> , inplace = True )	df . drop ( <b> , inplace = True )
列番号 <b> を位置と設定して、ファイル <a> を読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
データフレーム <E> の列名を <d> から <c> に、 <b> から <a> に変更し、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
さらに、区切り文字として <A> を用いる	@option sep = <A>	pd . read_csv ( <A> , sep = '\t' )
<B> の <a> についての箱ひげ図をプロットする	plt . boxplot ( <B> [ <a> ] )	@option plt . boxplot ( <B> [ <a> ] )
表 <A> 内に重複はあるか見る	<A> . duplicated ( )	<A> . duplicated ( )
<B> の欠損を <A> として、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表 <C> の <a> の年を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . year	<b> <C> [ <a> ] = <C> [ <b> ] . dt . year
表 <B> と表 <C> を縦向きにマージして、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の表属性 <b> と <c> を大から小へとソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<b> を順番になるようにソートを <A> にする	<A> = <A> . sort_values ( <b> )	<D> = df . sort_values ( <b> )
表データ <C> の <b> とコラム <a> を逆順にソートして、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <E> の <d> の名前を <c> に、カラム <b> の名前を <a> に変更し、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
表データ <A> 内に存在する <b> を未記入の値に置換し、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
分割数を <C> 、ビンの名前を <D> リストとして、データフレーム <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
<C> の <b> と <a> に重複はあるか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
<B> 中の <c> 表属性に重複がある行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
ビン数を <D> 、ビンのラベルをインデックスとして、表データ <B> の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<D> = pd . cut ( <c> ] , <B> , label = False )
<A> の <d> について、 <b> をインデックス、 <c> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
表データ <B> の <a> についての箱ひげ図を描く	plt . boxplot ( <B> [ <a> ] )	@option plt . boxplot ( <B> [ <a> ] )
<A> の欠損を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<a> というエクセルファイルの <b> 番目のシートから読み込む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <A> を <b> という名前で保存する	<A> . to_csv ( <b> )	<B> . to_excel ( <b> )
ビン数を <D> 、ビンの名前を整数値として、 <B> 表のカラム <c> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	df = pd . cut ( <B> [ <c> ] , <D> , label = False )
<A> をインデックスで並び替える	<A> . sort_index ( )	<A> . sort_index ( )
ビン数を <D> 、ビンの名前を <E> として、表データ <B> のカラム <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	df = pd . cut ( <B> [ <c> ] , <D> , label = <E> )
<A> 全体を <b> の値で並び替え、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
<B> と <A> データフレームをマージして、 <C> にする	<C> = pd . merge ( <B> , <A> )	<A> = pd . merge ( <B> , <C> )
表 <A> 中の <b> コラムに重複はあるか確認を表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <A> のオブジェクトデータの統計情報	<A> . describe ( include = "O" )	pd . read_excel ( <A> , inplace = True )
分割数を <D> 、ビンのラベルを 0 始まりの連番として、データフレーム <B> の <c> コラムをビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
左外部結合で <B> と <C> データフレームをマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	@option <A> = pd . merge ( <B> , <C> , how = 'left' )
<A> 全体を <b> の値を元にソートし、置き換える	<A> . sort_values ( <b> , inplace = True )	<E> = <A> . sort_values ( <b> )
<a> という名前のエクセルファイルを読み込み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	<E> = pd . read_excel ( <a> , sheet_name = None )
重複した最後の行を残して <A> ( データフレーム ) の重複している行を削除し、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	<E> = <A> . drop_duplicates ( keep = False )
表 <A> 内の未入力の値の個数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の中の欠損をドロップする	<A> . dropna ( )	<A> . dropna ( )
<A> のリセットして、元のインデックスを削除して、置き換える	<A> . reset_index ( drop = True , inplace = True )	<C> = <A> . reset_index ( drop = True )
表データ <A> の中の欠損値を直前の行の値で埋め、置き換える	<A> = <A> . fillna ( method = 'ffill' )	<E> = <A> . fillna ( method = 'ffill' )
データフレーム <C> のカラム <b> と <a> を消し、 <D> に代入する	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <A> をエクセルファイル <b> に書き出す	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
<C> 内の <b> と <a> コラムに重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
<c> をキーとして、 <A> 表と <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	's' pd . merge ( <A> , <B> , on = <c> )
<a> と <b> に重複はあるのかどうか表示する	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
データフレーム <A> についてダミー変数を作って、 <A> とする	<A> = pd . get_dummies ( <A> )	<B> = pd . get_dummies ( <A> )
表データ <A> 中の <b> 表属性と <c> 表属性に重複はあるのかどうか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <B> の列 <a> を中央値で分割して、 <C> にする	<C> = pd . qcut ( <B> [ <a> ] , 2 )	df = pd . qcut ( <B> [ <a> ] , 2 )
<A> ( データフレーム ) の <b> を順番になるようにソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<D> . sort_values ( <b> , inplace = True )
データフレーム <A> 内に存在する <b> を欠損値に置換して、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
表 <A> 中の列 <b> に重複があるか否か	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<a> 区切りで表データをファイル名 <b> から読み込む	pd . read_csv ( <b> , sep = <a> )	sep pd . read_csv ( <b> , sep = <a> )
表データ <C> のカラム <b> が <a> のデータ	<C> [ <C> [ <b> ] == <a> ]	<A> [ <C> [ <b> ] == <a> ]
データフレーム <B> 内の <a> を欠損値に置換し、欠損値がある行を消して、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<E> . replace ( <a> , np . nan ) . dropna ( inplace = True )
表データ <C> の <b> コラムとコラム <a> を逆順にソートし、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 中の欠損を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<B> の中の欠損を <A> に置換し、インプレースする	<B> . fillna ( <A> , inplace = True )	scatter <B> . fillna ( <A> , inplace = True )
<A> の位置を振り直す	<A> . reset_index ( )	<A> . reset_index ( )
表 <A> の全ての列の重複する値がある行をドロップして、インプレースする	<A> . drop_duplicates ( inplace = True )	<D> . drop_duplicates ( inplace = True )
<E> の列の名前を <d> から <c> に、 <b> から <a> にリネームして、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <C> の <b> と <a> を降順にソートし、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> の表属性 <c> を中央値でビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 2 )	df = pd . qcut ( <B> [ <c> ] , 2 )
列番号 <b> をインデックスとして、 <a> を読む	pd . read_csv ( <a> , index_col = <b> )	's' pd . read_csv ( <a> , index_col = <b> )
データフレーム <A> を <b> 表属性を元に昇順で並び替えて、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
<A> と表データ <B> を横方向に結合する	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
<A> 中の <b> , <c> , <d> 行目の <e> , <c> 列目を取得する	<A> . iloc [ [ <b> , <c> , <d> ] , [ <e> , <c> ] ]	sns . iloc [ [ <b> , <c> , <d> ] , [ <e> , <c> ] ]
<a> と <b> 表属性に重複があるか確認する	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
データフレーム <A> の <b> の名前を <c> に変更する	<A> . rename ( columns = { <b> : <c> } )	<A> . rename ( index = { <b> : <c> } )
表 <A> の中の列それぞれにある <b> の個数の合計を見る	<A> . isin ( [ <b> ] ) . sum ( )	( <A> . isin ( [ <b> ] ) . sum ( )
<c> 番目の列を位置として、 <b> からデータフレームとを読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	loc <A> = pd . read_csv ( <b> , index_col = <c> )
<C> 中の表属性 <b> と <a> 表属性に重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> 中の重複した行を消す	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
CSV ファイル <b> ( ファイル名 ) をカンマ区切りで表データとして読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
表データ <A> の <b> のユニークな要素の個数	<A> [ <b> ] . nunique ( )	( <A> [ <b> ] ) . sum ( )
表データ <B> の中の <a> に重複がある行を消し、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	df . drop_duplicates ( subset = <a> , inplace = True )
表 <B> 全体をコラム <a> の値を軸にソートを <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
<B> 中にある <a> を未入力の値として、置き換える	<B> = <B> . replace ( <a> , np . nan )	<B> . replace ( <a> , np . nan , inplace = True )
表データ <E> の <d> の名前を <c> に、カラム <b> の名前を <a> に変更して、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	@option <E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
列番号 <a> を位置にして、 <b> から読み込み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	index_col <C> = pd . read_csv ( <b> , index_col = <a> )
表属性 <b> と表属性 <a> を逆順に並び替えて、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の <b> に重複がある行を削除し、 <A> にする	<A> = <A> . drop_duplicates ( subset = <b> )	<E> = <A> . drop_duplicates ( subset = <b> )
表データ <B> 全体を <a> を軸にソートし、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<b> と <a> コラムに重複が存在するのか確認する	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
<a> を y 軸につける	plt . ylabel ( <a> )	plt . ylabel ( <a> )
表 <C> 中の <b> 表属性と <a> 表属性に重複は存在するのか表示してみる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> に重複があるのかどうかチェック	<A> . duplicated ( )	<A> . duplicated ( )
<A> 全体をインデックスでソート	<A> . sort_index ( )	<A> . sort_index ( )
<A> 内の NaN を含む行を落とし、再代入する	<A> = <A> . dropna ( )	@option <A> = <A> . dropna ( )
<A> に存在する <b> を未入力の値に置き換える	<A> . replace ( <b> , np . nan )	<B> . replace ( <b> , np . nan )
<B> ( データフレーム ) の列 <a> についてダミー変数を生成する	pd . get_dummies ( <B> [ <a> ] )	pd . get_dummies ( <B> [ <a> ] )
表データ <A> に存在する <b> を未記入の値とする	<A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan )
データフレーム <A> 内のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <A> を <b> の値を元に昇順でソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<B> から重複する値がある行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
データフレーム <A> 内の <b> と <c> に重複があるのかどうか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
表データ <C> 中の列 <b> と列 <a> に重複があるかどうか	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
インデックスと <d> をキーとして表 <B> と <C> 表を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表データ <B> を <a> 表属性を元に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<C> ( データフレーム ) の <b> と列 <a> を逆順にし、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 中の欠損値を <A> の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> = <A> . fillna ( <A> . mean ( ) )
左外部結合でデータフレーム <B> と <A> データフレームを結合する	pd . merge ( <B> , <A> , how = 'left' )	pd . merge ( <B> , <A> , how = 'left' )
データフレーム <A> の NaN を含む行をドロップする	<A> . dropna ( )	dropna = <A> . dropna ( )
データフレーム <C> の <b> 列と <a> を大きい順にソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> と <C> 表データを縦向きに結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	df = pd . concat ( [ <B> , <C> ] )
ビン数を <D> 、ビンのラベルを整数値として、表 <B> の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
表 <B> 中の未記入の値を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<B> を <a> という名前にして CSV ファイルに書き込む	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
<a> というエクセルファイルの <b> 番目のシートからデータフレームを読む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<b> というエクセルデータの全てのシートをデータフレームとして読み込んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	<B> <A> = pd . read_excel ( <b> , sheet_name = None )
データフレーム <A> の中にある <b> を未入力の値に置き換える	<A> . replace ( <b> , np . nan )	<B> . replace ( <b> , np . nan )
CSV ファイル <b> を <a> 区切りで読み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	df = pd . read_csv ( <b> , sep = <a> )
表 <B> 中の <a> コラムに重複があるのかどうか表示する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
データフレーム <A> の <b> をグループ化して、値ごとのデータ数	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
表データ <A> の <b> コラムごとに <c> コラムの平均値を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	plt . groupby ( <A> [ <b> ] ) [ <c> ] . mean ( )
表データ <A> の <b> の前後の行の差分を計算する	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <b> ] . diff ( periods = 1 )
表データ <A> の <b> についての最頻値を取得する	<A> [ <b> ] . mode ( )	<b> <A> [ <a> ] . mode ( )
表 <C> のカラム <a> の前後の行の差分を  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )	<A> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )
<A> ( データフレーム ) の <b> コラムを値が小さい順にし、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <A> を <b> の値を元に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> の重複する行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
<C> のインデックス <b> の名前を <a> に変更する	<C> . rename ( index = { <b> : <a> } )	index = <C> . rename ( index = { <b> : <a> } )
表 <C> 中の <b> とコラム <a> に重複はあるかどうか確認を表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <B> 中の <a> カラムに重複はあるか確認する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表データ <A> の <b> と <c> の相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
表 <B> の <a> についての中央値を取得する	<B> [ <a> ] . median ( )	<B> [ <a> ] . median ( )
データフレーム <C> の <b> が <a> より小さいデータを抽出する	<C> [ <C> [ <b> ] <  <a> ]	< <C> [ <C> [ <b> ] < <a> ]
表 <A> の <b> ごとに <c> の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> の NaN を削除し、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <B> の <c> コラムと <d> を大から小へとソートし、 <A> に代入する	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表データ <A> 中の未記入の値をドロップを <B> とする	<B> = <A> . dropna ( )	<A> = <A> . dropna ( )
<B> と表 <C> を縦向きに結合して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<B> = pd . concat ( [ <B> , <C> ] )
データフレーム <B> の中に存在する <a> を NaN に置き換え、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	<F> = <B> . replace ( <a> , np . nan )
表 <A> 中のカラム <b> と <c> に重複が存在するのかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<a> を項目名として、データフレーム <C> とデータフレーム <B> を結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , on = <a> )	<E> = pd . merge ( <C> , <B> , on = <a> )
表 <A> 中の <b> を欠損値に置換し、欠損値がある行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> をインデックスを元に昇順でソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表データ <A> 内にある <b> を欠損値に置き換えて、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
データフレーム <B> の中の重複している行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	<D> = <B> . drop_duplicates ( )
表データ <B> 内に存在する <c> を未入力の値に置き換えて、 <A> にする	<A> = <B> . replace ( <c> , np . nan )	<C> <A> = <B> . replace ( <c> , np . nan )
<a> という列をドロップする	df . drop ( <a> , axis = 1 )	df . drop ( <a> , axis = 1 )
データフレーム <C> 内の <b> と <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> の <b> についての最頻値	<A> [ <b> ] . mode ( )	<b> <A> [ <b> ] . mode ( )
<a> を昇順にして、 <B> とする	<B> = df . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<b> というエクセルからデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
<a> を項目名として、 <C> 表と <B> 表を結合する	pd . merge ( <C> , <B> , on = <a> )	merge pd . merge ( <C> , <B> , on = <a> )
表データ <A> 内の欠損値の数	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <A> の表属性 <b> と <c> を大から小へとソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> にある <b> を未入力の値に置換する	<A> . replace ( <b> , np . nan )	@option np . replace ( <b> , np . nan )
表データ <B> 全体を <a> の値を元に昇順で並び替え、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> と表 <B> を縦向きに結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> を <b> の値に基づいてソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
<a> というエクセルのシート全てから読む	pd . read_excel ( <a> , sheet_name = None )	sheet_name pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> 中の NaN を <A> の平均値で補い、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表 <A> 内の未入力の値の合計を確認する	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
データフレーム <A> の全ての列で重複している行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
データフレーム <B> の <a> を年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] )	format pd . to_datetime ( <B> [ <a> ] )
左側のデータの位置と右側のデータのコラム <c> をキーとして、 <A> と表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <B> 全体を <a> の値を軸に並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表データ <A> に重複は存在するのか	<A> . duplicated ( )	<A> . duplicated ( )
フォーマットを指定して、 <A> の <b> を datetime 型に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	dtypes = pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )
データフレーム <A> の欠損を <B> で埋め、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
<A> の重複する行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
データフレーム <B> 全体を <a> を元にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> 内に存在する <b> を欠損値とし、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
表 <B> 全体を <a> の値に沿ってソートして、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> の全ての列で重複している値がある行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<B> の <a> 表属性の値を軸にソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
データフレーム <B> を <a> という名前でエクセルファイルに書き込む	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
表 <A> を位置を軸にソートを <A> に代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <B> 内の欠損を <B> の平均値で埋めて、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
分割数を <D> として、 <B> のコラム <c> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	df = pd . cut ( <B> [ <c> ] , <D> )
<A> 全体を表属性 <b> を軸にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <B> 全体を <c> 表属性の値でソートを <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
分割数を <C> 、ビンの名前を <D> リストとして、表 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表データ <B> の列名を <c> から <d> に、 <e> から <f> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	df = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
列 <b> に重複がある行を drop を <A> とする	<A> = df . drop_duplicates ( subset = <b> )	loc = <A> . drop_duplicates ( subset = <b> )
表データ <A> 内の重複した行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> のカラム <b> と <c> とカラム <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	sns . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
重複している最後の行を残して <A> ( データフレーム ) 中の重複している行を消して、 <B> とする	<B> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
<A> の全ての列の重複する行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
列 <b> に重複がある行を drop を <A> に代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<B> = <A> . drop_duplicates ( subset = <b> )
表データ <A> を <b> を軸にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <A> のカテゴリ変数をダミー変数に変換して、 <A> にする	<A> = pd . get_dummies ( <A> )	<C> <A> = pd . get_dummies ( <A> )
表データ <B> の欠損を表データ <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
表 <B> の NaN を <A> に置換し、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
エクセルファイル <b> の <a> 番目のシートを読んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	@option <b> = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> の元のインデックスをリセットする	<A> . reset_index ( drop = True )	True <A> . reset_index ( drop = True )
表 <A> の <b> に重複がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<E> = <A> . drop_duplicates ( subset = <b> )
表 <B> の中の NaN を含む行をドロップを <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <C> の <b> を位置、 <a> をコラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	index . pivot_table ( index = <b> , columns = <a> )
表 <A> 内の <b> 表属性に重複がある行をドロップし、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	<D> . drop_duplicates ( subset = <b> , inplace = True )
表 <A> の <b> 列と列 <c> の相関	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
表データ <A> をエクセルファイル <b> という名前にして書き出す	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
<B> と表データ <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表データ <A> を <b> という名前で CSV ファイルで保存する	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
データフレーム <B> の中にある <a> を欠損に置換し、置き換える	<B> = <B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan , inplace = True )
z 軸 = z 軸	x 軸 = x 軸|グラフの x 軸| x 座標	df . x ( <a> , inplace = True )
<B> 内の <a> を欠損値に置換し、欠損値がある行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> の列 <b> の月	<A> [ <b> ] . dt . month	<b> <A> [ <b> ] . dt . month
列番号 <c> を位置と設定して、 <b> を表データに格納し、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	loc = pd . read_csv ( <b> , index_col = <c> )
表データ <B> 内にある <a> を未記入の値に置き換え、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	<B> . replace ( <a> , np . nan , inplace = True )
データフレーム <A> の振り直して、元のインデックスを削除して、 <A> に代入する	<A> = <A> . reset_index ( drop = True )	@option <A> = <A> . reset_index ( drop = True )
<A> のカラムに存在する <b> の個数の合計を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
分割数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
列名を指定せずに <a> を読み込み、 <B> とする	<B> = pd . read_csv ( <a> , header = None )	<B> = pd . read_csv ( <a> , header = None )
データフレーム <B> の <c> を欠損値に置換し、欠損値が存在する行をドロップし、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<B> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <B> 中の NaN を含む行を削除し、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<A> 全体をコラム <b> を元に昇順で並び替え、再代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <B> 内の欠損値を直前の行の値で埋めて、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	<B> = <B> . fillna ( method = 'ffill' )
表データ <A> の振り直して、元のインデックスを削除して、再代入する	<A> = <A> . reset_index ( drop = True )	df . reset_index ( drop = True , inplace = True )
<A> と <B> の散布図を描く	plt . scatter ( <A> , <B> )	@option plt . scatter ( <A> , <B> )
<b> という名前のエクセルファイルのシート全部を読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
表 <A> の <b> が <c> より大きいデータ	<A> [ <A> [ <b> ] >  <c> ]	plt . bar ( <A> [ <b> ] , <A> [ <c> ] )
表 <B> 全体を <a> の値に沿ってソートして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> 内の NaN がある行をドロップして、 <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
<A> の <b> の値を軸に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <A> 全体をインデックスを元に昇順で並び替え、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表データ <A> 中の未入力の値がある行を削除して、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <A> の欠損の合計を求める	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
左外部結合で表データ <B> と表データ <A> をマージして、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<F> = pd . merge ( <B> , <A> , how = 'left' )
<a> を小さい順にソートを <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <B> の <a> 行目を削除して、置き換える	<B> . drop ( <a> , inplace = True )	drop <B> = <B> . drop ( <a> )
<a> コラムに重複がある行をドロップして、再代入する	df = df . drop_duplicates ( subset = <a> )	<E> = df . drop_duplicates ( subset = <a> )
<B> 内のそれぞれのカラムにある <a> の個数の合計を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> 中の重複要素がある行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
<a> 番目の列を位置として、 <b> ファイルをデータフレームとして読み込み、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
<A> の <b> コラムと <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<b> カラムを小さい順に並び替え、 <A> にする	<A> = df . sort_values ( <b> )	subset <A> = <A> . sort_values ( <b> )
表を <b> から <c> 区切りで読み、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <B> の中の欠損を <A> とする	<B> . fillna ( <A> )	scatter <B> . fillna ( <A> )
<C> の <b> 列と列 <a> を大きい順に並び替えて、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <E> のコラム <d> の名前を <c> に、 <b> の名前を <a> に変更して、 <F> にする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
x 軸に軸ラベル <a> を加える	plt . xlabel ( <a> )	<B> plt . xlabel ( <a> )
<A> 中にある <b> を NaN として、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	df . replace ( <b> , np . nan , inplace = True )
<B> 内の未記入の値を <B> の平均値で埋めて、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
<A> の表属性 <c> の曜日の数値型を  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	@option <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
<B> のコラム <a> の秒	<B> [ <a> ] . dt . second	<B> [ <a> ] . dt . second
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を削除する	<A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False )
<B> の <a> の曜日の数値型を表示する	<B> [ <a> ] . dt . dayofweek	<E> [ <B> [ <a> ] . dt . dayofweek
エクセルファイル <b> の <c> シート名を読んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	read_excel <A> = pd . read_excel ( <b> , sheet_name = <c> )
コラム <a> をキーとして、表データ <C> と <B> をマージし、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	@option <D> = pd . merge ( <C> , <B> , on = <a> )
表 <C> の <b> 表属性と <a> を大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
先頭の列を位置と設定して、 <a> ファイル名を読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
表データ <A> の全ての列で重複している行を取り除いて、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<A> のそれぞれの行において重複があるかどうかを検出する	<A> . duplicated ( )	<A> . duplicated ( )
<B> の <a> 列の値を昇順で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 中の欠損値をドロップを <A> に代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表データ <B> 内にある <a> を欠損値とする	<B> . replace ( <a> , np . nan )	<B> . replace ( <a> , np . nan )
<a> カラムと <b> を逆順にする	df . sort_values ( [ <a> , <b> ] , ascending = False )	<D> . sort_values ( [ <a> , <b> ] , ascending = False )
表 <A> の振り直して、元のインデックスを削除し、 <B> とする	<B> = <A> . reset_index ( drop = True )	<E> = <A> . reset_index ( drop = True )
データフレームを <b> から <c> 区切りで読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <B> 全体を <a> の値を元に昇順で並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
列番号 <a> を位置にして、ファイルパス <b> を読み込み、 <C> に代入する	<C> = pd . read_csv ( <b> , index_col = <a> )	<E> = pd . read_csv ( <b> , index_col = <a> )
表データ <A> の <b> 行目を削除	<A> . drop ( <b> )	<B> . drop ( <b> )
表データ <A> の上 5 行	<A> . head ( )	head <A> . head ( )
データフレーム <A> 内の NaN を削除	<A> . dropna ( )	dropna = <A> . dropna ( )
データフレーム <E> の <d> の名前を <c> に、 <b> 表属性の名前を <a> に変更し、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
パス <a> を表としてカンマ区切りで読み込み、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
<a> というエクセルのシート全部をデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表 <A> 中の NaN を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
<A> のカラム <b> ごとに <c> カラムの平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
データフレーム <A> の中の <b> とコラム <c> に重複があるのかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> の <b> を欠損値に置換し、欠損値が存在する行をドロップして、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )
表データ <A> 内に存在する <b> を未入力の値とし、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<D> = <A> . replace ( <b> , np . nan )
表データ <B> 中の表属性 <a> に重複は存在するのかチェックする	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
<A> 中にある <b> を NaN に置き換えて、再代入する	<A> = <A> . replace ( <b> , np . nan )	<B> = <A> . replace ( <b> , np . nan )
<a> というエクセルデータの全てのシートを読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
表データ <B> の <a> に重複があるかチェックを確認する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
左外部結合でデータフレーム <B> とデータフレーム <C> を一つにまとめて、 <A> に代入する	<A> = pd . merge ( <B> , <C> , how = 'left' )	@option <A> = pd . merge ( <B> , <C> , how = 'left' )
表 <C> の列 <b> をインデックス、 <a> 列を列としたピボットテーブルを作成して、 <D> とする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<F> = <C> . pivot_table ( index = <b> , columns = <a> )
表データ <B> の <a> を昇順にソートし、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <B> の <c> とコラム <d> を落として、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	1 = <B> . drop ( [ <c> , <d> ] , axis = 1 )
表データ <A> の中の欠損値を <B> に置き換えて、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表 <A> 内の <b> を欠損に置換し、欠損がある行を削除を <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> の <b> と <c> と列 <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	pairplot sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表 <B> と表 <A> のどちらにも存在するデータでマージする	pd . merge ( <B> , <A> , how = 'outer' )	pd . merge ( <B> , <A> , how = 'outer' )
表属性 <b> を昇順に並び替え、 <A> に代入する	<A> = df . sort_values ( <b> )	subset <A> = <A> . sort_values ( <b> )
表 <B> と <A> データフレームを一つにまとめて、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
<A> から <b> という CSV ファイルを書き出す	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
左外部結合で <B> と <A> を一つにまとめて、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	@option <C> = pd . merge ( <B> , <A> , how = 'left' )
データフレーム <C> のカラム <b> が <a> 以下データを抽出する	<C> [ <C> [ <b> ] <= <a> ]	<D> [ <C> [ <b> ] <= <a> ]
表データ <A> 全体をカラム <b> を元に昇順で並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
分割数を <C> 、ビンの名前をインデックスとして、表データ <A> の表属性 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
表 <A> 内のそれぞれのカラムにある <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	x <A> . isin ( [ <b> ] ) . sum ( )
表データ <A> の <b> と <c> を値が大きい順にソートを <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
インデックスと <d> を項目名として <B> 表データと表データ <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
そのとき、線の見た目を点線とする	@option linestyle = 'dotted'	<E> = pd . merge ( df1 , df2 , how = 'left' )
データフレーム <B> 中のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
ビン数を <C> として、 <A> の <b> 表属性をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	sheet_name pd . cut ( <A> [ <b> ] , <C> )
<A> のリセットして、元の位置を削除し、 <B> に代入する	<B> = <A> . reset_index ( drop = True )	<E> = <A> . reset_index ( drop = True )
表 <B> 中の <a> に重複はあるとき	if <B> . duplicated ( subset = <a> ) :	: if <B> . duplicated ( subset = <a> ) :
データフレーム <B> の先頭から <a> 行までを見る	<B> [ : <a> ]	<B> [ : <a> ]
<A> の中の表属性 <b> に重複は存在するのかチェック	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
<A> をインデックスで並び替えて、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <A> の <b> と表属性 <c> と表属性 <d> について関係性を一気に表示する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> [ [ <b> , <c> , <d> ] ] . corr ( )
表データ <B> にある <a> を未入力の値に置換して、 <B> に代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
データフレーム <A> 中の欠損の合計	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表 <B> の <a> を欠損に置換し、欠損がある行を落として、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <C> 中の <b> と <a> に重複はあるのかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> の中の欠損値をドロップを <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <A> 全体を位置を軸にソートを <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <D> の <a> について、カラム <c> を位置、 <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<B> の <a> をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	<E> . groupby ( <a> ) . size ( )
データフレーム <B> の <c> とカラム <d> を逆順に並び替え、 <A> に代入する	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<C> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
データフレーム <A> のカラム <c> の月を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . month	<A> [ <b> ] = <A> [ <c> ] . dt . month
カンマ区切りで表データをファイル名 <b> から読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
全結合で <A> 表と <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	merge pd . merge ( <A> , <B> , how = 'outer' )
ファイル名 <a> をカンマ区切りで表データとして読み込む	pd . read_csv ( <a> , sep = ',' )	pd . read_csv ( <a> , sep = ',' )
<a> をキーとしてデータを内部結合する	pd . merge ( df1 , df2 , on = <a> )	df1 pd . merge ( df1 , df2 , on = <a> )
エクセルの <b> の <a> 番目のシートをデータフレームに格納し、 <C> に代入する	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
重複した最後の行を残して <A> ( データフレーム ) の中の重複している行を削除し、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	<E> . drop_duplicates ( keep = False , inplace = True )
<B> ( データフレーム ) の <a> 列についてダミー変数をつくり、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	<E> = pd . get_dummies ( <B> [ <a> ] )
データフレーム <C> と <B> に対して、 <a> をキーとしてデータを内部結合する	pd . merge ( <C> , <B> , on = <a> )	on pd . merge ( <C> , <B> , on = <a> )
表データ <B> をエクセルファイル <a> という名前にして書き出す	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
表データ <A> を <b> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
データフレーム <B> を <a> に書き込む	<B> . to_csv ( <a> )	axis <B> . to_csv ( <a> )
表 <C> 内のコラム <b> と <a> に重複はあるか確認を見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> の <b> とカラム <c> ごとに <d> の値の合計を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	plt . groupby ( [ <A> [ <b> , <c> ] ) [ <d> ] . sum ( )
<A> のカラム <b> 、 <c> 、 <d> 、 <e> を見る	<A> [ [ <b> , <c> , <d> , <e> ] ]	<E> [ [ <b> , <c> , <d> , <e> ] ]
<A> 中の <b> を NaN に置換し、 NaN が存在する行をドロップを <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <B> の <a> をグループ化して、値ごとのデータ件数を算出する	<B> . groupby ( <a> ) . size ( )	<E> . groupby ( <a> ) . size ( )
データフレーム <B> とデータフレーム <A> を縦結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
表 <A> 中の NaN がある行をドロップを <B> に代入する	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
<A> ( データフレーム ) のコラム <b> と <c> を降順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> の <a> を位置として設定して、 <B> にする	<B> = <B> . set_index ( <a> )	step <B> = <B> . set_index ( <a> )
表 <A> の欠損を <B> に置換し、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
<b> と <a> 列を降順にする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の全ての列で重複している行をドロップして、 <A> にする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
データフレーム <B> 中のそれぞれのカラムに存在する <a> の個数の合計値を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
<A> 中の <b> に重複がある行を消し、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	<A> . drop_duplicates ( subset = <b> , inplace = True )
表 <A> の <b> カラムについての箱ひげ図を描画する	plt . boxplot ( <A> [ <b> ] )	@option plt . boxplot ( <A> [ <b> ] )
表 <A> の <b> カラムとカラム <c> を逆順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> . sort_values ( [ <b> , <c> ] , ascending = False )
左側のデータのインデックスと右側のデータの <a> をキーとして、 <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <A> 内の欠損を含む行を消す	<A> . dropna ( )	<A> . dropna ( )
境界値を <A> リストとして、表 <C> の <b> を分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	df = pd . cut ( <C> [ <b> ] , <A> )
<E> の列名を <d> から <c> に、 <b> から <a> に変更して、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<C> ( データフレーム ) の <b> と <a> コラムを降順に並び替え、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> 中のコラム <b> と <c> コラムに重複があるのか表示してみる	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
<B> ( データフレーム ) の表属性 <a> を値が小さい順にソートを <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <B> の <a> を並び替えて、 <C> にする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
<C> の <b> と <a> を大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> 内の <a> に重複があるか	<B> . duplicated ( subset = <a> )	<D> . duplicated ( subset = <a> )
データフレーム <B> 中のそれぞれのカラムに存在する <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> ( データフレーム ) の表属性 <b> を値が小さい順に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<a> を順番になるようにして、 <B> とする	<B> = df . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<A> の <b> カラムの月を表示する	<A> [ <b> ] . dt . month	<b> <A> [ <b> ] . dt . month
<a> 列をキーとして、 <C> と表データ <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	sns = pd . merge ( <C> , <B> , on = <a> )
<C> の <b> 位置の名前を <a> にリネームし、インプレースする	<C> . rename ( index = { <b> : <a> } , inplace = True )	<A> . rename ( index = { <b> : <a> } , inplace = True )
表 <A> のカラム <b> の名前を <c> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	<D> = <A> . rename ( columns = { <b> : <c> } )
表データ <A> の <b> についての最頻値	<A> [ <b> ] . mode ( )	<b> <A> [ <a> ] . mode ( )
<A> の行名を <b> から <c> にリネームして、インプレースする	<A> . rename ( index = { <b> : <c> } , inplace = True )	<E> . rename ( index = { <b> : <c> } , inplace = True )
表データ <C> の <b> と <a> を大きい順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> と <C> を縦向きにマージし、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <A> 内の未記入の値を <A> 表の平均値で補って、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <E> の <d> 表属性の名前を <c> に、 <b> の名前を <a> にリネームして、 <F> にする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <B> 中に存在する <a> を欠損に置換し、再代入する	<B> = <B> . replace ( <a> , np . nan )	<E> = <B> . replace ( <a> , np . nan )
表 <C> 中の <b> と <a> に重複が存在するのかチェックする	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <C> の <b> ごとに <a> 表属性の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
<A> の重複要素がある行を取り除いて、インプレースする	<A> . drop_duplicates ( inplace = True )	plt <A> . drop_duplicates ( inplace = True )
データフレーム <A> 中の未入力の値を直前の行の値で埋めて、 <B> にする	<B> = <A> . fillna ( method = 'ffill' )	<E> = <A> . fillna ( method = 'ffill' )
表 <C> の <a> の曜日の数値型を確認し、  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . dt . dayofweek	<A> [ <b> ] = <C> [ <a> ] . dt . dayofweek
表データ <C> 中のコラム <b> と <a> コラムに重複が存在するのかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> 内の NaN を表データ <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	plt <A> . fillna ( <A> . mean ( ) )
データフレーム <A> のコラム <d> について、 <b> をインデックス、 <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<A> を <b> という名前にして CSV ファイルに書き込む	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
表データ <B> の <c> の名前を <d> に変更して、 <A> に代入する	<A> = <B> . rename ( index = { <c> : <d> } )	<A> = <B> . rename ( index = { <c> : <d> } )
データフレーム <B> 全体を <a> の値で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
位置と <c> 列をキーとして <A> と表 <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<C> の <b> と <a> カラムを大きい順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
グラフにグリッドをつける	plt . grid ( True )	plt . grid ( True )
データフレームを CSV ファイル <b> ( ファイル名 ) から <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	read_csv pd . read_csv ( <b> , sep = <a> )
<B> のコラム <a> についての分散	<B> [ <a> ] . var ( )	var <B> [ <a> ] . var ( )
データフレーム <A> 内に重複があるか表示してみる	<A> . duplicated ( )	<A> . duplicated ( )
<B> 中の未入力の値を <A> に置き換える	<B> . fillna ( <A> )	<A> . fillna ( <B> )
データフレーム <A> の元の位置をリセットする	<A> . reset_index ( drop = True )	True <A> . reset_index ( drop = True )
<C> の <a> の曜日を表示し、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	<A> [ <b> ] = <C> [ <a> ] . dt . weekday_name
文字コードがシフト JIS のファイル <a> を読み込んで、 <B> にする	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )
表データ <B> を <a> の値を元にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<B> のカラムに存在する <a> の個数の合計を見る	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
さらに、マーカーの色をシアンとする	@option markerfacecolor = 'cyan'	'cyan' = pd . merge ( df1 , df2 , how = 'outer' )
フォーマットを指定して、表データ <B> の <a> コラムを年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	<E> = pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )
表データ <A> の <b> とコラム <c> に重複があるかどうかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
<B> の <c> を未記入の値に置換し、未記入の値がある行を削除を <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<A> ( データフレーム ) の <b> と <c> 表属性を大きい順に並び替え、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<C> の中のカラム <b> とカラム <a> に重複はあるかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <B> 中の <c> を未入力の値に置換し、未入力の値がある行をドロップを <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<B> を <a> という名前にして保存する	<B> . to_csv ( <a> )	<E> . to_csv ( <a> )
表データ <E> の列の名前を <d> から <c> に、 <b> から <a> に変更し、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
表データ <B> を <a> という名前でエクセル形式に書き込む	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
<B> の <a> についての中央値	<B> [ <a> ] . median ( )	'greenyellow' <B> [ <a> ] . median ( )
表としてカンマ区切りで <a> を読み、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
先頭の列を位置と設定して、 <a> から読み込む	pd . read_csv ( <a> , index_col = 0 )	df = pd . read_csv ( <a> , index_col = 0 )
<A> 中の欠損値を数える	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<A> 中のコラム <b> に重複は存在するのか確認を調べる	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
データフレーム <B> を <a> の値に基づいてソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<E> . sort_values ( <a> , inplace = True )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> と <B> 表データを結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<b> というエクセルの <a> を読み込む	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name pd . read_excel ( <b> , sheet_name = <a> )
<C> の <b> をインデックス、 <a> 列を列としたピボットテーブルを作成して、 <D> に代入する	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<E> = <C> . pivot_table ( index = <b> , columns = <a> )
表 <A> の <b> を位置として設定して、再代入する	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
そのとき、マーカーのエッジの色を青とする	@option markeredgecolor = 'blue'	markeredgewidth = 'blue'
<b> 番目の列を位置にして、 <a> ファイルパスをデータフレームに格納する	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
<A> のコラム <b> と <c> と <d> コラムについて関係性を一度にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
<b> からカンマ区切りでデータフレームを読み、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
<A> をインデックスを元にソート	<A> . sort_index ( )	<A> . sort_index ( )
分割数を <C> 、ビンのラベルを整数値として、データフレーム <A> のコラム <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <A> [ <b> ] , <C> , label = False )
表データ <A> の重複した行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表 <C> の表属性 <b> と <a> に重複はあるかどうかチェックする	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> の <a>	<B> [ <a> ]	== <B> [ <a> ]
<b> というエクセルデータの <c> を表に格納し、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
データフレーム <B> を位置でソートを <A> に代入する	<A> = <B> . sort_index ( )	loc <A> = <B> . sort_index ( )
表データ <A> 中の重複している行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<A> 中に重複はあるのか確認する	<A> . duplicated ( )	<A> . duplicated ( )
<A> の未記入の値を直前の行の値で補い、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	<A> = <A> . fillna ( method = 'ffill' )
データフレーム <A> の <b> カラムが <c> より大きいデータを得る	<A> [ <A> [ <b> ] >  <c> ]	plt . bar ( <A> [ <b> ] , <A> [ <c> ] )
<B> 内の <a> に重複がある行を削除して、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
表データ <B> の中にある <a> を未入力の値に置き換えて、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	<F> = <B> . replace ( <a> , np . nan )
<A> の <b> の値をソート	<A> . sort_values ( <b> )	<B> . sort_values ( <b> )
<B> を列 <a> を元に昇順で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<A> をインデックスを軸に並び替え、 <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
データフレーム <B> の列名を <c> から <d> に、 <e> から <f> にリネームして、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<E> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
エクセル <a> からデータフレームに読む	pd . read_excel ( <a> )	None pd . read_excel ( <a> )
データフレーム <B> 中の <a> を未入力の値に置換し、未入力の値がある行を削除して、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> 内の <b> に重複はあるのかどうか確認を調べる	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
<a> をキーとして、 <C> と <B> 表をマージし、 <D> にする	<D> = pd . merge ( <C> , <B> , on = <a> )	@option <D> = pd . merge ( <C> , <B> , on = <a> )
<B> をコラム <a> の値を元に並び替えて、 <C> とする	<C> = <B> . sort_values ( <a> )	<F> = <B> . sort_values ( <a> )
分割数を <C> 、ビンの名前をリスト <D> として、 <A> データフレームのコラム <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
<B> 全体を <a> で並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<b> というエクセルデータのシート名 <c> からデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> <A> = pd . read_excel ( <b> , sheet_name = <c> )
カンマ区切りで CSV ファイル <a> を読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
<B> を列 <c> の値を元に昇順で並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
境界値を <C> として、 <A> のコラム <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	sheet_name pd . cut ( <A> [ <b> ] , <C> )
<a> という名前のエクセルファイルの <b> 番目のシートを表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<A> の <b> の値を昇順でソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	<E> = <A> . sort_values ( <b> )
表 <B> 内のそれぞれのカラムにある <a> の個数の合計値を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> についてダミー変数をつくり、 <A> とする	<A> = pd . get_dummies ( <A> )	loc = pd . get_dummies ( <A> )
表データ <B> の <a> のユニークな要素数	<B> [ <a> ] . nunique ( )	'greenyellow' <B> [ <a> ] . nunique ( )
<A> 内の重複した行の数を見る	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> のリセットして、元の位置を削除し、 <A> とする	<A> = <A> . reset_index ( drop = True )	@option <A> = <A> . reset_index ( drop = True )
<a> と <b> を降順にして、置き換える	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> = df . sort_values ( [ <a> , <b> ] , ascending = False )
表 <A> の未記入の値がある行を削除し、置き換える	<A> . dropna ( inplace = True )	<D> = <A> . dropna ( )
表 <B> の <a> をインデックスに設定する	<B> . set_index ( <a> )	<B> . set_index ( <a> )
表 <B> 全体を <c> の値でソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表 <A> の中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	plt <A> <A> [ <A> . duplicated ( ) ]
表 <A> の中の NaN を <B> に置き換え、再代入する	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( method = 'ffill' )
表 <B> 中の重複している行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<b> 番目の列を位置として、 <a> からデータフレームとを読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <A> 中の重複する行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
<B> 中にある <a> を未入力の値とする	<B> . replace ( <a> , np . nan )	<B> . replace ( <a> , np . nan )
<B> の欠損を <A> とし、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
CSV ファイル <a> ( ファイル名 ) をカンマ区切りで表として読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
CSV ファイル <b> ( ファイル名 ) から表を読み込み、 <A> に代入する	<A> = pd . read_csv ( <b> )	loc = pd . read_csv ( <b> )
表データ <B> 内の未入力の値を <B> 表の平均値で埋めて、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
<a> に重複がある行をドロップする	df . drop_duplicates ( subset = <a> )	drop_duplicates df . drop_duplicates ( subset = <a> )
<A> 中の未記入の値を消し、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表 <A> 内の列に存在する <b> の個数の合計を見る	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
データフレーム <B> 中の NaN を削除を <A> とする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
データフレーム <B> 中の <a> に重複があるのか確認する	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
<B> 内の未入力の値を直前の行の値で埋め、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	@option <A> = <B> . fillna ( method = 'ffill' )
<B> を <a> コラムに沿ってソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
表 <A> の <b> と <c> ごとに <d> の値の和を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	plt . groupby ( [ <A> [ <b> , <c> ] ) [ <d> ] . sum ( )
表データ <A> 中の <b> と <c> に重複はあるのかどうか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
表データ <A> の <b> と <c> をドロップして、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <A> をマージする	pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
表データ <A> 全体を <b> に基づいてソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<D> . sort_values ( <b> , inplace = True )
<B> を <c> に基づいてソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	<B> = <B> . sort_values ( <c> )
データフレーム <B> 内の <a> を未入力の値に置換し、未入力の値がある行を削除する	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
<b> というエクセルデータの <c> 番目のシートをデータフレームとして読み込み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	@option <A> = pd . read_excel ( <b> , sheet_name = <c> )
<B> と表データ <A> を縦結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
表データ <A> のコラム <b> とコラム <c> と <d> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	pairplot sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表 <B> 内の <a> に重複はあるかどうかチェックを表示する	<B> . duplicated ( subset = <a> )	<E> . duplicated ( subset = <a> )
表 <B> にある <a> を未記入の値に置換し、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	<B> . replace ( <a> , np . nan , inplace = True )
表 <A> の <b> と <c> を消し、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <A> 中の <b> と <c> 表属性に重複があるのかチェックを表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
表 <A> と <B> 表データを縦に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<C> の <b> 表属性と表属性 <a> をドロップし、 <C> とする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<F> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <B> 中の <a> を未記入の値に置換し、未記入の値が存在する行を削除し、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> の中の重複している行を削除を <B> とする	<B> = <A> . drop_duplicates ( )	<E> = <A> . drop_duplicates ( )
表データ <B> 中の欠損値を <C> として、 <A> とする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
<a> 区切りでファイル <b> をデータフレームとして読む	pd . read_csv ( <b> , sep = <a> )	set_index pd . read_csv ( <b> , sep = <a> )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行をドロップする	<A> . drop_duplicates ( keep = False )	<A> . drop_duplicates ( keep = False )
分割数を <B> 、ビンのラベルを <A> として、 <D> の <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	sheet_name pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<A> の <b> と <c> 列を落とし、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> 中の重複する行を取り除き、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> 中の欠損がある行をドロップを <A> とする	<A> = <A> . dropna ( )	loc = <A> . dropna ( )
表 <E> の <d> の名前を <c> に、 <b> の名前を <a> にリネームし、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
データフレーム <B> 内の <a> を NaN に置換し、 NaN がある行を消し、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
インデックスと <a> をキーとして <C> データフレームと <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
もし表 <B> 内の表属性 <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	<E> . duplicated ( subset = <a> ) :
ビン数を <C> として、 <A> の <b> を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	qcut pd . qcut ( <A> [ <b> ] , <C> )
表 <B> の <c> と <d> をドロップを <A> にする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	dropna = <B> . drop ( [ <c> , <d> ] , axis = 1 )
タブ区切りで <a> を読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = '\t' )	value_counts = pd . read_csv ( <a> , sep = '\t' )
インデックスと <a> をキーとして <C> データフレームと <B> を一つにまとめ、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <D> の列 <c> と <b> と <a> について関係性を一度に描く	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表データ <A> 中の未入力の値を <B> に置換して、置き換える	<A> = <A> . fillna ( <B> )	<C> = <A> . fillna ( <B> )
表 <B> の <a> 表属性に重複がある場合	if <B> . duplicated ( subset = <a> ) :	<E> . duplicated ( subset = <a> ) :
データフレーム <B> をエクセルファイル <a> に変換する	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
表 <A> 内の重複している行を消し、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
<B> 内の <a> を欠損値に置換し、欠損値がある行をドロップを <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 中の未記入の値を含む行をドロップする	<A> . dropna ( )	<A> . dropna ( )
<A> 内の <b> に重複がある行を削除する	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
<A> の <b> についての箱ひげ図を表示する	plt . boxplot ( <A> [ <b> ] )	@option plt . boxplot ( <A> [ <b> ] )
<C> の <b> カラムと <a> を降順にソートし、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> ファイルをデータフレームとして読んで、 <A> とする	<A> = pd . read_csv ( <b> )	loc = pd . read_csv ( <b> )
データフレーム <A> 中の未入力の値を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <B> を <a> 表属性を元に昇順で並び替えて、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> 中の NaN を <A> 表の平均値で埋め、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> の未入力の値を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表 <A> のカラム <b> の名前を <c> に変更して、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<E> = <A> . rename ( columns = { <b> : <c> } )
データフレーム <A> 内の未記入の値の合計を見る	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
表データ <A> の <b> 表属性と <c> と <d> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
データフレーム <B> のコラム <a> の前後の行の差分を求める	<B> [ <a> ] . diff ( periods = 1 )	<A> [ <B> [ <a> ] . diff ( periods = 1 )
<A> 内に重複はあるか確認	<A> . duplicated ( )	<A> . duplicated ( )
表 <B> 中の NaN を <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
<A> 全体を位置を元にソートを <B> にする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
<a> を昇順にソートし、 <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
左外部結合で表データ <B> と表データ <A> を結合し、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<F> = pd . merge ( <B> , <A> , how = 'left' )
<b> についてダミー変数を作成し、 <A> とする	<A> = pd . get_dummies ( <A> [ <b> ] )	@option <A> = pd . get_dummies ( <A> [ <b> ] )
<B> 内の <c> を欠損値に置換し、欠損値がある行を削除を <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <A> の中の重複しているデータを抽出する	<A> [ <A> . duplicated ( ) ]	<C> [ <A> . duplicated ( ) ]
<C> の <a> の日にちを  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . day	<b> <C> [ <a> ] = <C> [ <a> ] . dt . day
表データ <A> のもの	<A> [ <A> . duplicated ( ) ]	<A> [ <A> . duplicated ( ) ]
表 <B> の表属性 <a> の分	<B> [ <a> ] . dt . minute	<E> [ <B> [ <a> ] . dt . minute
データフレーム <A> のカラム <b> 、 <c> 、 <d> 、 <e> を確認する	<A> [ [ <b> , <c> , <d> , <e> ] ]	sns [ <A> [ <b> , <c> , <d> , <e> ] ]
<B> 内にある <a> を未入力の値に置換する	<B> . replace ( <a> , np . nan )	scatter <B> . replace ( <a> , np . nan )
<B> の未入力の値がある行をドロップし、 <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<C> ( データフレーム ) の <b> と <a> 列を大きい順にし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 中の欠損が存在する行を消す	<A> . dropna ( )	<A> . dropna ( )
表 <A> の <c> の曜日の数値型を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	@option <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
インデックスと <a> 列をキーとして <C> と表 <B> を一つにまとめ、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <A> の <b> カラムと <c> と <d> について関係性を一度に表示する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	@option sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
データフレーム <B> の表属性 <c> と <d> を大から小へとソートし、 <A> にする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
データフレーム <C> の <b> の名前を <a> に変更し、 <C> とする	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
表データ <C> の <b> とコラム <a> を削除し、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	<A> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )
データフレーム <D> の <c> コラムが <b> もしくは <a> のデータ	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	<B> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]
<a> についてダミー変数を作成する	pd . get_dummies ( df [ <a> ] )	get_dummies pd . get_dummies ( df [ <a> ] )
表 <B> 全体を <a> の値を元に並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<b> と <c> を大から小へとし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> の表属性 <a> の一意の値を見る	<B> [ <a> ] . unique ( )	plt <B> [ <a> ] . unique ( )
表データ <A> 中の NaN を落として、 <A> とする	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
データフレーム <B> 全体を <a> を元にソートして、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <A> の NaN を削除し、置き換える	<A> . dropna ( inplace = True )	<A> = <A> . dropna ( )
データフレーム <B> の <a> の分	<B> [ <a> ] . dt . minute	<E> [ <B> [ <a> ] . dt . minute
<C> の <b> とカラム <a> を値が大きい順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> にある <a> を欠損に置換して、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<A> の位置をソートし、 <B> とする	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
表 <B> をインデックスで並び替えて、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレームを <b> から <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
表データ <A> 内の <b> と <c> に重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<b> という名前のエクセルデータの <a> をデータフレームに格納して、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<F> = pd . read_excel ( <b> , sheet_name = <a> )
先頭の列を位置にして、 <a> をデータフレームに格納する	pd . read_csv ( <a> , index_col = 0 )	set_index = pd . read_csv ( <a> , index_col = 0 )
表 <A> の <b> を未記入の値に置換し、未記入の値が存在する行を削除して、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 中の列にある <b> の個数を確認する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データとして CSV ファイル <a> ( ファイル名 ) をカンマ区切りで読む	pd . read_csv ( <a> , sep = ',' )	read_csv pd . read_csv ( <a> , sep = ',' )
<A> の <b> を位置、 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	df . pivot_table ( index = <b> , columns = <c> )
表 <A> の中の未記入の値がある行を削除し、再代入する	<A> = <A> . dropna ( )	<A> = <A> . dropna ( )
表 <B> 内のカラムに存在する <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表データ <A> の欠損値を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
表データ <A> のコラム <b> を消し、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	drop <A> = <A> . drop ( <b> , axis = 1 )
<a> を昇順にソートし、置き換える	df . sort_values ( <a> , inplace = True )	<E> = df . sort_values ( <a> )
表データ <B> 中の欠損を <A> で埋め、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
エクセルの <a> をデータフレームに読み込む	pd . read_excel ( <a> )	<B> . to_excel ( <a> )
表データ <A> の未記入の値をドロップを <B> に代入する	<B> = <A> . dropna ( )	<E> = <A> . dropna ( )
表データ <B> のカラム <a> の秒を表示する	<B> [ <a> ] . dt . second	second <B> [ <a> ] . dt . second
表データ <B> 中の <a> を欠損値に置換し、欠損値が存在する行を消して、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
位置と <a> カラムをキーとして <C> と表データ <B> をマージして、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<F> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <A> 内のカラム <b> と <c> カラムに重複はあるのかどうか	<A> . duplicated ( subset = [ <b> , <c> ] )	<D> . duplicated ( subset = [ <b> , <c> ] )
<b> という名前のエクセルファイルの <a> シート名をデータフレームに格納する	pd . read_excel ( <b> , sheet_name = <a> )	None pd . read_excel ( <b> , sheet_name = <a> )
<b> カラムとカラム <a> を逆順にし、置き換える	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> = df . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 中の NaN がある行を落として、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> 軸を <A> とした <B> の棒グラフをプロットする	plt . bar ( <A> , <B> )	bar plt . bar ( <A> , <B> )
データフレーム <D> のカラム <c> と <b> と <a> カラムについて関係性を一度に描く	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
表データ <B> 中の <a> を未記入の値に置換し、未記入の値が存在する行を削除し、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表属性 <b> と <a> を逆順にし、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> 内の未入力の値を <B> に置き換える	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <A> 内の重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<b> というエクセルの <c> からデータフレームを読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	read_excel <A> = pd . read_excel ( <b> , sheet_name = <c> )
重複する行を削除し、 <A> とする	<A> = df . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表データ <B> の表属性 <a> を並び替えて、 <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表 <B> のコラム <c> の名前を <d> に、 <e> の名前を <f> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<E> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
<B> 全体を <a> の値を元に並び替え、 <B> にする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
インデックスと <a> を項目名として <C> と <B> 表データをマージし、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <a> )
<a> というラベルを x 軸に加える	plt . xlabel ( <a> )	xlabel . xlabel ( <a> )
<B> 全体を <a> 表属性を元に並び替え、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
データフレーム <A> 内の <b> と <c> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = [ <b> , <c> ] )	<E> . duplicated ( subset = [ <b> , <c> ] )
もし表 <A> 内の表属性 <b> と <c> 表属性に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
分割数を <C> 、ビンのラベルをリスト <D> として、表データ <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
<b> というエクセル <b> のシート全部を表に格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	@option <b> = pd . read_excel ( <b> , sheet_name = None )
エクセルファイル <a> を表データに格納し、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	df = pd . read_excel ( <a> , sheet_name = None )
列番号 <c> を位置にして、 <b> を表に格納して、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	loc = pd . read_csv ( <b> , index_col = <c> )
先頭の列を位置に、 <a> から読み込み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
<b> をキーとしてデータを内部結合して、 <A> にする	<A> = pd . merge ( df1 , df2 , on = <b> )	<B> = pd . merge ( df1 , df2 , on = <b> )
表 <A> 中の <b> とコラム <c> に重複はあるかどうか確認	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
ビン数を <B> 、ビンの名前を <A> として、データフレーム <D> の <c> カラムをビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	set_index pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表データ <B> のカラム <a> の曜日の数値型	<B> [ <a> ] . dt . dayofweek	<B> [ <a> ] . dt . dayofweek
表データ <B> の <a> コラムに重複はあるのか表示してみる	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
<A> の <b> のデータの種類	<A> [ <b> ] . unique ( )	<b> <A> [ <b> ] . unique ( )
表データ <A> を <b> というエクセルファイルに書き出す	<A> . to_excel ( <b> )	to_excel <A> . to_excel ( <b> )
グラフ内で日本語を表示できるようにする	sns . set ( font = 'IPAexGothic' , style = 'white' )	font = pd . read_csv ( <a> , sep = None )
<A> ( データフレーム ) の <b> と <c> 表属性を降順にして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> の <a> の出現回数	<B> [ <a> ] . value_counts ( )	value_counts <B> [ <a> ] . value_counts ( )
<A> ( データフレーム ) のカラム <b> と <c> を大から小へと並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	plt . sort_values ( [ <A> , <b> ] , ascending = False )
表 <A> 内の <b> に重複は存在するのか	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
データフレーム <A> の <b> 表属性を抽出する	<A> [ <b> ]	1 [ <A> [ <b> ] ]
<A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> )	merge pd . merge ( <A> , <B> )
表 <B> の <c> を欠損に置換し、欠損が存在する行を落とし、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<C> の <b> カラムとカラム <a> を値が大きい順に並び替え、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表データ <B> の中の <c> に重複がある行を消し、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	@option <A> = <B> . drop_duplicates ( subset = <c> )
<B> 内のそれぞれのカラムにある <a> の個数の合計値を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <E> の <d> 表属性の名前を <c> に、 <b> の名前を <a> に変更し、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<C> ( データフレーム ) の <b> 列と <a> 列を降順にして、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表 <A> 内の重複している値がある行を削除する	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
表データ <D> の <a> 列について、 <c> 列をインデックス、 <b> 列を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> 内で重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
ビン数を <A> として、 <C> 表データの表属性 <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <C> [ <b> ] , <A> )	qcut pd . qcut ( <C> [ <b> ] , <A> )
データフレーム <B> 内の <a> を NaN に置換し、 NaN がある行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	<E> . replace ( <a> , np . nan ) . dropna ( )
<A> の <b> と <c> と <d> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	<E> [ [ <b> , <c> , <d> ] ] . corr ( )
<a> というエクセルデータの <b> 番目のシートをデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	<B> pd . read_excel ( <a> , sheet_name = <b> )
表 <A> 内の <b> を未入力の値に置換し、未入力の値がある行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <B> 全体を <a> に基づいてソートして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<a> と <b> に重複があるのかどうか確認を見る	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
<b> 番目の列を位置にして、 <a> ファイルパスを読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
<a> に重複がある行を drop し、 <B> とする	<B> = df . drop_duplicates ( subset = <a> )	<E> = <B> . drop_duplicates ( subset = <a> )
表データ <B> と <A> を横方向にくっつけ、 <C> とする	<C> = pd . merge ( <B> , <A> )	@option <C> = pd . merge ( <B> , <A> )
<a> カラムという列をドロップして、置き換える	df = df . drop ( <a> , axis = 1 )	df . drop ( <a> , axis = 1 , inplace = True )
表 <E> の <d> 表属性の名前を <c> に、 <b> の名前を <a> に変更して、 <F> に代入する	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <B> の <a> についてのヒストグラムを描く	plt . hist ( <B> [ <a> ] )	@option plt . hist ( <B> [ <a> ] )
表 <B> 中の <a> を欠損値に置換し、欠損値がある行をドロップを <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
列 <b> を項目名としてデータを結合し、 <A> とする	<A> = pd . merge ( df1 , df2 , on = <b> )	<B> = pd . merge ( df1 , df2 , on = <b> )
インデックスと <d> 列をキーとして <B> 表と <C> 表を一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<b> という名前のエクセルの <c> 番目のシートをデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	@option <A> = pd . read_excel ( <b> , sheet_name = <c> )
<B> の <a> を並び替え、置き換える	<B> = <B> . sort_values ( <a> )	<E> . sort_values ( <a> , inplace = True )
<a> と <b> に重複があるのかどうか確認する	df . duplicated ( subset = [ <a> , <b> ] )	<B> . duplicated ( subset = [ <a> , <b> ] )
<b> コラムとコラム <a> を大から小へとし、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> を <b> を軸にソートし、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
データフレーム <A> 内の未記入の値を削除を <B> にする	<B> = <A> . dropna ( )	<A> = <A> . dropna ( )
分割数を <B> 、ビンの名前を <A> リストとして、 <D> データフレームの <c> をビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	set_index pd . cut ( <D> [ <c> ] , <B> , label = <A> )
ビン数を <D> 、ビンのラベルを <E> として、データフレーム <B> の <c> 表属性をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	df = pd . cut ( <B> [ <c> ] , <D> , label = <E> )
<A> の表属性 <b> を四分位数ごとでビン分割する	pd . qcut ( <A> [ <b> ] , 4 )	qcut pd . qcut ( <A> [ <b> ] , 4 )
表データ <B> 中のそれぞれの列にある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> と <B> を縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> と <A> のどちらにも存在するデータでマージする	pd . merge ( <B> , <A> , how = 'outer' )	pd . merge ( <B> , <A> , how = 'outer' )
表データ <A> のコラム <b> とコラム <c> ごとに <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
データフレーム <B> を <a> という名前にしてエクセル形式で保存する	<B> . to_excel ( <a> )	<E> . to_excel ( <a> )
<A> 中の <b> に重複が存在するのか表示してみる	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
そのとき、エラー処理は <A> とする	@option errors = <A>	markeredgewidth = <A> )
<A> 内の重複しているデータ	<A> [ <A> . duplicated ( ) ]	<C> [ <A> . duplicated ( ) ]
表 <A> の <b> を落とし、インプレースする	<A> . drop ( <b> , axis = 1 , inplace = True )	drop <A> . drop ( <b> , axis = 1 , inplace = True )
<B> ( データフレーム ) の <c> と <d> 列を大きい順にし、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<D> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
データフレーム <A> で重複している行数を確認する	<A> . duplicated ( ) . sum ( )	plt . duplicated ( <A> ) . sum ( )
分割数を <C> 、ビンのラベルをリスト <D> として、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	sheet_name pd . cut ( <A> [ <b> ] , <C> , label = <D> )
<A> の欠損を <A> の平均値で埋め、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	<B> = <A> . fillna ( <A> . mean ( ) )
表属性 <b> と <a> に重複があるか見る	df . duplicated ( subset = [ <b> , <a> ] )	<B> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> の <a> についての中央値を取得する	<B> [ <a> ] . median ( )	'greenyellow' <B> [ <a> ] . median ( )
表 <A> を位置でソートし、 <B> に代入する	<B> = <A> . sort_index ( )	step <B> = <A> . sort_index ( )
一番左の列を位置に指定して、 <b> をデータフレームに格納し、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	loc = pd . read_csv ( <b> , index_col = 0 )
ビン数を <A> 、ビンの名前をインデックスとして、表データ <C> のカラム <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	set_index = pd . cut ( <C> [ <b> ] , <A> , label = False )
<A> と <B> 表のどちらにも存在するデータでマージする	pd . merge ( <A> , <B> , how = 'outer' )	pd . merge ( <A> , <B> , how = 'outer' )
データフレーム <B> のコラム <c> の名前を <d> に、 <e> コラムの名前を <f> にリネームし、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<E> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
表 <B> の <a> の曜日の数値型	<B> [ <a> ] . dt . dayofweek	<B> [ <a> ] . dt . dayofweek
表データ <A> 内の重複する行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	x <A> . drop_duplicates ( inplace = True )
表データ <A> 内のカラム <b> に重複があるか	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<B> ( データフレーム ) の <a> についてダミー変数をつくる	pd . get_dummies ( <B> [ <a> ] )	) pd . get_dummies ( <B> [ <a> ] )
データフレーム <B> 全体を <a> 表属性の値に沿ってソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	plt . sort_values ( <B> , <a> , inplace = True )
<B> ( データフレーム ) の <a> カラムをソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表データ <B> の列 <a> を抽出する	<B> [ <a> ]	== <B> [ <a> ] ]
表 <A> のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	pd . get_dummies ( <A> )
表データ <B> の <c> 行目を削除を <A> にする	<A> = <B> . drop ( <c> )	drop <A> = <B> . drop ( <c> )
<C> ( データフレーム ) の表属性 <b> と <a> を値が大きい順にソートを <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<F> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> を列 <a> の値を元に昇順で並び替えて、再代入する	<B> = <B> . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
表 <A> の <b> と <c> を逆順にソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> の <b> コラムと <c> コラムを削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> . drop ( [ <b> , <c> ] , axis = 1 )
<B> の中に存在する <a> を欠損として、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
先頭の列を位置として、 <a> から読み込み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
表データ <B> の中の列それぞれに存在する <a> の個数を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 内の列にある <b> の個数の合計を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
表 <B> の NaN を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
<b> と <c> を降順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )
分割数を <C> として、表 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	pd . cut ( <A> [ <b> ] , <C> )
表 <B> 内の欠損値を削除して、 <A> にする	<A> = <B> . dropna ( )	<B> = <B> . dropna ( )
データフレーム <A> 内にある <b> を欠損値に置き換えて、置き換える	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
位置と <a> をキーとして表データ <C> と <B> を結合し、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	<C> = pd . merge ( <B> , <C> , left_index = True , right_on = <a> )
分割数を <C> として、 <A> 表の <b> を要素数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	<D> = pd . qcut ( <C> [ <b> ] , <A> )
表 <A> 内のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	) pd . get_dummies ( <A> )
フォーマットを指定して、表 <B> の <a> コラムを datetime 型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	format pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )
表 <B> 全体を表属性 <c> の値を元に昇順でソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
位置と <d> 列をキーとして <B> データフレームと <C> データフレームを一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	df = pd . merge ( <C> , <B> , left_index = True , right_on = <d> )
データフレーム <B> 全体を <a> を軸にソートを <C> とする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
表データ <B> の中にある <a> を欠損値に置き換えて、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	<F> = <B> . replace ( <a> , np . nan )
<B> 内のそれぞれのカラムにある <a> の個数を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表 <B> 中のそれぞれのカラムにある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> 内の <c> を未入力の値に置換し、未入力の値が存在する行をドロップして、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
コラム <b> を項目名としてデータを結合して、 <A> とする	<A> = pd . merge ( df1 , df2 , on = <b> )	<B> = pd . merge ( df1 , df2 , on = <b> )
<A> を <b> コラムに沿ってソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表 <B> 全体を <c> の値を元に昇順でソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
とりあえず <A> の内容を	<A> . head ( )	head <A> . head ( )
列 <d> を項目名として、 <B> と <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	df = pd . merge ( <C> , <B> , on = <d> )
データフレーム <B> の <a> 表属性をインデックスとして、 <C> に代入する	<C> = <B> . set_index ( <a> )	@option <C> = <B> . set_index ( <a> )
表 <B> 内の列に存在する <a> の個数の合計を見る	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> 内のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> 内の <b> に重複はあるのか	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
<a> 区切りで <b> から表を読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
表 <A> 中の重複している行を落として、 <A> にする	<A> = <A> . drop_duplicates ( )	@option <A> = <A> . drop_duplicates ( )
エクセルファイル <a> をデータフレームとして読み込み、 <B> に代入する	<B> = pd . read_excel ( <a> )	<E> = pd . read_excel ( <a> )
データフレーム <A> 内の未入力の値を <A> の平均値で埋め、 <B> に代入する	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <B> の全ての列で重複している行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	@option <A> = <B> . drop_duplicates ( )
<C> 内の <b> と <a> に重複はあるかどうか表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
グラフのサイズを <a> x6 に指定する	plt . figure ( figsize = ( <a> , 6 ) )	plt . figure ( figsize = ( <a> , 6 ) )
表データとしてファイル名 <b> をカンマ区切りで読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
表データ <A> の <b> と <c> ごとに <d> 列の値の合計値	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
表データ <B> 中の <c> を NaN に置換し、 NaN が存在する行をドロップして、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<B> = <B> . replace ( <c> , np . nan ) . dropna ( )
表データ <A> の NaN の合計を確認する	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
<A> 中の NaN を直前の行の値で埋め、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	<A> = <A> . fillna ( method = 'ffill' )
表データ <A> の <b> とカラム <c> ごとに <d> の値の和を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
<A> ( データフレーム ) の <b> と <c> を大きい順にして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <A> の中に存在する <b> を欠損に置換し、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	@option <A> = <A> . replace ( <b> , np . nan )
<A> の先頭の 5 行	<A> . head ( )	: <A> . head ( )
表データ <B> 中の欠損値を <A> として、 <B> にする	<B> = <B> . fillna ( <A> )	@option <B> = <B> . fillna ( <A> )
<a> 番目の列をインデックスにして、 <b> からデータフレームとを読み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<F> = pd . read_csv ( <b> , index_col = <a> )
重複した行を削除して、 <A> とする	<A> = df . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> の <b> と <c> を値が大きい順にソートし、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<E> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<b> とコラム <a> を値が大きい順にし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> 中の表属性 <b> に重複がある行を消す	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
表 <A> の <d> について、カラム <b> を位置、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<E> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<B> と表データ <C> を横方向に結合して、 <A> にする	<A> = pd . merge ( <B> , <C> )	<D> = pd . merge ( <C> , <B> )
<B> の <c> を中央値でビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 2 )	df = pd . qcut ( <B> [ <c> ] , 2 )
表データ <B> 中の欠損値を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	@option <A> = <B> . fillna ( <C> )
表データ <A> 内の <b> に重複がある行を削除を <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	df = <A> . drop_duplicates ( subset = <b> )
分割数を <B> 、ビンの名前を <A> として、 <D> の <c> カラムをビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	set_index pd . cut ( <D> [ <c> ] , <B> , label = <A> )
データフレーム <A> の <c> の年を表示し、  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . year	<A> [ <b> ] = <A> [ <c> ] . dt . year
表 <A> の <b> 行目をドロップし、置き換える	<A> = <A> . drop ( <b> )	@option <b> = <A> . drop ( <b> )
表 <E> のカラム <d> 、 <c> 、 <b> 、 <a>	<E> [ [ <d> , <c> , <b> , <a> ] ]	[ <E> [ [ <d> , <c> , <b> , <a> ] ]
先頭の列をインデックスとして、 <a> ファイルを読んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
<A> 内の重複する行を消して、 <A> とする	<A> = <A> . drop_duplicates ( )	<A> = <A> . drop_duplicates ( )
表 <A> の <b> ごとに <c> 列の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <B> 中の <c> を未記入の値に置換し、未記入の値が存在する行を落として、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<B> = <B> . replace ( <c> , np . nan ) . dropna ( )
データフレーム <B> 全体を <a> コラムの値に沿ってソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> の <b> と <c> の相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
位置と <a> を項目名として <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<c> 区切りで表データとして <b> を読み込み、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <B> 中の <a> 表属性に重複がある行を落として、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	df . drop_duplicates ( subset = <a> , inplace = True )
表 <A> の下 <b> 行	<A> . tail ( <b> )	x <A> [ <b> ] . tail ( )
<A> の行名を <b> から <c> に変更し、 <A> に代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( index = { <b> : <c> } )
表データ <A> の <c> 表属性の秒を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . second	<A> [ <b> ] = <A> [ <c> ] . dt . second
表データ <A> 内の列にある <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <b> ] ) . sum ( )
表データ <A> の <b> を並び替え、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
データフレーム <D> のコラム <c> とコラム <b> ごとにコラム <a> の値の和	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	<A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( )
データフレーム <A> の位置をリセットして、 <B> とする	<B> = <A> . reset_index ( )	step <B> = <A> . reset_index ( )
表データ <A> の内容を確認を調べる	<A> . head ( )	head <A> . head ( )
表 <C> の <b> をインデックス、 <a> 列を列としたピボットテーブルを作成し、 <D> にする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<E> = <C> . pivot_table ( index = <b> , columns = <a> )
表データ <B> と表 <A> のどちらにも存在するデータでマージし、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	df = pd . merge ( <B> , <A> , how = 'outer' )
表 <A> から <b> という CSV ファイルを書き出す	<A> . to_csv ( <b> )	to_csv <A> . to_csv ( <b> )
表データ <B> のインデックスを振り直して、 <A> とする	<A> = <B> . reset_index ( )	<A> = <B> . reset_index ( )
<B> と表 <A> を一つにまとめて、 <C> にする	<C> = pd . merge ( <B> , <A> )	<C> = pd . merge ( <B> , <A> )
CSV ファイル <b> を <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) から表を読み込み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	pd = pd . read_csv ( <a> , sep = ',' )
表を <a> からタブ区切りで読んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = '\t' )	value_counts = pd . read_csv ( <a> , sep = '\t' )
表 <B> の <a> をインデックスに設定し、置き換える	<B> = <B> . set_index ( <a> )	df = <B> . set_index ( <a> )
<A> の表属性 <b> と <c> を値が大きい順にソートし、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	df . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
フォーマットを指定して、 <B> の <a> を日付型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	format pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )
<A> の列の名前を <b> から <c> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	<A> = <A> . rename ( columns = { <b> : <c> } )
表データ <A> の <b> についての標準偏差	<A> [ <b> ] . std ( )	<b> <A> [ <b> ] . std ( )
表 <E> の <d> カラムの名前を <c> に、カラム <b> の名前を <a> に変更して、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<C> ( データフレーム ) の <b> と <a> を値が大きい順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の重複している行を削除し、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表 <C> 内の <b> と <a> に重複はあるのかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<A> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> のコラム <b> に重複があるか確認する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
表 <B> と表 <A> を縦向きに結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
表 <B> 内のそれぞれの列に存在する <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <D> の <c> コラムと <b> と <a> コラムについて関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
<C> の列名を <b> から <a> に変更して、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
データフレームとして <c> 区切りで <b> を読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	sep <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <A> 全体を <b> を元に昇順でソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表 <A> 内の <b> に重複はあるかどうかチェック	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<A> ( データフレーム ) の表属性 <b> を値が小さい順に並び替え、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <B> から <a> という名前でエクセルファイルにする	<B> . to_excel ( <a> )	<B> . to_excel ( <a> )
先頭の列を位置にして、 <a> をデータフレームに格納して、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	step <B> = pd . read_csv ( <a> , index_col = 0 )
表データ <B> 全体を表属性 <a> に沿ってソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<D> . sort_values ( <a> , inplace = True )
左側のデータのインデックスと右側のデータの表属性 <c> を項目名として、 <A> 表と表 <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <c> )
データフレーム <A> の重複行を確認する	<A> . duplicated ( )	<B> . duplicated ( )
データフレーム <C> の <b> をインデックス、 <a> を表属性としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	index . pivot_table ( index = <b> , columns = <a> )
表 <B> を <a> という名前にして CSV ファイルに書き込む	<B> . to_csv ( <a> )	<B> . to_csv ( <a> )
表 <A> の <b> と <c> を消し、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	df = <A> . drop ( [ <b> , <c> ] , axis = 1 )
<B> の表属性 <e> について、 <c> をインデックス、 <d> を表属性としたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
CSV ファイル <b> ( ファイル名 ) から <a> 区切りで表を読み込む	pd . read_csv ( <b> , sep = <a> )	read_csv pd . read_csv ( <b> , sep = <a> )
表データ <B> 中のそれぞれのカラムにある <a> の個数の合計を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
データフレーム <C> のカラム <b> が <a> 以下データ	<C> [ <C> [ <b> ] <= <a> ]	df [ <C> [ <b> ] <= <a> ]
<A> の未入力の値を含む行を消し、 <A> にする	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
表データ <B> を <a> の値でソートを <C> とする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
表データ <A> のコラム <b> の秒	<A> [ <b> ] . dt . second	<b> <A> [ <b> ] . dt . second
表データ <A> の中の欠損値を <A> 表データの平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表として <b> ファイル名をカンマ区切りで読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	@option sep = pd . read_csv ( <b> , sep = ',' )
<A> の <b> ごとに <c> の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> の列 <b> の名前を <c> に、 <d> 列の名前を <e> にリネームし、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	df . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
<B> 全体を <c> でソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	<B> = <B> . sort_values ( <c> )
<b> と表属性 <a> を大きい順にソートし、 <C> に代入する	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = df . sort_values ( [ <b> , <a> ] , ascending = False )
<E> の <d> の名前を <c> に、 <b> の名前を <a> にリネームして、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<a> 番目の列を位置として、 <b> からデータフレームとを読み込み、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<C> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <A> の中の重複している行を削除	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
y 軸のラベルを <a> に指定する	plt . ylabel ( <a> )	ylabel plt . ylabel ( <a> )
<B> ( データフレーム ) の <c> を小から大へとし、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表 <A> と表 <B> を縦向きにマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> の中の列にある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <E> の列 <d> の名前を <c> に、 <b> の名前を <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<A> 中の重複している行を落とし、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<a> という列をドロップして、 <B> にする	<B> = <B> . drop ( <a> , axis = 1 )	<E> = <B> . drop ( <a> , axis = 1 )
表データ <A> の中の <b> に重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
データフレーム <A> 全体をインデックスを元に昇順でソートを <A> にする	<A> = <A> . sort_index ( )	<B> <A> = <A> . sort_index ( )
<D> の <c> カラムが <b> か <a> のデータを抽出する	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	<B> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]
表データ <B> 全体を <a> コラムを元に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <B> 中の列にある <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<E> . isin ( [ <a> ] ) . sum ( )
表データ <A> と <B> を横方向にくっつける	pd . merge ( <A> , <B> )	<B> . pd ( <A> , <B> )
表データ <B> と <A> を縦方向でマージし、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	df = pd . concat ( [ <B> , <A> ] )
<a> というエクセルデータのシート全てからデータフレームを読み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	step = pd . read_excel ( <a> , sheet_name = None )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	<C> = <A> . drop_duplicates ( keep = False )
表 <B> の <a> を位置として設定して、再代入する	<B> = <B> . set_index ( <a> )	df = <B> . set_index ( <a> )
表データ <A> の欠損値を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
<a> を表データに格納し、 <B> とする	<B> = pd . read_csv ( <a> )	step <B> = pd . read_csv ( <a> )
<B> 内のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <C> 中の <b> と <a> に重複があるのかどうか表示してみる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
重複した最後の行を残して <A> ( データフレーム ) の中の重複した行を削除して、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	<E> . drop_duplicates ( keep = False , inplace = True )
表 <A> 内の NaN の数を調べる	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
データフレーム <B> 内の欠損を削除を <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
<B> と <C> を縦結合して、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
もし <A> 内の <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	<A> . duplicated ( subset = <b> ) :
データフレーム <A> 中の <b> 表属性に重複はあるのかどうかを確認する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
<b> というエクセルの <a> から読み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	sheet_name = pd . read_excel ( <b> , sheet_name = <a> )
エクセルファイル <a> からデータフレームを読む	pd . read_excel ( <a> )	pd . read_excel ( <a> , sheet_name = None )
<B> 全体を <a> 表属性の値を元に昇順でソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	plt . sort_values ( <B> , <a> , inplace = True )
表 <A> 内の NaN の数	<A> . isnull ( ) . sum ( )	plt . isnull ( <A> ) . sum ( )
<A> 内の <b> と <c> に重複があるかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> の <b> を昇順でソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
重複している最後の行を残して <A> ( データフレーム ) の重複している行を削除を <A> とする	<A> = <A> . drop_duplicates ( keep = False )	<E> = <A> . drop_duplicates ( keep = False )
列番号 <b> を位置に指定して、ファイル <a> をデータフレームとして読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <B> 内の <a> を未記入の値に置換し、未記入の値がある行をドロップして、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<E> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <C> の <b> とカラム <a> を大きい順にソートを <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
さらに、マーカーのエッジカラーをマゼンタとする	@option markeredgecolor = 'magenta'	markeredgewidth = 'blue'
<A> 内の重複要素がある行をドロップし、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
データフレーム <C> のカラム <b> ごとにカラム <a> の個数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
<a> コラムに重複がある行を drop する	df . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
<A> 中の列それぞれにある <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <C> 中の <b> と <a> に重複があるのかを見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <A> のカラム <b> とカラム <c> を逆順に並び替え、 <A> に代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> 内の <b> を欠損値に置換し、欠損値が存在する行を落として、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
<B> の <e> について、カラム <c> を位置、 <d> をカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
<B> と <A> を縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	pd . concat ( [ <B> , <A> ] )
表 <A> 内の欠損を <B> とし、 <A> にする	<A> = <A> . fillna ( <B> )	@option <A> = <A> . fillna ( <B> )
データフレーム <A> の <b> が <c> か <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	[ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]
<C> の <b> が <a> より少ないデータを抽出する	<C> [ <C> [ <b> ] <  <a> ]	< <C> [ <b> ] < <a> ]
表データ <B> 内の <a> に重複が存在するのか	<B> . duplicated ( subset = <a> )	<B> . duplicated ( subset = <a> )
データフレーム <A> の <b> カラムと <c> カラムを値が大きい順に並び替え、 <A> に代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
ビン数を <C> 、ビンのラベルを <D> リストとして、 <A> 表の <b> カラムを分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	set_index pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表データ <A> の欠損値を表 <A> の平均値で補って、 <B> に代入する	<B> = <A> . fillna ( <A> . mean ( ) )	<A> = <A> . fillna ( <A> . mean ( ) )
表データ <B> 全体を <a> を軸にソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	<C> = <B> . sort_values ( <a> )
ファイルパス <a> から表をカンマ区切りで読んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	= pd . read_csv ( <a> , sep = ',' )
<B> 内の <a> に重複がある行を削除する	<B> . drop_duplicates ( subset = <a> )	<E> . drop_duplicates ( subset = <a> )
エクセルファイル <a> を表に格納する	pd . read_excel ( <a> )	pd . read_excel ( <a> , sheet_name = None )
表 <C> の <a> 列の月を  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . month	<A> [ <b> ] = <C> [ <a> ] . dt . month
表 <A> に重複があるのか確認を確認する	<A> . duplicated ( )	<A> . duplicated ( )
<B> ( データフレーム ) の <a> 列を順番になるように並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	'greenyellow' . sort_values ( <a> , inplace = True )
<A> 内の <b> , <c> , <d> 行目の <e> , <c> 列目を取得する	<A> . iloc [ [ <b> , <c> , <d> ] , [ <e> , <c> ] ]	sns . iloc [ [ <b> , <c> , <d> ] , [ <e> , <c> ] ]
表 <D> のコラム <c> とコラム <b> と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
データフレーム <A> 中にある <b> を未入力の値とする	<A> . replace ( <b> , np . nan )	@option np . replace ( <b> , np . nan )
表データ <A> 全体を <b> を元にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
列名を指定せずに <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , header = None )	<B> = pd . read_csv ( <b> , header = None )
<a> から表データを読み、 <B> とする	<B> = pd . read_csv ( <a> )	label <B> = pd . read_csv ( <a> )
<A> 中の未記入の値を表データ <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	plt . fillna ( <A> <A> . mean ( ) )
表データ <A> 全体を <b> コラムの値を元にソートを <A> とする	<A> = <A> . sort_values ( <b> )	<B> = <A> . sort_values ( <b> )
表データ <B> の欠損値を表 <B> の平均値で補って、 <A> に代入する	<A> = <B> . fillna ( <B> . mean ( ) )	<A> = <B> . fillna ( <B> . mean ( ) )
表 <A> 内の未記入の値の合計を調べる	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
<b> という名前のエクセルデータの <c> からデータフレームを読んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> <A> = pd . read_excel ( <b> , sheet_name = <c> )
<A> 中の未入力の値を <B> に置き換え、置き換える	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( <B> )
表データ <B> 中の <a> を欠損に置換し、欠損が存在する行を落とし、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<A> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> のカラム <b> と <c> カラムの相関係数を調べる	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
<a> に重複があるのかを表示する	df . duplicated ( subset = <a> )	<D> . duplicated ( subset = <a> )
カラム <a> についてダミー変数を生成し、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	<E> = pd . get_dummies ( <B> [ <a> ] )
表 <A> 内の未入力の値を <B> に置き換え、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表 <D> の <a> 列について、 <c> をインデックス、 <b> を列としたピボットテーブルを作成し、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> の <c> カラムの曜日の数値型を確認し、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	@option <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
<a> を並び替えて、 <B> とする	<B> = df . sort_values ( <a> )	axis <B> = <B> . sort_values ( <a> )
<B> の <a> コラムをインデックスに設定し、再代入する	<B> = <B> . set_index ( <a> )	step <B> = <B> . set_index ( <a> )
<A> の <b> 位置の名前を <c> にリネームする	<A> . rename ( index = { <b> : <c> } )	<A> . rename ( index = { <b> : <c> } )
<A> の全ての列の重複する値がある行を削除し、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
一番左の列をインデックスにして、 <a> から読む	pd . read_csv ( <a> , index_col = 0 )	index_col = pd . read_csv ( <a> , index_col = 0 )
<b> というエクセルデータ <b> のシート全てを表に格納し、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	, <A> = pd . read_excel ( <b> , sheet_name = None )
表データ <A> 中の重複を表示してみる	<A> . duplicated ( )	<B> . duplicated ( )
表データ <B> と <C> を縦にくっつけて、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<A> の <b> をインデックス、コラム <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	df . pivot_table ( index = <b> , columns = <c> )
