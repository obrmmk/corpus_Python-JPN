表データ <C> の列 <b> と <a> 列を降順に並び替えて、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <B> の <c> コラムをインデックスとして、 <A> とする	<A> = <B> . set_index ( <c> )	 @option set_index = <B> . set_index ( <c> ) 
表 <C> のインデックス名を <b> から <a> にリネームし、置き換える	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> . rename ( index = { <b> : <a> } , inplace = True ) 
データフレーム <A> の <b> を欠損に置換し、欠損が存在する行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	 ) . replace ( <b> , np . nan ) . dropna ( ) 
表属性 <c> をキーとして、 <A> データフレームと <B> を結合する	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
表データ <A> の列名を調べる	<A> . columns	 columns <A> . columns 
<A> の <b> をドロップし、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
データフレーム <A> 中の NaN が存在する行を消し、 <B> にする	<B> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
データフレーム <D> の <c> カラムと <b> と <a> カラムについて関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pd . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
データフレーム <B> の先頭から <a> 行目までを見る	<B> [ : <a> ]	 <B> [ : <a> ] 
表データ <A> 中の重複している行を落として、 <B> にする	<B> = <A> . drop_duplicates ( )	 <F> = <A> . drop_duplicates ( ) 
<A> 中の <b> を欠損値に置換し、欠損値がある行を落として、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
<B> の <a> をインデックスとして設定して、インプレースする	<B> . set_index ( <a> , inplace = True )	 plt . set_index ( <B> , inplace = True ) 
表データ <A> の <b> についての最頻値	<A> [ <b> ] . mode ( )	 <b> <A> [ <b> ] . mode ( ) 
<A> 内の <b> を欠損値に置換し、欠損値が存在する行をドロップし、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <A> . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
<a> を項目名として、 <C> と <B> をマージし、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	 merge = pd . merge ( <C> , <B> , on = <a> ) 
データフレーム <A> 中の欠損を <B> に置換し、 <A> に代入する	<A> = <A> . fillna ( <B> )	 <A> = <A> . fillna ( <B> ) 
データフレーム <B> 中の <a> を欠損に置換し、欠損が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <C> の <b> 行から <a> 行までを見る	<C> [ <b> : <a> ]	 False [ <b> : <a> ] 
表 <C> の <b> カラムごとに <a> の数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
表データ <D> の <a> について、 <c> コラムを位置、 <b> コラムをコラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 end = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <C> の <b> と <a> コラムを落として、置き換える	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	 <A> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True ) 
データフレーム <B> 内の欠損値を <B> 表の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
列名を指定せずに <a> ファイルパスを読み込む	pd . read_csv ( <a> , header = None )	 pd . read_csv ( <a> , header = None ) 
ビン数を <A> 、ビンの名前を 0 始まりの連番として、 <C> の <b> コラムを分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 <E> = pd . cut ( <D> [ <b> ] , <A> , label = False ) 
表データ <B> に存在する <a> を欠損値とする	<B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan ) 
<A> 中に存在する <b> を欠損に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
表データ <A> の <b> ごとに <c> 列の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . mean ( ) 
<B> と <A> をマージして、 <C> とする	<C> = pd . merge ( <B> , <A> )	 <C> = pd . merge ( <B> , <A> ) 
ビン数を <D> 、ビンの名前を整数値として、表 <B> の <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
<A> の <c> 表属性の月を  <A> [ <b> ] に代入する	  <A> [ <b> ] = <A> [ <c> ] . dt . month	 [ <b> ] = <A> [ <c> ] . dt . month 
<C> の <b> と <a> を消して、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 plt . drop ( <C> , axis = 1 , inplace = True ) 
<A> の <b> 表属性と <c> と表属性 <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	 . plt ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] ) 
データフレーム <B> の <a> を消し、 <C> にする	<C> = <B> . drop ( <a> , axis = 1 )	 @option <C> = <B> . drop ( <a> , axis = 1 ) 
表データ <B> の <a> 表属性を日付型に変換する	pd . to_datetime ( <B> [ <a> ] )	 if <B> [ <a> ] . to_datetime ( ) 
表 <A> のカラム <b> を消して、インプレースする	<A> . drop ( <b> , axis = 1 , inplace = True )	 plt . drop ( <A> , axis = 1 , inplace = True ) 
表データ <B> の列 <a> についての箱ひげ図をプロットする	plt . boxplot ( <B> [ <a> ] )	 . plt . boxplot ( <B> [ <a> ] ) 
<A> の欠損を含む行を落とし、 <A> にする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
表データ <A> 中の <b> を欠損に置換し、欠損がある行をドロップし、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <b> <A> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
<B> の <a> 表属性についての箱ひげ図をプロットする	plt . boxplot ( <B> [ <a> ] )	 . plt . boxplot ( <B> [ <a> ] ) 
表データ <A> の列名を <b> から <c> に変更して、インプレースする	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <A> . rename ( columns = { <b> : <c> } , inplace = True ) 
<B> の <a> 列の秒	<B> [ <a> ] . dt . second	 <a> [ <B> [ <a> ] . dt . second 
表データ <C> の <b> コラムと <a> を降順に並び替え、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	 plt . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True ) 
データフレーム <A> に存在する <b> を NaN に置換して、再代入する	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
データフレーム <A> の <b> コラムと <c> コラムを降順にソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
表 <A> の <c> コラムの年を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . year	 [ <b> ] = <A> [ <c> ] . dt . year 
表 <B> 中の <a> を欠損に置換し、欠損が存在する行を削除する	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
表データ <C> の列名を <b> から <a> にリネームする	<C> . rename ( columns = { <b> : <a> } )	 sns . rename ( columns = { <b> : <a> } ) 
表データ <B> 中にある <a> を欠損に置き換えて、再代入する	<B> = <B> . replace ( <a> , np . nan )	 np . replace ( <a> , np . nan , inplace = True ) 
ビン数を <C> 、ビンの名前をインデックスとして、 <A> 表データの <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 sns pd pd . cut ( <A> [ <b> ] , <C> , label = False ) 
<A> 中の欠損値を落とし、 <B> とする	<B> = <A> . dropna ( )	 = <A> . dropna ( ) 
<A> の表属性 <b> の曜日の数値型を表示する	<A> [ <b> ] . dt . dayofweek	 <A> [ <b> ] . dt . dayofweek 
データフレーム <A> 内の欠損値がある行を消して、インプレースする	<A> . dropna ( inplace = True )	 plt . dropna ( inplace = True ) 
表データ <C> の <b> ごとに <a> の平均値を計算する	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . mean ( ) 
データフレーム <A> 内の <b> を欠損値に置換し、欠損値がある行を削除して、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 = <A> . replace ( <b> , np . nan ) . dropna ( ) 
データフレーム <A> の <b> をダミー変数化する	pd . get_dummies ( <A> [ <b> ] )	 get_dummies pd . get_dummies ( <A> [ <b> ] ) 
境界値を <D> として、表データ <B> の <c> を分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	 <A> = pd . cut ( <B> [ <c> ] , <D> ) 
表 <B> の <a> 列をグループ化して、値ごとのデータ数	<B> . groupby ( <a> ) . size ( )	 <C> . groupby ( <B> [ <a> ] ) . size ( ) 
データフレーム <B> の <a> を調べる	<B> [ <a> ]	 <C> [ <B> <a> ] 
表 <A> 内にある <b> を欠損として、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
データフレーム <B> の <e> カラムについて、カラム <c> をインデックス、カラム <d> をカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <F> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
分割数を <B> 、ビンのラベルを <A> リストとして、 <D> の <c> を分割して、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
ビン数を <A> 、ビンの名前を整数値として、 <C> 表データのコラム <b> をビン分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
データフレーム <A> 中のカテゴリ変数をダミー変数に変換して、 <A> にする	<A> = pd . get_dummies ( <A> )	 <A> = pd . get_dummies ( <A> ) 
ファイル名 <a> からデータフレームをタブ区切りで読む	pd . read_csv ( <a> , sep = '\t' )	 pd . read_csv ( <a> , sep = '\t' ) 
表データを <b> 区切りでファイル名 <a> から読む	pd . read_csv ( <a> , sep = <b> )	 <A> . pd ( <b> , sep = <a> ) 
表データ <B> 内の <a> を欠損に置換し、欠損が存在する行を消して、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 replace . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
インデックスと <c> をキーとして <A> 表と表 <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 merge pd . merge ( <A> , <B> , left_index = True , right_on = <c> ) 
<A> 中の NaN を落とし、置き換える	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
表 <A> 中の欠損を削除して、 <B> に代入する	<B> = <A> . dropna ( )	 plt . dropna ( inplace = True ) 
表 <B> の <a> を並び替え、 <B> とする	<B> = <B> . sort_values ( <a> )	 <F> = <B> . sort_values ( <a> ) 
左外部結合で <B> と <A> 表をマージし、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	 <F> = pd . merge ( <B> , <A> , how = 'left' ) 
分割数を <A> 、ビンの名前を 0 始まりの連番として、 <C> の <b> カラムを分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 pd . cut ( <C> [ <b> ] , <A> , label = False ) 
データフレーム <A> の欠損が存在する行をドロップし、 <A> とする	<A> = <A> . dropna ( )	 <F> = <A> . dropna ( ) 
<D> の <a> について、 <c> をインデックス、表属性 <b> を表属性としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <B> 中の <a> カラムに重複がある行を消して、 <C> にする	<C> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
表 <A> 中の NaN の数を見る	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
<A> のコラム <b> の名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	 'display.max_columns' = <A> . rename ( columns = { <b> : <c> } ) 
<B> の NaN を <A> として、インプレースする	<B> . fillna ( <A> , inplace = True )	 <B> . fillna ( <A> , inplace = True ) 
表 <A> の行の名前を <B> とする	<B> = <A> . index	 index = <A> . index 
データフレーム <D> の <c> が <b> か <a> のデータ	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	 <E> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ] 
データフレーム <A> の <b> 行	<A> . head ( <b> )	 head <A> . head ( <b> ) 
コラム <a> をキーとして、 <C> と <B> をマージし、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	 <E> = pd . merge ( <C> , <B> , on = <a> ) 
データフレーム <C> の <b> の名前を <a> にリネームする	<C> . rename ( index = { <b> : <a> } )	 plt . rename ( index = { <b> : <a> } ) 
データフレーム <B> の <a> 列を昇順に並び替え、 <C> とする	<C> = <B> . sort_values ( <a> )	 <F> = <B> . sort_values ( <a> ) 
データフレーム <A> に重複があるとき	if <A> . duplicated ( ) :	 pd . duplicated ( subset = <A> ) : 
表 <C> の <a> コラムの年を見て、  <C> [ <b> ] に代入する	  <C> [ <b> ] = <C> [ <a> ] . dt . year	 <A> [ <b> ] = <C> [ <a> ] . dt . year 
表 <B> 中の <a> に重複があるか	<B> . duplicated ( subset = <a> )	 plt . duplicated ( subset = <a> ) 
データフレーム <A> の列 <b> と <c> 列と列 <d> について関係性を一度に表示する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
表 <B> の <a> の分	<B> [ <a> ] . dt . minute	 x <B> [ <a> ] . dt . minute 
表 <B> 中の欠損を <C> に置き換え、 <A> とする	<A> = <B> . fillna ( <C> )	 <A> = <B> . fillna ( <C> ) 
表データ <B> のカラム <c> を位置、 <d> をカラムとしたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> ) 
表データ <A> のリセットして、元のインデックスを削除する	<A> . reset_index ( drop = True )	 index_col . reset_index ( drop = True ) 
表 <C> のカラム <b> と <a>	<C> [ [ <b> , <a> ] ]	 <A> [ [ <b> , <a> ] ] 
表データ <A> 内の欠損を含む行を落として、インプレースする	<A> . dropna ( inplace = True )	 <C> = <A> . dropna ( ) 
<B> 内の NaN を <A> に置き換え、置き換える	<B> . fillna ( <A> , inplace = True )	 <C> . fillna ( <A> , inplace = True ) 
エンコーディングをシフト JIS として、ファイルパス <b> を読み込み、 <A> に代入する	<A> = pd . read_csv ( <b> , encoding = 'shift_jis' )	 <A> = pd . read_csv ( <b> , encoding = 'shift_jis' ) 
データフレーム <B> のカラム <a> の出現回数を見る	<B> [ <a> ] . value_counts ( )	 <B> [ <a> ] . value_counts ( ) 
表データ <C> の <b> と <a> を降順に並び替え、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	 plt . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True ) 
フォーマットを指定して、データフレーム <B> の <a> を日付型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' ) 
データフレーム <B> 中の重複している行を落として、 <A> とする	<A> = <B> . drop_duplicates ( )	 'gray' <A> = <B> . drop_duplicates ( ) 
全結合で <B> と <A> データフレームを一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	 <C> = pd . merge ( <B> , <A> , how = 'outer' ) 
<C> の <b> の名前を <a> にリネームし、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
フォーマットを指定して、 <A> 表の <b> を日付型に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' ) 
表データ <A> と表 <B> を縦方向で結合する	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
分割数を <B> 、ビンの名前を <A> リストとして、表データ <D> の表属性 <c> を分割し、 <E> にする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
ビン数を <A> 、ビンのラベルを 0 始まりの連番として、表 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 pd . cut ( <C> [ <b> ] , <A> , label = False ) 
表 <B> の <c> カラムをソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	 @option <B> = <B> . sort_values ( <c> ) 
表データ <A> の <b> の名前を <c> に、表属性 <d> の名前を <e> に変更して、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
x 軸に <a> ラベルをつける	plt . xlabel ( <a> )	 <a> plt . xlabel ( <a> ) 
表 <D> の列 <c> と列 <b> ごとに <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
そのとき、マーカーの形をバツ印とする	@option marker = 'x'	 @option marker = 'x' 
表 <C> 内の <b> と表属性 <a> に重複があるとき	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	 duplicated . duplicated ( subset = [ <b> , <a> ] ) : 
<E> の <d> の名前を <c> に、 <b> の名前を <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <A> の行数と列数を表示する	<A> . shape	 <B> . shape 
ビン数を <C> 、ビンの名前を 0 始まりの連番として、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
左外部結合で <B> と <A> 表をマージする	pd . merge ( <B> , <A> , how = 'left' )	 pd . merge ( <B> , <A> , how = 'left' ) 
ファイル名 <a> から表データをカンマ区切りで読み込む	pd . read_csv ( <a> , sep = ',' )	 pd . read_csv ( <a> , sep = ',' ) 
表データ <C> の <b> と <a> の相関を調べる	<C> [ [ <b> , <a> ] ] . corr ( )	 False [ [ <b> , <a> ] ] . corr ( ) 
<B> の <c> を位置、 <d> をコラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> ) 
表 <B> の <a> を NaN に置換し、 NaN が存在する行をドロップする	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
表 <C> の <b> の名前を <a> に変更して、 <D> にする	<D> = <C> . rename ( index = { <b> : <a> } )	 <F> = <C> . rename ( index = { <b> : <a> } ) 
データフレーム <B> のインデックス <c> の名前を <d> に変更して、 <A> にする	<A> = <B> . rename ( index = { <c> : <d> } )	 <A> = <B> . rename ( index = { <c> : <d> } ) 
表データ <B> 内にある <a> を欠損として、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
<A> 中に存在する <b> を欠損に置換して、置き換える	<A> = <A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan , inplace = True ) 
データフレーム <D> の <c> と <b> コラムとコラム <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	 plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] ) 
表 <B> 内の NaN を <A> に置換する	<B> . fillna ( <A> )	 isnull . fillna ( <B> ) . sum ( ) 
表データ <A> 中のコラム <b> に重複がある行を落として、置き換える	<A> = <A> . drop_duplicates ( subset = <b> )	 <A> = <A> . drop_duplicates ( subset = <b> ) 
<C> の表属性 <b> と <a> の相関	<C> [ [ <b> , <a> ] ] . corr ( )	 markeredgewidth [ [ <b> , <a> ] ] . corr ( ) 
<B> の列 <a> を消して、 <C> とする	<C> = <B> . drop ( <a> , axis = 1 )	 @option <C> = <B> . drop ( <a> , axis = 1 ) 
表 <B> の列の名前を <c> から <d> に、 <e> から <f> に変更し、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
表データを <a> からタブ区切りで読み込む	pd . read_csv ( <a> , sep = '\t' )	 pd . read_csv ( <a> , sep = '\t' ) 
<D> の <a> について、列 <c> をインデックス、 <b> 列を列としたピボットテーブルを作成し、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表データ <A> 内の重複している行を落として、 <A> とする	<A> = <A> . drop_duplicates ( )	 @option <A> = <A> . drop_duplicates ( ) 
表 <A> の <b> カラムをグループ化して、値ごとのデータ数を算出する	<A> . groupby ( <b> ) . size ( )	 <B> . groupby ( <b> ) . size ( ) 
表データ <A> 中の欠損を直前の行の値で埋め、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	 method = <A> . fillna ( method = 'ffill' ) 
データフレーム <B> にある <a> を NaN に置換して、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
<D> の <c> と <b> ごとに <a> の値の合計を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 plt . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <C> の <b> ごとに <a> 列の数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
表 <C> の位置 <b> の名前を <a> にリネームして、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
表 <C> 内の <b> と表属性 <a> に重複があるかどうか	<C> . duplicated ( subset = [ <b> , <a> ] )	 sns . duplicated ( subset = [ <b> , <a> ] ) 
データフレーム <A> の <b> を欠損に置換し、欠損が存在する行を消して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 plt . replace ( <A> , np . nan ) . dropna ( inplace = True ) 
表データ <A> の欠損を表データ <A> の平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
<D> の <c> 列と <b> ごとに <a> 列の値の合計を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表 <D> の表属性 <a> について、表属性 <c> をインデックス、 <b> を表属性としたピボットテーブルを作成し、 <E> に代入する	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表データ <A> の NaN を <B> として、 <A> にする	<A> = <A> . fillna ( <B> )	 dropna = <A> . fillna ( ) 
データフレーム <E> の列の名前を <d> から <c> に、 <b> から <a> にリネームし、 <F> に代入する	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <B> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<B> の <a> コラムを昇順に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	 plt . sort_values ( <B> , inplace = True ) 
表データ <C> の <b> の名前を <a> に変更して、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 <A> . rename ( columns = { <b> : <a> } , inplace = True ) 
データフレーム <A> の <b> を NaN に置換し、 NaN がある行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	 <A> . replace ( <b> , np . nan ) . dropna ( ) 
表 <A> の列 <b> についての箱ひげ図を表示する	plt . boxplot ( <A> [ <b> ] )	 boxplot plt . boxplot ( <A> [ <b> ] ) 
<D> の <c> 表属性と <b> ごとに <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
データフレーム <A> の表属性 <b> ごとに <c> 表属性の数を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . count ( ) 
位置と <a> をキーとして <C> 表と表 <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
<A> 中の <b> を欠損に置換し、欠損が存在する行を落として、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 np . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
ビンを <b> として、 <A> のヒストグラムを描写する	plt . hist ( <A> , bins = <b> )	 pd . hist ( <A> , bins = <b> ) 
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフを描画する	plt . barh ( <A> , <B> , align = 'center' )	 sns . bar ( <A> , <B> , align = 'center' ) 
表 <A> の <b> が <c> または <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	 <B> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ] 
グラフ幅を <a> として、 <C> 軸を <C> とした <B> の棒グラフを表示する	plt . bar ( <C> , <B> , width = <a> )	 sns . bar ( <C> , <B> , width = <a> ) 
<A> の <b> とコラム <c> を削除して、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	 <A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True ) 
軸ラベル <a> を x 軸につける	plt . xlabel ( <a> )	 <a> plt . xlabel ( <a> ) 
<B> 中の <a> を欠損に置換し、欠損が存在する行を落とし、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
分割数を <B> 、ビンの名前を <A> として、 <D> 表データの <c> 列を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
データフレーム <B> の列名を <c> から <d> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	 <A> = <B> . rename ( columns = { <c> : <d> } ) 
表 <B> のコラム <a> の秒を見る	<B> [ <a> ] . dt . second	 <a> [ <B> [ <a> ] . dt . second 
表データ <A> の <b> のデータの種類	<A> [ <b> ] . unique ( )	 <b> <A> [ <b> ] . unique ( ) 
表データ <A> の <d> について、カラム <b> をインデックス、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 <A> . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
<A> の <b> の出現回数を表示する	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
データフレーム <B> の <a> 列についてのヒストグラムをプロットする	plt . hist ( <B> [ <a> ] )	 bins plt . hist ( <B> [ <a> ] ) 
表データ <C> の <b> の名前を <a> にリネームし、置き換える	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
<B> のカラム <a> をインデックスとして、置き換える	<B> = <B> . set_index ( <a> )	 <A> . set_index ( <a> , inplace = True ) 
表データ <A> の列の名前を <b> から <c> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
データフレーム <A> の元のインデックスをリセットして、 <A> とする	<A> = <A> . reset_index ( drop = True )	 reset_index = <A> . reset_index ( drop = True ) 
表データ <A> の <c> コラムの日にちを確認し、  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . day	 <b> <A> [ <b> ] = <A> [ <c> ] . dt . day 
<B> の <a> を消して、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
<C> の <b> カラムと <a> カラムをドロップし、置き換える	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	 <A> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True ) 
表データ <D> の列 <c> が <b> もしくは <a> のデータを取得する	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	 <E> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ] 
表 <B> の列の名前を <c> から <d> に変更して、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> } )	 sep <A> = <B> . rename ( columns = { <c> : <d> } ) 
表 <A> の <b> コラムの名前を <c> に、 <d> の名前を <e> にリネームして、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	 plt . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True ) 
<A> の <b> と <c> コラムごとに <d> の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
データフレーム <D> の <a> について、 <c> をインデックス、 <b> を列としたピボットテーブルを作成し、 <E> に代入する	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> の <b> 列と列 <c> を降順に並び替え、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	 <A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True ) 
データフレーム <A> の <b> の分を見る	<A> [ <b> ] . dt . minute	 <b> <A> [ <b> ] . dt . minute 
表 <C> の <b> と <a> を消して、 <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 sns = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
表データ <A> のカラム名を <b> から <c> に、 <d> から <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 columns = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
表データ <D> のコラム <c> と <b> ごとに <a> の値の合計を算出する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表 <A> の <b> コラムが <c> のデータ	<A> [ <A> [ <b> ] == <c> ]	 <A> [ <A> [ <b> ] == <c> ] 
位置と <d> カラムを項目名として <B> 表と表 <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
そのとき、改行の代わりに <A> を用いることにする	@option end = <A>	 @option end = <A> 
表データ <B> と表 <A> を縦方向で結合する	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
<B> 中の <c> を欠損値に置換し、欠損値がある行をドロップし、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 = <B> . replace ( <c> , np . nan ) . dropna ( ) 
エクセルファイル <a> の全てのシートを読み込む	pd . read_excel ( <a> , sheet_name = None )	 read_excel pd . read_excel ( <a> , sheet_name = None ) 
<A> の <b> 表属性と <c> 表属性を消し、インプレースする	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	 pd . drop ( [ <A> , <b> , <c> ] , axis = 1 , inplace = True ) 
そこで、マーカーの色を黄色とする	@option markerfacecolor = 'yellow'	 dropna = 'yellow' 
表データ <A> の <b> ごとに <c> の数を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . count ( ) 
表データ <D> のコラム <c> と <b> コラムごとに <a> コラムの値の合計を計算する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <E> の <d> の名前を <c> に、列 <b> の名前を <a> にリネームし、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True ) 
表 <D> の <c> と <b> 表属性と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pd . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
データフレーム <A> 内の <b> に重複がある行を削除し、 <A> に代入する	<A> = <A> . drop_duplicates ( subset = <b> )	 'gray' = <A> . drop_duplicates ( subset = <b> ) 
表 <A> の <b> コラムの名前を <c> に、 <d> の名前を <e> にリネームして、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
表 <A> の <b> 列をドロップし、 <A> にする	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
<E> 内の <d> , <c> , <b> 行目の <a> , <c> 列目を得る	<E> . iloc [ [ <d> , <c> , <b> ] , [ <a> , <c> ] ]	 iloc [ <E> . iloc [ <d> , <c> , <b> ] , [ <a> , <c> ] ] 
データフレーム <A> のコラム <b> をダミー変数化して、 <A> とする	<A> = pd . get_dummies ( <A> [ <b> ] )	 <A> = pd . get_dummies ( <A> [ <b> ] ) 
表データ <B> と表 <C> を縦方向でマージし、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	 = pd . concat ( [ <B> , <C> ] ) 
ビン数を <C> 、ビンの名前を 0 始まりの連番として、表 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
データフレーム <A> のカラム <c> の分を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . minute	 [ <b> ] = <A> [ <c> ] . dt . minute 
<A> の中央値	<A> . median ( )	 2 . median ( ) 
表データ <B> の <a> を中央値で分割する	pd . qcut ( <B> [ <a> ] , 2 )	 pd . qcut ( <B> [ <a> ] , 2 ) 
<A> 中の <b> に重複がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 <F> = <A> . drop_duplicates ( subset = <b> ) 
区関の数を <b> として、 <A> のヒストグラムを描画する	plt . hist ( <A> , bins = <b> )	 pd . hist ( <A> , bins = <b> ) 
データフレーム <C> の <b> が <a> より少ないデータを抽出する	<C> [ <C> [ <b> ] <  <a> ]	 loc <C> [ <C> [ <b> ] < <a> ] 
データフレーム <B> 内のそれぞれのカラムにある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	 isnull . isin ( [ <a> ] ) . sum ( ) 
データフレーム <A> の <b> と <c> を削除して、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <C> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <A> の NaN を落とし、インプレースする	<A> . dropna ( inplace = True )	 <A> . dropna ( inplace = True ) 
データフレーム <A> のカラム <b> が <c> のデータを抽出する	<A> [ <A> [ <b> ] == <c> ]	 @option <A> [ <A> [ <b> ] == <c> ] 
とりあえず <A> の内容を確認する	<A> . head ( )	 head . head ( ) 
表データ <C> の列の名前を <b> から <a> にリネームし、インプレースする	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 <A> . rename ( columns = { <b> : <a> } , inplace = True ) 
文字コードを shift_jis として、ファイルパス <a> を読んで、 <B> とする	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )	 = pd . read_csv ( <a> , encoding = 'shift_jis' ) 
表 <B> 内の <a> に重複がある行を削除する	<B> . drop_duplicates ( subset = <a> )	 dropna . drop_duplicates ( subset = <a> ) 
分割数を <B> 、ビンの名前を <A> として、 <D> のカラム <c> をビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
表データ <B> の <a> についての最頻値を取得する	<B> [ <a> ] . mode ( )	 [ <B> [ <a> ] . mode ( ) 
表 <B> の欠損を落として、 <A> に代入する	<A> = <B> . dropna ( )	 <A> = <B> . dropna ( ) 
データフレーム <B> の <a> を四分位数ごとで分割して、 <C> とする	<C> = pd . qcut ( <B> [ <a> ] , 4 )	 <A> = pd . qcut ( <B> [ <a> ] , 4 ) 
<A> 中の欠損の合計	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
<C> のカラム <b> が <a> より多いデータ	<C> [ <C> [ <b> ] >  <a> ]	 <A> [ <C> [ <b> ] > <a> ] 
表 <A> 内の NaN がある行を削除し、インプレースする	<A> . dropna ( inplace = True )	 @option dropna . dropna ( inplace = True ) 
データフレーム <A> の行名を <B> とする	<B> = <A> . index	 index = <A> . index 
ビン数を <D> 、ビンのラベルを整数値として、 <B> 表の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 ] = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
<E> の <d> の名前を <c> に、 <b> の名前を <a> に変更し、 <E> にする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<A> 内の欠損を <A> 表データの平均値で埋め、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
データフレームを <a> から読み、 <B> とする	<B> = pd . read_csv ( <a> )	 = pd . read_csv ( <a> ) 
データフレーム <B> の <a> 列の曜日の数値型を調べる	<B> [ <a> ] . dt . dayofweek	 <a> [ <B> [ <a> ] . dt . dayofweek 
タブ区切りで <a> を読む	pd . read_csv ( <a> , sep = '\t' )	 '\t' pd . read_csv ( <a> , sep = '\t' ) 
表 <B> 内の <c> を欠損値に置換し、欠損値が存在する行をドロップして、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 dropna = <B> . replace ( <c> , np . nan ) . dropna ( ) 
分割数を <C> 、ビンの名前をインデックスとして、表 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 plt . pd ( <A> [ <b> ] , <C> , label = False ) 
<B> 内の <a> を欠損に置換し、欠損が存在する行を落として、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
y 軸に <a> を加える	plt . ylabel ( <a> )	 <a> plt . ylabel ( <a> ) 
表データ <A> の列 <b> の名前を <c> に変更して、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
表データ <A> の <b> コラムをインデックス、 <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	 <C> . pivot_table ( index = <b> , columns = <c> ) 
表データ <B> の <c> を四分位数ごとで分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	 <A> = pd . qcut ( <B> [ <c> ] , 4 ) 
表 <A> の <b> カラムと <c> をドロップし、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 @option drop = <A> [ <b> , <c> ] , axis = 1 ) 
<E> の列 <d> の名前を <c> に、 <b> の名前を <a> にリネームして、 <F> に代入する	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <B> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <B> の <a> の時間	<B> [ <a> ] . dt . hour	 <C> [ <a> ] . dt . hour 
表データ <B> の <a> 行から末尾まで	<B> [ <a> : ]	 <B> [ <a> : ] 
データフレーム <C> のカラム <b> と <a> を降順にソートして、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
<A> の <b> カラムをドロップする	<A> . drop ( <b> , axis = 1 )	 plt . drop ( <A> , axis = 1 ) 
境界値をリスト <A> として、表 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
<c> 区切りで <b> ファイル名から表データを読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
表 <B> 内の <a> を欠損値に置換し、欠損値が存在する行をドロップする	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
<B> のカラム <a> を位置とし、インプレースする	<B> . set_index ( <a> , inplace = True )	 plt . set_index ( <a> , inplace = True ) 
<a> をキーとして、データフレーム <C> とデータフレーム <B> を一つにまとめて、 <D> に代入する	<D> = pd . merge ( <C> , <B> , on = <a> )	 merge = pd . merge ( <C> , <B> , on = <a> ) 
表データ <A> の行数と列数	<A> . shape	 shape . shape 
表 <B> の <a> 列についての分散	<B> [ <a> ] . var ( )	 [ <B> [ <a> ] . var ( ) 
<B> の <a> 表属性の月	<B> [ <a> ] . dt . month	 <A> [ <B> [ <a> ] . dt . month 
<B> 中の <a> を NaN に置換し、 NaN が存在する行を削除して、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
<B> 中の <c> を欠損に置換し、欠損が存在する行を落として、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 = <B> . replace ( <c> , np . nan ) . dropna ( ) 
データフレーム <B> の <c> コラムを昇順に並び替え、 <A> とする	<A> = <B> . sort_values ( <c> )	 <F> = <B> . sort_values ( <c> ) 
データフレーム <A> と表データ <B> を縦結合する	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
データフレーム <A> の最後の 5 行	<A> . tail ( )	 <A> . tail ( ) 
エクセルファイル <b> の <c> 番目のシートをデータフレームとして読み込み、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = <c> )	 <b> = pd . read_excel ( <b> , sheet_name = <c> ) 
<A> の <b> とコラム <c> を削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <B> に存在する <a> を欠損に置換し、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
表データ <A> の <b> と <c> コラムごとに <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
ビン数を <D> 、ビンの名前をリスト <E> として、 <B> データフレームの <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <A> [ <c> ] , <D> , label = <E> ) 
<A> の <b> 表属性と <c> と <d> について関係性を一気に描く	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
ビン数を <C> 、ビンのラベルをインデックスとして、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 sns pd pd . cut ( <A> [ <b> ] , <C> , label = False ) 
表データ <A> 中の欠損を直前の行の値で補い、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	 'ffill' = <A> . fillna ( method = 'ffill' ) 
左外部結合で <B> 表と表 <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	 <F> = pd . merge ( <B> , <C> , how = 'left' ) 
表 <C> の <b> 表属性の名前を <a> にリネームして、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	 <D> = <C> . rename ( columns = { <b> : <a> } ) 
<A> 中の欠損値を削除して、再代入する	<A> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
データフレーム <D> の <c> と <b> と <a> について関係性を一気に描写する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pairplot sns . pairplot ( <D> [ [ <c> , <b> , <b> , <a> ] ] ] ) 
表 <A> 内の <b> を欠損に置換し、欠損がある行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	 ) . replace ( <b> , np . nan ) . dropna ( ) 
表データ <C> の <b> の名前を <a> にリネームして、 <C> にする	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
<C> の <b> の名前を <a> にリネームして、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
もし <C> 中の <b> と <a> に重複があるならば	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	 <D> . duplicated ( subset = [ <b> , <a> ] ) : 
表 <A> の <b> を欠損値に置換し、欠損値が存在する行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	 ) . replace ( <b> , np . nan ) . dropna ( ) 
表 <A> の <b> カラムとカラム <c> を降順にソートし、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
表 <B> の <a> カラムに重複がある場合	if <B> . duplicated ( subset = <a> ) :	 if <B> . duplicated ( subset = <a> ) : 
データフレーム <B> の欠損値が存在する行を削除し、 <A> にする	<A> = <B> . dropna ( )	 dropna = <B> . dropna ( ) 
分割数を <D> 、ビンの名前を整数値として、データフレーム <B> の <c> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
表データ <B> の <a> カラムを並び替え、置き換える	<B> . sort_values ( <a> , inplace = True )	 <A> . sort_values ( <a> , inplace = True ) 
<A> の <b> のユニークな要素数	<A> [ <b> ] . nunique ( )	 <b> <A> [ <b> ] . nunique ( ) 
データフレーム <A> に存在する <b> を NaN に置換し、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
<A> 内の NaN を <A> の平均値で補い、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表 <B> 中の <a> 列に重複がある行を落として、 <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
表 <B> 中の NaN を <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
データフレーム <B> 中の NaN を <A> に置き換えて、 <C> とする	<C> = <B> . fillna ( <A> )	 <F> = <B> . fillna ( <A> ) 
データフレーム <B> 内の欠損値を <A> に置き換える	<B> . fillna ( <A> )	 <A> . isnull ( ) . sum ( ) 
ビン数を <D> 、ビンの名前を <E> リストとして、データフレーム <B> のコラム <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <D> [ <c> ] , <D> , label = <E> ) 
データフレーム <D> の列 <c> と <b> と <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	 . plt ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] ) 
<A> を <b> ファイル名に書き込む	<A> . to_csv ( <b> )	 to_csv <A> . to_csv ( <b> ) 
表 <A> の <b> の要素	<A> [ <b> ] . values	 <A> [ <b> ] . values 
<A> 内の <b> 列に重複がある行をドロップし、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	 <F> = <A> . drop_duplicates ( subset = <b> ) 
表 <C> の <b> ごとに <a> の平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	 plt . groupby ( [ <b> ] ) [ <a> ] . mean ( ) 
<C> のカラム名を <b> から <a> にリネームして、 <D> に代入する	<D> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
データフレーム <A> 中のそれぞれのカラムにある <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	 <A> . isin ( [ <b> ] ) . sum ( ) 
<a> 区切りでデータフレームを <b> ファイルから読み込む	pd . read_csv ( <b> , sep = <a> )	 read_csv pd . read_csv ( <b> , sep = <a> ) 
データフレーム <A> にある <b> を NaN に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
グラフの大きさを <a> x6 に設定する	plt . figure ( figsize = ( <a> , 6 ) )	 sns . figure ( figsize = ( <a> , 6 ) ) 
<d> を項目名として、 <B> 表と <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	 <C> = pd . merge ( <B> , <C> , on = <d> ) 
<A> の列 <b> についての分散	<A> [ <b> ] . var ( )	 <b> <A> [ <b> ] . var ( ) 
表データ <A> の <b> ごとに <c> 列の平均を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . mean ( ) 
表データ <B> のカラム <c> を四分位数ごとで分割し、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	 <A> = pd . qcut ( <B> [ <c> ] , 4 ) 
表 <A> の <b> 列をドロップし、置き換える	<A> . drop ( <b> , axis = 1 , inplace = True )	 <C> . drop ( <b> , axis = 1 , inplace = True ) 
<a> を項目名として、表データ <C> と <B> をマージする	pd . merge ( <C> , <B> , on = <a> )	 pd . merge ( <C> , <B> , on = <a> ) 
表 <B> 中の <a> 列に重複がある行を落とし、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
表データ <A> の <b> 表属性の月を調べる	<A> [ <b> ] . dt . month	 <b> <A> [ <b> ] . dt . month 
データフレーム <B> のカラム名を <A> に代入する	<A> = <B> . columns	 <A> = <B> . columns 
<E> の列名を <d> から <c> に、 <b> から <a> に変更して、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <A> 内の NaN がある行を削除する	<A> . dropna ( )	 dropna . dropna ( ) 
<B> の <a> を昇順にソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	 <F> = <B> . sort_values ( <a> ) 
表 <B> 中の <c> 列に重複がある行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	 'gray' = <B> . drop_duplicates ( subset = <c> ) 
表 <B> と表データ <A> を縦方向で結合する	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
表 <A> 内の NaN を <B> に置き換え、置き換える	<A> = <A> . fillna ( <B> )	 <A> . fillna ( <B> , inplace = True ) 
表データ <B> の <a> 列を削除して、 <C> とする	<C> = <B> . drop ( <a> , axis = 1 )	 dropna = <B> . drop ( <a> , axis = 1 ) 
<A> の欠損を含む行を落とし、インプレースする	<A> . dropna ( inplace = True )	 <A> . dropna ( inplace = True ) 
表データ <A> の NaN を含む行を消して、 <A> とする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
表 <A> 中の <b> と表属性 <c> に重複がある場合	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	 <D> . duplicated ( subset = [ <b> , <c> ] ) : 
表データ <A> 内の NaN の合計を確認する	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
<A> の <b> のそれぞれのデータの出現回数を見る	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
<A> の <b> をドロップし、インプレースする	<A> . drop ( <b> , axis = 1 , inplace = True )	 plt . drop ( <A> , axis = 1 , inplace = True ) 
表 <A> を位置でソートして、再代入する	<A> = <A> . sort_index ( )	 <A> . sort_index ( inplace = True ) 
表 <A> 中の <b> を欠損値に置換し、欠損値が存在する行を削除して、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 dropna = <A> . replace ( <b> , np . nan ) . dropna ( ) 
データフレーム <D> の表属性 <c> と <b> ごとに <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
エクセルファイル <a> の <b> 番目のシートを読む	pd . read_excel ( <a> , sheet_name = <b> )	 read_excel pd . read_excel ( <a> , sheet_name = <b> ) 
エクセルファイル <a> を読み込み、 <B> に代入する	<B> = pd . read_excel ( <a> )	 < = pd . read_excel ( <a> ) 
<A> 中にある <b> を NaN とし、置き換える	<A> = <A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan , inplace = True ) 
<A> 中に存在する <b> を欠損に置換して、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
データフレーム <C> の <b> とコラム <a> の相関係数を見る	<C> [ [ <b> , <a> ] ] . corr ( )	 markeredgewidth [ [ <b> , <a> ] ] . corr ( ) 
データフレーム <B> 内の表属性 <a> に重複がある行を削除し、インプレースする	<B> . drop_duplicates ( subset = <a> , inplace = True )	 plt . drop_duplicates ( subset = <a> , inplace = True ) 
分割数を <A> 、ビンのラベルを 0 始まりの連番として、表 <C> の <b> 列を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 pd . cut ( <C> [ <b> ] , <A> , label = False ) 
データフレーム <A> 中の <b> を欠損に置換し、欠損が存在する行を落として、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 np . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
ビン数を <A> 、ビンの名前を整数値として、 <C> 表データのコラム <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns pd pd . cut ( <C> [ <b> ] , <A> , label = False ) 
色を <C> として、 <A> と <B> の折れ線グラフを描画する	plt . plot ( <A> , <B> , color = ( <C> ) )	 sns . plot ( <A> , <B> , color = ( <C> ) ) 
表 <A> 内の NaN を含む行をドロップして、置き換える	<A> . dropna ( inplace = True )	 <C> = <A> . dropna ( ) 
<A> の <b> の各要素の出現回数を表示する	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
表データ <A> の <b> と <c> の相関	<A> [ [ <b> , <c> ] ] . corr ( )	 index_col <A> [ <b> , <c> ] ] . corr ( ) 
分割数を <C> として、表データ <A> のコラム <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	 pd . qcut ( <A> [ <b> ] , <C> ) 
<B> 内のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	 <F> . isin ( [ <a> ] ) . sum ( ) 
エクセルファイル <a> の <b> からデータフレームを読む	pd . read_excel ( <a> , sheet_name = <b> )	 read_excel pd . read_excel ( <a> , sheet_name = <b> ) 
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフを表示する	plt . bar ( <A> , <B> , align = 'center' )	 if <A> . duplicated ( subset = , align = 'center' ) : 
もし <B> 中の <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	 duplicated if <B> . duplicated ( subset = <a> ) : 
全結合で <B> データフレームとデータフレーム <A> を一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	 pd . merge ( <B> , <A> , how = 'outer' ) 
<B> の <a> のユニークな要素を確認する	<B> [ <a> ] . unique ( )	 <B> [ <a> ] . unique ( ) 
そこで、マーカーカラーを黄緑色とする	@option markerfacecolor = 'greenyellow'	 markerfacecolor = pd . markerfacecolor ( markerfacecolor = 'greenyellow' ) 
<A> をインデックスでソートし、 <A> にする	<A> = <A> . sort_index ( )	 start = <A> . sort_index ( ) 
表 <A> の振り直して、元のインデックスを削除し、インプレースする	<A> . reset_index ( drop = True , inplace = True )	 reset_index . reset_index ( drop = True , inplace = True ) 
表データ <B> の <a> を落とし、インプレースする	<B> . drop ( <a> , axis = 1 , inplace = True )	 pd . drop ( <a> , axis = 1 , inplace = True ) 
表 <A> の NaN を含む行を削除して、 <A> とする	<A> = <A> . dropna ( )	 <B> = <A> . dropna ( ) 
表 <A> の <b> を昇順にソートする	<A> . sort_values ( <b> )	 ascending . sort_values ( <b> ) 
表データ <A> に存在する <b> を欠損に置換する	<A> . replace ( <b> , np . nan )	 np <A> . replace ( <b> , np . nan ) 
データフレーム <B> 中の欠損を含む行を落として、 <A> とする	<A> = <B> . dropna ( )	 <A> = <B> . dropna ( ) 
表 <A> の <b> の名前を <c> に、 <d> カラムの名前を <e> にリネームして、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
<A> の列 <b> が <c> より小さいデータを抽出する	<A> [ <A> [ <b> ] <  <c> ]	 <A> [ <A> [ <b> ] < <c> ] 
表データ <B> の <a> を NaN に置換し、 NaN がある行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	 <F> . replace ( <a> , np . nan ) . dropna ( ) 
文字コードを shift_jis として、 <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , encoding = 'shift_jis' )	 <A> = pd . read_csv ( <b> , encoding = 'shift_jis' ) 
ビン数を <B> 、ビンのラベルを <A> リストとして、 <D> の <c> をビン分割し、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
表 <D> の <a> について、 <c> を位置、 <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <B> 内の NaN が存在する行をドロップして、 <A> にする	<A> = <B> . dropna ( )	 dropna = <B> . dropna ( ) 
表データ <A> の <b> の名前を <c> にリネームする	<A> . rename ( index = { <b> : <c> } )	 <B> = <A> . rename ( columns = { <b> : <c> } ) 
位置と <c> を項目名として <A> 表と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 . pd ( <A> , <B> , left_index = True ) 
データフレーム <A> の <b> 表属性をソートし、再代入する	<A> = <A> . sort_values ( <b> )	 <A> . sort_values ( <b> , inplace = True ) 
表 <C> の表属性 <b> と <a> 表属性を消して、再代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
データフレーム <A> の先頭の <b> 行	<A> . head ( <b> )	 head <A> . head ( <b> ) 
データフレーム <A> 内の NaN がある行を落として、置き換える	<A> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
<A> のカラム <b> についての箱ひげ図をプロットする	plt . boxplot ( <A> [ <b> ] )	 sns . plt ( <A> [ <b> ] ) 
データフレーム <A> のカラム名を <b> から <c> に変更する	<A> . rename ( columns = { <b> : <c> } )	 <A> . rename ( columns = { <b> : <c> } ) 
表データ <B> の <a> コラムをインデックスに設定して、 <B> に代入する	<B> = <B> . set_index ( <a> )	 <F> = <B> . set_index ( <a> ) 
<B> の <a> を中央値で分割する	pd . qcut ( <B> [ <a> ] , 2 )	 pd . qcut ( <B> [ <a> ] , 2 ) 
分割数を <A> 、ビンのラベルをインデックスとして、 <C> の表属性 <b> を分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 @option markeredgecolor = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
インデックスと <a> カラムをキーとして <C> データフレームと <B> を結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 <F> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
データフレーム <B> 中に存在する <a> を欠損値として、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	 <A> . replace ( <a> , np . nan , inplace = True ) 
カンマ区切りで表データを <b> から読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	 <A> = pd . read_csv ( <b> , sep = ',' ) 
そこで、出力先として <A> を用いることとする	@option file = <A>	 <C> = pd . merge ( <A> , <B> , how = 'left' ) 
ヘッダーなしで <b> を読み込み、 <A> にする	<A> = pd . read_csv ( <b> , header = None )	 = pd . read_csv ( <b> , header = None ) 
全結合でデータフレーム <B> と <C> データフレームをマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	 <C> = pd . merge ( <B> , <A> , how = 'outer' ) 
表データ <C> の <b> コラムをインデックス、コラム <a> をコラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	 index . pivot_table ( index = <b> , columns = <a> ) 
表 <D> の <c> が <b> または <a> のデータを取得する	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	 <E> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ] 
表 <A> の <b> のそれぞれのデータの出現回数を確認する	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
表データ <D> の <c> とカラム <b> ごとに <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
データフレーム <A> 内の <b> と列 <c> に重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	 if <A> . duplicated ( subset = [ <b> , <c> ] ) : 
<B> 中にある <a> を欠損値に置き換えて、置き換える	<B> = <B> . replace ( <a> , np . nan )	 replace . replace ( <a> , np . nan , inplace = True ) 
分割数を <D> として、 <B> の <c> を要素数が等しくなるようにビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	 <A> = pd . qcut ( <B> [ <c> ] , <D> ) 
表データ <B> 内の表属性 <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	 duplicated if <B> . duplicated ( subset = <a> ) : 
データフレーム <A> 中のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	 <A> . isin ( [ <b> ] ) . sum ( ) 
<B> 内の <a> を欠損に置換し、欠損が存在する行をドロップする	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
<B> 中に存在する <a> を NaN に置き換え、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	 @option replace = <B> . replace ( <a> , np . nan ) 
表 <B> と <C> を一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> )	 = pd . merge ( <B> , <A> ) 
表 <B> の <e> について、 <c> コラムを位置、 <d> をコラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
カンマ区切りで表を <a> から読んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	 = pd . read_csv ( <a> , sep = ',' ) 
データフレーム <B> の <a> を削除して、置き換える	<B> = <B> . drop ( <a> , axis = 1 )	 <C> . drop ( <a> , axis = 1 , inplace = True ) 
表データ <B> と <C> 表データを縦結合して、 <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	 <A> = pd . concat ( [ <B> , <C> ] ) 
<b> ファイルから表をタブ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	 dropna = pd . read_csv ( <b> , sep = '\t' ) 
<A> をインデックスでソートして、再代入する	<A> = <A> . sort_index ( )	 <A> . sort_index ( inplace = True ) 
ビン数を <A> 、ビンのラベルを 0 始まりの連番として、 <C> 表データの <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 pd . cut ( <C> [ <b> ] , <A> , label = False ) 
データフレーム <C> のカラム <b> の名前を <a> に変更し、インプレースする	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 <A> . rename ( columns = { <b> : <a> } , inplace = True ) 
分割数を <D> として、 <B> の <c> をビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	 <A> = pd . cut ( <B> [ <c> ] , <D> ) 
<a> 区切りで <b> ファイルから表データを読み込む	pd . read_csv ( <b> , sep = <a> )	 <a> pd . read_csv ( <b> , sep = <a> ) 
表データ <A> 中の重複している行をドロップし、 <B> にする	<B> = <A> . drop_duplicates ( )	 plt . drop_duplicates ( inplace = True ) 
<A> の列の名前を見る	<A> . columns	 labels <A> . columns 
表データ <B> 内の <a> を欠損値に置換し、欠損値が存在する行を削除する	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
位置と <d> をキーとして <B> と <C> 表を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
表 <A> の <b> についての箱ひげ図を表示する	plt . boxplot ( <A> [ <b> ] )	 @option plt . boxplot ( <A> [ <b> ] ) 
データフレーム <B> の <a> を削除して、置き換える	<B> . drop ( <a> , axis = 1 , inplace = True )	 <C> . drop ( <a> , axis = 1 , inplace = True ) 
そこで、グラフの色をグレーとする	@option color = 'gray'	 @option color = 'gray' 
表 <B> の列 <c> の名前を <d> に、 <e> 列の名前を <f> にリネームして、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
フォーマットを指定して、 <A> の列 <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' ) 
<A> の <b> を欠損値に置換し、欠損値が存在する行を落として、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
<B> と <A> を一つにまとめる	pd . merge ( <B> , <A> )	 pd . merge ( <B> , <A> ) 
<A> の <b> の名前を <c> にリネームし、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	 sep <A> = <A> . rename ( index = { <b> : <c> } ) 
データフレーム <B> の <a> を位置として、インプレースする	<B> . set_index ( <a> , inplace = True )	 plt . set_index ( <a> , inplace = True ) 
表データ <B> の <a> を位置に設定する	<B> . set_index ( <a> )	 set_index . set_index ( <a> ) 
表データ <B> 中の欠損を <A> に置換し、 <C> とする	<C> = <B> . fillna ( <A> )	 <F> = <B> . fillna ( <A> ) 
表 <B> の <a> コラムについての分散を取得する	<B> [ <a> ] . var ( )	 [ <B> [ <a> ] . var ( ) 
データフレーム <D> の列 <a> について、 <c> をインデックス、列 <b> を列としたピボットテーブルを作成し、 <E> に代入する	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <C> のカラム <b> とカラム <a> を降順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 False . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <A> の欠損値を含む行を落として、インプレースする	<A> . dropna ( inplace = True )	 <A> . dropna ( inplace = True ) 
<c> 区切りでデータフレームを <b> から読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
<A> の列の名前を <b> から <c> にリネームして、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
<B> の <a> カラムをドロップして、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
データフレーム <A> の列の名前を <b> から <c> に、 <d> から <e> にリネームし、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	 <A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True ) 
データフレーム <B> 中に存在する <a> を欠損値として、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
フォーマットを指定して、 <A> の <b> カラムを日付型に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' ) 
<C> の <b> インデックスの名前を <a> に変更し、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
分割数を <A> として、 <C> の <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <C> [ <b> ] , <A> )	 sns . pd ( <C> [ <b> ] , <A> ) 
グラフの日本語フォントをセットする	sns . set ( font = "IPAexGothic" , style = "white" )	 set sns . set ( font = "IPAexGothic" , style = "white" ) 
表 <B> の <a> を欠損値に置換し、欠損値が存在する行を削除して、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 = <B> . replace ( <a> , np . nan ) . dropna ( ) 
カラム <c> をキーとして、 <A> と <B> 表データをマージする	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
<A> の <b> と <c> と <d> について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
データフレーム <B> の <a> の時間	<B> [ <a> ] . dt . hour	 <a> <B> [ <a> ] . dt . hour 
境界値をリスト <A> として、 <C> 表データの <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
データフレームをファイル <a> からカンマ区切りで読み、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	 pd . read_csv ( <a> , sep = ',' ) 
データフレーム <B> 中の <a> を欠損に置換し、欠損が存在する行を落として、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<D> の <c> と <b> と <a> 列について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pd . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
表データ <A> の <b> コラムをグループ化して、値ごとのデータ数	<A> . groupby ( <b> ) . size ( )	 <b> <A> . groupby ( <b> ) . size ( ) 
ビン数を <A> として、 <C> 表データの <b> をビン分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	 weekday_name = pd . cut ( <C> [ <b> ] , <A> ) 
そこで、エラー処理は厳密にする	@option errors = 'strict'	 @option errors = 'strict' 
表 <B> 内にある <a> を欠損値に置換して、置き換える	<B> = <B> . replace ( <a> , np . nan )	 <A> . replace ( <a> , np . nan , inplace = True ) 
<B> の先頭から <a> 行まで	<B> [ : <a> ]	 <B> [ : <a> ] 
表データ <A> 内の欠損値を <B> に置き換え、再代入する	<A> = <A> . fillna ( <B> )	 <A> = <A> . fillna ( <B> ) 
<B> の <a> コラムを昇順に並び替え、 <C> とする	<C> = <B> . sort_values ( <a> )	 <F> = <B> . sort_values ( <a> ) 
棒グラフの位置を真ん中として、 <B> 軸を <B> とした <A> の棒グラフをプロットする	plt . barh ( <B> , <A> , align = 'center' )	 barh plt . bar ( <B> , <A> , align = 'center' ) 
表 <A> 中の <b> 列に重複がある行を落として、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	 <F> = <A> . drop_duplicates ( subset = <b> ) 
ビン数を <C> 、ビンのラベルを <D> リストとして、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
表データ <B> 内に存在する <c> を欠損値に置換し、 <A> にする	<A> = <B> . replace ( <c> , np . nan )	 sep <A> = <B> . replace ( <c> , np . nan ) 
表データ <A> のカラム <b> が <c> のデータを得る	<A> [ <A> [ <b> ] == <c> ]	 <A> [ <A> [ <b> ] == <c> ] 
<E> の列 <d> の名前を <c> に、 <b> の名前を <a> にリネームして、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <A> = <E> . rename ( columns = { <b> : <c> , <d> : <a> } ) 
<A> の最初の <b> 行を確認する	<A> . tail ( <b> )	 tail . tail ( <b> ) 
表 <A> の <b> と <c> 列を降順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
データフレーム <C> のカラム <b> と <a> を降順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <A> 中の欠損値を消す	<A> . dropna ( )	 dropna . dropna ( ) 
表データ <A> の最初から <b> 行目までを調べる	<A> [ : <b> ]	 @option : <b> ] 
表 <A> のコラム <b> と <c> を降順にソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 @option sort_values = <A> [ <b> , <c> ] , ascending = False ) 
<B> と <A> データフレームを縦方向でマージし、 <C> に代入する	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
表 <B> の <a> のそれぞれのデータの出現頻度を確認する	<B> [ <a> ] . value_counts ( )	 value_counts <B> [ <a> ] . value_counts ( ) 
データフレーム <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <B> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
表 <C> の列の名前を <b> から <a> に変更し、 <C> にする	<C> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
<A> 中の欠損が存在する行を削除し、置き換える	<A> . dropna ( inplace = True )	 <A> = <A> . dropna ( ) 
<A> と表 <B> を縦方向で結合する	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
表 <A> のコラム <b> の秒	<A> [ <b> ] . dt . second	 <B> [ <a> ] . dt . second 
<B> 中の欠損値がある行をドロップして、 <A> とする	<A> = <B> . dropna ( )	 dropna = <B> . dropna ( ) 
そこで、ヘッダーを指定しないことにする	@option header = None	 <F> = pd . read_csv ( <a> , header = None ) 
表 <A> 中の <b> を欠損値に置換し、欠損値が存在する行を落とし、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表 <A> のコラム <c> の曜日の数値型を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	 [ <b> ] = <A> [ <c> ] . dt . dayofweek 
データフレーム <B> の <a> をドロップし、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
<C> の <b> の名前を <a> に変更して、インプレースする	<C> . rename ( index = { <b> : <a> } , inplace = True )	 <A> . rename ( columns = { <b> : <a> } , inplace = True ) 
表 <C> の列 <b> と <a> を降順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
列番号 <c> を位置として、 <b> を読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	 <b> = pd . read_csv ( <A> , index_col = <c> ) 
境界値をリスト <A> として、 <C> データフレームの <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
<B> の <c> の名前を <d> に、 <e> 列の名前を <f> にリネームし、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
表データ <B> 内の <a> を欠損に置換し、欠損が存在する行を消して、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<B> の <a> を位置として設定し、再代入する	<B> = <B> . set_index ( <a> )	 plt . set_index ( <B> , inplace = True ) 
エクセルファイル <a> の <b> 番目のシートをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = <b> )	 <b> pd . read_excel ( <a> , sheet_name = <b> ) 
データフレーム <B> 内の表属性 <a> に重複がある行をドロップして、 <B> にする	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
表データ <B> の <c> を位置として、 <A> にする	<A> = <B> . set_index ( <c> )	 plt . set_index ( <B> , inplace = True ) 
位置と <c> をキーとして <A> 表データと表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 . pd ( <A> , <B> , left_index = True ) 
データフレーム <B> の <a> 中の前後の行の差分を計算する	<B> [ <a> ] . diff ( periods = 1 )	 <B> [ <a> ] . diff ( periods = 1 ) 
<A> の <b> と <c> を降順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
先頭の列をインデックスとして、 <a> パスを読み込んで、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	 pd . read_csv ( <a> , <B> , index_col = 0 ) 
<B> 中にある <c> を欠損値に置き換えて、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan )	 <F> = <B> . replace ( <c> , np . nan ) 
データフレーム <A> の <d> 表属性について、 <b> をインデックス、表属性 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表 <B> 中の列 <a> に重複がある行を削除し、インプレースする	<B> . drop_duplicates ( subset = <a> , inplace = True )	 plt . drop_duplicates ( subset = <a> , inplace = True ) 
表データ <A> のコラム <b> が <c> のデータを抽出する	<A> [ <A> [ <b> ] == <c> ]	 <A> [ <A> [ <b> ] == <c> ] 
列名を指定せずに <b> を読み込み、 <A> とする	<A> = pd . read_csv ( <b> , header = None )	 = pd . read_csv ( <b> , header = None ) 
データフレーム <A> の <b> が <c> より小さいデータを抽出する	<A> [ <A> [ <b> ] <  <c> ]	 <A> [ <A> [ <b> ] < <c> ] 
インデックスと <c> コラムをキーとして <A> と <B> 表をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 merge pd . merge ( <A> , <B> , left_index = True , right_on = <c> ) 
<B> と <A> データフレームを縦方向で一つにまとめて、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
ビン数を <D> 、ビンのラベルをリスト <E> として、データフレーム <B> の <c> 列をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <D> [ <c> ] , <D> , label = <E> ) 
foo .png という名前でプロットを保存する	plt . savefig ( "foo.png" )	 savefig plt . savefig ( "foo.png" ) 
<A> の振り直して、元のインデックスを削除して、 <B> にする	<B> = <A> . reset_index ( drop = True )	 <F> = <A> . reset_index ( drop = True ) 
データフレーム <C> の <b> ごとに <a> の数を算出する	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 plt . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
表データ <A> 内の <b> と <c> に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	 duplicated . duplicated ( subset = [ <b> , <c> ] ) : 
<C> の <b> 表属性と <a> を削除する	<C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> . drop ( [ <b> , <a> ] , axis = 1 ) 
<C> の <b> 列と列 <a> を降順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 False . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <B> 内の <a> を NaN に置換し、 NaN が存在する行を落とし、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<A> 内の欠損値が存在する行を削除する	<A> . dropna ( )	 dropna . dropna ( ) 
データフレーム <A> の <b> が <c> 以上のデータを抽出する	<A> [ <A> [ <b> ] >= <c> ]	 @option <A> [ <A> [ <b> ] >= <c> ] 
<B> の <a> 列の曜日	<B> [ <a> ] . dt . weekday_name	 <A> [ <a> ] . dt . weekday_name 
データフレーム <B> 中の <a> を NaN に置換し、 NaN が存在する行を削除して、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<C> のカラム <b> と <a> カラムを降順にソートして、 <D> に代入する	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
データフレーム <B> の <c> の名前を <d> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	 <A> = <B> . rename ( index = { <c> : <d> } ) 
<A> 内の欠損値が存在する行を削除して、 <A> にする	<A> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
データフレーム <B> の <a> を欠損値に置換し、欠損値がある行をドロップし、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
表データ <A> 中の <b> を NaN に置換し、 NaN が存在する行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	 <A> . replace ( <b> , np . nan ) . dropna ( ) 
ビン数を <A> 、ビンの名前をインデックスとして、 <C> 表の <b> を分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 <A> = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
データフレーム <B> の <a> を位置に設定し、 <C> に代入する	<C> = <B> . set_index ( <a> )	 <F> = <B> . set_index ( <a> ) 
ファイル <a> からデータフレームをタブ区切りで読む	pd . read_csv ( <a> , sep = '\t' )	 pd . read_csv ( <a> , sep = '\t' ) 
表データ <A> の <b> と列 <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	 . plt ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] ) 
表 <B> 内の NaN を含む行をドロップし、 <A> とする	<A> = <B> . dropna ( )	 <B> = <B> . dropna ( ) 
データフレーム <C> の <b> コラムごとにコラム <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . mean ( ) 
表 <A> の <b> コラムについての分散	<A> [ <b> ] . var ( )	 <b> <A> [ <b> ] . var ( ) 
<A> 中の NaN をドロップし、置き換える	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
ビン数を <C> 、ビンの名前を <D> として、 <A> のコラム <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
<A> をファイルパス <b> に書き出す	<A> . to_csv ( <b> )	 to_csv <A> . to_csv ( <b> ) 
データフレーム <C> のカラム名を <b> から <a> に変更して、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 <F> = <C> . rename ( columns = { <b> : <a> } ) 
データフレーム <A> の <b> の名前を <c> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	 <B> = <A> . rename ( index = { <b> : <c> } ) 
表データ <A> 中の NaN を <A> 表データの平均値で補い、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
表データ <A> 中の欠損値を消し、インプレースする	<A> . dropna ( inplace = True )	 plt <A> . dropna ( inplace = True ) 
グラフの大きさを横 <a> 縦 <b> とセットする	plt . figure ( figsize = ( <a> , <b> ) )	 figure plt . figure ( figsize = ( <a> , <b> ) ) 
データフレーム <A> 中の欠損値を消し、 <A> にする	<A> = <A> . dropna ( )	 <B> = <A> . dropna ( ) 
左外部結合で <A> と <B> をマージする	pd . merge ( <A> , <B> , how = 'left' )	 pd . merge ( <A> , <B> , how = 'left' ) 
表 <B> 中の <a> 列に重複がある行を落とし、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
<A> 内の重複している行を消し、置き換える	<A> = <A> . drop_duplicates ( )	 <A> = <A> . drop_duplicates ( ) 
表データ <B> の <c> コラムをインデックス、コラム <d> をコラムとしたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> ) 
<A> の重複している行を消す	<A> . drop_duplicates ( )	 <A> . drop_duplicates ( ) 
表データ <A> 内の欠損値を削除する	<A> . dropna ( )	 dropna . dropna ( ) 
ビン数を <A> 、ビンの名前を 0 始まりの連番として、データフレーム <C> の列 <b> をビン分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns <D> = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
さらに、区切り記号は <A> にする	@option sep = <A>	 @option sep = <A> 
表 <A> のオブジェクトデータの統計情報	<A> . describe ( include = "O" )	 "O" . describe ( include = "O" ) 
表データ <A> の <b> が <c> より少ないデータ	<A> [ <A> [ <b> ] <  <c> ]	 @option <A> [ <A> [ <b> ] < <c> ] 
表データ <A> の <b> コラムと <c> を降順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	 ascending = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
データフレーム <A> 中の <b> を欠損値に置換し、欠損値が存在する行を落として、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 <A> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表 <A> 内の <b> を NaN に置換し、 NaN が存在する行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	 <A> . replace ( <b> , np . nan ) . dropna ( ) 
<B> の <a> 列の曜日を確認する	<B> [ <a> ] . dt . weekday_name	 <C> [ <a> ] . dt . weekday_name 
データフレーム <B> の <a> を欠損値に置換し、欠損値が存在する行を消して、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <A> の <b> を one - hot 表現に変換し、 <A> にする	<A> = pd . get_dummies ( <A> [ <b> ] )	 <F> = pd . get_dummies ( <A> [ <b> ] ) 
表 <A> のコラム <b> の曜日の数値型	<A> [ <b> ] . dt . dayofweek	 <A> [ <b> ] . dt . dayofweek 
<a> からデータフレームをカンマ区切りで読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	 pd . read_csv ( <a> , sep = ',' ) 
表 <E> の <d> の名前を <c> に、 <b> カラムの名前を <a> にリネームし、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 plt = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表データ <B> の要素を <A> とする	<A> = <B> . values	 <A> = <B> . values 
表データ <A> 中の <b> を欠損に置換し、欠損が存在する行を落とし、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 plt . replace ( <A> , np . nan ) . dropna ( inplace = True ) 
<B> の <a> 行目をドロップし、インプレースする	<B> . drop ( <a> , inplace = True )	 plt . drop ( <a> , inplace = True ) 
表 <C> のカラム <b> と <a> を抽出する	<C> [ [ <b> , <a> ] ]	 sns . pairplot ( <C> [ [ <b> , <a> ] ] ) 
データフレーム <A> の <b>	<A> [ <b> ]	 pd . read_csv ( <b> ) 
表データ <D> の <c> 表属性と表属性 <b> ごとに <a> 表属性の値の和	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
<B> 中の <a> を欠損に置換し、欠損が存在する行をドロップして、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <C> のカラム <b> と <a> を降順にソートし、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	 plt . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True ) 
分割数を <A> 、ビンの名前をインデックスとして、 <C> の列 <b> をビン分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 <A> = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
<D> の <c> と <b> 列ごとに <a> の値の合計を計算する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
表データ <D> の <a> について、 <c> を位置、 <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <E> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
データフレーム <B> の元の位置を振り直し、 <A> にする	<A> = <B> . reset_index ( drop = True )	 reset_index = <B> . reset_index ( drop = True ) 
表 <A> の列 <c> の年を調べて、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . year	 [ <A> [ <b> ] = <A> [ <c> ] . dt . year 
表 <B> のカラム <a> をインデックスに設定して、再代入する	<B> = <B> . set_index ( <a> )	 plt . set_index ( <B> , inplace = True ) 
表データ <C> の <a> の時間を調べ、  <C> [ <b> ] とする	  <C> [ <b> ] = <C> [ <a> ] . dt . hour	 <b> <C> [ <b> ] = <C> [ <a> ] . dt . hour 
<A> 中の欠損値を <A> データフレームの平均値で補う	<A> . fillna ( <A> . mean ( ) )	 plt <A> . fillna ( <A> . mean ( ) ) 
<b> から表を読み込んで、 <A> とする	<A> = pd . read_csv ( <b> )	 <A> = pd . read_csv ( <b> ) 
データフレーム <D> の <a> コラムについて、 <c> を位置、 <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表データ <B> の欠損値を含む行を落として、 <A> とする	<A> = <B> . dropna ( )	 <A> = <B> . dropna ( ) 
表 <B> 内の <a> に重複がある行を削除し、インプレースする	<B> . drop_duplicates ( subset = <a> , inplace = True )	 plt . drop_duplicates ( subset = <a> , inplace = True ) 
データフレーム <E> のカラム名を <d> から <c> に、 <b> から <a> に変更して、 <F> にする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<B> のコラム <a> をドロップして、 <B> に代入する	<B> = <B> . drop ( <a> , axis = 1 )	 <E> = <B> . drop ( <a> , axis = 1 ) 
データフレーム <C> の <b> の名前を <a> にリネームし、 <C> にする	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
表 <C> の <b> が <a> より小さいデータを得る	<C> [ <C> [ <b> ] <  <a> ]	 plt <C> [ <C> [ <b> ] < <a> ] 
<B> の <a> 表属性を削除して、インプレースする	<B> . drop ( <a> , axis = 1 , inplace = True )	 x <B> . drop ( <a> , axis = 1 , inplace = True ) 
表 <B> の <a> の要素	<B> [ <a> ] . values	 <C> [ <a> ] . values 
表 <A> 内のカテゴリ変数をダミー変数に変換して、 <A> に代入する	<A> = pd . get_dummies ( <A> )	 <F> = pd . get_dummies ( <A> ) 
表 <A> 中の欠損値がある行をドロップして、置き換える	<A> . dropna ( inplace = True )	 <C> = <A> . dropna ( ) 
データフレーム <A> の元の位置を振り直す	<A> . reset_index ( drop = True )	 plt <A> . reset_index ( drop = True ) 
分割数を <B> 、ビンの名前を <A> リストとして、表データ <D> の <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
表 <A> の <b> 列が <c> または <d> のデータを取得する	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	 @option <A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ] 
そこで、マーカーの色をシアンとする	@option markerfacecolor = 'cyan'	 @option markerfacecolor = 'cyan' 
<A> 内の欠損値が存在する行をドロップし、 <A> に代入する	<A> = <A> . dropna ( )	 <F> = <A> . dropna ( ) 
表データ <B> のインデックス <c> の名前を <d> に変更し、 <A> とする	<A> = <B> . rename ( index = { <c> : <d> } )	 <A> = <B> . rename ( index = { <c> : <d> } ) 
境界値を <A> として、 <C> 表データの列 <b> を分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	 <E> = pd . cut ( <C> [ <b> ] , <A> ) 
表データ <A> の重複している行を削除して、 <A> に代入する	<A> = <A> . drop_duplicates ( )	 ] <A> = <A> . drop_duplicates ( ) 
<B> の <c> と <d> を削除し、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	 <A> = <B> . drop ( [ <c> , <d> ] , axis = 1 ) 
表データ <A> の列 <b> と <c> ごとに <d> の値の合計値	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
表 <A> の <b> カラムとカラム <c> を降順にソートして、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	 <A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True ) 
<B> 内の <a> に重複がある行を落とし、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
色を <C> として、 <A> と <B> のグラフを表示する	plt . plot ( <A> , <B> , color = ( <C> ) )	 pd . cut ( <B> , <A> , color = ( <C> ) ) 
データフレーム <A> の元の位置を振り直し、 <B> にする	<B> = <A> . reset_index ( drop = True )	 <F> = <A> . reset_index ( drop = True ) 
表 <A> の <b> と <c> をドロップする	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表 <C> 中の <b> カラムと <a> に重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	 if <C> . duplicated ( subset = [ <b> , <a> ] ) : 
全結合で <B> と <A> 表データを結合し、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	 <C> = pd . merge ( <B> , <A> , how = 'outer' ) 
<a> ファイル名から表を <b> 区切りで読む	pd . read_csv ( <a> , sep = <b> )	 pd . read_csv ( <a> , sep = <b> ) 
そのとき、グラフカラーを黄緑とする	@option color = 'greenyellow'	 @option color = 'greenyellow' 
表 <B> の <a> のそれぞれのデータの出現頻度	<B> [ <a> ] . value_counts ( )	 value_counts <B> [ <a> ] . value_counts ( ) 
表 <B> のコラム <a> をドロップして、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
<A> の <b> 列をダミー変数化して、 <A> とする	<A> = pd . get_dummies ( <A> [ <b> ] )	 <A> = pd . get_dummies ( <A> [ <b> ] ) 
ビン数を <A> 、ビンのラベルを整数値として、データフレーム <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns . pd ( <C> [ <b> ] , <A> , label = False ) 
表 <A> の <b> 行目を落とし、置き換える	<A> . drop ( <b> , inplace = True )	 <A> . drop ( <b> , inplace = True ) 
表 <D> の <a> について、 <c> をインデックス、 <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <E> の <d> の名前を <c> に、 <b> 表属性の名前を <a> にリネームし、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 plt = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
データフレーム <A> の <b> 列が <c> より大きいデータ	<A> [ <A> [ <b> ] >  <c> ]	 @option <A> [ <A> [ <b> ] > <c> ] 
表データ <A> の <b> 表属性の月	<A> [ <b> ] . dt . month	 <b> <A> [ <b> ] . dt . month 
表 <C> の <a> の秒を  <C> [ <b> ] とする	  <C> [ <b> ] = <C> [ <a> ] . dt . second	 dt [ <b> ] = <C> [ <a> ] . second 
表データ <A> のカラム名を <b> から <c> に変更して、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
表 <C> の <b> と <a> 列を降順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
<A> の <b> を落とす	<A> . drop ( <b> , axis = 1 )	 plt . drop ( <A> , axis = 1 ) 
データフレーム <C> の列 <b> ごとに <a> の平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . mean ( ) 
表データ <A> 中の <b> を欠損値に置換し、欠損値がある行をドロップし、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <b> <A> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
<E> の列 <d> の名前を <c> に、 <b> の名前を <a> にリネームし、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <B> の末尾 <a> 行を調べる	<B> . tail ( <a> )	 <B> . head ( <a> ) 
データフレーム <C> の <b> 表属性が <a> 以上のデータ	<C> [ <C> [ <b> ] >= <a> ]	 >= <C> [ <C> [ <b> ] >= <a> ] 
表 <A> の <b> の名前を <c> に、 <d> の名前を <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
<B> を <a> ファイル名に書き込む	<B> . to_csv ( <a> )	 to_csv <B> . to_csv ( <a> ) 
表 <B> の <c> の名前を <d> に、 <e> コラムの名前を <f> に変更し、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
<B> のカラム <a> についての箱ひげ図をプロットする	plt . boxplot ( <B> [ <a> ] )	 . plt . boxplot ( <B> [ <a> ] ) 
表 <A> の列 <b> ごとに <c> 列の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . mean ( ) 
表 <A> のカラム <b> 、 <c> 、 <d> 、 <e>	<A> [ [ <b> , <c> , <d> , <e> ] ]	 <d> [ [ <b> , <c> , <d> , <e> ] ] 
<A> 内の欠損を <A> の平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
<B> の <a> の曜日を見る	<B> [ <a> ] . dt . weekday_name	 <C> [ <a> ] . dt . weekday_name 
文字コードをシフト JIS として、 <a> を読む	pd . read_csv ( <a> , encoding = 'shift_jis' )	 pd . read_csv ( <a> , encoding = 'shift_jis' ) 
表データ <B> の <a> についての標準偏差	<B> [ <a> ] . std ( )	 std <B> [ <a> ] . std ( ) 
データフレーム <A> 中の列 <b> に重複がある行を削除して、置き換える	<A> = <A> . drop_duplicates ( subset = <b> )	 <A> = <A> . drop_duplicates ( subset = <b> ) 
表 <A> 内の欠損値をドロップして、 <A> に代入する	<A> = <A> . dropna ( )	 <B> = <A> . dropna ( ) 
データフレーム <A> の <b> 表属性と <c> を消して、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <B> = <A> . drop ( [ <c> ] , axis = 1 ) 
位置と <a> をキーとして <C> 表と <B> 表を結合し、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 sns = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
表データ <A> 内の NaN を含む行を落とし、 <A> とする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
<B> の列 <e> について、列 <c> をインデックス、 <d> を列としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
表データ <A> のカラム <b> と <c> の相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	 [ <A> [ <b> , <c> ] ] . corr ( ) 
<A> の <b> カラムをドロップして、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
データフレーム <C> の列名を <b> から <a> に変更し、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 <F> = <C> . rename ( columns = { <b> : <a> } ) 
そこで、グラフカラーをシアンとする	@option color = 'cyan'	 @option color = 'cyan' 
<A> の列 <b> を消し、再代入する	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
データフレーム <A> をインデックスで並び替えて、 <B> とする	<B> = <A> . sort_index ( )	 plt . sort_index ( inplace = True ) 
<A> 中の重複している行を落とし、 <B> とする	<B> = <A> . drop_duplicates ( )	 <F> = <A> . drop_duplicates ( ) 
分割数を <C> として、表 <A> の <b> コラムを分割する	pd . cut ( <A> [ <b> ] , <C> )	 pd . cut ( <A> [ <b> ] , <C> ) 
表 <C> のコラム <b> とコラム <a> を降順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
データフレーム <A> 内の欠損値を含む行を落とす	<A> . dropna ( )	 <A> . dropna ( ) 
<C> の <a> の曜日を見、  <C> [ <b> ] に代入する	  <C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	 <C> [ <b> ] = <C> [ <a> ] . dt . weekday_name 
データフレーム <A> 中の <b> を欠損値に置換し、欠損値がある行を削除して、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表データ <B> の <a> コラムをインデックスとして、インプレースする	<B> . set_index ( <a> , inplace = True )	 plt . set_index ( <a> , inplace = True ) 
データフレーム <A> の <b> に重複があるか	<A> . duplicated ( subset = <b> )	 <B> . duplicated ( subset = <b> ) 
分割数を <D> 、ビンのラベルを 0 始まりの連番として、 <B> データフレームの <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
分割数を <D> として、表データ <B> の列 <c> を要素数が等しくなるようにビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	 <A> = pd . qcut ( <B> [ <c> ] , <D> ) 
データフレーム <B> の末尾 <a> 行	<B> . tail ( <a> )	 <B> . tail ( <a> ) 
表 <B> のカラム <a> をインデックスに設定する	<B> . set_index ( <a> )	 markersize = <B> . set_index ( <a> ) 
そこで、マーカーのエッジの色をネイビーとする	@option markeredgecolor = 'navy'	 @option markeredgecolor = 'navy' 
表 <A> の <b> コラムをグループ化して、値ごとのデータ数	<A> . groupby ( <b> ) . size ( )	 @option groupby . groupby ( <b> ) . size ( ) 
<C> の <b> と <a> を消す	<C> . drop ( [ <b> , <a> ] , axis = 1 )	 plt . drop ( <C> , axis = 1 ) 
<A> の <b> 行目を落として、インプレースする	<A> . drop ( <b> , inplace = True )	 plt . drop ( <A> , inplace = True ) 
データフレーム <B> 中の NaN をデータフレーム <B> の平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
表 <A> 中の欠損を <B> として、インプレースする	<A> . fillna ( <B> , inplace = True )	 <A> . fillna ( <B> , inplace = True ) 
データフレーム <A> 中の重複している行を落として、 <A> とする	<A> = <A> . drop_duplicates ( )	 @option <A> = <A> . drop_duplicates ( ) 
データフレーム <A> の <b> のユニークな要素数を表示する	<A> [ <b> ] . nunique ( )	 <b> <A> [ <b> ] . nunique ( ) 
表 <B> 中の <a> を欠損値に置換し、欠損値が存在する行を削除して、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 replace . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
データフレーム <A> の振り直して、元の位置を削除して、 <B> とする	<B> = <A> . reset_index ( drop = True )	 <F> = <A> . reset_index ( drop = True ) 
表 <D> の表属性 <c> と <b> と表属性 <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	 plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] ) 
ピボット操作で表 <A> の行を列に変更する	<A> . unstack ( )	 <B> = <A> . stack ( ) 
表データ <A> とデータフレーム <B> を縦方向で結合する	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
<A> の <b> 表属性の月	<A> [ <b> ] . dt . month	 <A> [ <b> ] . dt . month 
<a> を項目名として、表データ <C> と <B> 表データをマージし、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	 merge = pd . merge ( <C> , <B> , on = <a> ) 
表データ <B> の <c> に重複がある行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	 'gray' <A> = <B> . drop_duplicates ( subset = <c> ) 
データフレーム <C> のカラム名を <b> から <a> にリネームする	<C> . rename ( columns = { <b> : <a> } )	 sns . rename ( columns = { <b> : <a> } ) 
<E> の列名を <d> から <c> に、 <b> から <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表データ <B> の <a> に重複がある場合	if <B> . duplicated ( subset = <a> ) :	 plt . duplicated ( subset = <a> ) : 
位置と <c> を項目名として <A> と <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 sns . pd ( <A> , <B> , left_index = True ) 
インデックスと <c> をキーとして <A> と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 . pd ( <A> , <B> , left_index = True ) 
表 <D> の <a> について、 <c> 表属性をインデックス、表属性 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <A> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> 中の NaN を <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表データ <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> )	 sns . pd ( <A> , <B> ) 
<C> の <b> とコラム <a> を削除し、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
<A> の <b> とコラム <c> ごとに <d> の値の合計値	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
全結合で表データ <B> と <A> 表データを結合し、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	 <C> = pd . merge ( <B> , <A> , how = 'outer' ) 
表データ <A> のコラム <b> に重複があるか	<A> . duplicated ( subset = <b> )	 if <A> . duplicated ( subset = <b> ) : 
表データ <B> の <a> コラムをグループ化して、値ごとのデータ数	<B> . groupby ( <a> ) . size ( )	 <C> . groupby ( <B> [ <a> ] ) . size ( ) 
表データ <A> と <B> を縦方向で一つにまとめる	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
そこで、パディングは <A> 文字にする	@option fillchar = <A>	 start = <A> . @option ( <A> ) 
<A> の列名を <b> から <c> に、 <d> から <e> に変更して、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
<c> を項目名として、 <A> 表データと <B> 表データを結合する	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
表データ <D> の <a> について、 <c> カラムをインデックス、カラム <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<B> の <a> の日にち	<B> [ <a> ] . dt . day	 [ <B> [ <a> ] . dt . day 
<A> のヒストグラムを描写する	plt . hist ( <A> )	 bins plt . hist ( <A> ) 
<A> 中の NaN をドロップして、インプレースする	<A> . dropna ( inplace = True )	 dropna = <A> . dropna ( inplace = True ) 
<B> 中の <a> を欠損に置換し、欠損がある行を落とし、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<D> の <c> と <b> と表属性 <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pd . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
表データ <A> の <d> について、 <b> をインデックス、 <c> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 <A> . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表 <A> の <b> と <c> を降順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
データフレーム <A> のカラム <b> と <c> と <d> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
<B> 内の NaN を <C> に置換して、 <A> とする	<A> = <B> . fillna ( <C> )	 <A> = <B> . fillna ( <C> ) 
<A> 内の NaN を <A> の平均値で補い、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
表データ <B> 中の欠損値を <A> として、 <C> に代入する	<C> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
<C> の <b> コラムと <a> をドロップして、再代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
データフレーム <A> の <c> の分を見て、  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . minute	 <d> [ <b> ] = <A> [ <c> ] . dt . minute 
<A> の列 <b> の秒	<A> [ <b> ] . dt . second	 <A> [ <b> ] . dt . second 
表データ <C> のコラム <b> を位置、 <a> コラムをコラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	 plt . pivot_table ( index = <b> , columns = <a> ) 
表 <A> 内の <b> を欠損に置換し、欠損がある行をドロップして、 <A> に代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 = <A> . replace ( <b> , np . nan ) . dropna ( ) 
データフレーム <B> の <a> カラムの秒を見る	<B> [ <a> ] . dt . second	 x <B> [ <a> ] . dt . second 
表データ <A> のインデックスを振り直し、インプレースする	<A> . reset_index ( inplace = True )	 reset_index = <A> . reset_index ( inplace = True ) 
<A> の <b> とコラム <c> ごとに <d> の値の合計値を求める	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
表データ <B> の <a> に重複がある行を消して、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
<B> の列 <a> についての分散を取得する	<B> [ <a> ] . var ( )	 [ <B> [ <a> ] . var ( ) 
<a> 区切りで <b> ファイル名から表データを読み込む	pd . read_csv ( <b> , sep = <a> )	 <a> pd . read_csv ( <b> , sep = <a> ) 
データフレーム <A> 中の <b> に重複がある行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 @option drop_duplicates = <A> . drop_duplicates ( subset = <b> ) 
表 <A> の NaN がある行を落とし、 <A> にする	<A> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
<B> の最初から <a> 行目までを確認する	<B> [ : <a> ]	 <B> [ : <a> ] 
表データ <A> 中の欠損を含む行をドロップし、再代入する	<A> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
<c> を項目名として、 <A> と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
表 <B> の <c> と <d> を削除し、 <A> にする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	 <A> = <B> . drop ( [ <c> , <d> ] , axis = 1 ) 
表 <C> の <b> と <a> を削除し、 <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <D> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
表 <A> 中の欠損値の数を調べる	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
データフレーム <A> の <b> を昇順に並び替えて、 <A> にする	<A> = <A> . sort_values ( <b> )	 <b> = <A> . sort_values ( <b> ) 
表データ <B> 内の <a> を欠損値に置換し、欠損値が存在する行を削除し、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 replace . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
表データ <B> の <e> について、 <c> を位置、 <d> をカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
<B> の <a> 表属性の出現回数を確認する	<B> [ <a> ] . value_counts ( )	 <B> [ <a> ] . value_counts ( ) 
<A> の <b> の名前を <c> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	 <B> = <A> . rename ( index = { <b> : <c> } ) 
表データ <A> 中の重複しているデータを抽出する	<A> [ <A> . duplicated ( ) ]	 <B> [ <A> . duplicated ( ) ] 
表 <C> の <b> 位置の名前を <a> にリネームし、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
タイトルを <a> と設定する	plt . title ( <a> )	 sns . title ( <a> ) 
<A> の <c> の時間を見、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . hour	 <A> [ <b> ] = <A> [ <c> ] . dt . hour 
表 <B> の表属性 <a> の年	<B> [ <a> ] . dt . year	 <A> [ <B> [ <a> ] . dt . year 
表データ <B> の <a> についての中央値を得る	<B> [ <a> ] . median ( )	 [ <B> [ <a> ] . median ( ) 
表データ <A> 内の <b> を NaN に置換し、 NaN が存在する行を落とし、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 np . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
表データ <A> 内の重複している行を削除する	<A> . drop_duplicates ( )	 ) . drop_duplicates ( ) 
データフレーム <A> の <c> の秒を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . second	 [ <b> ] = <A> [ <c> ] . dt . second 
分割数を <C> として、データフレーム <A> の <b> 列をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	 sns . pd ( <A> [ <b> ] , <C> ) 
表 <C> の <a> の分を  <C> [ <b> ] とする	  <C> [ <b> ] = <C> [ <a> ] . dt . minute	 [ <b> ] = <C> [ <a> ] . dt . minute 
表 <E> の <d> の名前を <c> に、 <b> 表属性の名前を <a> に変更して、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True ) 
表 <A> の <b> と <c> コラムを落として、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <B> の <a> 行目から末尾まで	<B> [ <a> : ]	 <B> [ <a> : ] 
表 <A> 内の NaN を <A> 表データの平均値で埋める	<A> . fillna ( <A> . mean ( ) )	 mean <A> . fillna ( <A> . mean ( ) ) 
データフレーム <A> の <b> 表属性の各要素の出現回数	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
<B> の列の名前を <A> とする	<A> = <B> . columns	 <A> = <B> . columns 
境界値をリスト <A> として、 <C> 表データの <b> を分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> )	 <E> = pd . cut ( <C> [ <b> ] , <A> ) 
表 <A> 内の NaN を <B> に置換して、 <A> にする	<A> = <A> . fillna ( <B> )	 <A> = <A> . fillna ( <B> ) 
データフレーム <A> の相関	<A> . corr ( )	 <A> . corr ( ) 
そこで、マーカーのエッジの色を紫とする	@option markeredgecolor = 'purple'	 @option markeredgecolor = 'purple' 
データフレーム <C> の <b> と <a> を落とし、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
ビン数を <D> 、ビンのラベルを整数値として、 <B> データフレームの <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
表 <A> 中の <b> 列に重複がある行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 @option drop_duplicates = <A> . drop_duplicates ( subset = <b> ) 
表データ <B> の NaN を <A> として、 <C> に代入する	<C> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
<C> の <b> と <a> カラムを降順にソートして、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	 plt . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True ) 
表 <B> 中の <c> を NaN に置換し、 NaN がある行を消し、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 dropna = <B> . replace ( <c> , np . nan ) . dropna ( ) 
データフレーム <A> の上 5 行を確認する	<A> . head ( )	 head . head ( ) 
<A> の <b> をインデックスに設定する	<A> . set_index ( <b> )	 index_col . set_index ( <b> ) 
データフレーム <A> の <b> コラムごとにコラム <c> の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	 <A> . groupby ( [ <b> ] ) [ <c> ] . mean ( ) 
位置と <c> をキーとして表 <A> と <B> 表をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 sns . pd ( <A> , <B> , left_index = True ) 
<B> の <a> についての最頻値	<B> [ <a> ] . mode ( )	 [ <B> [ <a> ] . mode ( ) 
表データ <D> の <c> と <b> ごとに <a> の値の和を算出する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 groupby [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表 <A> 内の NaN が存在する行を落とし、置き換える	<A> . dropna ( inplace = True )	 <B> = <A> . dropna ( ) 
表データ <A> のインデックス名を表示する	<A> . index	 <A> . index 
表データ <B> 中の <a> コラムに重複がある行を消して、置き換える	<B> = <B> . drop_duplicates ( subset = <a> )	 plt . drop_duplicates ( subset = <a> , inplace = True ) 
データフレーム <B> の <a> を欠損に置換し、欠損が存在する行を落として、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
表データ <A> の <b> ごとに <c> カラムの個数を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . count ( ) 
データフレーム <A> の位置をリセットし、置き換える	<A> = <A> . reset_index ( )	 <C> . reset_index ( inplace = True ) 
<B> のコラム <a> をダミー変数化する	pd . get_dummies ( <B> [ <a> ] )	 get_dummies pd . get_dummies ( <B> [ <a> ] ) 
表 <C> の <b> と <a> を消し、 <C> にする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
データフレーム <D> のコラム <a> について、コラム <c> を位置、 <b> をコラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 end = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> 内の NaN を削除し、置き換える	<A> . dropna ( inplace = True )	 <A> = <A> . dropna ( ) 
<B> 内のコラム <a> に重複がある行を削除し、インプレースする	<B> . drop_duplicates ( subset = <a> , inplace = True )	 plt . drop_duplicates ( subset = <a> , inplace = True ) 
表 <B> の <a> 列をドロップして、置き換える	<B> = <B> . drop ( <a> , axis = 1 )	 <E> . drop ( <a> , axis = 1 , inplace = True ) 
表 <B> の <a> についての分散を抽出する	<B> [ <a> ] . var ( )	 [ <B> [ <a> ] . var ( ) 
グラフの色を RGB 値 <A> として、 <C> と <B> の折れ線グラフを描画する	plt . plot ( <C> , <B> , color = ( <A> ) )	 sns . plot ( <C> , <B> , color = ( <A> ) ) 
表データ <B> の <c> コラムをインデックスに設定し、 <A> にする	<A> = <B> . set_index ( <c> )	 <F> = <B> . set_index ( <c> ) 
分割数を <C> として、 <A> の <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	 sns . pd ( <A> [ <b> ] , <C> ) 
表データ <B> 中のコラム <a> に重複がある行を落とす	<B> . drop_duplicates ( subset = <a> )	 <B> . drop_duplicates ( subset = <a> ) 
y 軸の軸ラベルを <a> に変更する	plt . ylabel ( <a> )	 軸 . rename ( columns = { <a> } ) 
ビン数を <C> 、ビンの名前を <D> リストとして、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
分割数を <D> 、ビンの名前を <E> リストとして、 <B> データフレームの <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <A> [ <c> ] , <D> , label = <E> ) 
分割数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> 表データの <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
表データ <A> の欠損値がある行を削除し、 <A> とする	<A> = <A> . dropna ( )	 <F> = <A> . dropna ( ) 
表 <C> の <b> と表属性 <a> を落として、 <C> とする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
データフレーム <D> の列 <c> と <b> と <a> についての箱ひげ図を描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	 plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] ) 
<B> 内の NaN を <A> に置換する	<B> . fillna ( <A> )	 isnull . fillna ( <B> ) . sum ( ) 
ビン数を <C> 、ビンのラベルを整数値として、データフレーム <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
表データ <A> のコラム <b> と <c> ごとにコラム <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <D> の <a> について、 <c> コラムを位置、 <b> コラムをコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <B> 内に存在する <a> を欠損に置換し、置き換える	<B> = <B> . replace ( <a> , np . nan )	 <A> . replace ( <a> , np . nan , inplace = True ) 
データフレーム <B> 内の <a> に重複がある行を削除し、 <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
データフレーム <B> のカラム <a> を位置として設定して、 <C> にする	<C> = <B> . set_index ( <a> )	 <F> = <B> . set_index ( <a> ) 
<b> から表を <c> 区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	 = pd . read_csv ( <b> , sep = <c> ) 
全結合で表データ <A> と <B> 表データを結合する	pd . merge ( <A> , <B> , how = 'outer' )	 pd . merge ( <A> , <B> , how = 'outer' ) 
データフレーム <A> 内にある <b> を欠損値に置き換え、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
データフレーム <B> の先頭から <a> 行目まで	<B> [ : <a> ]	 <B> [ : <a> ] 
表 <B> 内の <a> を欠損値に置換し、欠損値が存在する行を消し、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <A> の <b> カラムをドロップする	<A> . drop ( <b> , axis = 1 )	 plt . drop ( <b> , axis = 1 ) 
境界値をリスト <A> として、表 <C> の <b> カラムを分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	 <E> = pd . cut ( <C> [ <b> ] , <A> ) 
<B> の <a> をソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	 <F> = <B> . sort_values ( <a> ) 
そこで、フラッシュを行う	@option flush = True	 encoding = pd . read_csv ( ) 
表データ <A> 内の NaN をドロップし、 <B> とする	<B> = <A> . dropna ( )	 plt . dropna ( inplace = True ) 
表データ <D> の <a> について、 <c> を位置、 <b> をカラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 end = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> の <b> カラムと <c> の相関係数を見る	<A> [ [ <b> , <c> ] ] . corr ( )	 [ <A> [ <b> , <c> ] ] . corr ( ) 
データフレーム <A> の表属性 <b> と <c> ごとに <d> の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <B> のそれぞれのカラムにある <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	 isnull . isin ( [ <a> ] ) . sum ( ) 
表 <A> 内に存在する <b> を NaN に置換して、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
表データ <C> のコラム <b> の名前を <a> にリネームして、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
表データ <A> の <b> 列の出現回数を表示する	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
ビン数を <C> 、ビンのラベルを整数値として、データフレーム <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
表データ <D> の <c> 表属性と表属性 <b> と <a> について関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pd . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
<E> の <d> , <c> , <b> 行目の <a> , <c> 列目を抽出する	<E> . iloc [ [ <d> , <c> , <b> ] , [ <a> , <c> ] ]	 sns . iloc [ [ <d> , <c> , <b> ] , [ <a> , <c> ] ] 
データフレーム <B> 内のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	 <B> . isin ( [ <a> ] ) . sum ( ) 
表データ <A> をインデックスで並び替える	<A> . sort_index ( )	 <B> = <A> . sort_index ( ) 
列番号 <a> を位置として、 <b> を読む	pd . read_csv ( <b> , index_col = <a> )	 pd . read_csv ( <a> , index_col = <b> ) 
分割数を <A> 、ビンのラベルをインデックスとして、 <C> の表属性 <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns . pd ( <C> [ <b> ] , <A> , label = False ) 
データフレーム <A> の <b> の前後の行の差分を求める	<A> [ <b> ] . diff ( periods = 1 )	 <b> <A> [ <b> ] . diff ( periods = 1 ) 
表 <A> の <b> コラムの月を見る	<A> [ <b> ] . dt . month	 <A> [ <b> ] . dt . month 
<B> の表属性 <a> の月を確認する	<B> [ <a> ] . dt . month	 <A> [ <a> ] . dt . month 
<A> の <b> 表属性についてのヒストグラムをプロットする	plt . hist ( <A> [ <b> ] )	 bins plt . hist ( <A> [ <b> ] ) 
<B> の列名を <c> から <d> に、 <e> から <f> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
データフレーム <A> の <b> の日にち	<A> [ <b> ] . dt . day	 <b> <A> [ <b> ] . dt . day 
表 <E> の <d> 列の名前を <c> に、 <b> の名前を <a> に変更し、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
データフレーム <A> の <c> カラムの秒を見、  <A> [ <b> ] に代入する	  <A> [ <b> ] = <A> [ <c> ] . dt . second	 <d> [ <b> ] = <A> [ <c> ] . dt . second 
データフレーム <A> の <d> について、 <b> をインデックス、コラム <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
<A> の <b> と <c> コラムごとに <d> の値の和を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( ) 
表データ <B> 内にある <a> を欠損とし、再代入する	<B> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
エクセルファイル <a> の全てのシートから読み込み、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	 = pd . read_excel ( <a> , sheet_name = None ) 
表データ <E> の列 <d> の名前を <c> に、 <b> の名前を <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
データフレーム <C> の <b> 列と <a> を降順に並び替えて、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
そこで、 UTF8 をする	@option encoding = 'utf-8'	 @option encoding = 'utf-8' 
<A> 中の NaN を <A> データフレームの平均値で補い、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	 <C> = <A> . fillna ( <A> . mean ( ) ) 
データフレーム <C> の <b> と <a> を削除し、 <C> に代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
分割数を <A> として、表データ <C> の列 <b> を要素数が等しくなるようにビン分割し、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	 <E> = pd . qcut ( <C> [ <b> ] , <A> ) 
そこで、 <A> をすることとする	@option encoding = <A>	 <D> = <A> . @option ( ) 
表 <B> の <c> 表属性をインデックス、 <d> を表属性としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> ) 
<B> の <c> の名前を <d> に、 <e> の名前を <f> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
<A> 内の欠損値が存在する行を削除し、置き換える	<A> . dropna ( inplace = True )	 <A> = <A> . dropna ( ) 
グラフの大きさを横 <b> 縦 <a> とセットする	plt . figure ( figsize = ( <b> , <a> ) )	 figure plt . figure ( figsize = ( <b> , <a> ) ) 
データフレーム <A> のコラム <c> の時間を表示し、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . hour	 <b> <A> [ <b> ] = <A> [ <c> ] . dt . hour 
<B> 中の <c> を NaN に置換し、 NaN が存在する行を削除して、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 dropna = <B> . replace ( <c> , np . nan ) . dropna ( ) 
表 <A> の <b> と <c> コラムを落とす	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
分割数を <A> 、ビンのラベルを整数値として、 <C> 表データの <b> をビン分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 <E> = pd . cut ( <D> [ <b> ] , <A> , label = False ) 
<b> ファイル名から表をタブ区切りで読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	 dropna = pd . read_csv ( <b> , sep = '\t' ) 
ビン数を <C> 、ビンの名前を 0 始まりの連番として、 <A> 表の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
表 <A> の <b> が <c> 以下データを抽出する	<A> [ <A> [ <b> ] <= <c> ]	 @option <A> [ <A> [ <b> ] <= <c> ] 
<C> の <b> コラムと <a> コラムを降順に並び替えて、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	 False . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True ) 
表データ <A> の欠損値を表 <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表データ <B> の <a> を昇順に並び替える	<B> . sort_values ( <a> )	 x <B> . sort_values ( <a> ) 
<C> の表属性 <b> と <a> 表属性を消し、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 sns = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
表 <D> のカラム <a> について、 <c> を位置、 <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> 中の <b> を欠損に置換し、欠損が存在する行をドロップして、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
インデックスと <c> をキーとして <A> 表と <B> 表を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 merge pd . merge ( <A> , <B> , left_index = True , right_on = <c> ) 
<A> 軸を <A> とした <B> の棒グラフを描画する	plt . bar ( <A> , <B> )	 sns . bar ( <A> , <B> ) 
そのとき、改行の代わりに <A> を使う	@option end = <A>	 @option end = <A> 
データフレーム <B> の <a> 行目をドロップして、 <B> とする	<B> = <B> . drop ( <a> )	 plt . drop ( <B> , inplace = True ) 
データフレーム <B> とデータフレーム <A> を縦結合して、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	 width = pd . concat ( [ <B> , <A> ] ) 
<B> 中の <a> を欠損値に置換し、欠損値がある行をドロップし、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<B> の <e> について、列 <c> をインデックス、 <d> 列を列としたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
<b> から表をカンマ区切りで読み、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	 = pd . read_csv ( <b> , sep = ',' ) 
分割数を <D> 、ビンのラベルを 0 始まりの連番として、 <B> データフレームの <c> コラムをビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
表 <A> の <d> について、 <b> を位置、 <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表 <A> の <b> を消す	<A> . drop ( <b> , axis = 1 )	 plt . drop ( <A> , axis = 1 ) 
全結合で <A> 表データと表データ <B> を結合する	pd . merge ( <A> , <B> , how = 'outer' )	 pd . merge ( <A> , <B> , how = 'outer' ) 
表 <C> の <b> 表属性をインデックス、 <a> を表属性としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	 index . pivot_table ( index = <b> , columns = <a> ) 
<C> の列名を <b> から <a> に変更して、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	 <F> = <C> . rename ( columns = { <b> : <a> } ) 
データフレーム <A> のカラム名を <b> から <c> にリネームし、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
<A> 内のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	 get_dummies pd . get_dummies ( <A> ) 
表 <D> の表属性 <a> について、 <c> を位置、表属性 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <A> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表データ <A> のコラム <b> を位置、 <c> コラムをコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	 plt . pivot_table ( index = <b> , columns = <c> ) 
データフレーム <A> 内の <b> を欠損に置換し、欠損がある行を削除して、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <A> . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
位置と <a> をキーとしてデータフレーム <C> と <B> を結合し、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 merge = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
<b> 区切りで <a> からデータフレームを読む	pd . read_csv ( <a> , sep = <b> )	 pd . read_csv ( <b> , sep = <a> ) 
ビン数を <D> 、ビンの名前をインデックスとして、 <B> の表属性 <c> を分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
表データ <A> の <b> の年を見る	<A> [ <b> ] . dt . year	 <A> [ <b> ] . dt . year 
データフレーム <B> の <a> を削除し、 <B> にする	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
表 <A> の統計情報	<A> . describe ( )	 <A> . describe ( ) 
ビン数を <A> として、 <C> 表データの <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
<A> の内容を表示してみる	<A> . head ( )	 head <A> . head ( ) 
表データ <B> の振り直して、元のインデックスを削除して、 <A> に代入する	<A> = <B> . reset_index ( drop = True )	 'gray' = <B> . reset_index ( drop = True ) 
表 <A> 中の重複している行をドロップする	<A> . drop_duplicates ( )	 drop_duplicates . drop_duplicates ( ) 
<B> に存在する <a> を NaN とする	<B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan ) 
表データ <A> の <b> についての要約統計量を調べる	<A> [ <b> ] . describe ( )	 <b> <A> [ <b> ] . describe ( ) 
分割数を <D> 、ビンのラベルを <E> リストとして、 <B> の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <A> [ <c> ] , <D> , label = <E> ) 
データフレーム <A> のインデックスを振り直し、再代入する	<A> = <A> . reset_index ( )	 <A> . reset_index ( inplace = True ) 
表データ <A> の <b> のユニーク値を表示する	<A> [ <b> ] . unique ( )	 <B> [ <a> ] . unique ( ) 
表データ <B> の <a> の秒を表示する	<B> [ <a> ] . dt . second	 <B> [ <a> ] . dt . second 
表 <B> 内の <a> を NaN に置換し、 NaN が存在する行をドロップし、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 <D> . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
表 <A> 内の <b> と <c> に重複があるとき	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	 drop_duplicates if <A> . duplicated ( subset = [ <b> , <c> ] ) : 
とりあえず表データ <A> の内容を表示してみる	<A> . head ( )	 head <A> . head ( ) 
データフレーム <A> のコラム <b> をダミー変数化する	pd . get_dummies ( <A> [ <b> ] )	 get_dummies pd . get_dummies ( <A> [ <b> ] ) 
x 軸の軸ラベルを <a> と指定する	plt . xlabel ( <a> )	 xlabel . xlabel ( <a> ) 
カンマ区切りで <a> を読む	pd . read_csv ( <a> , sep = ',' )	 sns . read_csv ( <a> , sep = ',' ) 
データフレーム <C> の列 <b> が <a> より大きいデータ	<C> [ <C> [ <b> ] >  <a> ]	 <A> [ <C> [ <b> ] > <a> ] 
表データ <D> のコラム <c> と <b> ごとに <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
データフレーム <C> の <a> カラムの秒を見、  <C> [ <b> ] に代入する	  <C> [ <b> ] = <C> [ <a> ] . dt . second	 <C> [ <b> ] = <C> [ <a> ] . dt . second 
<A> のリセットして、元の位置を削除する	<A> . reset_index ( drop = True )	 reset_index . reset_index ( drop = True ) 
表データ <A> の <b> のユニーク値	<A> [ <b> ] . unique ( )	 <B> [ <a> ] . unique ( ) 
表データ <B> の <a> を位置に設定し、再代入する	<B> = <B> . set_index ( <a> )	 plt . set_index ( <B> , inplace = True ) 
表データ <A> の <b> と <c> と <d> について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
表 <A> の行の名前	<A> . index	 <A> . index 
データフレーム <B> の <a> についてのヒストグラムを表示する	plt . hist ( <B> [ <a> ] )	 bins plt . hist ( <B> [ <a> ] ) 
表 <A> 中の欠損を削除し、置き換える	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
データフレーム <A> の欠損値を <A> の平均値で補い、 <A> に代入する	<A> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
表 <E> の <d> 列の名前を <c> に、列 <b> の名前を <a> に変更して、 <E> にする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <A> の要素を確認する	<A> . values	 <A> . values 
表データ <A> の欠損を含む行を削除し、再代入する	<A> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
データフレーム <A> の <b> についての最頻値を得る	<A> [ <b> ] . mode ( )	 <b> <A> [ <b> ] . mode ( ) 
表 <A> 内の <b> を NaN に置換し、 NaN が存在する行を落とし、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
位置と <a> をキーとして表 <C> と表 <B> をマージして、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 sns = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
データフレーム <B> の表属性 <c> の名前を <d> にリネームして、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> } )	 sep <A> = <B> . rename ( columns = { <c> : <d> } ) 
表 <A> 内の NaN を <A> 表データの平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表データ <C> の <b> の名前を <a> に変更する	<C> . rename ( columns = { <b> : <a> } )	 index . rename ( columns = { <b> : <a> } ) 
境界値をリスト <D> として、表 <B> の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 <A> = pd . cut ( <B> [ <c> ] , <D> ) 
<A> 中の欠損値の数	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
表 <A> の <b> とコラム <c> の相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	 [ <A> [ <b> , <c> ] ] . corr ( ) 
タブ区切りで <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	 <A> = pd . read_csv ( <b> , sep = '\t' ) 
ビン数を <D> として、 <B> 表データの <c> 表属性を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 <A> = pd . cut ( <B> [ <c> ] , <D> ) 
<A> の <b> 表属性と <c> 表属性を消し、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True ) 
表データ <A> 中の重複している行を削除する	<A> . drop_duplicates ( )	 ) . drop_duplicates ( ) 
表データ <A> 内の欠損を含む行を落として、 <A> とする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
<C> の表属性 <b> と <a> 表属性を消して、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 plt . drop ( <C> , [ <b> , <a> ] , axis = 1 , inplace = True ) 
表データ <B> 内の欠損を <B> 表の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
<a> という軸ラベルを y 軸に付ける	plt . ylabel ( <a> )	 <a> plt . ylabel ( <a> ) 
左外部結合でデータフレーム <B> と <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	 merge = pd . merge ( <B> , <C> , how = 'left' ) 
<E> の <d> の名前を <c> に、カラム <b> の名前を <a> にリネームし、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <C> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<B> に存在する <a> を欠損に置き換えて、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan , inplace = True ) 
データフレーム <B> にある <a> を NaN に置換して、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan , inplace = True ) 
データフレーム <B> の最初から <a> 行目まで	<B> [ : <a> ]	 <B> [ : <a> ] 
表 <A> の <b> 列の名前を <c> にリネームし、 <A> にする	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
データフレーム <A> 内の表属性 <b> に重複がある行を削除する	<A> . drop_duplicates ( subset = <b> )	 ) . drop_duplicates ( subset = <b> ) 
表 <C> の <b> の名前を <a> にリネームし、インプレースする	<C> . rename ( index = { <b> : <a> } , inplace = True )	 <A> . rename ( columns = { <b> : <a> } , inplace = True ) 
データフレーム <A> 中の NaN を <B> として、インプレースする	<A> . fillna ( <B> , inplace = True )	 <A> . fillna ( <B> , inplace = True ) 
表データ <B> の列の名前を <c> から <d> に、 <e> から <f> にリネームし、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
<A> の円グラフを表示する	plt . pie ( <A> )	 sns . pie ( <A> ) 
表データ <C> の表属性 <b> の名前を <a> にリネームして、インプレースする	<C> . rename ( columns = { <b> : <a> } , inplace = True )	 plt . rename ( columns = { <b> : <a> } , inplace = True ) 
<A> の <b> 列と列 <c> を降順に並び替え、 <A> に代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
データフレーム <A> の <c> の年を  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . year	 [ <b> ] = <A> [ <c> ] . dt . year 
<A> と <B> 表を縦方向で一つにまとめる	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
分割数を <D> 、ビンのラベルを <E> リストとして、 <B> データフレームの <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <A> [ <c> ] , <D> , label = <E> ) 
表 <A> の重複した行数	<A> . duplicated ( ) . sum ( )	 ) . duplicated ( ) . sum ( ) 
表 <A> の <b> と <c> を削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表 <A> 中の <b> を欠損値に置換し、欠損値が存在する行を削除して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 plt . replace ( <A> , np . nan ) . dropna ( inplace = True ) 
<A> のリセットして、元の位置を削除し、置き換える	<A> = <A> . reset_index ( drop = True )	 reset_index = <A> . reset_index ( drop = True ) 
データフレーム <A> にある <b> を NaN に置換して、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
表データ <C> の <b> コラムと <a> を降順に並び替えて、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True ) 
データフレーム <C> の <b> が <a> 以上のデータ	<C> [ <C> [ <b> ] >= <a> ]	 >= <C> [ <C> [ <b> ] >= <a> ] 
値のレンジを <b> から <c> として、 <A> のヒストグラムを表示する	plt . hist ( <A> , range = ( <b> , <c> ) )	 pd . hist ( <A> , range = ( <b> , <c> ) ) 
<E> の <d> の名前を <c> に、 <b> 列の名前を <a> にリネームし、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <A> = <E> . rename ( columns = { <b> : <c> , <d> : <a> } ) 
表 <A> の <b> 行目を落として、再代入する	<A> = <A> . drop ( <b> )	 <b> = <A> . drop ( <b> ) 
<a> 区切りで <b> からデータフレームを読んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	 <A> = pd . read_csv ( <b> , sep = <a> ) 
<B> と <C> 表データを縦結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	 = pd . concat ( [ <B> , <C> ] ) 
データフレーム <D> の <a> 表属性について、 <c> 表属性を位置、 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <A> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表データ <B> 内の欠損値を削除し、 <A> とする	<A> = <B> . dropna ( )	 @option dropna = <B> . dropna ( ) 
表 <A> 内の NaN を <A> 表データの平均値で埋めて、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
表データ <B> と表 <C> を縦方向で結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	 = pd . concat ( [ <B> , <C> ] ) 
<B> の元の位置を振り直して、 <A> にする	<A> = <B> . reset_index ( drop = True )	 reset_index = <B> . reset_index ( drop = True ) 
位置と <d> をキーとして <B> 表と表 <C> をマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
表データ <D> のコラム <c> と <b> と <a> コラムについての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	 plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] ) 
分割数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> データフレームの <b> コラムをビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
<A> の <c> の月を確認し、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . month	 <A> [ <b> ] = <A> [ <c> ] . dt . month 
データフレーム <A> 内の欠損値がある行を消して、 <A> とする	<A> = <A> . dropna ( )	 dropna <A> = <A> . dropna ( ) 
表データ <A> 中の欠損値を <A> の平均値で補って、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
データフレーム <B> 中の欠損を直前の行の値で補い、 <A> にする	<A> = <B> . fillna ( method = 'ffill' )	 <d> = <B> . fillna ( method = 'ffill' ) 
ビン数を <B> 、ビンの名前を <A> リストとして、 <D> データフレームの列 <c> をビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
データフレーム <A> 中の <b> に重複がある行を削除し、置き換える	<A> = <A> . drop_duplicates ( subset = <b> )	 <A> = <A> . drop_duplicates ( subset = <b> ) 
ビン数を <D> 、ビンのラベルを 0 始まりの連番として、表 <B> の <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 ] <A> = pd . cut ( <B> [ <c> ] , <D> , label = False ) 
<A> の <b> と <c> コラムごとに <d> の値の合計を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
<C> のカラム名を <b> から <a> にリネームして、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
表 <A> の列 <b> と <c> を削除し、インプレースする	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	 drop <A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True ) 
位置と <a> をキーとして <C> 表と <B> を結合し、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 sns = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
位置と <a> 列をキーとして <C> と <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 merge = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
データフレーム <D> の <a> について、 <c> をインデックス、コラム <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> の <c> 表属性の月を見て、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . month	 <A> [ <b> ] = <A> [ <c> ] . dt . month 
<B> の <a> を落とし、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	 <B> = <B> . drop ( <a> , axis = 1 ) 
インデックスと <d> カラムをキーとして <B> と <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
フォーマットを指定して、 <B> 表データの <a> を年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' ) 
データフレーム <A> 中の NaN をデータフレーム <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	 mean <A> . fillna ( <A> . mean ( ) ) 
表データ <B> 中のコラム <a> に重複がある行を削除して、 <C> にする	<C> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
<A> 内の <b> コラムに重複がある行をドロップして、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	 <F> = <A> . drop_duplicates ( subset = <b> ) 
データフレームを <b> ファイルパスからカンマ区切りで読み込み、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	 <A> = pd . read_csv ( <b> , sep = ',' ) 
表 <B> 内に存在する <a> を NaN に置換して、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
表 <A> の NaN を含む行を削除して、再代入する	<A> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
表データ <B> 内の <a> を欠損に置換し、欠損が存在する行を消して、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <A> の振り直して、元の位置を削除する	<A> . reset_index ( drop = True )	 reset_index . reset_index ( drop = True ) 
データフレーム <A> の <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] )	 '%Y-%m-%d' pd . to_datetime ( <A> [ <b> ] ) 
<c> をキーとして、 <A> と <B> 表をマージする	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
データフレーム <A> の <b> の名前を <c> に変更する	<A> . rename ( index = { <b> : <c> } )	 plt <A> . rename ( index = { <b> : <c> } ) 
表データ <D> の <a> について、 <c> を位置、 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
データフレーム <C> の <b> とカラム <a> を降順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 False . sort_values ( [ <b> , <a> ] , ascending = False ) 
表 <B> 中の <a> に重複がある行を削除して、 <B> にする	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
表 <D> の <c> コラムが <b> または <a> のデータ	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	 <E> <D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ] 
<c> 区切りで表を <b> から読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
位置と <c> をキーとして <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 . pd ( <A> , <B> , left_index = True ) 
表 <A> のカラム <b> をインデックスに設定して、 <A> とする	<A> = <A> . set_index ( <b> )	 <F> = <A> . set_index ( <b> ) 
データフレーム <A> の <c> の秒を確認し、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . second	 <d> [ <b> ] = <A> [ <c> ] . dt . second 
表 <C> の <b> コラムが <a> 以下データ	<C> [ <C> [ <b> ] <= <a> ]	 <A> [ <C> [ <b> ] <= <a> ] 
表 <A> の行と列を入れ替える	<A> . T	 T . T 
そのとき、マーカーカラーを赤色とする	@option markerfacecolor = 'red'	 @option markerfacecolor = 'red' 
タイトルを <a> に設定する	plt . title ( <a> )	 sns . title ( <a> ) 
分割数を <A> として、表 <C> の <b> コラムを分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
データフレーム <D> の <c> コラムとコラム <b> と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pairplot sns . pairplot ( <D> [ [ <c> , <b> , <b> , <a> ] ] ] ) 
表データ <B> 内の欠損値を <A> に置き換える	<B> . fillna ( <A> )	 <A> . isnull ( ) . sum ( ) 
<B> の <a> コラムについてのヒストグラムを描画する	plt . hist ( <B> [ <a> ] )	 bins plt . hist ( <B> [ <a> ] ) 
表 <A> の <b> と <c> 列と列 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	 . plt ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] ) 
<B> 内にある <c> を欠損に置換し、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	 @option replace = <B> . replace ( <c> , np . nan ) 
境界値を <A> リストとして、 <C> 表の <b> カラムを分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
表 <C> の列 <b> と <a> を削除し、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	 drop . drop ( [ <b> , <a> ] , axis = 1 , inplace = True ) 
データフレーム <D> の <c> コラムとコラム <b> と <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	 plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] ) 
データフレーム <A> の <d> 表属性について、 <b> 表属性を位置、 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表 <B> のインデックス名を <c> から <d> にリネームし、 <A> にする	<A> = <B> . rename ( index = { <c> : <d> } )	 = <B> . rename ( index = { <c> : <d> } ) 
表 <A> 内の NaN がある行を消して、 <B> にする	<B> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
表データ <A> 内にある <b> を欠損として、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
データフレーム <A> 中の欠損値の数を表示する	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
<A> のカラム <b> と <c> と <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
表データ <B> と <A> を一つにまとめ、 <C> にする	<C> = pd . merge ( <B> , <A> )	 <C> = pd . merge ( <B> , <A> ) 
<B> の <a> 行目を落とす	<B> . drop ( <a> )	 x <B> . drop ( <a> ) 
表データ <A> 内のそれぞれのカラムに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	 <A> . isin ( [ <b> ] ) . sum ( ) 
データフレーム <E> の表属性 <d> の名前を <c> に、 <b> の名前を <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 { <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <A> 内にある <b> を欠損値に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
データフレーム <A> の <b> 行目をドロップして、 <A> とする	<A> = <A> . drop ( <b> )	 <b> = <A> . drop ( <b> ) 
列番号 <b> を位置として、 <a> を読む	pd . read_csv ( <a> , index_col = <b> )	 pd . read_csv ( <a> , index_col = <b> ) 
表 <B> の <a> を削除して、 <B> に代入する	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
<B> 内の <a> コラムに重複がある行をドロップして、インプレースする	<B> . drop_duplicates ( subset = <a> , inplace = True )	 plt . drop_duplicates ( subset = <a> , inplace = True ) 
データフレーム <B> 内にある <a> を NaN に置き換えて、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
表データ <B> のカラム <a> の要素	<B> [ <a> ] . values	 <D> [ <a> ] . values 
表データ <A> 中に存在する <b> を欠損値に置換して、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
先頭の列をインデックスとして、 <a> を読み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	 = pd . read_csv ( <a> , index_col = 0 ) 
<a> から表データを読み、 <B> とする	<B> = pd . read_csv ( <a> )	 = pd . read_csv ( <a> ) 
境界値を <A> として、 <C> 表の列 <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
表データ <A> の <c> の月を確認して、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . month	 <A> [ <b> ] = <A> [ <c> ] . dt . month 
表データ <A> の <b> と <c> を降順に並び替えて、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
位置と <a> をキーとして表データ <C> と表データ <B> を結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 <F> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
表データ <A> に存在する <b> を欠損値とする	<A> . replace ( <b> , np . nan )	 np <A> . replace ( <b> , np . nan ) 
<A> の <b> 表属性と <c> を削除し、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
データフレーム <A> のカラム名を <b> から <c> にリネームし、インプレースする	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <A> . rename ( columns = { <b> : <c> } , inplace = True ) 
<A> の行の名前を <b> から <c> にリネームし、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	 <A> = <A> . rename ( index = { <b> : <c> } ) 
<B> の <a> に重複がある場合	if <B> . duplicated ( subset = <a> ) :	 duplicated if <B> . duplicated ( subset = <a> ) : 
表データ <A> の欠損値を含む行を落とす	<A> . dropna ( )	 <A> . dropna ( ) 
データフレーム <B> と <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> )	 <C> = pd . merge ( <B> , <A> ) 
<A> 中の欠損値を消して、 <A> とする	<A> = <A> . dropna ( )	 = <A> . dropna ( ) 
<A> の <c> の分を調べて、  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . minute	 [ <b> ] = <A> [ <c> ] . dt . minute 
表 <B> の <a> 表属性を中央値でビン分割する	pd . qcut ( <B> [ <a> ] , 2 )	 sns pd . qcut ( <B> [ <a> ] , 2 ) 
区間を <b> として、 <A> のヒストグラムを描写する	plt . hist ( <A> , bins = <b> )	 pd . hist ( <A> , bins = <b> ) 
とりあえず表 <A> の内容を表示してみる	<A> . head ( )	 <A> . head ( ) 
表データ <B> の <e> について、 <c> を位置、 <d> をコラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
表 <A> の <b> をドロップする	<A> . drop ( <b> , axis = 1 )	 plt . drop ( <A> , axis = 1 ) 
表データ <C> の <b> ごとに表属性 <a> の個数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
データフレーム <A> の <b> の日にちを調べる	<A> [ <b> ] . dt . day	 <b> <A> [ <b> ] . dt . day 
表データ <A> の <b> コラムをインデックスとする	<A> . set_index ( <b> )	 index_col = <A> . set_index ( <b> ) 
データフレーム <B> の <a> 行目をドロップし、インプレースする	<B> . drop ( <a> , inplace = True )	 plt . drop ( <a> , inplace = True ) 
y 軸に <a> 軸ラベルを付ける	plt . ylabel ( <a> )	 <a> plt . ylabel ( <a> ) 
表 <C> のインデックス名を <b> から <a> にリネームして、インプレースする	<C> . rename ( index = { <b> : <a> } , inplace = True )	 plt . rename ( index = { <b> : <a> } , inplace = True ) 
棒グラフの位置を真ん中として、 <B> 軸を <B> とした <A> の棒グラフを描写する	plt . bar ( <B> , <A> , align = 'center' )	 plt . bar ( <B> , <A> , align = 'center' ) 
<D> の <c> と表属性 <b> と表属性 <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pd . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
範囲を <b> から <c> として、 <A> のヒストグラムを描画する	plt . hist ( <A> , range = ( <b> , <c> ) )	 pd . hist ( <A> , range = ( <b> , <c> ) ) 
<A> 中の NaN が存在する行を落とし、置き換える	<A> = <A> . dropna ( )	 <B> = <A> . dropna ( ) 
表データ <A> の <b> コラムをグループ化して、値ごとのデータ数を計算する	<A> . groupby ( <b> ) . size ( )	 <B> . groupby ( <b> ) . size ( ) 
表 <C> の <b> ごとに <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . mean ( ) 
表データ <B> 中に存在する <c> を欠損に置き換え、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	 <F> = <B> . replace ( <c> , np . nan ) 
エクセルファイル <a> の <b> を読み込む	pd . read_excel ( <a> , sheet_name = <b> )	 read_excel pd . read_excel ( <a> , sheet_name = <b> ) 
<A> 内の欠損値を <A> の平均値で補って、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	 <B> = <A> . fillna ( <A> . mean ( ) ) 
全結合でデータフレーム <A> と <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	 pd . merge ( <A> , <B> , how = 'outer' ) 
表データ <A> のカラム <b> の要素	<A> [ <b> ] . values	 <A> [ <b> ] . values 
位置と <c> をキーとしてデータフレーム <A> と <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 sns . pd ( <A> , <B> , left_index = True ) 
ビン数を <C> 、ビンの名前を <D> として、表データ <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
表 <A> の <b> ごとにコラム <c> の数を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . count ( ) 
データフレーム <A> 内の欠損値の数	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
表 <B> の <a> 行目を落とし、置き換える	<B> . drop ( <a> , inplace = True )	 plt . drop ( <B> , inplace = True ) 
データフレーム <A> 内の <b> カラムと <c> カラムに重複があるか	<A> . duplicated ( subset = [ <b> , <c> ] )	 if <A> . duplicated ( subset = [ <b> , <c> ] ) : 
<A> のカラム <b> が <c> より多いデータを取得する	<A> [ <A> [ <b> ] >  <c> ]	 @option <A> [ <A> [ <b> ] > <c> ] 
表データ <B> の <a> コラムをインデックスとして、 <B> にする	<B> = <B> . set_index ( <a> )	 <B> = <B> . set_index ( <a> ) 
表データ <A> 内の <b> を NaN に置換し、 NaN が存在する行を落とし、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 @option replace = <A> . replace ( <b> , np . nan ) . dropna ( ) 
軸を <A> として、 <B> の横向きの棒グラフを表示する	plt . barh ( <A> , <B> , align = 'center' )	 plt . barh ( <A> , <B> , align = 'center' ) 
表データ <B> の <e> について、表属性 <c> をインデックス、表属性 <d> を表属性としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <F> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
データフレーム <A> のカラム <b> と <c> を抽出する	<A> [ [ <b> , <c> ] ]	 [ <A> [ <b> , <c> ] ] 
<A> の index が <b> の行を得る	<A> . loc [ <b> ]	 loc . loc [ <b> ] 
境界値を <A> リストとして、 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
表 <B> の <a> をソートする	<B> . sort_values ( <a> )	 x <B> . sort_values ( <a> ) 
表 <A> の位置 <b> の名前を <c> にリネームして、 <A> とする	<A> = <A> . rename ( index = { <b> : <c> } )	 <A> = <A> . rename ( index = { <b> : <c> } ) 
ビン数を <B> 、ビンの名前を <A> として、表データ <D> の <c> を分割し、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
<A> の <b> インデックスの名前を <c> に変更し、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	 <A> . rename ( index = { <b> : <c> } , inplace = True ) 
表データ <B> 内の <a> コラムに重複がある行を落として、置き換える	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
データフレーム <A> 内の <b> を欠損値に置換し、欠損値が存在する行をドロップし、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
データフレーム <A> の <b> カラムの要素	<A> [ <b> ] . values	 <A> [ <b> ] . values 
表をファイル名 <b> から読み、 <A> とする	<A> = pd . read_csv ( <b> )	 dropna = pd . read_csv ( <b> ) 
インデックスと <a> をキーとして <C> 表と表 <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 sns = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
データフレーム <C> の <b> 表属性ごとに <a> の個数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
データフレーム <B> 中の <a> を欠損値に置換し、欠損値が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
<A> の <b> 列についての箱ひげ図を描く	plt . boxplot ( <A> [ <b> ] )	 fillna plt . boxplot ( <A> [ <b> ] ) 
<B> 中の <a> 表属性に重複がある行をドロップし、 <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
データフレーム <B> の <a> を欠損値に置換し、欠損値が存在する行を消して、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレームを <b> からタブ区切りで読み込み、 <A> にする	<A> = pd . read_csv ( <b> , sep = '\t' )	 <A> = pd . read_csv ( <b> , sep = '\t' ) 
データフレーム <A> の <c> の時間を見、  <A> [ <b> ] に代入する	  <A> [ <b> ] = <A> [ <c> ] . dt . hour	 <A> [ <b> ] = <A> [ <c> ] . dt . hour 
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	 ] <A> = <A> . drop_duplicates ( keep = False ) 
<B> の <a> を NaN に置換し、 NaN がある行を消し、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<A> 中の欠損値を <B> に置換し、置き換える	<A> = <A> . fillna ( <B> )	 <A> . fillna ( <B> , inplace = True ) 
そのとき、マーカーのエッジカラーを黄緑とする	@option markeredgecolor = 'greenyellow'	 <D> = pd . read_csv ( <a> , index_col = 'greenyellow' ) 
表 <A> の <b> のユニークな要素の個数を調べる	<A> [ <b> ] . nunique ( )	 <b> <A> [ <b> ] . nunique ( ) 
<A> のリセットして、元のインデックスを削除して、再代入する	<A> = <A> . reset_index ( drop = True )	 <F> = <A> . reset_index ( drop = True ) 
<D> の <a> について、 <c> 表属性を位置、 <b> 表属性を表属性としたピボットテーブルを作成して、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<c> 区切りで <b> ファイルから表データを読み込み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
表 <A> 内に存在する <b> を NaN に置換し、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	 @option replace ( <b> , np . nan , inplace = True ) 
位置と <a> をキーとして <C> 表と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
表 <A> の <b> コラムと <c> と <d> について関係性を一度にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
データフレーム <B> の <a> を昇順に並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	 x <B> . sort_values ( <a> , inplace = True ) 
表データ <C> の表属性 <b> と <a> を降順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> . sort_values ( [ <b> , <a> ] , ascending = False ) 
データフレーム <A> の <b> を欠損値に置換し、欠損値が存在する行を消して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 plt . replace ( <A> , np . nan ) . dropna ( inplace = True ) 
<A> 内に存在する <b> を欠損とする	<A> . replace ( <b> , np . nan )	 plt . replace ( <A> , np . nan ) 
左外部結合でデータフレーム <B> とデータフレーム <A> をマージする	pd . merge ( <B> , <A> , how = 'left' )	 pd . merge ( <B> , <A> , how = 'left' ) 
表データ <D> の <c> と <b> 列ごとに <a> 列の値の合計を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表データ <A> の <b> と <c> 列の相関を見る	<A> [ [ <b> , <c> ] ] . corr ( )	 index_col <A> [ <b> , <c> ] ] . corr ( ) 
<A> 中のそれぞれのカラムにある <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	 <A> . isin ( [ <b> ] ) . sum ( ) 
表 <A> 内にある <b> を欠損とし、置き換える	<A> = <A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan , inplace = True ) 
表データ <B> の <a> を位置として、置き換える	<B> = <B> . set_index ( <a> )	 <A> . set_index ( <a> , inplace = True ) 
全結合で <B> 表と <A> 表をマージする	pd . merge ( <B> , <A> , how = 'outer' )	 pd . merge ( <B> , <A> , how = 'outer' ) 
表データ <A> の <b> コラムと <c> コラムを削除して、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <C> の <b> と <a> に重複があるならば	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	 plt . duplicated ( subset = [ <b> , <a> ] ) : 
表データ <A> 中の欠損値を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	 <B> . fillna ( <A> . mean ( ) ) 
表 <B> 内の欠損を含む行をドロップし、 <A> にする	<A> = <B> . dropna ( )	 <B> = <B> . dropna ( ) 
表データ <B> 中にある <a> を欠損に置き換えて、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	 replace . replace ( <a> , np . nan , inplace = True ) 
<a> からデータフレームをタブ区切りで読み込む	pd . read_csv ( <a> , sep = '\t' )	 pd . read_csv ( <a> , sep = '\t' ) 
データフレーム <B> を位置で並び替えて、 <A> とする	<A> = <B> . sort_index ( )	 @option start = <B> . sort_index ( ) 
表 <B> の <c> を NaN に置換し、 NaN が存在する行を落とし、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 'gray' = <B> . replace ( <c> , np . nan ) . dropna ( ) 
<A> 内の欠損値が存在する行をドロップし、置き換える	<A> = <A> . dropna ( )	 <E> = <A> . dropna ( ) 
分割数を <D> 、ビンの名前をインデックスとして、 <B> の表属性 <c> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
データフレーム <A> の <b> と <c> を降順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
データフレーム <A> の <b> と <c> を降順にソートして、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	 False = <A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True ) 
データフレーム <A> 中の欠損値がある行を落とし、 <B> とする	<B> = <A> . dropna ( )	 <F> = <A> . dropna ( ) 
データフレーム <A> 内の表属性 <b> に重複がある行を削除し、置き換える	<A> = <A> . drop_duplicates ( subset = <b> )	 <A> = <A> . drop_duplicates ( subset = <b> ) 
表 <A> 中の欠損を削除する	<A> . dropna ( )	 dropna . dropna ( ) 
表データ <B> の <c> を落として、 <A> に代入する	<A> = <B> . drop ( <c> , axis = 1 )	 <A> = <B> . drop ( <c> , axis = 1 ) 
表 <A> の <b> ごとに <c> 列の数を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . count ( ) 
<A> の <b> カラムに重複があるか	<A> . duplicated ( subset = <b> )	 subset . duplicated ( subset = <b> ) 
表 <B> の列の名前を <c> から <d> に、 <e> から <f> にリネームして、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
分割数を <C> として、表 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	 pd . cut ( <A> [ <b> ] , <C> ) 
データフレーム <A> に存在する <b> を NaN に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
<A> 内の欠損値を含む行を削除して、インプレースする	<A> . dropna ( inplace = True )	 plt . dropna ( inplace = True ) 
<A> 中にある <b> を NaN とし、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	 @option replace ( <b> , np . nan , inplace = True ) 
区間を <a> として、 <B> のヒストグラムを描画する	plt . hist ( <B> , bins = <a> )	 pd . hist ( <B> , bins = <a> ) 
表 <A> 内の NaN を <B> に置き換える	<A> . fillna ( <B> )	 <A> . isnull ( ) . sum ( ) 
<A> の <b> と <c> を削除して、 <A> に代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <A> の <b> とコラム <c> ごとに <d> の値の合計を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
そこで、マーカーのエッジカラーをネイビーとする	@option markeredgecolor = 'navy'	 @option markeredgecolor = 'navy' 
表 <B> の <a> カラムについてのヒストグラムを描画する	plt . hist ( <B> [ <a> ] )	 bins plt . hist ( <B> [ <a> ] ) 
<C> の <b> 列が <a> 以下データ	<C> [ <C> [ <b> ] <= <a> ]	 <A> [ <C> [ <b> ] <= <a> ] 
<b> から表を <a> 区切りで読み込む	pd . read_csv ( <b> , sep = <a> )	 pd . read_csv ( <b> , sep = <a> ) 
<D> の <c> と <b> と <a> について関係性を一度に表示する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
<B> の <a> 内の前後の行の差分を求める	<B> [ <a> ] . diff ( periods = 1 )	 <B> [ <a> ] . diff ( periods = 1 ) 
表データ <A> の欠損値を落とす	<A> . dropna ( )	 dropna . dropna ( ) 
<D> の <c> とカラム <b> ごとに <a> の値の合計を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 plt . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <A> の欠損値を <A> の平均値で補って、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
表 <A> の <b> の曜日の数値型を確認する	<A> [ <b> ] . dt . dayofweek	 <A> [ <b> ] . dt . dayofweek 
<B> の <a> 行から末尾までを確認する	<B> [ <a> : ]	 <B> [ <a> : ] 
表データ <E> のカラム名を <d> から <c> に、 <b> から <a> に変更して、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表 <B> の <a> についての中央値を抽出する	<B> [ <a> ] . median ( )	 [ <B> [ <a> ] . median ( ) 
表属性 <a> をキーとして、 <C> データフレームと <B> を結合する	pd . merge ( <C> , <B> , on = <a> )	 pd . merge ( <C> , <B> , on = <a> ) 
表データ <A> の <b> ごとに <c> の平均を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . mean ( ) 
データフレーム <A> の先頭 <b> 行	<A> . head ( <b> )	 head . head ( <b> ) 
<A> の振り直して、元のインデックスを削除して、再代入する	<A> = <A> . reset_index ( drop = True )	 <F> = <A> . reset_index ( drop = True ) 
<B> の <a> 表属性に重複がある行を削除して、 <C> に代入する	<C> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を削除する	<A> . drop_duplicates ( keep = False )	 <B> . drop_duplicates ( keep = False ) 
表 <A> の <d> について、 <b> をインデックス、コラム <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 <A> . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表データ <A> 内にある <b> を欠損に置き換える	<A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan ) 
表データ <B> の <e> について、 <c> をインデックス、カラム <d> をカラムとしたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
表 <A> の <b> を NaN に置換し、 NaN が存在する行を消して、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表データ <A> と表データ <B> を縦方向でマージする	pd . concat ( [ <A> , <B> ] )	 pd . concat ( [ <A> , <B> ] ) 
表 <A> のカラム <b> をインデックスに設定する	<A> . set_index ( <b> )	 index_col . set_index ( <b> ) 
表データ <B> 中の欠損を表データ <B> の平均値で補い、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
表データ <A> 内の欠損が存在する行を落として、インプレースする	<A> . dropna ( inplace = True )	 <A> . dropna ( inplace = True ) 
表 <C> の <b> と <a> を降順にソートして、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
<A> の <b> 表属性と表属性 <c> を降順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	 plt <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
データフレーム <A> の <b> が <c> か <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	 @option <A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ] 
表 <B> 中の <a> に重複がある行を削除して、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
データフレーム <C> の <a> の年を  <C> [ <b> ] にする	  <C> [ <b> ] = <C> [ <a> ] . dt . year	 <A> [ <b> ] = <C> [ <a> ] . dt . year 
データフレーム <A> の <b> のバリューを調べる	<A> [ <b> ] . values	 <A> [ <b> ] . values 
表データ <B> 中の <c> を欠損に置換し、欠損がある行をドロップし、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 <A> = <B> . replace ( <c> , np . nan ) . dropna ( ) 
データフレーム <D> の表属性 <a> について、 <c> 表属性を位置、表属性 <b> を表属性としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
ビン数を <A> として、 <C> データフレームの <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
<B> 中の欠損を表 <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
表 <B> のカラム <a> をインデックスに設定し、インプレースする	<B> . set_index ( <a> , inplace = True )	 x <B> . set_index ( <a> , inplace = True ) 
表 <B> の <a> の秒を表示する	<B> [ <a> ] . dt . second	 <a> [ <B> [ <a> ] . dt . second 
<A> 中の <b> を欠損に置換し、欠損が存在する行を落として、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表データを <c> 区切りでファイル名 <b> から読み、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
データフレーム <A> 内の欠損値を <B> とし、 <A> にする	<A> = <A> . fillna ( <B> )	 <A> = <A> . fillna ( <B> ) 
表データ <A> のカラム <b> をインデックス、 <c> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	 plt . pivot_table ( index = <b> , columns = <c> ) 
データフレーム <A> 中の欠損が存在する行を消す	<A> . dropna ( )	 <B> . dropna ( ) 
表データ <A> の末尾の 5 行を見る	<A> . tail ( )	 <A> . tail ( ) 
表 <B> の <a> をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	 <B> . groupby ( <a> ) . size ( ) 
表データ <B> 中の <a> を欠損に置換し、欠損が存在する行をドロップし、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <C> の <b> 表属性が <a> 以下データ	<C> [ <C> [ <b> ] <= <a> ]	 <A> [ <C> [ <b> ] <= <a> ] 
表 <A> 中の <b> を欠損値に置換し、欠損値がある行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	 ) . replace ( <b> , np . nan ) . dropna ( ) 
表データ <A> のコラム <b> の名前を <c> にリネームして、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
<A> 中の <b> 表属性に重複がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 @option drop_duplicates = <A> . drop_duplicates ( subset = <b> ) 
ビン数を <A> 、ビンの名前を整数値として、 <C> 表のカラム <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns . pd ( <C> [ <b> ] , <A> , label = False ) 
<B> 中の <c> に重複がある行を消して、 <A> にする	<A> = <B> . drop_duplicates ( subset = <c> )	 dropna = <B> . drop_duplicates ( subset = <c> ) 
表データ <C> の <b> が <a> より多いデータを抽出する	<C> [ <C> [ <b> ] >  <a> ]	 <C> [ <C> [ <b> ] > <a> ] 
表 <B> の欠損値を含む行をドロップして、 <A> とする	<A> = <B> . dropna ( )	 <A> = <B> . dropna ( ) 
表データ <B> のインデックスをリセットして、 <A> に代入する	<A> = <B> . reset_index ( )	 'gray' = <B> . reset_index ( ) 
表データ <A> の欠損値がある行を削除して、置き換える	<A> . dropna ( inplace = True )	 <C> = <A> . dropna ( ) 
<D> の列 <a> について、列 <c> をインデックス、 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <E> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> の <b> 列のバリュー	<A> [ <b> ] . values	 <A> [ <b> ] . values 
そこで、マーカーのエッジカラーを黄緑色とする	@option markeredgecolor = 'greenyellow'	 @option markeredgecolor = 'greenyellow' 
表 <A> の <c> の年を  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . year	 <A> [ <b> ] = <A> [ <c> ] . dt . year 
表 <B> 内の NaN を <A> に置き換え、置き換える	<B> = <B> . fillna ( <A> )	 <A> . fillna ( <B> , inplace = True ) 
分割数を <A> 、ビンの名前をインデックスとして、 <C> 表の <b> 表属性をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns pd pd . cut ( <C> [ <b> ] , <A> , label = False ) 
表データ <A> 内の欠損を表 <A> の平均値で埋め、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
<A> 中の欠損値を表 <A> の平均値で埋め、 <B> に代入する	<B> = <A> . fillna ( <A> . mean ( ) )	 <F> = <A> . fillna ( <A> . mean ( ) ) 
<B> の末尾の <a> 行を見る	<B> . tail ( <a> )	 x <B> . tail ( <a> ) 
表データ <A> の <b> に重複がある行を消して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 <b> = <A> . drop_duplicates ( subset = <b> ) 
<B> をエクセルファイル <a> に書き出す	<B> . to_excel ( <a> )	 <A> . to_excel ( <a> ) 
<B> の <c> とコラム <d> を削除して、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	 <A> = <B> . drop ( [ <c> , <d> ] , axis = 1 ) 
<D> の <c> と <b> カラムごとにカラム <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
表 <B> のカラム <a> を消す	<B> . drop ( <a> , axis = 1 )	 <B> . drop ( <a> , axis = 1 ) 
表データ <C> の <b> ごとに表属性 <a> の個数を算出する	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 plt . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
<B> の表属性 <e> について、 <c> をインデックス、 <d> を表属性としたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
<b> を読み、 <A> とする	<A> = pd . read_csv ( <b> )	 pd . read_csv ( <b> , sep = <A> ) 
分割数を <B> 、ビンの名前を <A> として、 <D> の <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 . pd ( <D> [ <c> ] , <B> , label = <A> ) 
<b> ファイル名からデータフレームを <a> 区切りで読み込む	pd . read_csv ( <b> , sep = <a> )	 pd . read_csv ( <a> , sep = <b> ) 
表データ <B> 中のコラム <a> に重複がある行を削除する	<B> . drop_duplicates ( subset = <a> )	 <B> . drop_duplicates ( subset = <a> ) 
表 <E> の <d> コラムの名前を <c> に、 <b> の名前を <a> にリネームして、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True ) 
表 <A> のカラム <b> が <c> もしくは <d> のデータ	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	 <A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ] 
カンマ区切りでデータフレームを <a> から読む	pd . read_csv ( <a> , sep = ',' )	 sns . read_csv ( <a> , sep = ',' ) 
表 <A> の列の名前を <b> から <c> に、 <d> から <e> に変更し、 <A> にする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
データフレーム <B> と <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> )	 <C> = pd . merge ( <B> , <A> ) 
データフレーム <A> 中の欠損値を表 <A> の平均値で補って、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
データフレーム <A> 中の <b> を欠損値に置換し、欠損値がある行を削除し、 <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 = <A> . replace ( <b> , np . nan ) . dropna ( ) 
ビン数を <A> 、ビンの名前をインデックスとして、 <C> の <b> を分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns <D> = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
表データ <C> の <a> の曜日を調べ、  <C> [ <b> ] にする	  <C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	 <A> [ <b> ] = <C> [ <a> ] . dt . weekday_name 
<A> 内の欠損を表 <A> の平均値で埋め、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
データフレーム <B> 中の欠損値を表 <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	 <A> = <B> . fillna ( <B> . mean ( ) ) 
<a> を項目名として、表 <C> と <B> 表を結合する	pd . merge ( <C> , <B> , on = <a> )	 pd . merge ( <C> , <B> , on = <a> ) 
表データ <B> 中の <a> を欠損値に置換し、欠損値がある行をドロップし、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <E> の表属性 <d> の名前を <c> に、 <b> の名前を <a> に変更して、 <F> とする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
表データ <A> の位置をリセットする	<A> . reset_index ( )	 reset_index . reset_index ( ) 
<B> 中に存在する <a> を欠損値に置き換えて、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
表 <E> のカラム <d> 、 <c> 、 <b> 、 <a> を見る	<E> [ [ <d> , <c> , <b> , <a> ] ]	 markeredgewidth [ <d> , <c> , <b> , <a> ] ] 
ビン数を <C> 、ビンの名前を <D> リストとして、 <A> データフレームの列 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
ビン数を <C> 、ビンの名前を <D> として、 <A> の列 <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
<B> のリセットして、元のインデックスを削除して、 <A> に代入する	<A> = <B> . reset_index ( drop = True )	 dropna = <B> . reset_index ( drop = True ) 
ビン数を <A> として、 <C> データフレームの <b> コラムを分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
<A> の <b> カラムと <c> を降順に並び替えて、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 @option sort_values = <A> [ <b> , <c> ] , ascending = False ) 
データフレーム <A> の先頭の 5 行	<A> . head ( )	 head <A> . head ( ) 
<D> の <c> と <b> 列ごとに <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <A> . groupby ( [ <b> , <c> ] ) [ <a> ] . sum ( ) 
<B> の欠損値を含む行を落とし、 <A> に代入する	<A> = <B> . dropna ( )	 <A> = <B> . dropna ( ) 
<B> のインデックス名を <c> から <d> に変更して、 <A> とする	<A> = <B> . rename ( index = { <c> : <d> } )	 <A> = <B> . rename ( index = { <c> : <d> } ) 
表データ <B> 内の <a> を欠損値に置換し、欠損値が存在する行を消して、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 <A> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
表 <B> にある <a> を欠損値に置き換え、再代入する	<B> = <B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan , inplace = True ) 
表データ <A> 中の NaN がある行を消し、 <B> にする	<B> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
データフレーム <B> 中の <c> を NaN に置換し、 NaN が存在する行を削除して、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 dropna = <B> . replace ( <c> , np . nan ) . dropna ( ) 
表データ <A> の <b> が <c> または <d> のデータを得る	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	 <B> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ] 
表 <B> の列 <a> をインデックスに設定し、置き換える	<B> . set_index ( <a> , inplace = True )	 plt . set_index ( <B> , inplace = True ) 
表データ <A> のカラム <b> を位置に設定する	<A> . set_index ( <b> )	 index_col . set_index ( <b> ) 
表データ <A> に存在する <b> を欠損とする	<A> . replace ( <b> , np . nan )	 np <A> . replace ( <b> , np . nan ) 
<B> と <A> 表を縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
ビン数を <C> 、ビンの名前を整数値として、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 sns pd pd . cut ( <A> [ <b> ] , <C> , label = False ) 
表 <E> の <d> の名前を <c> に、 <b> の名前を <a> に変更して、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <C> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<b> ファイル名から表を <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	 pd . read_csv ( <b> , sep = <a> ) 
表データ <C> の <a> 表属性の月を調べ、  <C> [ <b> ] とする	  <C> [ <b> ] = <C> [ <a> ] . dt . month	 <A> [ <b> ] = <C> [ <a> ] . dt . month 
データフレーム <A> の <b> と <c> と表属性 <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
表データ <A> 中の <b> を欠損値に置換し、欠損値がある行をドロップし、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
表データ <C> の <b> と <a> を消す	<C> . drop ( [ <b> , <a> ] , axis = 1 )	 plt . drop ( [ <b> , <a> ] , axis = 1 ) 
データフレーム <E> のカラム <d> 、 <c> 、 <b> 、 <a> を見る	<E> [ [ <d> , <c> , <b> , <a> ] ]	 markeredgewidth [ <d> , <c> , <b> , <a> ] ] 
<B> の <a> カラムをダミー変数化し、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	 <F> = pd . get_dummies ( <B> [ <a> ] ) 
表データ <A> の <b> と <c> ごとに <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
位置と <d> を項目名として <B> と表 <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
分割数を <D> 、ビンのラベルをインデックスとして、表データ <B> の表属性 <c> を分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <A> = pd . cut ( <B> [ <c> ] , <D> , label = False ) 
境界値をリスト <C> として、 <A> データフレームの <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	 pd . cut ( <A> [ <b> ] , <C> ) 
表データ <C> の <b> コラムと <a> を降順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 False . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <A> の <b> に重複がある行を消す	<A> . drop_duplicates ( subset = <b> )	 index_col <A> . drop_duplicates ( subset = <b> ) 
表データ <A> 中の欠損を直前の行の値で埋めて、再代入する	<A> = <A> . fillna ( method = 'ffill' )	 method = <A> . fillna ( method = 'ffill' ) 
表 <A> 内の NaN の合計を確認する	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
<A> の <b> と <c> の相関を確認する	<A> [ [ <b> , <c> ] ] . corr ( )	 [ <A> [ <b> , <c> ] ] . corr ( ) 
分割数を <B> 、ビンの名前を <A> として、 <D> 表データの <c> をビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
表データ <B> と <A> を縦方向で結合する	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
分割数を <B> 、ビンの名前をリスト <A> として、 <D> 表の <c> をビン分割して、 <E> に代入する	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
分割数を <C> として、 <A> の列 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	 pd . cut ( <A> [ <b> ] , <C> ) 
データフレーム <D> の <c> とコラム <b> ごとにコラム <a> の値の合計値を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <B> 中の <a> を欠損値に置換し、欠損値が存在する行を落として、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 <D> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
表データ <A> 内の欠損が存在する行を落として、 <B> にする	<B> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
<A> の NaN を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	 method . fillna ( method = 'ffill' ) 
表 <D> の <c> が <b> または <a> のデータ	<D> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ]	 <E> [ <D> [ <c> ] . isin ( [ <b> , <a> ] ) ] 
表データ <A> の元のインデックスを振り直して、 <A> とする	<A> = <A> . reset_index ( drop = True )	 = <A> . reset_index ( drop = True ) 
データフレーム <B> と表データ <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
<D> の <a> について、 <c> をインデックス、 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <A> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <D> の <a> について、 <c> をインデックス、 <b> カラムをカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 sns . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <B> 内の <c> を欠損に置換し、欠損がある行をドロップし、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 = <B> . replace ( <c> , np . nan ) . dropna ( ) 
表 <A> 中の NaN の数を求める	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
表 <B> 内の欠損を <A> に置換して、再代入する	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
表データ <D> の <a> について、 <c> 列をインデックス、列 <b> を列としたピボットテーブルを作成し、 <E> に代入する	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<B> の <a> 表属性に重複がある行を削除し、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
データフレーム <B> とデータフレーム <C> を縦結合して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	 <C> = pd . concat ( [ <B> , <C> ] ) 
<A> の表属性 <b> と <c> 表属性を消す	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 labels <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <B> の <a> を位置として、 <C> にする	<C> = <B> . set_index ( <a> )	 <A> = <B> . set_index ( <a> ) 
表データ <C> の <b> 表属性と <a> を落として、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	 pd . drop ( [ <b> , <a> ] , axis = 1 , inplace = True ) 
表 <C> の <a> 表属性の年を  <C> [ <b> ] とする	  <C> [ <b> ] = <C> [ <a> ] . dt . year	 <A> [ <b> ] = <C> [ <a> ] . dt . year 
データフレーム <A> 中の重複している行を落として、再代入する	<A> = <A> . drop_duplicates ( )	 <C> = <A> . drop_duplicates ( ) 
軸を <B> として、 <A> の縦向きの棒グラフをプロットする	plt . bar ( <B> , <A> )	 pd . concat ( [ <B> , <A> ] ) 
表データ <A> のコラム <b> の名前を <c> にリネームして、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
データフレーム <C> の <a> の時間を見、  <C> [ <b> ] に代入する	  <C> [ <b> ] = <C> [ <a> ] . dt . hour	 <b> <C> [ <b> ] = <C> [ <a> ] . dt . hour 
<B> 中の欠損値を <A> に置換し、 <B> とする	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
グラフのタイトルを <a> に変更する	plt . title ( <a> )	 <F> . rename ( columns = { <a> } ) 
データフレーム <A> 内の NaN を含む行を落として、 <A> とする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
全結合で表データ <B> と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	 <C> = pd . merge ( <B> , <A> , how = 'outer' ) 
<B> の <a> をソートして、 <B> にする	<B> = <B> . sort_values ( <a> )	 <F> = <B> . sort_values ( <a> ) 
表 <A> 中の <b> を欠損に置換し、欠損が存在する行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	 ) . replace ( <b> , np . nan ) . dropna ( ) 
表 <C> のインデックス名を <b> から <a> に変更し、置き換える	<C> = <C> . rename ( index = { <b> : <a> } )	 <A> . rename ( index = { <b> : <a> } , inplace = True ) 
表 <B> の <e> について、 <c> をインデックス、カラム <d> をカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
棒グラフの位置を真ん中として、 <B> 軸を <B> とした <A> の棒グラフを表示する	plt . bar ( <B> , <A> , align = 'center' )	 plt . bar ( <B> , <A> , align = 'center' ) 
データフレーム <B> 中の <a> 表属性に重複があるか	<B> . duplicated ( subset = <a> )	 plt . duplicated ( subset = <a> ) 
分割数を <C> 、ビンの名前をインデックスとして、 <A> 表の <b> 表属性をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 plt . pd ( <A> [ <b> ] , <C> , label = False ) 
表データ <A> の欠損を <A> の平均値で補って、 <B> に代入する	<B> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
データフレーム <C> の <b> ごとに <a> の数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
表 <A> 内の欠損値を <A> 表の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表 <E> の列の名前を <d> から <c> に、 <b> から <a> に変更して、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<A> と <B> の散布図をプロットする	plt . scatter ( <A> , <B> )	 sns . scatter ( <A> , <B> ) 
表 <A> の <b> コラムの分	<A> [ <b> ] . dt . minute	 <b> <A> [ <b> ] . dt . minute 
表データ <A> 内の欠損値を <B> に置き換えて、インプレースする	<A> . fillna ( <B> , inplace = True )	 <B> . fillna ( <A> , inplace = True ) 
<A> 内の <b> に重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	 @option . drop_duplicates ( subset = <b> ) 
データフレーム <C> のカラム <b> の名前を <a> に変更する	<C> . rename ( columns = { <b> : <a> } )	 sns . rename ( columns = { <b> : <a> } ) 
データフレーム <B> 内の NaN を含む行を削除して、 <A> に代入する	<A> = <B> . dropna ( )	 'gray' = <B> . dropna ( ) 
データフレーム <A> の表属性 <b> と <c> ごとに <d> の値の合計値	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <B> とデータフレーム <A> を縦方向で一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
表データ <A> の <b> を NaN に置換し、 NaN がある行を落として、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <b> , np . nan ) . dropna ( inplace = True ) 
<A> の <c> 列の秒を表示し、  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . second	 <d> [ <b> ] = <A> [ <c> ] . dt . second 
表 <A> の <b> が <c> のデータを得る	<A> [ <A> [ <b> ] == <c> ]	 <A> [ <A> [ <b> ] == <c> ] 
列番号 <b> を位置として、 <a> ファイルを読む	pd . read_csv ( <a> , index_col = <b> )	 pd . read_csv ( <a> , index_col = <b> ) 
データフレーム <A> の <b> と <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	 . plt ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] ) 
表データ <C> のカラム <b> と <a> の相関係数	<C> [ [ <b> , <a> ] ] . corr ( )	 [ <C> [ <b> , <a> ] ] . corr ( ) 
<A> に重複があるならば	if <A> . duplicated ( ) :	 . if <A> . duplicated ( ) : 
表 <B> と <A> 表データを縦結合し、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
データフレーム <A> の <b> 行目をドロップし、インプレースする	<A> . drop ( <b> , inplace = True )	 plt . drop ( <b> , inplace = True ) 
表データ <A> の <b> と <c> ごとに <d> の値の合計値を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
表 <B> と表 <C> を縦結合し、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	 = pd . concat ( [ <B> , <C> ] ) 
表データ <A> の <b> を位置に設定し、 <A> にする	<A> = <A> . set_index ( <b> )	 <b> = <A> . set_index ( <b> ) 
<A> の <b> 行目を消し、インプレースする	<A> . drop ( <b> , inplace = True )	 plt . drop ( <b> , inplace = True ) 
表データ <B> の NaN を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
<B> 中の <a> を欠損値に置換し、欠損値がある行をドロップして、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
データフレーム <A> の <b> と <c> を落とし、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表データ <A> のコラム <b> を中央値でビン分割する	pd . qcut ( <A> [ <b> ] , 2 )	 sns pd . qcut ( <A> [ <b> ] , 2 ) 
データフレーム <B> 内の <a> に重複がある行を削除し、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
表 <B> の <a> 表属性を消し、再代入する	<B> = <B> . drop ( <a> , axis = 1 )	 <A> = <B> . drop ( <a> , axis = 1 ) 
表データ <B> の <a> についての平均値	<B> [ <a> ] . mean ( )	 <B> [ <a> ] . mean ( ) 
<C> の <b> と <a> を落とす	<C> . drop ( [ <b> , <a> ] , axis = 1 )	 plt . drop ( <C> , axis = 1 ) 
表 <B> の <a> の出現頻度を見る	<B> [ <a> ] . value_counts ( )	 <B> [ <a> ] . value_counts ( ) 
<a> コラムをキーとして、 <C> 表データと表データ <B> を結合する	pd . merge ( <C> , <B> , on = <a> )	 pd . merge ( <C> , <B> , on = <a> ) 
表データ <A> の欠損を <B> とし、 <A> とする	<A> = <A> . fillna ( <B> )	 dropna = <A> . fillna ( ) 
分割数を <D> として、 <B> の表属性 <c> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 = pd . cut ( <B> [ <c> ] , <D> ) 
表データ <B> の <a> を削除して、インプレースする	<B> . drop ( <a> , axis = 1 , inplace = True )	 <E> . drop ( <a> , axis = 1 , inplace = True ) 
<d> をキーとして、 <B> データフレームと <C> を結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	 <A> = pd . merge ( <B> , <C> , on = <d> ) 
データフレーム <A> 中の重複している行を落とし、インプレースする	<A> . drop_duplicates ( inplace = True )	 index_col . drop_duplicates ( inplace = True ) 
位置と <c> をキーとして表 <A> と表 <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 sns . pd ( <A> , <B> , left_index = True ) 
<B> の <c> をドロップして、 <A> とする	<A> = <B> . drop ( <c> , axis = 1 )	 <A> = <B> . drop ( <c> , axis = 1 ) 
<B> 内の <a> を NaN に置換し、 NaN が存在する行をドロップし、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <D> . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
表データ <A> の 5 行	<A> . head ( )	 head . head ( ) 
データフレーム <A> 内の欠損値の合計	<A> . isnull ( ) . sum ( )	 ) . isnull ( ) . sum ( ) 
分割数を <A> 、ビンの名前を整数値として、 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns pd pd . cut ( <C> [ <b> ] , <A> , label = False ) 
表データ <C> の列名を <b> から <a> に変更する	<C> . rename ( columns = { <b> : <a> } )	 'display.max_columns' . rename ( columns = { <b> : <a> } ) 
データフレーム <A> 中の欠損値がある行を落とし、再代入する	<A> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
データフレーム <A> のカラム <b> と <c> を降順にソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
表データ <A> 内にある <b> を NaN に置換して、置き換える	<A> = <A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan , inplace = True ) 
データフレーム <A> の欠損値が存在する行を削除して、再代入する	<A> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
データフレーム <C> の <b> コラムが <a> 以下データを得る	<C> [ <C> [ <b> ] <= <a> ]	 <A> [ <C> [ <b> ] <= <a> ] 
全結合で表データ <B> と表データ <A> を結合する	pd . merge ( <B> , <A> , how = 'outer' )	 pd . merge ( <B> , <A> , how = 'outer' ) 
表 <B> の <a> 行目を落とし、 <C> とする	<C> = <B> . drop ( <a> )	 @option <C> = <B> . drop ( <a> ) 
表データ <B> の <c> をソートし、 <A> に代入する	<A> = <B> . sort_values ( <c> )	 @option <B> = <B> . sort_values ( <c> ) 
表データ <C> の <b> が <a> 以上のデータ	<C> [ <C> [ <b> ] >= <a> ]	 >= <C> [ <C> [ <b> ] >= <a> ] 
<c> を項目名として、 <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
<B> の <e> について、 <c> を位置、表属性 <d> を表属性としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
表 <A> 中の NaN を消して、置き換える	<A> . dropna ( inplace = True )	 <A> = <A> . dropna ( ) 
データフレーム <A> のカラム名を <b> から <c> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
表 <B> の <a> を中央値でビン分割する	pd . qcut ( <B> [ <a> ] , 2 )	 pd . qcut ( <B> [ <a> ] , 2 ) 
データフレーム <B> 内の NaN を <C> とし、 <A> にする	<A> = <B> . fillna ( <C> )	 <A> = <B> . fillna ( <C> ) 
データフレーム <A> の表属性 <b> と <c> ごとに <d> の値の合計を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
<C> 行 <B> 列の <a> つ目のグラフ指定	plt . subplot ( <C> , <B> , <a> )	 sns . pairplot ( <C> [ <a> ] ) 
表 <A> の <b> の名前を <c> にリネームし、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
<D> の <c> 列と列 <b> ごとに <a> の値の和	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <E> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表 <B> の NaN がある行を落として、 <A> とする	<A> = <B> . dropna ( )	 @option dropna = <B> . dropna ( ) 
ビン数を <B> 、ビンの名前をリスト <A> として、 <D> 表の <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
データフレームを <a> からタブ区切りで読んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = '\t' )	 pd . read_csv ( <a> , sep = '\t' ) 
データフレーム <B> の <a> コラムの月を確認する	<B> [ <a> ] . dt . month	 x <B> [ <a> ] . dt . month 
表 <A> 中の <b> 列に重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	 index_col . drop_duplicates ( subset = <b> ) 
<A> の最初から <b> 行まで	<A> [ : <b> ]	 <A> [ : <b> ] 
<B> 内に存在する <a> を欠損として、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
インデックスと <a> をキーとして <C> と表データ <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
表 <C> 中の <b> と表属性 <a> に重複がある場合	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	 <D> . duplicated ( subset = [ <b> , <a> ] ) : 
表データ <C> の <b> コラムの名前を <a> に変更して、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
表 <B> の <a> コラムの分を調べる	<B> [ <a> ] . dt . minute	 x <B> [ <a> ] . dt . minute 
表データ <A> の行数や列数	<A> . shape	 shape . shape 
<a> コラムをキーとして、 <C> 表データと表データ <B> を結合し、 <D> にする	<D> = pd . merge ( <C> , <B> , on = <a> )	 merge = pd . merge ( <C> , <B> , on = <a> ) 
表データ <B> のコラム <c> を中央値でビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 2 )	 <A> = pd . qcut ( <B> [ <c> ] , 2 ) 
<B> の <a> 表属性を削除して、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	 <F> = <B> . drop ( <a> , axis = 1 ) 
色を e00RGB 値として、 <B> と <A> のグラフを描画する	plt . plot ( <B> , <A> , color = ( e00 ) )	 sns . plot ( <B> , <A> , color = ( e00 ) ) 
データフレーム <A> のコラム <b> の時間を表示する	<A> [ <b> ] . dt . hour	 <B> [ <a> ] . dt . hour 
表 <A> のインデックスを振り直して、置き換える	<A> = <A> . reset_index ( )	 <C> = <A> . reset_index ( ) 
表 <B> の <a> 中の前後の行の差分	<B> [ <a> ] . diff ( periods = 1 )	 x <B> [ <a> ] . diff ( periods = 1 ) 
表 <A> の <b> と <c> ごとに <d> 表属性の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 groupby [ <b> , <c> ] ) [ <d> ] . sum ( ) 
そこで、マーカーの色を黄緑とする	@option markerfacecolor = 'greenyellow'	 <D> = pd . markerfacecolor ( markerfacecolor = 'greenyellow' ) 
表データ <A> の <c> の曜日を  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	 [ <b> ] = <A> [ <c> ] . dt . weekday_name 
<B> と <A> 表を縦方向で一つにまとめ、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	 = pd . concat ( [ <B> , <A> ] ) 
境界値を <A> として、表 <C> の <b> を分割して、 <D> に代入する	<D> = pd . cut ( <C> [ <b> ] , <A> )	 <E> = pd . cut ( <C> [ <b> ] , <A> ) 
表データ <B> 中の <a> を欠損に置換し、欠損が存在する行を落とし、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 replace . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
境界値を <A> リストとして、表データ <C> のカラム <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	 sns . pd ( <C> [ <b> ] , <A> ) 
データフレームを <b> ファイル名から <a> 区切りで読み込んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	 <A> = pd . read_csv ( <b> , sep = <a> ) 
<A> の列名を <b> から <c> に変更し、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <E> = <A> . rename ( columns = { <b> : <c> } ) 
データフレーム <A> 中の欠損値がある行を削除し、 <B> とする	<B> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
表データ <A> 内に存在する <b> を欠損値に置換して、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
<A> 内の欠損値を含む行を消して、置き換える	<A> = <A> . dropna ( )	 <B> = <A> . dropna ( ) 
分割数を <A> として、表データ <C> のコラム <b> をビンに含まれる個数が等しくなるように分割して、 <D> にする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	 <E> = pd . qcut ( <C> [ <b> ] , <A> ) 
表 <A> の列名	<A> . columns	 <A> . columns 
<A> の <d> について、列 <b> をインデックス、 <c> 列を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 sns . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
分割数を <A> 、ビンのラベルを 0 始まりの連番として、表 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 pd . cut ( <C> [ <b> ] , <A> , label = False ) 
表データ <A> のコラム <b> の名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	 columns = <A> . rename ( columns = { <b> : <c> } ) 
<B> のカラム <a> をインデックスとし、 <B> に代入する	<B> = <B> . set_index ( <a> )	 <B> = <B> . set_index ( <a> ) 
表データ <B> の <e> について、 <c> カラムを位置、 <d> をカラムとしたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
<A> のカラム <b> をインデックスとし、 <A> に代入する	<A> = <A> . set_index ( <b> )	 <F> = <A> . set_index ( <b> ) 
表データ <A> 中の欠損値を消し、置き換える	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
そこで、エラー処理は <A> とする	@option errors = <A>	 @option errors = <A> 
データフレーム <A> の先頭から <b> 行目まで	<A> [ : <b> ]	 <A> [ : <b> ] 
<A> 中の <b> と <c> 列に重複があるか否か	<A> . duplicated ( subset = [ <b> , <c> ] )	 <B> = <A> . duplicated ( subset = [ <b> , <c> ] ) 
位置と表属性 <a> をキーとしてデータフレーム <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
ビン数を <C> 、ビンのラベルを <D> リストとして、表 <A> の <b> 表属性をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
表 <D> の <c> とカラム <b> ごとにカラム <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
重複した最後の行を残して <A> ( データフレーム ) の重複している行を削除して、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	 plt . drop_duplicates ( keep = False , inplace = True ) 
表 <C> のカラム <b> とカラム <a> を降順にソートして、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
全結合で表 <B> と <A> をマージして、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	 <C> = pd . merge ( <B> , <A> , how = 'outer' ) 
データフレームを <a> からタブ区切りで読み込む	pd . read_csv ( <a> , sep = '\t' )	 pd . read_csv ( <a> , sep = '\t' ) 
<B> 内のそれぞれのカラムに存在する <a> の個数の合計値を算出する	<B> . isin ( [ <a> ] ) . sum ( )	 <A> . isin ( [ <a> ] ) . sum ( ) 
<d> を項目名として、 <B> とデータフレーム <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	 <C> = pd . merge ( <B> , <C> , on = <d> ) 
データフレーム <C> の <b> カラムと <a> の相関を見る	<C> [ [ <b> , <a> ] ] . corr ( )	 [ <C> [ <b> , <a> ] ] . corr ( ) 
エクセルファイル <a> の <b> をデータフレームとして読む	pd . read_excel ( <a> , sheet_name = <b> )	 read_excel pd . read_excel ( <a> , sheet_name = <b> ) 
<A> の相関	<A> . corr ( )	 <A> . corr ( ) 
表 <C> の <b> の名前を <a> に変更する	<C> . rename ( index = { <b> : <a> } )	 index . rename ( columns = { <b> : <a> } ) 
データフレーム <B> と <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> )	 <C> = pd . merge ( <B> , <A> ) 
表 <A> の <b> と <c> を削除して、 <A> にする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
<B> とデータフレーム <A> を縦方向で結合する	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
分割数を <D> として、表データ <B> のカラム <c> をビンに含まれる個数が等しくなるようにビン分割して、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	 <A> = pd . qcut ( <B> [ <c> ] , <D> ) 
<a> を項目名として、 <C> 表データと <B> 表データを結合する	pd . merge ( <C> , <B> , on = <a> )	 pd . merge ( <C> , <B> , on = <a> ) 
表 <E> の <d> の名前を <c> に、 <b> コラムの名前を <a> に変更し、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <A> = <E> . rename ( columns = { <b> : <c> , <d> : <a> } ) 
位置と <d> をキーとしてデータフレーム <B> と <C> を結合し、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <C> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
エクセルファイル <b> の <a> からデータフレームを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	 read_excel pd . read_excel ( <b> , sheet_name = <a> ) 
表 <E> の <d> コラムの名前を <c> に、 <b> の名前を <a> にリネームして、 <F> にする	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <C> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<B> の <a> 表属性に重複がある行を削除する	<B> . drop_duplicates ( subset = <a> )	 <B> . drop_duplicates ( subset = <a> ) 
そこで、ビックエンディアンをすることとする	@option byteorder = "big"	 @option byteorder = "big" 
x 軸の軸ラベルを <a> にする	plt . xlabel ( <a> )	 xlabel . xlabel ( <a> ) 
インデックスと <d> をキーとして <B> 表データと <C> 表データを結合し、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	 <A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> ) 
データフレーム <D> の <a> 表属性について、 <c> 表属性を位置、 <b> を表属性としたピボットテーブルを作成し、 <E> に代入する	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
<A> の表属性 <b> と <c> 表属性を消して、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <b> = <A> . drop ( [ <c> ] , axis = 1 ) 
境界値をリスト <A> として、表データ <C> の <b> カラムをビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
<A> の <c> 列の曜日を  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	 [ <b> ] = <A> [ <c> ] . dt . weekday_name 
分割数を <D> 、ビンのラベルをインデックスとして、 <B> 表の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
<B> 中の <a> を NaN に置換し、 NaN が存在する行を削除して、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <B> の <a> をドロップし、置き換える	<B> . drop ( <a> , axis = 1 , inplace = True )	 <A> = <B> . drop ( <a> , axis = 1 ) 
データフレーム <A> の重複しているデータを取得する	<A> [ <A> . duplicated ( ) ]	 <B> [ <A> . duplicated ( ) ] 
データフレーム <A> の <b> と <c> ごとに <d> 表属性の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
<B> 中の <a> を欠損値に置換し、欠損値がある行をドロップし、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
左外部結合で表データ <B> と <A> 表データを結合して、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	 <F> = pd . merge ( <B> , <A> , how = 'left' ) 
表データ <A> の <b> が <c> より大きいデータを取得する	<A> [ <A> [ <b> ] >  <c> ]	 @option <A> [ <A> [ <b> ] > <c> ] 
表データ <C> の <b> と列 <a> を削除し、 <C> に代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
表データ <C> の列の名前を <b> から <a> に変更し、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	 <C> = <C> . rename ( columns = { <b> : <a> } ) 
表 <C> の <b> 行目から <a> 行目まで	<C> [ <b> : <a> ]	 <A> [ : <b> ] 
表データ <A> の欠損値がある行を消し、 <B> とする	<B> = <A> . dropna ( )	 dropna = <A> . dropna ( ) 
<B> の <a> を落とし、置き換える	<B> = <B> . drop ( <a> , axis = 1 )	 <A> = <B> . drop ( <a> , axis = 1 ) 
表 <C> の <b> 表属性と表属性 <a> を落として、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True ) 
データフレーム <B> 内の <a> を欠損に置換し、欠損がある行を削除して、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <A> の <b> と <c> を削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
分割数を <B> 、ビンの名前を <A> リストとして、 <D> データフレームの <c> を分割して、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
表データ <A> の <c> コラムの曜日を  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	 [ <b> ] = <A> [ <c> ] . dt . weekday_name 
先頭の列を位置として、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	 sns . set_index ( <a> , inplace = True ) 
分割数を <B> 、ビンのラベルを <A> として、表データ <D> のカラム <c> を分割して、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
データフレーム <C> の <b> カラムと <a> の相関	<C> [ [ <b> , <a> ] ] . corr ( )	 [ <C> [ <b> , <a> ] ] . corr ( ) 
表データ <A> のコラム <b> と <c> コラムごとに <d> コラムの値の合計を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
カンマ区切りでデータフレームを <a> から読み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	 = pd . read_csv ( <a> , sep = ',' ) 
表データ <B> 内にある <a> を NaN に置き換える	<B> . replace ( <a> , np . nan )	 <A> . replace ( <a> , np . nan ) 
表 <B> の <c> カラムの名前を <d> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	 <A> = <B> . rename ( columns = { <c> : <d> } ) 
表データ <A> の <b> カラムが <c> より多いデータを得る	<A> [ <A> [ <b> ] >  <c> ]	 @option <A> [ <A> [ <b> ] > <c> ] 
表 <A> のコラム <b> をドロップし、置き換える	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
データフレーム <C> の <b> ごとに表属性 <a> の数を求める	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
表データ <B> 中の欠損値を <C> として、 <A> に代入する	<A> = <B> . fillna ( <C> )	 plt . dropna ( <C> , <B> , inplace = True ) 
表データ <A> 内に存在する <b> を欠損値に置換する	<A> . replace ( <b> , np . nan )	 np <A> . replace ( <b> , np . nan ) 
表データ <B> の <e> について、 <c> を位置、 <d> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
ビン数を <A> 、ビンの名前を整数値として、表 <C> の <b> をビン分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	 <F> = pd . cut ( <C> [ <b> ] , <A> , label = False ) 
位置と <a> 列をキーとして <C> と <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
データフレーム <A> 中の NaN を <A> の平均値で補い、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	 <C> = <A> . fillna ( <A> . mean ( ) ) 
表 <C> の列 <b> と <a> を削除し、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 sns = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
<C> の <b> の名前を <a> にリネームして、 <D> とする	<D> = <C> . rename ( index = { <b> : <a> } )	 <F> = <C> . rename ( index = { <b> : <a> } ) 
<B> の先頭から <a> 行までを表示する	<B> [ : <a> ]	 pd . : ( <a> ] ) 
表データ <A> 内の NaN をドロップして、置き換える	<A> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
<B> の <c> 列と列 <d> を降順に並び替え、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	 <A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False ) 
表 <A> の <b> をグループ化して、値ごとのデータ件数	<A> . groupby ( <b> ) . size ( )	 <B> . groupby ( <b> ) . size ( ) 
データフレーム <A> の元のインデックスをリセットし、置き換える	<A> = <A> . reset_index ( drop = True )	 <C> = <A> . reset_index ( drop = True ) 
データフレーム <B> の <a> を削除する	<B> . drop ( <a> , axis = 1 )	 dropna . drop ( <a> , axis = 1 ) 
<A> の <b> を昇順に並び替える	<A> . sort_values ( <b> )	 ascending . sort_values ( <b> ) 
<a> から表を読み込んで、 <B> とする	<B> = pd . read_csv ( <a> )	 = pd . read_csv ( <a> ) 
<B> 内のコラム <c> に重複がある行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	 'gray' = <B> . drop_duplicates ( subset = <c> ) 
表データ <B> とデータフレーム <A> を縦方向で一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
表データ <B> の <e> カラムについて、 <c> をインデックス、 <d> をカラムとしたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	 <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> ) 
データフレーム <A> の <b> を昇順にソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	 <A> . sort_values ( <b> , inplace = True ) 
ビン数を <D> として、 <B> データフレームの <c> をビン分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 = pd . cut ( <B> [ <c> ] , <D> ) 
<B> と <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
値のレンジを <b> から <a> として、 <C> のヒストグラムをプロットする	plt . hist ( <C> , range = ( <b> , <a> ) )	 pd . hist ( <C> , range = ( <b> , <a> ) ) 
表 <A> の要約統計量	<A> . describe ( )	 <A> . describe ( ) 
<B> 中の欠損を <A> として、 <B> に代入する	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
表データ <B> の欠損値がある行を削除し、 <A> とする	<A> = <B> . dropna ( )	 dropna = <B> . dropna ( ) 
表データ <C> の表属性 <b> の名前を <a> にリネームし、 <C> とする	<C> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
表データ <C> の列名を <b> から <a> に変更して、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	 <A> = <C> . rename ( columns = { <b> : <a> } ) 
分割数を <C> 、ビンのラベルをインデックスとして、データフレーム <A> のコラム <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 sns . pd ( <A> [ <b> ] , <C> , label = False ) 
<B> 内にある <a> を欠損に置換して、再代入する	<B> = <B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan , inplace = True ) 
表データ <D> の <c> と <b> と <a> 表属性について関係性を一度に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
データフレーム <A> の <b> カラムをドロップし、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
表 <B> 中の <a> に重複がある行を落として、 <B> にする	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
<A> 内の重複した行数を見る	<A> . duplicated ( ) . sum ( )	 ) . duplicated ( ) . sum ( ) 
表 <C> の列 <b> と <a> を削除し、再代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
境界値を <D> として、 <B> 表データの <c> をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 = pd . cut ( <B> [ <c> ] , <D> ) 
分割数を <C> 、ビンの名前を <D> リストとして、表データ <A> の表属性 <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	 pd . cut ( <A> [ <b> ] , <C> , label = <D> ) 
エクセルファイル <b> をデータフレームとして読んで、 <A> とする	<A> = pd . read_excel ( <b> )	 <b> <A> = pd . read_excel ( <b> ) ) 
<B> の <a> の曜日	<B> [ <a> ] . dt . weekday_name	 <A> [ <a> ] . dt . weekday_name 
データフレーム <E> の列名を <d> から <c> に、 <b> から <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 sns . rename ( columns = { <d> : <c> , <b> : <a> } ) 
データフレーム <A> 内の欠損をデータフレーム <A> の平均値で埋めて、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	 <B> = <A> . fillna ( <A> . mean ( ) ) 
表データ <A> 内の欠損を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	 <B> . fillna ( method = 'ffill' ) 
表 <C> の <b> と <a> を削除して、 <C> にする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	 <A> = <C> . drop ( [ <b> , <a> ] , axis = 1 ) 
<A> の列 <b> と <c> を降順に並び替え、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 @option sort_values = <A> [ <b> , <c> ] , ascending = False ) 
データフレーム <B> の欠損を含む行を消して、 <A> とする	<A> = <B> . dropna ( )	 <A> = <B> . dropna ( ) 
データフレーム <A> の <b> についての箱ひげ図を表示する	plt . boxplot ( <A> [ <b> ] )	 boxplot plt . boxplot ( <A> [ <b> ] ) 
表 <A> のカラム <d> について、カラム <b> をインデックス、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
データフレーム <A> 内の <b> に重複がある行を削除する	<A> . drop_duplicates ( subset = <b> )	 @option . drop_duplicates ( subset = <b> ) 
分割数を <A> として、 <C> の表属性 <b> を分割して、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> )	 weekday_name = pd . cut ( <C> [ <b> ] , <A> ) 
x 軸に <a> というラベルを加える	plt . xlabel ( <a> )	 <a> plt . xlabel ( <a> ) 
位置と <a> をキーとして <C> と <B> 表データを一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
<B> と <A> 表を縦方向でマージし、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
表データ <A> のカラム <b> が <c> 以上のデータ	<A> [ <A> [ <b> ] >= <c> ]	 @option <A> [ <A> [ <b> ] >= <c> ] 
表データ <A> の先頭から <b> 行までを確認する	<A> [ : <b> ]	 @option : <b> ] 
表データ <B> の最初の <a> 行	<B> . head ( <a> )	 <A> . head ( <a> ) 
表データ <A> の <b> と列 <c> を削除し、 <A> に代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> = <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
データフレーム <A> の <b> を昇順にソートして、 <A> に代入する	<A> = <A> . sort_values ( <b> )	 <F> = <A> . sort_values ( <b> ) 
表 <B> の <a> を欠損値に置換し、欠損値が存在する行を削除し、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <C> のインデックス <b> の名前を <a> に変更し、置き換える	<C> . rename ( index = { <b> : <a> } , inplace = True )	 <A> = <C> . rename ( index = { <b> : <a> } ) 
表 <C> の <b> とカラム <a> の相関を確認する	<C> [ [ <b> , <a> ] ] . corr ( )	 markeredgewidth [ [ <b> , <a> ] ] . corr ( ) 
表データ <A> 中の <b> に重複がある行を消し、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	 plt . drop_duplicates ( subset = <b> , inplace = True ) 
表 <A> の <b> カラムと <c> をドロップし、インプレースする	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	 drop . drop ( [ <b> , <c> ] , axis = 1 , inplace = True ) 
表 <B> の <a> コラムの月	<B> [ <a> ] . dt . month	 x <B> [ <a> ] . dt . month 
データフレーム <B> 内の NaN を <A> として、 <B> にする	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
表 <A> 中の <b> を欠損値に置換し、欠損値がある行を落とし、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	 plt . replace ( <A> , np . nan ) . dropna ( inplace = True ) 
表データ <A> 中の <b> コラムに重複がある行を消して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 <b> <A> = <A> . drop_duplicates ( subset = <b> ) 
ビン数を <D> 、ビンの名前を整数値として、 <B> の <c> 列をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
表 <A> の <b> とカラム <c> とカラム <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	 . plt ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] ) 
表 <A> の列 <b> と <c> と列 <d> について関係性を一度に表示する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
ラベルを <c> として、 <A> と <B> のグラフをプロットする	plt . plot ( <A> , <B> , label = <c> )	 pd . cut ( <A> , <B> , label = <c> ) 
左外部結合でデータフレーム <B> と <A> を一つにまとめて、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	 <F> = pd . merge ( <B> , <A> , how = 'left' ) 
表 <A> の <b> の名前を <c> にリネームし、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
<A> の列名を <b> から <c> に変更して、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	 <F> = <A> . rename ( columns = { <b> : <c> } ) 
データフレーム <A> の <b> についての中央値を抽出する	<A> [ <b> ] . median ( )	 <b> <A> [ <b> ] . median ( ) 
データフレーム <C> の <b> と <a> 表属性に重複があるかどうか	<C> . duplicated ( subset = [ <b> , <a> ] )	 sns . duplicated ( subset = [ <b> , <a> ] ) 
分割数を <A> として、 <C> の列 <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> )	 pd . cut ( <C> [ <b> ] , <A> ) 
分割数を <C> 、ビンの名前をインデックスとして、 <A> 表データの <b> 列を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 plt . pd ( <A> [ <b> ] , <C> , label = False ) 
<A> 内の欠損値が存在する行をドロップし、 <B> とする	<B> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
エクセルファイル <a> の <b> 番目のシートから読み込む	pd . read_excel ( <a> , sheet_name = <b> )	 read_excel pd . read_excel ( <a> , sheet_name = <b> ) 
位置と <a> をキーとして表 <C> と <B> 表をマージして、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 sns = pd . merge ( <C> , <B> , left_index = True , right_on = <a> ) 
表データ <A> の <c> の時間を  <A> [ <b> ] にする	  <A> [ <b> ] = <A> [ <c> ] . dt . hour	 <A> [ <b> ] = <A> [ <c> ] . dt . hour 
カラム <d> をキーとして、 <B> と <C> 表データをマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <d> )	 <A> = pd . merge ( <B> , <C> , on = <d> ) 
データフレーム <B> 内にある <a> を欠損値に置き換えて、置き換える	<B> = <B> . replace ( <a> , np . nan )	 <A> . replace ( <a> , np . nan , inplace = True ) 
表 <B> にある <a> を NaN に置換して、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	 plt . replace ( <a> , np . nan , inplace = True ) 
表 <C> の <b> 表属性と <a> を削除する	<C> . drop ( [ <b> , <a> ] , axis = 1 )	 plt . drop ( [ <b> , <a> ] , axis = 1 ) 
フォーマットを指定して、 <A> データフレームの <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' ) 
表 <A> の列 <b> と <c> を降順にソートし、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	 <A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True ) 
データフレーム <D> の <c> とカラム <b> ごとに <a> の値の合計を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
<B> の欠損を直前の行の値で補い、 <A> に代入する	<A> = <B> . fillna ( method = 'ffill' )	 <d> = <B> . fillna ( method = 'ffill' ) 
境界値をリスト <C> として、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	 pd . cut ( <A> [ <b> ] , <C> ) 
表データ <B> 内にある <a> を NaN に置換する	<B> . replace ( <a> , np . nan )	 plt . replace ( <a> , np . nan ) 
表 <A> の <c> コラムの月を見て、  <A> [ <b> ] に代入する	  <A> [ <b> ] = <A> [ <c> ] . dt . month	 <A> [ <b> ] = <A> [ <c> ] . dt . month 
表 <E> の <d> 列の名前を <c> に、列 <b> の名前を <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 plt . rename ( columns = { <d> : <c> , <b> : <a> } ) 
データフレーム <B> の <a> を位置とする	<B> . set_index ( <a> )	 set_index . set_index ( <a> ) 
表をファイル名 <a> から読む	pd . read_csv ( <a> )	 columns pd . read_csv ( <a> ) 
<B> 内の <a> を欠損に置換し、欠損がある行をドロップし、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	 <A> . replace ( <a> , np . nan ) . dropna ( inplace = True ) 
そのとき、マーカーの種類を四角形とする	@option marker = 's'	 marker = @option marker . marker ( ) 
表 <A> にある <b> を NaN に置換して、置き換える	<A> = <A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan , inplace = True ) 
エクセルファイル <b> の <a> 番目のシートをデータフレームとして読み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	 <A> = pd . read_excel ( <b> , sheet_name = <a> ) 
表データ <B> 中の欠損値を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
表データ <A> にある <b> を NaN とし、 <A> にする	<A> = <A> . replace ( <b> , np . nan )	 <F> = <A> . replace ( <b> , np . nan ) 
<A> の末尾の 5 行を表示する	<A> . tail ( )	 <A> . tail ( ) 
データフレーム <B> とデータフレーム <A> を縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	 pd . concat ( [ <B> , <A> ] ) 
表 <A> の重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	 <A> = <A> . drop_duplicates ( ) 
表 <A> にある <b> を欠損値に置き換える	<A> . replace ( <b> , np . nan )	 <A> . replace ( <b> , np . nan ) 
表データ <A> の <c> コラムの曜日の数値型を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	 <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek 
表 <A> の <b> コラムをグループ化して、値ごとのデータ数を算出する	<A> . groupby ( <b> ) . size ( )	 plt . groupby ( <A> [ <b> ] ) [ <c> ] . size ( ) 
データフレーム <A> の欠損値を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	 mean <A> . fillna ( <A> . mean ( ) ) 
ビン数を <C> 、ビンのラベルを 0 始まりの連番として、 <A> 表データの <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 pd . cut ( <A> [ <b> ] , <C> , label = False ) 
データフレーム <B> の <a> のそれぞれのデータの出現頻度	<B> [ <a> ] . value_counts ( )	 value_counts <B> [ <a> ] . value_counts ( ) 
<B> 中にある <a> を欠損値に置き換えて、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	 replace . replace ( <a> , np . nan , inplace = True ) 
ビン数を <A> 、ビンのラベルを 0 始まりの連番として、表 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 pd . cut ( <C> [ <b> ] , <A> , label = False ) 
表 <B> の <a> のユニーク値を確認する	<B> [ <a> ] . unique ( )	 <B> [ <a> ] . unique ( ) 
表 <A> 中の NaN を消して、 <A> とする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
分割数を <B> 、ビンの名前を <A> リストとして、表データ <D> の <c> を分割して、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	 <F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> ) 
表データ <B> 内の重複している行を落として、 <A> とする	<A> = <B> . drop_duplicates ( )	 'gray' <A> = <B> . drop_duplicates ( ) 
<A> の <b> を NaN に置換し、 NaN がある行を消して、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
データフレーム <B> の <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	 duplicated if <B> . duplicated ( subset = <a> ) : 
表 <B> のそれぞれのカラムに存在する <a> の個数の合計値を算出する	<B> . isin ( [ <a> ] ) . sum ( )	 <D> . isin ( [ <a> ] ) . sum ( ) 
データフレーム <A> のインデックス <b> の名前を <c> に変更し、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	 <A> = <A> . rename ( index = { <b> : <c> } ) 
データフレーム <D> の表属性 <c> と <b> ごとに <a> の値の合計	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 'cyan' . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表 <A> 中の欠損が存在する行をドロップして、置き換える	<A> . dropna ( inplace = True )	 <A> = <A> . dropna ( ) 
表 <B> 内の <a> を欠損値に置換し、欠損値が存在する行をドロップして、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
<b> ファイル名からデータフレームを <c> 区切りで読み込んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
表 <B> の <a> 列をグループ化して、値ごとのデータ数を求める	<B> . groupby ( <a> ) . size ( )	 plt . groupby ( <B> [ <a> ] ) . size ( ) 
<B> 内の NaN を <A> に置き換え、 <B> にする	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
<A> 内の <b> を欠損に置換し、欠損が存在する行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	 ) . replace ( <b> , np . nan ) . dropna ( ) 
<A> の位置を振り直す	<A> . reset_index ( )	 reset_index . reset_index ( ) 
エクセルファイル <a> の全てのシートをデータフレームとして読み込んで、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	 pd . read_excel ( <a> , <B> , sheet_name = None ) 
データフレーム <A> 中のコラム <b> に重複がある行を消して、 <A> にする	<A> = <A> . drop_duplicates ( subset = <b> )	 <b> = <A> . drop_duplicates ( subset = <b> ) 
<B> の <a> を欠損値に置換し、欠損値が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	 <B> . replace ( <a> , np . nan ) . dropna ( ) 
表 <B> 中の欠損を <C> として、 <A> にする	<A> = <B> . fillna ( <C> )	 <A> = <B> . fillna ( <C> ) 
表 <A> のそれぞれのカラムに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	 <A> . isin ( [ <b> ] ) . sum ( ) 
データフレーム <A> 中の <b> コラムと <c> に重複があるとき	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	 drop_duplicates if <A> . duplicated ( subset = [ <b> , <c> ] ) : 
表 <D> の表属性 <a> について、表属性 <c> をインデックス、 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <E> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
分割数を <C> として、表データ <A> のカラム <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	 sns . pd ( <A> [ <b> ] , <C> ) 
表 <B> にある <c> を欠損値に置き換えて、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	 @option replace = <B> . replace ( <c> , np . nan ) 
表 <B> の元のインデックスを振り直して、 <A> にする	<A> = <B> . reset_index ( drop = True )	 reset_index = <B> . reset_index ( drop = True ) 
表 <A> の表属性 <c> の曜日の数値型を見て、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	 <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek 
データフレーム <A> 中の <b> を欠損に置換し、欠損が存在する行を削除し、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表データ <A> の <b> と <c> と <d> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
<A> の列 <b> の名前を <c> に、 <d> の名前を <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
表データ <B> にある <a> を NaN とし、 <B> にする	<B> = <B> . replace ( <a> , np . nan )	 <F> = <B> . replace ( <a> , np . nan ) 
さらに、バッファリングしないことにする	@option buffering = -1	 dropna @option flush = False 
<A> と <B> をマージする	pd . merge ( <A> , <B> )	 pd . merge ( <A> , <B> ) 
表 <A> 内の欠損値を <A> 表の平均値で補って、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
インデックスと <c> 列をキーとして表データ <A> と <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 sns . pd ( <A> , <B> , left_index = True ) 
データフレーム <A> のカラム <b> を位置として設定し、 <A> にする	<A> = <A> . set_index ( <b> )	 <F> = <A> . set_index ( <b> ) 
表データ <A> 内の <b> コラムに重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	 <A> . drop_duplicates ( subset = <b> ) 
左外部結合で表データ <B> と <C> 表データを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	 <C> = pd . merge ( <B> , <A> , how = 'left' ) 
表 <C> の <b> と <a> を落として、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	 drop . drop ( [ <b> , <a> ] , axis = 1 , inplace = True ) 
<A> 内の <b> と <c> に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	 duplicated . duplicated ( subset = [ <b> , <c> ] ) : 
表 <B> と <C> を縦方向で一つにまとめて、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	 = pd . concat ( [ <B> , <C> ] ) 
<A> に存在する <b> を欠損に置き換え、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
<C> の <b> を位置、 <a> をコラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	 index . pivot_table ( index = <b> , columns = <a> ) 
表データ <B> 中の NaN がある行を消し、 <A> にする	<A> = <B> . dropna ( )	 dropna = <B> . dropna ( ) 
データフレーム <A> の先頭の <b> 行を表示する	<A> . head ( <b> )	 head <A> . head ( <b> ) 
データフレーム <A> 内の NaN を表データ <A> の平均値で埋め、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表データ <B> 内の <a> コラムに重複がある行を落とす	<B> . drop_duplicates ( subset = <a> )	 <B> . drop_duplicates ( subset = <a> ) 
表 <A> の <b> のユニーク値	<A> [ <b> ] . unique ( )	 <B> [ <a> ] . unique ( ) 
そのとき、文字コードは <A> とする	@option encoding = <A>	 <A> = pd . encoding ( <A> , encoding = 'shift_jis' ) 
分割数を <C> 、ビンの名前をインデックスとして、 <A> の列 <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	 . pd ( <A> [ <b> ] , <C> , label = False ) 
データフレーム <A> のコラム <b> と <c> をドロップする	<A> . drop ( [ <b> , <c> ] , axis = 1 )	 <A> . drop ( [ <b> , <c> ] , axis = 1 ) 
表 <B> 中の <a> に重複がある行を落とす	<B> . drop_duplicates ( subset = <a> )	 dropna . drop_duplicates ( subset = <a> ) 
<A> 中の欠損値を削除して、 <A> とする	<A> = <A> . dropna ( )	 <A> = <A> . dropna ( ) 
表データ <A> を <b> に書き出す	<A> . to_csv ( <b> )	 to_csv <A> . to_csv ( <b> ) 
分割数を <D> 、ビンの名前を <E> リストとして、表データ <B> の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	 <E> = pd . cut ( <D> [ <c> ] , <D> , label = <E> ) 
文字コードを shift_jis として、 <a> ファイル名を読み込んで、 <B> にする	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )	 pd . read_csv ( <a> , <B> , encoding = 'shift_jis' ) 
<A> の列 <c> の秒を調べて、  <A> [ <b> ] に代入する	  <A> [ <b> ] = <A> [ <c> ] . dt . second	 [ <b> ] = <A> [ <c> ] . dt . second 
データフレーム <B> の表属性 <c> の名前を <d> に、 <e> の名前を <f> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	 <A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } ) 
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を削除して、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	 <A> . drop_duplicates ( keep = False , inplace = True ) 
表 <A> の <b> 中の前後の行の差分	<A> [ <b> ] . diff ( periods = 1 )	 <b> <A> [ <b> ] . diff ( periods = 1 ) 
表データ <C> の列 <b> と <a> 列を降順に並び替えて、 <D> に代入する	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <F> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
フォーマットを指定して、表 <B> の <a> を datetime 型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' ) 
データフレーム <D> の <c> と <b> ごとに <a> の値の和	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 <E> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表 <A> の <b> の日にち	<A> [ <b> ] . dt . day	 <B> [ <a> ] . dt . day 
表データ <B> 中に存在する <c> を欠損値に置換し、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	 sep = <B> . replace ( <c> , np . nan ) 
ビン数を <A> として、 <C> 表の列 <b> をビン分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	 <E> = pd . cut ( <D> [ <b> ] , <A> ) 
表 <A> の <b> を NaN に置換し、 NaN が存在する行をドロップして、 <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 = <A> . replace ( <b> , np . nan ) . dropna ( ) 
<D> の <a> について、 <c> を位置、表属性 <b> を表属性としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <E> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <B> の <a> についての箱ひげ図を表示する	plt . boxplot ( <B> [ <a> ] )	 <B> [ <a> ] . boxplot ( ) 
データフレーム <A> の欠損が存在する行をドロップし、 <B> とする	<B> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
表データ <B> 内にある <a> を NaN に置換して、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	 <A> . replace ( <a> , np . nan , inplace = True ) 
分割数を <D> 、ビンの名前をインデックスとして、 <B> の列 <c> を分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
<C> の <b> が <a> 以上のデータを抽出する	<C> [ <C> [ <b> ] >= <a> ]	 <C> [ <C> [ <b> ] >= <a> ] 
<A> の元の位置を振り直し、 <A> にする	<A> = <A> . reset_index ( drop = True )	 = <A> . reset_index ( drop = True ) 
表 <C> の <b> の名前を <a> にリネームする	<C> . rename ( index = { <b> : <a> } )	 index . rename ( columns = { <b> : <a> } ) 
<a> を x 軸に付ける	plt . xlabel ( <a> )	 <a> plt . xlabel ( <a> ) 
<A> の <b> と <c> を降順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	 ascending = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
もし <A> 中の <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	 duplicated if <A> . duplicated ( subset = <b> ) : 
表データ <B> の <a> を欠損値に置換し、欠損値がある行を削除し、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
表データ <A> 中に存在する <b> を欠損値とし、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	 <A> . replace ( <b> , np . nan , inplace = True ) 
表データ <A> の欠損値をドロップする	<A> . dropna ( )	 dropna . dropna ( ) 
ビン数を <A> 、ビンのラベルを整数値として、表 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	 sns . pd ( <C> [ <b> ] , <A> , label = False ) 
フォーマットを指定して、 <B> 表の <a> 列を日付型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	 '%Y-%m-%d' pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' ) 
データフレーム <B> 内の欠損値を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
境界値をリスト <D> として、表データ <B> の <c> カラムをビン分割して、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 = pd . cut ( <B> [ <c> ] , <D> ) 
文字コードを shift_jis として、ファイルパス <b> を読んで、 <A> とする	<A> = pd . read_csv ( <b> , encoding = 'shift_jis' )	 pd . read_csv ( <b> , encoding = 'shift_jis' ) 
データフレーム <A> の表属性 <b> の名前を <c> に、 <d> の名前を <e> に変更して、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
エンコーディングを shift_jis として、 <a> を読み込む	pd . read_csv ( <a> , encoding = 'shift_jis' )	 pd . read_csv ( <a> , encoding = 'shift_jis' ) 
<c> 区切りで表データをパス <b> から読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
データフレーム <A> の先頭 5 行	<A> . head ( )	 head <A> . head ( ) 
表データ <A> の <b> の時間	<A> [ <b> ] . dt . hour	 <B> [ <a> ] . dt . hour 
表データ <A> の列の名前を <b> から <c> に、 <d> から <e> にリネームして、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	 <A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } ) 
もし表 <B> 内の <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	 duplicated if <B> . duplicated ( subset = <a> ) : 
データフレーム <A> 中の列 <b> に重複がある行を削除し、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	 plt . drop_duplicates ( subset = <b> , inplace = True ) 
表データ <C> のインデックス <b> の名前を <a> に変更し、 <D> とする	<D> = <C> . rename ( index = { <b> : <a> } )	 <F> = <C> . rename ( index = { <b> : <a> } ) 
表 <A> の <b> ごとに <c> の個数を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	 <B> . groupby ( [ <b> ] ) [ <c> ] . count ( ) 
<A> の分散	<A> . var ( )	 var . var ( ) 
表 <D> の <c> と <b> と <a> について関係性を一度に表示する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	 pairplot sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] ) 
表データ <D> の列 <a> について、 <c> を位置、 <b> を列としたピボットテーブルを作成して、 <E> に代入する	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	 <F> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> ) 
表 <B> の表属性 <c> と <d> 表属性を消して、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	 <A> = <B> . drop ( [ <c> , <d> ] , axis = 1 ) 
表データ <B> を <a> ファイル名に書き込む	<B> . to_csv ( <a> )	 to_csv <B> . to_csv ( <a> ) 
さらに、マーカーカラーを黄色とする	@option markerfacecolor = 'yellow'	 @option markerfacecolor = 'yellow' 
表データ <B> の <c> を四分位数ごとでビン分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 4 )	 <A> = pd . qcut ( <B> [ <c> ] , 4 ) 
<A> のカラム <b> をダミー変数化する	pd . get_dummies ( <A> [ <b> ] )	 get_dummies pd . get_dummies ( <A> [ <b> ] ) 
表データ <A> の <b> の名前を <c> にリネームし、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
そこで、透過度を <a> とする	@option alpha = <a>	 <C> = pd . read_csv ( <a> ) 
<A> の <b> の曜日	<A> [ <b> ] . dt . weekday_name	 <b> <A> [ <b> ] . dt . weekday_name 
表 <A> のインデックス名を <b> から <c> にリネームして、 <A> に代入する	<A> = <A> . rename ( index = { <b> : <c> } )	 <A> = <A> . rename ( index = { <b> : <c> } ) 
<B> の <a> を昇順にソートする	<B> . sort_values ( <a> )	 x <B> . sort_values ( <a> ) 
グラフの色を"	plt . plot ( x , y , color = "	 plt . plot ( x , y , color = " 
表 <A> の表属性 <b> をダミー変数化し、 <A> とする	<A> = pd . get_dummies ( <A> [ <b> ] )	 <A> = pd . get_dummies ( <A> [ <b> ] ) 
<B> と <A> 表データを縦結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	 <C> = pd . concat ( [ <B> , <A> ] ) 
データフレーム <A> の末尾 <b> 行を表示する	<A> . tail ( <b> )	 <A> . tail ( <b> ) 
表 <B> 中の欠損値を <A> に置き換え、置き換える	<B> . fillna ( <A> , inplace = True )	 <B> . fillna ( <A> , inplace = True ) 
データフレーム <B> 内の <a> に重複がある行を消して、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	 <F> = <B> . drop_duplicates ( subset = <a> ) 
列番号 <a> を位置として、ファイルパス <b> を読み込んで、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	 <A> = pd . read_csv ( <b> , index_col = <a> ) 
表データ <C> の <b> コラムと <a> コラムを降順に並び替えて、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <A> の表属性 <b> と <c> を降順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	 ascending = <A> . sort_values ( [ <b> , <c> ] , ascending = False ) 
表データを <b> から <a> 区切りで読んで、 <C> にする	<C> = pd . read_csv ( <b> , sep = <a> )	 <A> = pd . read_csv ( <b> , sep = <a> ) 
<A> 軸のラベルを <A> から <b> 、 <c> 、 <d> へ変更する	plt . yticks ( <A> , [ <b> , <c> , <d> ] )	 sns . xticks ( <A> , [ <b> , <c> , <d> ] ] ) 
<B> と <A> の散布図を描画する	plt . scatter ( <B> , <A> )	 sns . plt ( <B> , <A> ) 
<d> を項目名として、表データ <B> と <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	 <C> = pd . merge ( <B> , <C> , on = <d> ) 
表 <A> の表属性 <b> の曜日の数値型を見る	<A> [ <b> ] . dt . dayofweek	 <A> [ <b> ] . dt . dayofweek 
<b> ファイル名から表データを <c> 区切りで読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	 <A> = pd . read_csv ( <b> , sep = <c> ) 
<A> 内の欠損を <A> の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
データフレーム <A> の <b> カラムをドロップし、置き換える	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
表 <A> の <b> についての標準偏差を抽出する	<A> [ <b> ] . std ( )	 <B> [ <a> ] . std ( ) 
表データ <B> の列の名前を <c> から <d> にリネームし、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	 <A> = <B> . rename ( columns = { <c> : <d> } ) 
<A> 中の <b> に重複がある行を削除して、置き換える	<A> . drop_duplicates ( subset = <b> , inplace = True )	 <F> = <A> . drop_duplicates ( subset = <b> ) 
<A> の NaN を <B> に置換し、 <A> にする	<A> = <A> . fillna ( <B> )	 <A> = <A> . fillna ( <B> ) 
データフレーム <A> 内の欠損値を含む行を削除する	<A> . dropna ( )	 <A> . dropna ( ) 
表 <A> 中の <b> カラムに重複がある行を消す	<A> . drop_duplicates ( subset = <b> )	 ) . drop_duplicates ( subset = <b> ) 
表 <A> の <b> 位置の名前を <c> にリネームし、 <A> とする	<A> = <A> . rename ( index = { <b> : <c> } )	 = <A> . rename ( index = { <b> : <c> } ) 
表 <A> の <c> の曜日を確認し、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	 <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name 
インデックスと <a> を項目名として <C> データフレームと <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	 . pd ( <C> , <B> , left_index = True ) 
ビン数を <D> 、ビンのラベルを整数値として、データフレーム <B> の <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 <B> = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
データフレーム <C> の <b> ごとに表属性 <a> の数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
表データ <D> の <c> 表属性と表属性 <b> ごとに <a> 表属性の値の和を計算する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
表データ <A> 中の欠損を表データ <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表データ <A> の <d> について、 <b> を位置、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
<c> をキーとして、 <A> と <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	 pd . merge ( <A> , <B> , on = <c> ) 
データフレーム <A> の <b> ごとに <c> の平均値を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	 mean <A> . groupby ( [ <b> ] ) [ <c> ] . mean ( ) 
表データ <B> 中の <a> を欠損に置換し、欠損が存在する行を落として、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	 <F> = <B> . replace ( <a> , np . nan ) . dropna ( ) 
データフレーム <A> の <b> 表属性をダミー変数化する	pd . get_dummies ( <A> [ <b> ] )	 get_dummies pd . get_dummies ( <A> [ <b> ] ) 
表 <A> の <d> について、 <b> をインデックス、 <c> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 <A> . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表 <A> の <b> 表属性を消す	<A> . drop ( <b> , axis = 1 )	 plt <A> . drop ( <b> , axis = 1 ) 
表 <A> の <b> の年	<A> [ <b> ] . dt . year	 <A> [ <b> ] . dt . year 
データフレーム <C> の表属性 <b> と <a> の相関	<C> [ [ <b> , <a> ] ] . corr ( )	 <A> [ [ <b> , <a> ] ] . corr ( ) 
分割数を <D> として、表 <B> のカラム <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	 <A> = pd . cut ( <B> [ <c> ] , <D> ) 
表データ <B> の <a> 行目を消して、インプレースする	<B> . drop ( <a> , inplace = True )	 plt . drop ( <a> , inplace = True ) 
データフレーム <A> のカラム <b> の名前を <c> に変更して、再代入する	<A> = <A> . rename ( columns = { <b> : <c> } )	 <A> = <A> . rename ( columns = { <b> : <c> } ) 
エクセルファイル <a> からデータフレームを読む	pd . read_excel ( <a> )	 pd . read_excel ( <a> ) 
表を <b> から読み込み、 <A> とする	<A> = pd . read_csv ( <b> )	 <A> = pd . read_csv ( <b> ) 
表データ <A> のカラム <b> と <c> と <d> カラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	 . plt ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] ) 
表 <E> の列の名前を <d> から <c> に、 <b> から <a> にリネームし、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	 <F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } ) 
<D> の <c> 表属性と <b> ごとに <a> 表属性の値の合計値を算出する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	 sns . groupby ( [ <D> [ <c> , <b> ] ) [ <a> ] . sum ( ) 
データフレーム <C> の <a> の秒を  <C> [ <b> ] とする	  <C> [ <b> ] = <C> [ <a> ] . dt . second	 <A> [ <b> ] = <C> [ <a> ] . dt . second 
表データ <B> の <a> 列を削除し、置き換える	<B> . drop ( <a> , axis = 1 , inplace = True )	 <C> . drop ( <a> , axis = 1 , inplace = True ) 
レンジを <b> から <c> として、 <A> のヒストグラムを描く	plt . hist ( <A> , range = ( <b> , <c> ) )	 pd . hist ( <A> , range = ( <b> , <c> ) ) 
表データ <A> の欠損を <A> データフレームの平均値で埋め、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
<A> の <b> と <c> カラムを降順に並び替えて、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	 False = <A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True ) 
全結合でデータフレーム <B> と <A> データフレームをマージする	pd . merge ( <B> , <A> , how = 'outer' )	 pd . merge ( <B> , <A> , how = 'outer' ) 
<A> の <c> の曜日を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	 [ <b> ] = <A> [ <c> ] . dt . weekday_name 
表 <B> の <c> と表属性 <d> を落として、 <A> にする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	 <A> = <B> . drop ( [ <c> , <d> ] , axis = 1 ) 
データフレーム <A> の欠損が存在する行を削除して、置き換える	<A> = <A> . dropna ( )	 <C> = <A> . dropna ( ) 
<B> の <c> と <d> カラムを降順にソートし、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	 <A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False ) 
<C> のインデックス名を <b> から <a> に変更する	<C> . rename ( index = { <b> : <a> } )	 index . rename ( index = { <b> : <a> } ) 
表データ <C> の <b> ごとにコラム <a> の数を計算する	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	 <A> . groupby ( [ <b> ] ) [ <a> ] . count ( ) 
ビン数を <A> として、 <C> 表データの表属性 <b> を要素数が等しくなるようにビン分割して、 <D> にする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	 <E> = pd . qcut ( <C> [ <b> ] , <A> ) 
表 <A> 中の NaN を <A> の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	 <A> = <A> . fillna ( <A> . mean ( ) ) 
表データ <A> の <b> 列の出現回数	<A> [ <b> ] . value_counts ( )	 <b> <A> [ <b> ] . value_counts ( ) 
表データ <B> のコラム <a> を中央値でビン分割する	pd . qcut ( <B> [ <a> ] , 2 )	 sns pd . qcut ( <B> [ <a> ] , 2 ) 
表 <A> の <b> 表属性と <c> ごとに表属性 <d> の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	 <B> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( ) 
表データ <A> の重複しているデータ	<A> [ <A> . duplicated ( ) ]	 <B> [ <A> . duplicated ( ) ] 
位置と <c> を項目名として表データ <A> と <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	 <A> . pd ( <B> , <C> , left_index = True ) 
表 <B> の <a> についての最頻値	<B> [ <a> ] . mode ( )	 [ <B> [ <a> ] . mode ( ) 
<A> の <b> を位置として、 <A> に代入する	<A> = <A> . set_index ( <b> )	 <b> = <A> . set_index ( <b> ) 
表 <A> の <b> を欠損値に置換し、欠損値が存在する行を削除し、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	 <F> = <A> . replace ( <b> , np . nan ) . dropna ( ) 
表 <A> の <c> 内の前後の行の差分を  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . diff ( periods = 1 )	 [ <A> [ <b> ] = <A> [ <c> ] . diff ( periods = 1 ) 
表データ <B> 内にある <c> を欠損に置き換え、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	 @option replace = <B> . replace ( <c> , np . nan ) 
データフレーム <A> の <b> と表属性 <c> と <d> について関係性を一気に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	 pd . pairplot ( <A> [ [ <b> , <c> , <d> ] ] ) 
データフレーム <B> のカラム <c> の名前を <d> に変更し、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> } )	 sep <A> = <B> . rename ( columns = { <c> : <d> } ) 
表 <A> のカラム <b> を消し、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	 <A> = <A> . drop ( <b> , axis = 1 ) 
全結合で <A> 表と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	 pd . merge ( <A> , <B> , how = 'outer' ) 
<C> のカラム <b> と <a> カラムを降順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	 False . sort_values ( [ <b> , <a> ] , ascending = False ) 
表データ <A> 中に存在する <b> を欠損値とする	<A> . replace ( <b> , np . nan )	 np <A> . replace ( <b> , np . nan ) 
表 <A> の表属性 <b> の年を調べる	<A> [ <b> ] . dt . year	 <A> [ <b> ] . dt . year 
表 <A> の <d> カラムについて、 <b> を位置、カラム <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	 plt . pivot_table ( index = <b> , columns = <c> , values = <d> ) 
表データ <A> 内の欠損を表 <A> の平均値で埋めて、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	 @option <A> . fillna ( <A> . mean ( ) , inplace = True ) 
<B> 内の <c> を NaN に置換し、 NaN が存在する行をドロップして、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	 = <B> . replace ( <c> , np . nan ) . dropna ( ) 
<A> の平均値	<A> . mean ( )	 mean <A> . mean ( ) 
ビン数を <D> 、ビンの名前をインデックスとして、 <B> 表の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	 = pd . cut ( <A> [ <c> ] , <D> , label = False ) 
表データ <B> 中の欠損値を <C> に置換して、 <A> にする	<A> = <B> . fillna ( <C> )	 <F> = <B> . fillna ( <C> ) 
<B> と <A> 表データを縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	 sns . pd ( <B> [ <A> ] ) 
表データ <B> 内にある <a> を欠損に置き換えて、再代入する	<B> = <B> . replace ( <a> , np . nan )	 np . replace ( <a> , np . nan , inplace = True ) 
表データ <A> 中のコラム <b> に重複がある行を落として、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	 'gray' = <A> . drop_duplicates ( subset = <b> ) 
表 <B> 内の NaN を <A> として、 <B> にする	<B> = <B> . fillna ( <A> )	 <B> = <B> . fillna ( <A> ) 
<A> の表属性 <c> の月を確認して、  <A> [ <b> ] とする	  <A> [ <b> ] = <A> [ <c> ] . dt . month	 <A> [ <b> ] = <A> [ <c> ] . dt . month 
データフレーム <B> 内の <c> に重複がある行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	 'gray' = <B> . drop_duplicates ( subset = <c> ) 
<C> の <b> と <a> カラムを降順に並び替えて、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	 <D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False ) 
ヘッダーを指定せずに <b> を読み込んで、 <A> にする	<A> = pd . read_csv ( <b> , header = None )	 = pd . read_csv ( <b> , header = None ) 
データフレーム <B> の <a> 列についての分散を抽出する	<B> [ <a> ] . var ( )	 [ <B> [ <a> ] . var ( ) 
