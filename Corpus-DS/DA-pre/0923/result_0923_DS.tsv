データフレーム <A> 内の <b> コラムに重複はあるのかどうか確認	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
色を <A> として、 <C> と <B> の折れ線グラフをプロットする	plt . plot ( <C> , <B> , color = ( <A> ) )	plt . plot ( <C> , <B> , color = ( <A> ) ) )
表データ <C> の表属性 <b> と <a> を大から小へと並び替え、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> の欠損値を <A> の平均値で埋めて、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	( <A> = <A> . fillna ( <A> . mean ( ) )
表 <A> のインデックスを振り直して、置き換える	<A> = <A> . reset_index ( )	<A> . reset_index ( inplace = True )
<A> の列 <b> を四分位数ごとで分割する	pd . qcut ( <A> [ <b> ] , 4 )	pd . qcut ( <A> [ <b> ] , 4 )
<A> 全体を位置を元にソートして、 <A> にする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <A> の <b> に重複は存在するのか確認	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表 <B> の NaN を <A> とし、 <C> に代入する	<C> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<b> というエクセルデータのシート名 <a> を読む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
表データ <B> を <a> の値を軸にソートして、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <C> 内の表属性 <b> と表属性 <a> に重複があるかどうか	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<B> を <a> ファイルという名前で CSV ファイルで保存する	<B> . to_csv ( <a> )	plt . savefig ( <a> )
カンマ区切りでファイル <a> からデータフレームを読み込む	pd . read_csv ( <a> , sep = ',' )	read_csv = pd . read_csv ( <a> , sep = ',' )
<A> の <b> に重複がある行をドロップし、置き換える	<A> . drop_duplicates ( subset = <b> , inplace = True )	df . drop_duplicates ( subset = <b> , inplace = True )
<b> カラムと <c> を値が大きい順にソートし、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 中の <b> に重複があるのかチェックする	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<a> と <b> に重複はあるのか調べる	df . duplicated ( subset = [ <a> , <b> ] )	if df . duplicated ( subset = [ <a> , <b> ] ) :
データフレーム <C> のカラム <b> と <a> を大から小へと並び替えて、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> 内に存在する <a> を NaN とし、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレームを <b> からタブ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	pd . read_csv ( <b> , sep = '\t' )
データフレーム <A> 内の列 <b> に重複がある行をドロップして、置き換える	<A> . drop_duplicates ( subset = <b> , inplace = True )	df . drop_duplicates ( subset = <b> , inplace = True )
データフレーム <B> の <a> 表属性を並び替えて、 <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<A> をエクセルファイル <b> という名前にして保存する	<A> . to_excel ( <b> )	df . to_excel ( <b> )
<a> というエクセル <a> の全てのシートを表に格納する	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
位置と <d> 列をキーとして <B> 表データと <C> 表データを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<a> というエクセルデータの全部のシートを読む	pd . read_excel ( <a> , sheet_name = None )	sheet_name . pd ( <a> , sheet_name = None )
同じ軸のセットで <A> の <b> と <A> データフレームの <c> と <A> の列 <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> 中のそれぞれのカラムにある <a> の個数の合計を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<b> を <a> 区切りで読み込んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	subset = pd . read_csv ( <b> , sep = <a> )
<a> に重複はあるのか表示する	df . duplicated ( subset = <a> )	pd . duplicated ( subset = <a> )
<A> の <b> コラムについての箱ひげ図を描写する	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
列 <b> と <c> を大から小へと並び替え、 <A> とする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 中の欠損がある行を消して、 <B> にする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
さらに、マーカーの輪郭線の色を灰色とする	@option markeredgecolor = 'gray'	@option markeredgecolor = 'gray'
表データ <C> 中の <b> と <a> コラムに重複はあるか確認	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <A> 中の欠損を含む行をドロップし、インプレースする	<A> . dropna ( inplace = True )	<B> . dropna ( inplace = True )
<C> の <b> の名前を <a> に変更して、置き換える	<C> = <C> . rename ( index = { <b> : <a> } )	<E> = <C> . rename ( index = { <b> : <a> } )
そこで、グラフの打点の形をバツ印とする	@option marker = 'x'	@option marker = 'x'
左側のデータのインデックスと右側のデータの <a> 列を項目名として 2 つのデータを一つにまとめ、 <B> とする	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
データフレーム <A> を <b> の値を軸にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> の <b> の値を昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <B> の NaN を <A> に置換し、 <C> とする	<C> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
<C> の <b> と <a> 表属性の相関係数を見る	<C> [ [ <b> , <a> ] ] . corr ( )	<D> [ [ <b> , <a> ] ] . corr ( )
表データ <A> 中の NaN を <B> とし、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
<B> を <a> コラムを元に昇順でソートを <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
同じ x 軸と y 軸で <D> 表 <c> と表 <D> <b> 列と <D> <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
左外部結合で <B> 表データと表データ <A> を一つにまとめて、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
データフレーム <A> の中の <b> を NaN に置換し、 NaN が存在する行を落とし、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
<C> ( データフレーム ) の <b> 表属性と <a> を値が大きい順にして、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の下 <b> 行	<A> . tail ( <b> )	<b> <A> . tail ( <b> )
表データ <A> と <B> を横方向に一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表 <A> の未記入の値がある行をドロップし、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<A> のコラム <b> を削除	<A> . drop ( <b> , axis = 1 )	1 . drop ( <b> , axis = 1 )
データフレーム <A> の <b> と <c> を逆順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	sort_values = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 全体を位置に基づいてソートし、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <A> の行名を <b> から <c> にリネームして、 <A> とする	<A> = <A> . rename ( index = { <b> : <c> } )	df = <A> . rename ( index = { <b> : <c> } )
ファイル名 <b> を <a> 区切りでデータフレームとして読む	pd . read_csv ( <b> , sep = <a> )	sep = <b> pd . read_csv ( <a> , sep = <b> )
ラベル名を <a> として、 <C> と <B> を折れ線グラフでプロットする	plt . plot ( <C> , <B> , label = <a> )	pd . merge ( <C> , <B> , label = <a> )
同じ軸で <A> データフレーム <b> と <A> データフレーム列 <c> と <A> <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> と <b> 表属性を大きい順にソートして、置き換える	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
重複した最後の行を残して <B> ( データフレーム ) 中の重複した行を削除を <A> とする	<A> = <B> . drop_duplicates ( keep = False )	False = <B> . drop_duplicates ( keep = False )
データフレームをファイル <a> からタブ区切りで読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = '\t' )	pd . read_csv ( <a> , sep = '\t' )
<c> 区切りで表データを <b> から読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<A> = pd . read_csv ( <b> , sep = <c> )
表 <A> 全体を <b> に沿ってソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
列番号 <c> を位置として、 <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
<D> <c> と <D> データフレーム <b> カラムと <D> <a> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <d> について、 <b> を位置、 <c> を列としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
データフレーム <A> の全ての列で重複している値がある行を取り除いて、 <B> にする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
左側のデータの位置と右側のデータの表属性 <a> をキーとして、表 <C> と表 <B> を一つにまとめて、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sns = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <D> 列 <c> と <D> 表データ <b> と <D> <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の中の未入力の値の個数を見る	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<C> の <b> とカラム <a> に重複はあるのかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表 <A> 内の列に存在する <b> の個数を求める	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <A> の <b> と <c> を値が大きい順に並び替えて、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> 内の重複している行を消して、 <A> に代入する	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
表データ <A> に存在する <b> を未入力の値に置換し、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
表データ <A> 表属性 <b> と表 <A> <c> と <A> 表属性 <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> と <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> )	df = pd . merge ( <B> , <C> )
<B> の <a> を datetime 型に変換する	pd . to_datetime ( <B> [ <a> ] )	sns . pd ( <B> [ <a> ] )
重複する最後の行を残して <A> ( データフレーム ) 中の重複する行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	drop_duplicates = <A> . drop_duplicates ( keep = False )
表データ <A> 中の <b> 表属性に重複がある行をドロップを <A> にする	<A> = <A> . drop_duplicates ( subset = <b> )	df = <A> . drop_duplicates ( subset = <b> )
同じ x 軸と y 軸で <D> 表 <c> 表属性と表 <D> <b> と <D> <a> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> と <c> 列を大きい順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> の中の NaN をドロップを <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
データフレーム <B> 全体を <c> を軸にソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
表 <D> <c> と <D> 表データ <b> と <D> <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> 全体をカラム <b> の値を元にソートし、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
表 <B> の未記入の値を <A> とし、インプレースする	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表 <B> 全体を <a> を軸に並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
表データ <A> の <b> カラムが <c> 以上のデータ	<A> [ <A> [ <b> ] >= <c> ]	<A> [ <A> [ <b> ] >= <c> ]
表 <A> 内に重複があるのかどうか表示する	<A> . duplicated ( )	df . duplicated ( )
列番号 <b> をインデックスと設定して、 <a> ファイルパスから読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
データフレーム <A> の先頭 <b> 行	<A> . head ( <b> )	head . head ( <b> )
データフレーム <B> のそれぞれのカラムにある <a> の個数の合計値を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 全体を <b> を軸にソートし、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
データフレーム <A> の <b> 行目を落として、インプレースする	<A> . drop ( <b> , inplace = True )	df . drop ( <b> , inplace = True )
<A> 中の列に存在する <b> の個数を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
ビン数を <B> 、ビンのラベルをリスト <A> として、表データ <D> の <c> をビン分割し、 <E> に代入する	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	= pd . cut ( <D> [ <c> ] , <B> , label = <A> )
凡例の場所を最も適切な位置に設定する	plt . legend ( loc = 'best' )	legend . loc = 'best' )
データフレーム <A> を位置に沿ってソートして、 <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表 <A> 中に存在する <b> を未記入の値とする	<A> . replace ( <b> , np . nan )	x <A> . replace ( <b> , np . nan )
表 <B> の欠損値をドロップし、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <A> の未入力の値を削除し、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> ( データフレーム ) の <b> を昇順にソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<b> 区切りで表データを <a> から読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
<a> カラムと <b> に重複があるのかチェック	df . duplicated ( subset = [ <a> , <b> ] )	if df . duplicated ( subset = [ <a> , <b> ] ) :
データフレーム <A> の列名を <b> から <c> に、 <d> から <e> にリネームし、 <A> にする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<F> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<B> 中の <a> コラムに重複があるか表示してみる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <A> の <c> の年を  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . year	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> を位置でソートを <B> にする	<B> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <B> 内のそれぞれの列にある <a> の個数の合計値を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> の下 <b> 行を確認する	<A> . tail ( <b> )	<b> <A> . tail ( <b> )
表データ <A> の表属性 <b> ごとに表属性 <c> の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
左側のデータのインデックスと右側のデータの <a> 表属性を項目名として 2 つのデータを一つにまとめ、 <B> とする	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
<A> ( データフレーム ) の <b> と <c> カラムを値が大きい順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> を <a> に沿ってソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <D> の <a> について、 <c> をインデックス、 <b> 列を列としたピボットテーブルを作成して、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<A> の <b> の月を表示する	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
表データ <C> の <a> カラムの月を見、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
データフレーム <A> 中のカテゴリ変数を数値データにし、 <A> とする	<A> = pd . get_dummies ( <A> )	start = pd . get_dummies ( <A> )
データフレーム <A> 中の重複する行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
グラフの y 軸	x 軸 = x 軸|グラフの x 軸| x 座標	sns . pairplot ( font = 'IPAexGothic' )
同じグラフ内で表データ <D> <c> と <D> 表データ <b> と <D> <a> カラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
一番左の列を位置に、 <b> ファイルからデータフレームとを読み込み、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
同じグラフ内で <A> の <b> と <A> の <c> 列と <A> の <d> 列を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> 内の <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	duplicated if <B> . duplicated ( subset = <a> ) :
表データ <B> の中にある <c> を未記入の値に置換し、 <A> にする	<A> = <B> . replace ( <c> , np . nan )	sns = <B> . replace ( <c> , np . nan )
表データ <A> 内の NaN を <B> に置換する	<A> . fillna ( <B> )	<A> . fillna ( <B> )
<B> を <a> を軸に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 中の <b> 列と <c> に重複がある場合	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	plt . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> 内の欠損を直前の行の値で補い、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
データフレーム <B> の位置 <c> の名前を <d> にリネームし、 <A> にする	<A> = <B> . rename ( index = { <c> : <d> } )	<A> = <B> . rename ( index = { <c> : <d> } )
表データ <B> 中に存在する <a> を未入力の値に置換し、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	<D> . replace ( <a> , np . nan , inplace = True )
データフレーム <B> を <a> に沿ってソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <B> の <a> をインデックスとして、 <B> とする	<B> = <B> . set_index ( <a> )	set_index = <B> . set_index ( <a> )
そこで、黄緑で表示することとする	@option color = 'greenyellow'	@option color = 'greenyellow' )
表データ <A> の <b> コラムと <A> の <c> と <A> の <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の全ての列で重複している値がある行をドロップし、インプレースする	<A> . drop_duplicates ( inplace = True )	<A> . drop_duplicates ( inplace = True )
<a> 番目の列をインデックスに、 <b> ファイルを表に格納して、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <A> を <b> に基づいてソートする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
<D> の <c> と表属性 <b> ごとに <a> 表属性の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	groupby . groupby ( [ <b> , <a> ] ) [ <a> ] . sum ( )
一番左の列をインデックスにして、 <a> を読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表 <A> の中に存在する <b> を NaN とする	<A> . replace ( <b> , np . nan )	x <A> . replace ( <b> , np . nan )
<b> 列を順番になるようにソートを <A> とする	<A> = df . sort_values ( <b> )	<A> = df . sort_values ( <b> )
<b> というエクセルデータの <a> 番目のシートを読んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <B> の <a> についてのヒストグラムを表示する	plt . hist ( <B> [ <a> ] )	pd . hist ( <B> [ <a> ] )
データフレーム <A> 内の欠損の合計を確認する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<B> を <a> という名前で書き出す	<B> . to_csv ( <a> )	plt . savefig ( <a> )
表 <C> の <b> が <a> 以上のデータ	<C> [ <C> [ <b> ] >= <a> ]	<A> [ <C> [ <b> ] >= <a> ]
データフレーム <C> の <b> カラムとカラム <a> を値が大きい順にソートを <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> 中にある <b> を未記入の値に置換する	<A> . replace ( <b> , np . nan )	sns . replace ( <b> , np . nan )
データフレーム <B> の末尾 <a> 行	<B> . tail ( <a> )	<B> . tail ( <a> )
表データ <B> の未入力の値を <A> に置き換え、 <B> にする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表 <A> の NaN を落として、再代入する	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
<B> の <a> に重複があるかどうか表示してみる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <B> のカラム <c> をソートを <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <B> に存在する <c> を未入力の値として、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	@option replace = <B> . replace ( <c> , np . nan )
データフレーム <A> 中の重複する行を落として、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> のコラム <b> をグループ化して、値ごとのデータ数を求める	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
表 <A> のコラム <b> をグループ化して、値ごとのデータ件数を求める	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
同じ軸のセットで表 <D> <c> と <D> 表 <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> という列を削除を <B> とする	<B> = df . drop ( <a> , axis = 1 )	<D> = df . drop ( <a> , axis = 1 )
表属性 <b> と <a> 表属性に重複はあるのか	df . duplicated ( subset = [ <b> , <a> ] )	if df . duplicated ( subset = [ <b> , <a> ] ) :
<C> 中の <b> と列 <a> に重複が存在するのか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <B> のカラム <a> をソートを <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <B> 内の <a> に重複があるかどうか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <A> の <b> をグループ化して、値ごとのデータ件数を算出する	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
データフレーム <A> の中のそれぞれのカラムに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 内の <b> と <c> に重複が存在するのかを調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
CSV ファイル <b> ( ファイル名 ) から表を <a> 区切りで読み、 <C> にする	<C> = pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
表データ <C> 中の <b> とカラム <a> に重複があるのか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <B> 内のそれぞれのカラムにある <a> の個数の合計値を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
同じグラフ内で表データ <D> の <c> と <b> と <a> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> カラムを小さい順にして、再代入する	df = df . sort_values ( <a> )	df = df . sort_values ( <a> )
表データ <B> 内のそれぞれのカラムに存在する <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
エクセルファイル <b> の <a> シート名から読む	pd . read_excel ( <b> , sheet_name = <a> )	plt . read_excel ( <b> , sheet_name = <a> ) )
表 <A> 内の <b> 列に重複がある行を落として、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
エクセルファイル <b> の <c> シート名からデータフレームを読み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	pd . read_excel ( <A> , sheet_name = <b> , sheet_name = <c> )
表データ <A> 中の <b> コラムと <c> に重複はあるのかどうか見る	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表 <B> 全体を列 <a> の値に基づいてソートし、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
表 <A> 全体を <b> コラムを元に昇順で並び替え、再代入する	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
データフレーム <B> の <a> の月を見る	<B> [ <a> ] . dt . month	<B> [ <a> ] . dt . month
分割数を <A> として、 <C> の <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <C> [ <b> ] , <A> )	pd . qcut ( <C> [ <b> ] , <A> )
<A> 内のカラムそれぞれにある <b> の個数を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
表データ <A> と <B> 表を縦向きに結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <B> を <a> カラムの値でソートし、置き換える	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
<A> の重複している行をドロップを <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> 中の欠損を <B> に置換し、置き換える	<A> . fillna ( <B> , inplace = True )	<A> = <A> . fillna ( <B> )
データフレーム <A> の <b> と <c> をドロップし、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
棒と棒の隙間を <a> として、 <C> 軸を <C> とした <B> の縦向きの棒グラフをプロットする	plt . bar ( <C> , <B> , width = <a> )	plt . bar ( <C> , <B> , width = <a> ) )
表 <D> の <c> 列と <D> の <b> と <D> の <a> 列の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表 <A> 内の重複する行を落として、 <A> にする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表データ <A> のリセットして、元の位置を削除する	<A> . reset_index ( drop = True )	<B> = <A> . reset_index ( drop = True )
<c> 区切りで <b> を表として読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <B> と表データ <A> をマージする	pd . merge ( <B> , <A> )	pd . merge ( <B> , <A> )
データフレーム <C> の <b> 列の名前を <a> に変更して、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
表 <A> をインデックスを元に昇順でソート	<A> . sort_index ( )	df . sort_index ( )
表 <A> 中の未記入の値を <B> で埋める	<A> . fillna ( <B> )	] . fillna ( <B> )
<A> の列 <b> の月	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
同じグラフ内でデータフレーム <A> の <b> とデータフレーム <A> の <c> とデータフレーム <A> の <d> カラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
そこで、マーカーの輪郭の色をグレーとする	@option markeredgecolor = 'gray'	@option markeredgecolor = 'gray'
<A> 内の重複している行を削除し、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
グラフのサイズを <a> x6 に指定する	plt . figure ( figsize = ( <a> , 6 ) )	<E> = plt . figure ( figsize = ( <a> , 6 ) )
表 <C> の <b> と <a> に重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<B> のカラム <c> を位置、 <d> をカラムとしたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<A> = <B> . pivot_table ( index = <c> , columns = <d> )
同じ軸のセットで <D> の <c> とデータフレーム <D> の表属性 <b> と <D> の <a> 表属性を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> のそれぞれの列に存在する <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
データフレーム <A> の <b> を昇順にソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <C> の <b> コラムをインデックス、コラム <a> をコラムとしたピボットテーブルを作成し、 <D> とする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<A> = <C> . pivot_table ( index = <b> , columns = <a> )
<B> の <a> の前後の行の差分を求める	<B> [ <a> ] . diff ( periods = 1 )	markeredgewidth <a> [ <a> ] . diff ( periods = 1 )
表 <B> の NaN を <A> に置き換え、インプレースする	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表データ <A> をカラム <b> を元に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <B> 全体をインデックスを軸にソートし、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <B> 中の <a> に重複があるのかチェックする	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <A> 中のそれぞれの列にある <b> の個数の合計値を見る	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
重複する最後の行を残して <A> ( データフレーム ) 内の重複する行を落として、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	<A> . drop_duplicates ( keep = False , inplace = True )
データフレーム <A> の <b> の日にちを表示する	<A> [ <b> ] . dt . day	[ <A> [ <b> ] . dt . day
表データ <B> と表 <A> を縦方向に一つにまとめ、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	= pd . concat ( [ <B> , <A> ] )
表 <A> をエクセルファイル <b> という名前で書き込む	<A> . to_excel ( <b> )	to_excel . to_excel ( <b> )
表データ <A> コラム <b> と <A> データフレーム <c> と <A> <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> <b> と <A> データフレーム <c> と <A> <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> と表属性 <c> を値が大きい順にソートを <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	sort_values = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
左側のデータのインデックスと右側のデータの <a> をキーとして、 <C> 表と <B> 表を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
同じ x 軸と y 軸で <D> の <c> カラムと <D> 表のカラム <b> と <D> 表の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> というエクセルデータのシート全部を読む	pd . read_excel ( <a> , sheet_name = None )	sheet_name . pd ( <a> , sheet_name = None )
<B> を <a> ファイルパスという名前で CSV ファイルに書き出す	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<a> に重複は存在するのか見る	df . duplicated ( subset = <a> )	pd . duplicated ( subset = <a> )
同じグラフ内でデータフレーム <D> の <c> 表属性と <b> 表属性と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の表属性 <b> と <c> を大から小へとソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> の <b> の値を軸に昇順でソートして、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
描画するグラフ枠のサイズを横幅 <b> 高さ <a> に設定する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
表 <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行をドロップを <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> 中で重複した行数を調べる	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
同じ x 軸と y 軸で <D> の列 <c> と <D> の列 <b> と表データ <D> の列 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<C> 中の <b> と <a> に重複があるか	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
先頭の列を位置に指定して、 <a> を表データに格納する	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
表 <A> の <b> ごとに <c> 列の平均を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
ビン数を <A> として、 <C> の列 <b> をビンに含まれる個数が等しくなるように分割し、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	<A> = pd . qcut ( <C> [ <b> ] , <A> )
<B> 全体を <a> でソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> 内の <a> に重複があるのかチェックを調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <B> 内の未記入の値を <A> に置換し、 <C> とする	<C> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
データフレーム <A> 中の未記入の値を表 <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
表データ <A> 内の NaN を落として、 <B> にする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表データ <A> を <b> の値で並び替え、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
列番号 <b> をインデックスとして、ファイル <a> を読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
<D> <c> と表 <D> <b> と表 <D> <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> の <c> と <d> を大から小へとソートして、 <A> に代入する	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<B> の <a> を中央値で分割する	pd . qcut ( <B> [ <a> ] , 2 )	median pd . qcut ( <B> [ <a> ] , 2 )
重複している最後の行を残して <A> ( データフレーム ) の重複している行を削除を <B> に代入する	<B> = <A> . drop_duplicates ( keep = False )	keep = <A> . drop_duplicates ( keep = False )
データフレーム <A> の中の重複している行をドロップする	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表 <C> の <b> と列 <a> を削除を <D> に代入する	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> 全体を位置に沿ってソートする	<A> . sort_index ( )	<A> . sort_index ( )
データフレーム <A> を位置を元にソート	<A> . sort_index ( )	@option sort_index ( )
表データ <A> と <B> を横にくっつける	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表 <A> をインデックスを元に並び替え、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <A> 内で重複している行の合計	<A> . duplicated ( ) . sum ( )	<B> . duplicated ( ) . sum ( )
表データ <B> を <a> コラムの値を元に昇順で並び替えて、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
ビン数を <C> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
<a> からカンマ区切りで表データを読む	pd . read_csv ( <a> , sep = ',' )	sep = pd . read_csv ( <a> , sep = ',' )
表データ <A> の <b> コラム中の前後の行の差分を求める	<A> [ <b> ] . diff ( periods = 1 )	<b> <A> [ <a> ] . diff ( periods = 1 )
エクセルデータ <b> の <a> 番目のシートを表に格納して、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<A> = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <B> を <a> を元に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<a> をキーとして、表データ <C> と表データ <B> を結合する	pd . merge ( <C> , <B> , on = <a> )	pivot_table = pd . merge ( <C> , <B> , on = <a> )
同じ x 軸と y 軸で <D> <c> と <D> 表 <b> と表 <D> <a> コラムを箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データを <a> 区切りでファイル名 <b> から読む	pd . read_csv ( <b> , sep = <a> )	sep = pd . read_csv ( <b> , sep = <a> )
表データ <C> の <b> と <a> に重複があるならば	if <C> . duplicated ( subset = [ <b> , <a> ] ) :	plt . duplicated ( subset = [ <b> , <a> ] ) :
描画するグラフの枠のサイズを横 <a> 縦 <b> とする	plt . figure ( figsize = ( <a> , <b> ) )	color = plt . figure ( figsize = ( <a> , <b> ) )
<A> のカラム <b> を消し、インプレースする	<A> . drop ( <b> , axis = 1 , inplace = True )	axis . drop ( <b> , axis = 1 , inplace = True )
先頭の列をインデックスに指定して、 <a> ファイルを表に格納する	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
表データ <B> 中の欠損を <B> データフレームの平均値で補って、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	fillna <A> = <B> . fillna ( <B> . mean ( ) )
表データ <B> 全体を列 <a> を軸に並び替えて、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <C> の <b> と <a> 表属性を逆順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> 内の <c> に重複がある行をドロップを <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
<a> と <b> コラムに重複があるのかを確認する	df . duplicated ( subset = [ <a> , <b> ] )	if df . duplicated ( subset = [ <a> , <b> ] ) :
表 <B> と <A> を縦方向に一つにまとめる	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<C> ( データフレーム ) の <b> コラムと <a> コラムを逆順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> と表データ <B> を横にくっつける	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表データ <A> 表属性 <b> と <A> 表 <c> 表属性と <A> <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <D> <c> と <D> 表 <b> と表 <D> 表属性 <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 内の未入力の値がある行を落として、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
<A> の行数と列数を表示する	<A> . shape	<A> . shape
<B> の重複要素がある行を削除し、 <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
同じグラフ内で <A> データフレームの表属性 <b> と表属性 <c> と <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> と列 <b> に重複はあるか	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
<B> 全体を <a> で並び替えて、 <B> に代入する	<B> = <B> . sort_values ( <a> )	= <B> . sort_values ( <a> )
<A> 全体をインデックスを軸にソートし、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
そのとき、マーカーの種類は丸こととする	@option marker = 'o'	@option marker = 'o'
<B> の <a> の値を並び替え、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
そこで、円グラフ上に小数点以下 2 桁までのパーセント表記で構成割合を表示する	@option autopct = '%.2f%%'	@option autopct = '%.2f%%'
<A> 中のコラム <b> と <c> に重複があるのか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
データフレーム <A> をインデックスで並び替えて、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<B> のそれぞれのカラムにある <a> の個数の合計を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> の <b> についての中央値を抽出する	<A> [ <b> ] . median ( )	sns . pairplot ( <A> [ <b> , <c> ] ] )
表 <B> の先頭 <a> 行を見る	<B> . head ( <a> )	plt . head ( <a> )
データフレーム <A> の <b> に重複がある行を消し、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
データフレーム <B> の <c> と <d> をドロップを <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	1 = <B> . drop ( [ <c> , <d> ] , axis = 1 )
さらに、色を黄緑とする	@option color = 'greenyellow'	@option color = 'greenyellow' )
<A> に重複があるか確認	<A> . duplicated ( )	df . duplicated ( )
表 <A> の中の <b> と列 <c> に重複があるのかどうか表示してみる	<A> . duplicated ( subset = [ <b> , <c> ] )	<B> . duplicated ( subset = [ <b> , <c> ] )
表データ <B> の <a> を未記入の値に置換し、未記入の値がある行を落とし、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> 中の欠損値を <A> 表データの平均値で埋める	<A> . fillna ( <A> . mean ( ) )	x <A> . fillna ( <A> . mean ( ) )
<C> の列の名前を <b> から <a> にリネームして、インプレースする	<C> . rename ( columns = { <b> : <a> } , inplace = True )	<D> . rename ( columns = { <b> : <a> } , inplace = True )
表データ <C> のカラム <a> 内の前後の行の差分を  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )	<D> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )
表 <B> 内に存在する <c> を欠損に置換して、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	<A> = <B> . replace ( <c> , np . nan )
表 <B> 内の未入力の値を <A> に置換し、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
データフレームとして <b> 区切りで <a> ファイル名を読み込む	pd . read_csv ( <a> , sep = <b> )	<C> = pd . read_csv ( <b> , sep = <a> )
<b> という名前のエクセルデータの <a> からデータフレームを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	markeredgewidth = <a> pd . read_excel ( <b> , sheet_name = <a> )
表 <A> のカラム名を <b> から <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	x <A> . rename ( columns = { <b> : <c> } )
<b> という名前のエクセルの <c> 番目のシートをデータフレームとして読んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	to_excel = pd . read_excel ( <b> , sheet_name = <c> )
データフレーム <C> の列の名前を <b> から <a> に変更して、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
データフレーム <B> の NaN を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	fillna <B> = <B> . fillna )
表 <C> の <b> が <a> 以下データを抽出する	<C> [ <C> [ <b> ] <= <a> ]	<D> [ <C> [ <b> ] <= <a> ]
表 <A> 内の未入力の値を直前の行の値で埋め、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<A> の <b> についての箱ひげ図を描写する	plt . boxplot ( <A> [ <b> ] )	year plt . boxplot ( <A> [ <b> ] )
<B> 中の <a> に重複はあるか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
<a> 番目の列をインデックスに設定して、ファイルパス <b> をデータフレームに格納する	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <A> の <b> と <c> を大から小へとソートして、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> をインデックスを元に昇順でソートを <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <A> を <b> という名前で書き込む	<A> . to_csv ( <b> )	plt . savefig ( <b> )
<C> の <b> 列ごとに <a> の個数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<D> . groupby ( [ <b> ] ) [ <a> ] . count ( )
同じ軸で <D> の <c> コラムと <b> と <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> の欠損値を <A> に置き換える	<B> . fillna ( <A> )	plt . fillna ( <B> )
同じ x 軸と y 軸で表 <D> の <c> 表属性と表 <D> の <b> と <D> の表属性 <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の列に存在する <b> の個数の合計を表示する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<b> というエクセルデータの <a> をデータフレームとして読み込んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
<A> の表属性 <b> の値をソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<B> ( データフレーム ) の表属性 <a> を順番になるように並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
同じグラフ内で <D> 表の <c> コラムと <D> の <b> と <D> 表のコラム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <D> のカラム <c> と <b> と <a> について関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . corr ( )
<B> 内にある <a> を欠損に置換して、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレーム <A> の <b> カラムを中央値で分割する	pd . qcut ( <A> [ <b> ] , 2 )	median pd . qcut ( <A> [ <b> ] , 2 )
表 <C> の <b> カラムと <a> を降順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	sns = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
一番左の列を位置として、 <a> から読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	markeredgewidth = pd . read_csv ( <a> , index_col = 0 )
同じ x 軸と y 軸で <A> の <b> 表属性と <A> データフレームの <c> と <A> の <d> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> の <c> をソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <A> の <b> と <A> の <c> と <A> の列 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> の中に存在する <a> を欠損値に置き換えて、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<A> 内の重複する値がある行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
分割数を <C> 、ビンのラベルを <D> として、 <A> 表の <b> 表属性を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
データフレーム <B> 中の <c> を未記入の値に置換し、未記入の値が存在する行をドロップを <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
同じグラフ内で <A> <b> と <A> 列 <c> と表データ <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 内の重複している行を消して、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ x 軸と y 軸で <D> <c> と <D> 表データ <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <b> 行から末尾までを表示する	<A> [ <b> : ]	<A> [ <b> : ]
データフレーム <A> 中の未記入の値がある行を消して、 <A> に代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <B> をインデックスに基づいてソートして、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
左外部結合で表データ <B> と <A> をマージする	pd . merge ( <B> , <A> , how = 'left' )	} = pd . merge ( <B> , <A> , how = 'left' )
データフレーム <B> 中のそれぞれのカラムにある <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> の <c> を未入力の値に置換し、未入力の値がある行を消して、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<a> と列 <b> を降順にソートして、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <B> 内の未記入の値を <A> に置換する	<B> . fillna ( <A> )	<B> . fillna ( <A> )
同じグラフ内で <D> 表データの <c> と <D> の <b> コラムと <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
<A> の <b> と <c> を削除する	<A> . drop ( [ <b> , <c> ] , axis = 1 )	1 . drop ( [ <b> , <c> ] , axis = 1 )
<B> のインデックスを軸に並び替えて、 <A> とする	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
データフレーム <A> の中の未記入の値を <A> の平均値で補い、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	sns <A> . fillna ( <A> . mean ( ) , inplace = True )
<a> を小から大へとし、再代入する	df = df . sort_values ( <a> )	df = df . sort_values ( <a> )
表 <A> をインデックスでソートし、 <B> にする	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表 <C> のインデックス名を <b> から <a> にリネームし、再代入する	<C> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
表データ <B> の <c> と <d> を落とし、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	sns = <B> . drop ( [ <c> , <d> ] , axis = 1 )
そのとき、マーカーの輪郭線の色を黄色とする	@option markeredgecolor = 'yellow'	@option markeredgecolor = 'yellow'
表 <B> とデータフレーム <C> を横方向にくっつけ、 <A> とする	<A> = pd . merge ( <B> , <C> )	pd . merge ( <B> , <A> )
同じグラフ内で <A> の <b> と <A> 表の <c> と <A> の <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
カラム <c> をキーとして、 <A> と表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	<D> = pd . merge ( <A> , <B> , on = <c> )
左側のデータのインデックスと右側のデータの <c> 表属性を項目名として、 <A> データフレームとデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> の <a> を未入力の値に置換し、未入力の値がある行を消して、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> と <A> を縦向きにくっつける	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
データフレーム <B> の <c> 位置の名前を <d> にリネームし、 <A> とする	<A> = <B> . rename ( index = { <c> : <d> } )	<A> = <B> . rename ( index = { <c> : <d> } )
<B> の <a> をグループ化して、値ごとのデータ数	<B> . groupby ( <a> ) . size ( )	<B> . groupby ( <a> ) . size ( )
<a> 区切りで表として <b> を読み込む	pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
表データ <A> をコラム <b> を軸にソート	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
<A> の <b> と <c> カラムを削除して、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <B> 中の未記入の値がある行をドロップし、 <A> とする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
表データ <D> のコラム <c> と表データ <D> の <b> と表データ <D> の <a> コラムについての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
ビン数を <C> 、ビンの名前をリスト <D> として、データフレーム <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表データ <B> をカラム <c> の値を元に昇順で並び替え、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<B> 全体を <a> 表属性で並び替えて、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <A> のインデックスを振り直し、 <A> にする	<A> = <A> . reset_index ( )	start = <A> . reset_index ( )
インデックスとコラム <d> をキーとして表 <B> と <C> 表をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<B> の <a> の分を見る	<B> [ <a> ] . dt . minute	<B> [ <a> ] . dt . minute
表データ <A> をファイル <b> というファイル名で保存する	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
表データ <A> 中の重複している値がある行をドロップして、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <B> の <a> のデータの種類を表示する	<B> [ <a> ] . unique ( )	markeredgewidth <a> ] . unique ( )
表データ <A> の <b> と <c> を大きい順にソートして、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<C> ( データフレーム ) の <b> とカラム <a> を値が大きい順にして、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
左側のデータの位置と右側のデータの <a> 表属性をキーとして、 <C> と <B> 表データをマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> を <b> というエクセルファイルにして保存する	<A> . to_excel ( <b> )	df . sort_values ( <b> )
<C> の表属性 <a> の月を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
<B> ( データフレーム ) の <a> 列を小から大へとソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じグラフ内で <A> 表の <b> と <c> と <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
x 軸に <a> という軸ラベルを付ける	plt . xlabel ( <a> )	軸 . plt ( <a> )
<B> のカラム <a> を四分位数ごとでビン分割して、 <C> とする	<C> = pd . qcut ( <B> [ <a> ] , 4 )	df = pd . qcut ( <B> [ <a> ] , 4 )
表 <A> 内の未記入の値を <B> とし、インプレースする	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表 <B> と <C> を縦向きにくっつけ、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	= pd . concat ( [ <B> , <C> ] )
表 <B> の <c> を位置、表属性 <d> を表属性としたピボットテーブルを作成して、 <A> に代入する	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<b> <A> = <B> . pivot_table ( index = <c> , columns = <d> )
表データ <B> の列 <a> をソートを <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <A> 中の未入力の値の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
コラム <b> と <a> を逆順にソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> のインデックスを昇順で並び替えて、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
同じグラフ内でデータフレーム <D> の <c> と <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> 全体をインデックスを元に昇順で並び替える	<A> . sort_index ( )	df . sort_index ( )
同じ x 軸と y 軸で <A> 表 <b> と表 <A> <c> と <A> カラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> の未入力の値を <A> に置き換える	<B> . fillna ( <A> )	plt . fillna ( <B> )
<A> 中の NaN を <B> で埋め、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
境界値を <A> として、 <C> の <b> カラムをビン分割する	pd . cut ( <C> [ <b> ] , <A> )	cut pd . cut ( <C> [ <b> ] , <A> )
左側のデータのインデックスと右側のデータの <a> をキーとして、表データ <C> と <B> 表データをマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <B> の <a> を昇順にソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
作ったグラフを <a> というファイルにして保存する	plt . savefig ( <a> )	plt . savefig ( <a> )
分割数を <A> 、ビンの名前を 0 始まりの連番として、表 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	pd . cut ( <C> [ <b> ] , <A> , label = False )
表 <C> の <b> と <a> を値が大きい順にソートし、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
同じ軸のセットで <A> 表データの <b> と <A> の <c> と <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> 中のそれぞれの列に存在する <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
<A> 中の欠損が存在する行を削除して、 <A> にする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<B> のそれぞれの列にある <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
凡例の場所を最適な位置につける	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
表 <A> をカラム <b> を軸にソートし、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
<a> というエクセルデータの <b> をデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	) pd . read_excel ( <a> , sheet_name = <b> )
表 <B> 内の未入力の値を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
表データ <A> 全体をインデックスに沿ってソートする	<A> . sort_index ( )	<A> . sort_index ( )
グラフの大きさを横幅 <b> 高さ <a> とする	plt . figure ( figsize = ( <b> , <a> ) )	color = plt . figure ( <b> , <a> ) ) )
表 <B> 内のカラムそれぞれに存在する <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 全体を <b> の値を元に昇順でソートを <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表 <B> 全体を <a> の値で並び替え、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <A> の中のそれぞれのカラムに存在する <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表データ <A> 中の未入力の値を含む行を消し、 <B> にする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
同じグラフ内で <D> データフレームの表属性 <c> と表属性 <b> と <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> 中のコラム <b> とコラム <c> に重複がある場合	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	plt . duplicated ( subset = [ <b> , <c> ] ) :
<A> 内に重複があるか調べる	<A> . duplicated ( )	df . duplicated ( )
表データ <A> のカラムそれぞれに存在する <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<A> <b> と <A> 表属性 <c> と <A> データフレーム表属性 <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> を <b> の値で並び替え、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
エクセルファイル <b> の全てのシートから読み込み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	to_excel = pd . read_excel ( <b> , sheet_name = None )
データフレーム <B> 内の <a> に重複がある行を削除を <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	<D> = <B> . drop_duplicates ( subset = <a> )
<B> の <a> を未入力の値に置換し、未入力の値がある行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
描画した図を <a> という名前で保存する	plt . savefig ( <a> )	plt . savefig ( <a> )
データフレーム <B> の <a> を昇順にソートを <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <B> の未記入の値を <A> とし、 <C> とする	<C> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
位置と <d> を項目名として <B> と <C> 表を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
データフレーム <B> 全体を表属性 <a> の値に沿ってソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
CSV ファイル <a> ( ファイル名 ) をデータフレームとして読んで、 <B> にする	<B> = pd . read_csv ( <a> )	<B> = pd . read_csv ( <a> )
同じ軸で <A> 表データ <b> 列と <A> <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> 全体を <b> カラムを元にソートを <A> とする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<B> の <a> コラムを軸に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <B> と <A> 表データを横方向に一つにまとめ、 <C> にする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
表データ <B> 全体を <c> の値に基づいてソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
同じ x 軸と y 軸で <A> の <b> と表 <A> の <c> と <A> 表の <d> カラムを箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の未記入の値の数を調べる	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 内にある <b> を NaN に置き換える	<A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan )
<A> のインデックスを昇順で並び替え、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <A> 中で重複した行数の合計を見る	<A> . duplicated ( ) . sum ( )	sns . duplicated ( ) . sum ( )
<a> に重複が存在するのか	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
<a> という名前のエクセルファイルの <b> を表データに格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<C> の <b> と <a> を削除し、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <E> のカラム名を <d> から <c> に、 <b> から <a> にリネームし、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	sum = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <B> 全体をコラム <c> の値を軸にソートを <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <A> 全体をインデックスを元にソートして、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <B> 中の未記入の値を <A> に置換して、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表データ <A> 中の重複する行をドロップする	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表データ <A> 中の欠損値の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
データフレームとして CSV ファイル <a> ( ファイル名 ) をカンマ区切りで読む	pd . read_csv ( <a> , sep = ',' )	<A> = pd . read_csv ( <a> , sep = ',' )
表データ <B> の <a> をドロップして、 <C> とする	<C> = <B> . drop ( <a> , axis = 1 )	<E> = <B> . drop ( <a> , axis = 1 )
同じグラフ内で <D> 表データの <c> と <D> 表データの <b> 列と <D> の <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> 中の欠損値を <A> に置き換えて、インプレースする	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
<A> の <b> についての中央値を取得する	<A> [ <b> ] . median ( )	pd . qcut ( <A> [ <b> ] , 2 )
全結合で <B> データフレームとデータフレーム <A> をマージする	pd . merge ( <B> , <A> , how = 'outer' )	'outer' pd . merge ( <B> , <A> , how = 'outer' )
<B> 中にある <a> を NaN に置き換えて、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
エクセルファイル <b> の <c> 番目のシートを読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<b> <A> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <C> の <b> と <a> を逆順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> の <b> の値を並び替え、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
出力するグラフの大きさを <a> x6 と設定する	plt . figure ( figsize = ( <a> , 6 ) )	figure plt . figure ( figsize = ( <a> , 6 ) )
データフレーム <E> の列名を <d> から <c> に、 <b> から <a> にリネームし、 <E> にする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <B> に存在する <a> を未記入の値に置き換える	<B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
表 <B> の中のそれぞれの列に存在する <a> の個数を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
エクセルファイル <a> から読み込む	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> )
レンジを <b> から <c> として、 <A> のヒストグラムを描画する	plt . hist ( <A> , range = ( <b> , <c> ) )	sns . hist ( <A> , range = ( <b> , <c> ) )
同じグラフ内で表 <A> <b> と <A> 表 <c> と <A> 表 <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸で表データ <A> の <b> と <A> 表データの <c> と <A> 表データの <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> の <b> ごとに <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表 <A> をインデックスを元に並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
位置と <a> をキーとしてデータフレーム <C> とデータフレーム <B> をマージし、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum <D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <A> 内の未記入の値をドロップを <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表 <A> 内の欠損値を <B> で埋めて、 <A> とする	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
<a> 区切りで <b> を読んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	day = pd . read_csv ( <b> , sep = <a> )
表データ <B> と <A> データフレームを縦方向にくっつける	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
表データ <B> と表データ <A> を縦方向に連結	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
データフレーム <A> 内の未記入の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> , <A> を散布図で描写する	plt . scatter ( <B> , <A> )	pd . scatter ( <B> , <A> )
<A> 内の未記入の値がある行をドロップを <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <A> のリセットして、元のインデックスを削除し、 <B> とする	<B> = <A> . reset_index ( drop = True )	<B> = <A> . reset_index ( drop = True )
表データ <B> 内のコラム <a> に重複は存在するのかを確認する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <B> 全体を <a> の値に基づいてソートして、置き換える	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <B> 内のそれぞれのカラムにある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の <b> の月を調べる	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
表データ <B> の未入力の値を <A> に置き換える	<B> . fillna ( <A> )	pd . fillna ( <B> , <A> )
表 <A> の <b> が <c> より小さいデータを得る	<A> [ <A> [ <b> ] <  <c> ]	<C> [ <A> [ <b> ] < <c> ]
同じ x 軸と y 軸で <A> 表 <b> 列と <A> <c> と表 <A> <d> 列を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> ( データフレーム ) の列 <b> と <a> 列を降順に並び替え、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸のセットで <D> 表の表属性 <c> と <D> の <b> と表 <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 中の NaN を含む行を削除して、 <A> にする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<E> の <d> の名前を <c> に、 <b> の名前を <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> . rename ( columns = { <c> : <b> : <a> } )
表 <B> 内の <c> に重複がある行を削除を <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	= <B> . drop_duplicates ( subset = <c> )
<A> ( データフレーム ) の <b> を昇順にソートする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表 <B> の元の位置をリセットし、 <A> とする	<A> = <B> . reset_index ( drop = True )	<A> = <B> . reset_index ( drop = True )
データフレーム <B> と <A> を縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
図に格子を描く	plt . grid ( True )	sns . grid ( True )
データフレーム <D> の表属性 <c> と <b> と <a> についての箱ひげ図を描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> 内の <a> 表属性に重複が存在するのか確認する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
<A> のカラム <c> の曜日を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name
<B> 内の <a> に重複があるかどうかチェックを確認する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <B> の中の列それぞれにある <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の <b> に重複が存在するのかチェックを表示する	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
表 <A> 内の <b> に重複はあるのかどうかチェック	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
ビン数を <A> として、 <C> のカラム <b> を要素数が等しくなるようにビン分割し、 <D> にする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	] = pd . qcut ( <C> [ <b> ] , <A> )
データフレーム <A> の上 <b> 行を確認する	<A> . head ( <b> )	df . head ( <b> )
表データ <B> の <a> を昇順にソートを <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <A> を <b> の値に沿ってソートする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表データ <A> の <b> 列と列 <c> の相関係数を見る	<A> [ [ <b> , <c> ] ] . corr ( )	df [ [ <b> , <c> ] ] . corr ( )
データフレーム <A> の列名を <b> から <c> に、 <d> から <e> に変更し、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<A> ( データフレーム ) の表属性 <b> を小さい順にソートする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
<c> 区切りで <b> を表データとして読み込み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
<B> のコラム <a> のそれぞれのデータの出現回数	<B> [ <a> ] . value_counts ( )	<B> [ <a> ] . value_counts ( )
<c> 番目の列を位置に、 <b> をデータフレームとして読んで、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
表 <A> 中に重複はあるのか確認	<A> . duplicated ( )	df . duplicated ( )
<b> に重複がある行をドロップし、 <A> とする	<A> = df . drop_duplicates ( subset = <b> )	= <A> . drop_duplicates ( subset = <b> )
列番号 <c> を位置と設定して、 <b> ファイルパスをデータフレームに格納し、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
<a> というエクセルファイルのシート名 <b> から読む	pd . read_excel ( <a> , sheet_name = <b> )	to_excel pd . read_excel ( <a> , sheet_name = <b> )
カラム <d> を項目名として、 <B> と表 <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	<A> = pd . merge ( <B> , <C> , on = <d> )
表データ <A> の中の <b> に重複があるか	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表データ <B> の中の <a> を欠損値に置換し、欠損値が存在する行を消し、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )
データフレーム <A> と表 <B> を縦に一つにまとめる	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
先頭の列を位置に指定して、 <a> パスをデータフレームとして読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表データ <A> の列 <b> をヒストグラムで描く	plt . hist ( <A> [ <b> ] )	pd . hist ( <A> [ <b> ] )
同じ軸でデータフレーム <D> のカラム <c> と <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> データフレームと <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <B> の欠損値を <A> に置換し、 <B> とする	<B> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
表データ <A> と <B> を縦方向でマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> 中の NaN を <A> として、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
<b> と <a> に重複があるのかどうか確認する	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
表データ <C> のカラム <b> と <a> を値が大きい順に並び替えて、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> を <a> の値を元に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じ x 軸と y 軸で <A> の <b> 表属性と <A> データフレームの <c> と <A> データフレームの表属性 <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 全体を列 <a> を軸に並び替えて、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表 <D> の <a> について、 <c> を位置、 <b> を表属性としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<D> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <A> 中の欠損を <A> データフレームの平均値で補って、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	sns . <A> . fillna ( <A> . mean ( ) , inplace = True )
データフレーム <C> の <b> をインデックス、 <a> を表属性としたピボットテーブルを作成し、 <D> にする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<A> = <C> . pivot_table ( index = <b> , columns = <a> )
同じ x 軸と y 軸で <D> の <c> と表 <D> の列 <b> と <D> 表の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> の <a> コラムについての箱ひげ図をプロットする	plt . boxplot ( <B> [ <a> ] )	plt . boxplot ( <B> [ <a> ] )
列番号 <a> をインデックスに設定して、 <b> を表に格納し、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
<A> の位置を軸に昇順でソートを <A> に代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<B> の末尾 <a> 行を調べる	<B> . tail ( <a> )	<B> . tail ( <a> )
データフレーム <B> の中の列にある <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <B> と <A> を縦方向でマージし、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<a> と <b> を大から小へと並び替えて、インプレースする	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<a> df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )
データフレーム <C> の中の <b> と <a> に重複は存在するのか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> の <a> を未入力の値に置換し、未入力の値がある行を削除を <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> の未記入の値が存在する行をドロップを <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
データフレーム <B> とデータフレーム <A> を縦に一つにまとめる	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<C> ( データフレーム ) の <b> と <a> カラムを値が大きい順にソートし、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
エクセルファイル <b> の <a> からデータフレームを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	read_excel <b> pd . read_excel ( <a> , sheet_name = <b> )
<D> の <a> 列について、 <c> 列を位置、 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	pivot_table . pivot_table ( index = <a> , columns = <b> , values = <c> )
表 <B> 全体を <c> を元に昇順で並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
そのとき、色はマゼンタで表示することとする	@option color = 'magenta'	@option color = 'magenta'
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> データフレームと <B> をマージし、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum <D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<C> 内の <b> コラムと <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <D> <c> と <D> 表データ列 <b> と <D> <a> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
<C> ( データフレーム ) の <b> と <a> を値が大きい順にして、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> の <b> を軸にソート	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
<a> と <b> を大きい順にソート	df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <D> <c> カラムと表 <D> <b> と <D> 表カラム <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
<a> を読み込む	pd . read_csv ( <a> )	<a> pd . read_csv ( <a> )
<A> 中に重複はあるのかどうかチェック	<A> . duplicated ( )	df . duplicated ( )
<B> の未記入の値を <A> で埋める	<B> . fillna ( <A> )	plt . fillna ( <B> )
同じ軸で <A> データフレーム <b> と <A> データフレーム <c> コラムと <A> データフレームコラム <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の重複する行を消す	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表データ <A> 全体を <b> の値に基づいてソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> = <A> . sort_values ( <b> )
同じグラフ内で <A> データフレームの <b> コラムと <c> とコラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
列番号 <a> をインデックスと設定して、 <b> から読んで、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
表 <A> 内の <b> を欠損に置換し、欠損がある行を削除を <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 中の欠損を含む行をドロップし、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<A> の <b> カラムの名前を <c> に、 <d> カラムの名前を <e> にリネームし、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
<B> 軸を <B> とした <A> の棒グラフを表示する	plt . bar ( <B> , <A> )	pd . merge ( <B> , <A> )
表 <C> の <b> と <a> を削除する	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <B> の中の欠損値を <B> の平均値で補い、 <A> にする	<A> = <B> . fillna ( <B> . mean ( ) )	= <B> . fillna ( <B> . mean ( ) , inplace = True )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行をドロップし、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	df = <A> . drop_duplicates ( keep = False )
<a> と <b> 表属性に重複が存在するのか確認する	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
ラベルを <c> として、 <A> と <B> の折れ線グラフをプロットする	plt . plot ( <A> , <B> , label = <c> )	pd . merge ( <A> , <B> , label = <c> )
位置と列 <c> をキーとして <A> 表データと <B> 表データをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<A> の欠損値を含む行を消し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <A> を <b> を元に並び替える	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表データ <A> の全ての列の重複する行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
左外部結合で <B> 表データと <A> をマージする	pd . merge ( <B> , <A> , how = 'left' )	sns . pd ( <B> , <A> , how = 'left' )
表データ <B> の未入力の値を <A> とし、 <C> とする	<C> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
表データ <B> の <c> の名前を <d> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	<A> = <B> . rename ( columns = { <c> : <d> } )
<b> カラムという列を落として、 <A> に代入する	<A> = <A> . drop ( <b> , axis = 1 )	<B> = <A> . drop ( <b> , axis = 1 )
同じ軸のセットで <D> データフレームの <c> と <b> と <a> コラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> とデータフレーム <A> を縦方向で結合し、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<A> をファイル名 <b> に書き出す	<A> . to_csv ( <b> )	to_csv = <A> . to_csv ( <b> )
<b> と表属性 <a> を大きい順に並び替えて、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の重複行を検出する	<A> . duplicated ( )	df . duplicated ( )
<D> の <c> 列と <b> ごとに <a> 列の値の合計を算出する	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	df . groupby ( [ <a> , <b> ] ) [ <a> ] . sum ( )
<A> のカラム <b> 、 <c> 、 <d> 、 <e> を表示する	<A> [ [ <b> , <c> , <d> , <e> ] ]	if <A> [ [ <b> , <c> , <d> , <e> ] ]
表データ <B> の <a> を欠損に置換し、欠損がある行を落とし、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )
<C> の表属性 <a> の年を調べて、  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . dt . year	<D> [ <b> ] = <C> [ <a> ] . dt . year
同じ軸のセットでデータフレーム <D> <c> コラムと <D> データフレームコラム <b> とデータフレーム <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> にある <a> を欠損に置き換えて、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<D> . replace ( <a> , np . nan , inplace = True )
表 <B> 全体を列 <c> の値に基づいてソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
<A> の <b> 列が <c> より少ないデータ	<A> [ <A> [ <b> ] <  <c> ]	pd [ <A> [ <b> ] < <c> ]
データフレーム <B> 全体をカラム <a> を元に昇順でソート	<B> . sort_values ( <a> )	df . sort_values ( <a> )
ビン数を <C> 、ビンの名前を <D> リストとして、 <A> の表属性 <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
同じ軸のセットで <D> 表データの <c> と <b> と <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
列番号 <a> を位置と設定して、 <b> ファイル名を表に格納して、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <B> 内の <a> を欠損値に置換し、欠損値が存在する行を消し、インプレースする	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )
<a> というエクセルファイルの <b> シート名を表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name = pd . read_excel ( <a> , sheet_name = <b> )
左外部結合で <A> 表と <B> 表を結合する	pd . merge ( <A> , <B> , how = 'left' )	sns . pd ( <A> , <B> , how = 'left' )
<B> の <a> 表属性に重複がある行を削除して、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
箱ひげ図で表 <B> の列 <a> を表す	plt . boxplot ( <B> [ <a> ] )	plt . boxplot ( <B> [ <a> ] )
<A> を <b> を元にソートを <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<A> の <b> コラムの一意の値を見る	<A> [ <b> ] . unique ( )	pd . unique ( <A> [ <b> ] )
データフレーム <A> 中の重複要素がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> 内の重複している行を消して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
データフレーム <D> <c> 表属性と <D> データフレーム <b> と <D> <a> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> 全体を <b> コラムの値を元に昇順でソートする	<A> . sort_values ( <b> )	<B> . sort_values ( <b> )
同じ軸で <A> <b> と <A> 表データ <c> と <A> <d> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> ( データフレーム ) の <c> を順番になるようにソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<B> にある <a> を欠損に置き換え、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<a> コラムという列を消す	df . drop ( <a> , axis = 1 )	pd . read_csv ( <a> , axis = 1 )
データフレーム <B> 全体を <a> を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> の欠損を <A> で埋める	<B> . fillna ( <A> )	plt . fillna ( <B> )
同じ x 軸と y 軸で表データ <D> の <c> と <D> 表データの <b> と <D> の <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 内の欠損を表 <A> の平均値で補って、置き換える	<A> = <A> . fillna ( <A> . mean ( ) )	<A> . fillna ( <A> . mean ( ) , inplace = True )
<A> ( データフレーム ) の <b> 表属性と <c> を値が大きい順にする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
コラム <a> と <b> を値が大きい順に並び替える	df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> . sort_values ( [ <a> , <b> ] , ascending = False )
そのとき、マーカースタイルを四角とする	@option marker = 's'	@option marker = 's'
表データ <C> の <b> と <a> を大きい順に並び替えて、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	sns = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
先頭の列を位置に指定して、 <b> パスをデータフレームとして読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
表 <B> を <a> に沿ってソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<A> 内の重複しているデータを得る	<A> [ <A> . duplicated ( ) ]	if <A> [ <A> . duplicated ( ) ]
表 <B> 中の <a> に重複がある行を削除し、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	<D> = <B> . drop_duplicates ( subset = <a> )
データフレーム <A> の重複する行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
データフレーム <B> の <a> の一意の値を表示する	<B> [ <a> ] . unique ( )	<B> [ <a> ] . unique ( )
境界値を <C> として、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
表データ <B> に存在する <a> を未入力の値に置換し、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
左側のデータのインデックスと右側のデータの <a> 列をキーとして 2 つのデータを結合して、 <B> にする	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	= pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
<A> ( データフレーム ) の列 <b> と <c> 列を値が大きい順にソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	sort_values = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<C> の <a> カラム内の前後の行の差分を  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )	<D> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )
同じ軸のセットで <A> の <b> とデータフレーム <A> の <c> と <A> の <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> 内で重複する行の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> に存在する <b> を未入力の値として、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
表データ <B> 内の <a> に重複がある行を落として、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
<B> 内の <a> を未記入の値に置換し、未記入の値がある行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	markeredgewidth . replace ( <a> , np . nan ) . dropna ( )
一番左の列を位置として、ファイル名 <a> を表に格納する	pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表データ <A> <b> 列と <A> <c> と <A> 列 <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の <b> に重複がある行をドロップを <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
カンマ区切りでパス <a> を表として読み込み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<D> = pd . read_csv ( <a> , sep = ',' )
<D> の <c> と <b> と列 <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> 中の未入力の値がある行を削除を <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<B> を <a> の値を元に並び替えて、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
カンマ区切りで <b> を読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
<A> 中に重複があるのか	<A> . duplicated ( )	df . duplicated ( )
<A> 内の欠損を直前の行の値で埋め、 <A> に代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <C> の <b> と列 <a> を落として、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	sns = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <A> 中に重複はあるか	<A> . duplicated ( )	df . duplicated ( )
左側のデータの位置と右側のデータの <c> カラムを項目名として、 <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<b> と <a> を値が大きい順に並び替えて、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸でデータフレーム <D> <c> とデータフレーム <D> コラム <b> とデータフレーム <D> コラム <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> を小さい順にソートし、 <A> とする	<A> = df . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> 内の <b> を未入力の値に置換し、未入力の値が存在する行を削除して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <b> , np . nan ) . dropna ( inplace = True )
<C> のインデックス名を <b> から <a> に変更して、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
<B> を <a> の値を元にソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
列番号 <b> を位置と設定して、 <a> をデータフレームとして読む	pd . read_csv ( <a> , index_col = <b> )	<D> = pd . read_csv ( <a> , index_col = <b> )
表 <A> 中の列 <b> に重複はあるかどうか調べる	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<B> の中の NaN を <A> に置換し、 <C> にする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
<a> という名前のエクセルデータのシート全てをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> , sheet_name = None )
表 <A> 全体を <b> 表属性の値でソートし、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
<a> をダミー変数化し、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
データフレーム <A> の未入力の値の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <A> 内の列それぞれにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
表データ <B> を <a> という名前で書き込む	<B> . to_csv ( <a> )	plt . savefig ( <a> )
データフレーム <D> の <c> と <D> の <b> と <D> の <a> についての箱ひげ図を描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表示するグラフの枠の大きさを <a> x6 に変更する	plt . figure ( figsize = ( <a> , 6 ) )	<E> = plt . figure ( figsize = ( <a> , 6 ) )
表 <B> と表データ <C> を横方向にマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	= pd . merge ( <B> , <C> )
表データ <B> 内の未記入の値を削除し、 <A> にする	<A> = <B> . dropna ( )	<B> = <B> . dropna ( )
データフレーム <A> の <b> コラムについての箱ひげ図を表示する	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
データフレーム <B> を位置に沿ってソートし、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <D> の <a> について、 <c> をインデックス、 <b> を表属性としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <A> の <b> と表属性 <c> を大から小へとソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	1 = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <A> の <b> 列と <c> と <d> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	plt . boxplot ( [ <A> [ <b> , <c> ] , <A> [ <d> ] ] ] ] )
ピボット操作で <A> の行を列に変更する	<A> . unstack ( )	stack <A> . unstack ( )
エクセルファイル <a> の <b> をデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	read_excel <a> pd . read_excel ( <b> )
インデックスと <a> カラムをキーとして <C> と <B> 表を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<B> 内のそれぞれの列に存在する <a> の個数を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
表データ <B> の <a> に重複があるかどうか表示してみる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <A> 中のカラム <b> に重複は存在するのか表示する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
エクセルファイル <b> の <c> 番目のシートから読み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	pd . read_excel ( <A> [ <b> , <c> ] , ascending = False )
表データ <A> の <b> ごとに <c> の数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <d> ] . count ( )
境界値を <C> リストとして、 <A> の表属性 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
表 <A> 中にある <b> を未記入の値に置換し、再代入する	<A> = <A> . replace ( <b> , np . nan )	<B> = <A> . replace ( <b> , np . nan )
表データ <A> の <b> と <c> と <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
タブ区切りで <a> を読み込む	pd . read_csv ( <a> , sep = '\t' )	pd . read_csv ( <a> , sep = '\t' )
データフレーム <B> の中の列にある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
左側のデータの位置と右側のデータの <a> を項目名として、 <C> と表データ <B> を結合し、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> 内の重複要素がある行を削除する	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
左側のデータのインデックスと右側のデータの <c> をキーとして、 <A> 表と <B> 表を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	sns . pd ( <A> , <B> , left_index = True , right_on = <c> )
<b> というエクセルファイルのシート全部から読み込み、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	to_excel = pd . read_excel ( <b> , sheet_name = None )
<a> という名前のエクセルファイルのシート全てをデータフレームとして読み込んで、 <B> にする	<B> = pd . read_excel ( <a> , sheet_name = None )	<B> = pd . read_excel ( <a> , sheet_name = None )
<A> 内の重複要素がある行を削除し、置き換える	<A> = <A> . drop_duplicates ( )	<C> . drop_duplicates ( inplace = True )
<A> のインデックスを軸に並び替えて、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
左外部結合で表データ <B> と表データ <A> をマージする	pd . merge ( <B> , <A> , how = 'left' )	} = pd . merge ( <B> , <A> , how = 'left' )
データフレーム <A> 内のそれぞれのカラムに存在する <b> の個数の合計値を確認する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
<c> 番目の列をインデックスに設定して、 <b> ファイル名からデータフレームとを読み込み、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
データフレーム <A> のカテゴリ変数をダミー変数に変換し、 <A> とする	<A> = pd . get_dummies ( <A> )	df = pd . get_dummies ( <A> )
同じグラフ内で <A> <b> カラムと <A> <c> カラムとデータフレーム <A> <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
箱ひげ図で <A> の表属性 <b> を表す	plt . boxplot ( <A> [ <b> ] )	plt . boxplot ( <A> [ <b> ] )
データフレーム <B> の列 <c> に重複がある行を落として、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
表データ <B> の列 <c> と <d> を削除を <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	1 = <B> . drop ( [ <c> , <d> ] , axis = 1 )
左外部結合で <B> と <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
<a> と <b> を値が大きい順にして、インプレースする	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<a> df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )
<C> ( データフレーム ) の列 <b> と <a> を値が大きい順にし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
描いたグラフを <a> というファイルに出力する	plt . savefig ( <a> )	plt . savefig ( <a> )
データフレーム <B> の中の未記入の値がある行をドロップして、 <A> とする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
<B> のコラム <c> を位置として設定し、 <A> とする	<A> = <B> . set_index ( <c> )	<A> = <B> . set_index ( <c> )
<B> 全体を <c> を元にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <A> の列にある <b> の個数の合計を計算する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
表データ <C> のカラム <b> と <a> を調べる	<C> [ [ <b> , <a> ] ]	<E> [ [ <b> , <a> ] ]
<C> の <b> 表属性と表属性 <a> をドロップし、インプレースする	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	<E> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )
<A> の <b> と <c> 表属性を値が大きい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<B> と <A> を縦方向に連結を <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
同じグラフ内で <D> <c> カラムと <D> <b> と <D> <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> を <b> を元に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
同じ軸のセットで表データ <D> <c> と表データ <D> 列 <b> と <D> 表データ列 <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> 全体を <c> 列を元に並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
<A> 内の <b> と <c> に重複は存在するのか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> の中の欠損値を <A> の平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	plt . <A> ( <A> = ( <A> . mean ( ) , inplace = True )
表 <B> 中の <a> に重複がある行を削除し、置き換える	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
同じグラフ内で表 <D> <c> と表 <D> <b> と <D> 列 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 中の重複をチェック	<A> . duplicated ( )	df . duplicated ( )
表 <A> 全体を <b> コラムを元に昇順で並び替え、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
<b> 表属性と <c> を値が大きい順にソートして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> を <c> 表属性を元にソートし、 <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
列番号 <a> をインデックスに設定して、 <b> ファイル名から読み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <B> の <a> についての分散	<B> [ <a> ] . var ( )	sns . var ( <B> [ <a> ] )
表 <A> 内の <b> を未記入の値に置換し、未記入の値がある行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <C> の <a> コラムの分を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . minute	<D> [ <b> ] = <C> [ <a> ] . dt . minute
<C> のカラム <a> の月を調べて、  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
データフレーム <B> の <c> 列をインデックスとして、 <A> にする	<A> = <B> . set_index ( <c> )	<A> = <B> . set_index ( <c> )
<c> 番目の列をインデックスと設定して、パス <b> からデータフレームとを読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
データフレーム <A> を位置を元にソートして、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <A> の列 <b> についての標準偏差	<A> [ <b> ] . std ( )	<A> [ <b> ] . std ( )
データフレーム <A> 全体を <b> を軸にソートを <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表 <A> の <b> を未入力の値に置換し、未入力の値が存在する行を落とす	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> の <b> を見る	<A> [ <b> ]	pd . read_csv ( <b> )
同じ軸のセットでデータフレーム <D> <c> カラムとデータフレーム <D> <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> 内のカテゴリ変数を数値データで置き換える	pd . get_dummies ( <A> )	get_dummies pd . get_dummies ( <A> )
<A> の表属性 <b> についての標準偏差	<A> [ <b> ] . std ( )	<B> [ <b> ] . std ( )
データフレーム <B> の <a> を位置に設定して、置き換える	<B> = <B> . set_index ( <a> )	<B> = <B> . set_index ( <a> )
重複する最後の行を残して <A> ( データフレーム ) 内の重複する行をドロップを <B> にする	<B> = <A> . drop_duplicates ( keep = False )	keep = <A> . drop_duplicates ( keep = False )
<C> の表属性 <b> と表属性 <a> を落とし、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	sns = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<b> を表データとしてカンマ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
データフレーム <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
<B> の <a> 表属性をインデックスとする	<B> . set_index ( <a> )	pd . read_csv ( <a> , index_col = 0 )
同じグラフ内で <D> の <c> と表 <D> のカラム <b> と <D> の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表データ <A> 中の <b> に重複がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
<B> 内の欠損を <C> で埋め、 <A> にする	<A> = <B> . fillna ( <C> )	<B> = <B> . fillna ( <C> )
<A> のカラム <b> の曜日	<A> [ <b> ] . dt . weekday_name	<b> <A> [ <a> ] . dt . weekday_name
データフレーム <B> の NaN を <B> の平均値で補い、 <A> とする	<A> = <B> . fillna ( <B> . mean ( ) )	fillna <A> = <B> . fillna ( <B> . mean ( ) )
さらに、文字コードはシフト JIS をする	@option encoding = 'shift_jis'	read_csv = pd . read_csv ( encoding = 'shift_jis' )
<c> をキーとして、 <A> 表データと <B> を結合する	pd . merge ( <A> , <B> , on = <c> )	<D> pd . merge ( <A> , <B> , on = <c> )
カラム <a> という列をドロップして、インプレースする	df . drop ( <a> , axis = 1 , inplace = True )	<D> . drop ( <a> , axis = 1 , inplace = True )
データフレーム <B> のコラム <a> をグループ化して、値ごとのデータ数を求める	<B> . groupby ( <a> ) . size ( )	<B> . groupby ( <a> ) . size ( )
表データ <B> の <a> を削除	<B> . drop ( <a> , axis = 1 )	<B> . drop ( <a> , axis = 1 )
表データ <D> の <c> カラムと表データ <D> の <b> と <D> の <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> 中の <a> カラムに重複があるのかを見る	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
境界値を <C> として、 <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
分割数を <A> として、 <C> のカラム <b> を要素数が等しくなるようにビン分割し、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	] = pd . qcut ( <C> [ <b> ] , <A> )
<a> ファイル名からデータフレームをカンマ区切りで読み込む	pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
表データ <B> を表属性 <c> に基づいてソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表 <A> 中に重複はあるのかどうか確認する	<A> . duplicated ( )	df . duplicated ( )
<b> 表属性と <a> に重複があるかどうか確認する	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
位置と <a> を項目名として <C> と <B> を一つにまとめ、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
ラベルの名前を <a> として、 <C> と <B> の折れ線グラフをプロットする	plt . plot ( <C> , <B> , label = <a> )	pd . merge ( <C> , <B> , label = <a> )
表 <A> 中の重複する値がある行をドロップする	<A> . drop_duplicates ( )	<A> . drop_duplicates ( )
さらに、マーカーの形を五芒星とする	@option marker = '*'	@option marker = '*'
表データ <B> の <a> コラムを昇順にソートを <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<A> の表属性 <b> と <c> 表属性に重複はあるかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	sns . duplicated ( subset = [ <b> , <c> ] )
表 <B> の <a> をドロップを <B> にする	<B> = <B> . drop ( <a> , axis = 1 )	<D> = <B> . drop ( <a> , axis = 1 )
表 <B> 内の NaN がある行を削除して、 <A> とする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
<A> と <B> の散布図のグラフを表示する	plt . scatter ( <A> , <B> )	plt . scatter ( <A> , <B> )
表 <B> 全体を <a> を元にソートを <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<A> ( データフレーム ) の <b> と <c> 表属性を大から小へとして、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<E> のコラム <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームして、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
ラベルの名前を <c> として、 <A> , <B> のグラフを描写する	plt . plot ( <A> , <B> , label = <c> )	<E> = pd . cut ( <A> , <B> , label = <c> )
表 <B> 中の <c> に重複がある行を削除して、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
表 <A> の未記入の値がある行をドロップして、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
表 <A> <b> と <A> <c> と <A> <d> についての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> の中の <a> に重複がある行を削除し、インプレースする	<B> . drop_duplicates ( subset = <a> , inplace = True )	<D> . drop_duplicates ( subset = <a> , inplace = True )
<B> の欠損値が存在する行を落として、 <A> とする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
ビン数を <C> 、ビンの名前をインデックスとして、 <A> の <b> コラムを分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	set_index = pd . cut ( <b> ] , <C> , label = False )
データフレーム <B> 全体を <a> の値に基づいてソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 中の NaN をドロップ	<A> . dropna ( )	<A> . dropna ( )
同じ軸のセットでデータフレーム <D> のコラム <c> とコラム <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の最頻値	<A> . mode ( )	mode = <A> . mode ( )
<C> ( データフレーム ) の <b> カラムと <a> を逆順にする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> 内に存在する <a> を欠損に置換し、再代入する	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレーム <A> のデータの詳細を確認する	<A> . info ( )	@option info . info ( )
同じ軸で <A> の <b> と表 <A> の <c> と <A> の <d> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> 中の欠損値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> 内の NaN を <B> とする	<A> . fillna ( <B> )	<A> . fillna ( <B> )
データフレーム <B> 中にある <a> を欠損に置き換える	<B> . replace ( <a> , np . nan )	sns . replace ( <a> , np . nan )
カンマ区切りで表を <a> から読む	pd . read_csv ( <a> , sep = ',' )	sep = pd . read_csv ( <a> , sep = ',' )
表 <B> の中の NaN を <A> として、 <C> にする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> と <B> を結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <B> のそれぞれの列にある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <C> の <b> と <a> コラムを落として、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
分割数を <D> 、ビンのラベルを <E> として、表 <B> の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	label = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<a> と <b> 表属性を逆順に並び替える	df . sort_values ( [ <a> , <b> ] , ascending = False )	pd . sort_values ( [ <a> , <b> ] , ascending = False )
表データ <A> の行名を <b> から <c> に変更する	<A> . rename ( index = { <b> : <c> } )	sns . rename ( index = { <b> : <c> } )
表データ <B> の <a> をグループ化して、値ごとのデータ数	<B> . groupby ( <a> ) . size ( )	markeredgewidth . groupby ( <a> ) . size ( )
表データ <A> 内の未記入の値を落として、再代入する	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> と <B> 表データを縦方向に結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> 中の未記入の値をデータフレーム <A> の平均値で埋めて、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	fillna <B> = <A> . fillna ( <A> . mean ( ) )
ビン数を <A> として、 <C> 表の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	cut pd . cut ( <C> [ <b> ] , <A> )
重複している最後の行を残して <B> ( データフレーム ) 内の重複している行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	drop_duplicates = <B> . drop_duplicates ( keep = False )
表 <A> 中の <b> を未入力の値に置換し、未入力の値が存在する行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> 内の重複している行を落として、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ x 軸と y 軸で <D> <c> と <D> <b> と表 <D> <a> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> 全体を <a> を元にソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
<b> という名前のエクセル <b> の全てのシートを表データに格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
表 <B> 全体を <a> 表属性の値でソートして、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
同じグラフ内で <D> 表 <c> と <D> <b> カラムと表 <D> カラム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
列番号 <c> をインデックスに指定して、 <b> をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
データフレーム <B> のカラム <a> の日にちを確認する	<B> [ <a> ] . dt . day	<B> [ <a> ] . dt . day
同じ x 軸と y 軸で <A> の <b> 表属性と <A> の <c> と <A> 表データの <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
先頭の列を位置として、 <a> から読んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
データフレーム <B> の <a> カラムをソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> の <a> カラムをソートを <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
インデックスと列 <c> を項目名として <A> 表データと <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行を消し、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
同じグラフ内で <D> <c> と表 <D> <b> と <D> 表カラム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> 中の NaN を <A> とし、 <C> にする	<C> = <B> . fillna ( <A> )	@option fillna <A> = <B> )
表 <B> の欠損値を <A> に置換する	<B> . fillna ( <A> )	plt . fillna ( <B> )
同じ軸で <A> カラム <b> と <A> <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> 内の <b> 表属性と <c> に重複があるのかどうかチェックを調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<A> の下 5 行を見る	<A> . tail ( )	tail <A> . tail ( )
表データ <B> 全体を <a> の値を元に昇順でソートを <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<B> 全体をカラム <c> の値を軸にソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<B> の <a> の値を昇順で並び替え、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <B> の先頭の <a> 行を確認する	<B> . head ( <a> )	plt . head ( <a> )
左側のデータのインデックスと右側のデータの <a> を項目名として 2 つのデータを一つにまとめる	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
データフレーム <B> の <a> に重複は存在するのか確認を表示する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <A> 内の重複する行をドロップして、 <A> にする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
そこで、リトルエンディアンをする	@option byteorder = 'little'	start = pd . read_csv ( <a> )
表データ <A> 内に重複があるか確認	<A> . duplicated ( )	df . duplicated ( )
<A> の中の NaN の合計を算出する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<b> という名前のエクセルファイルの <c> から読み込み、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = <c> )	sns = pd . read_excel ( <b> , sheet_name = <c> )
表 <A> 内の <b> と <c> に重複があるのかどうか確認を調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	sns . duplicated ( subset = [ <b> , <c> ] )
同じ軸のセットで <A> 表データの <b> と <A> の <c> と表データ <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
色を <C> として、 <A> と <B> のグラフを描画する	plt . plot ( <A> , <B> , color = ( <C> ) )	pd . merge ( <C> , <B> , color = ( <A> ) )
データフレーム <A> と <B> に対して、列 <c> をキーとしてデータを結合する	pd . merge ( <A> , <B> , on = <c> )	sns . pd ( <A> , <B> , on = <c> )
<b> カラムと <c> を降順にして、 <A> とする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	sns = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 内の <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	duplicated if <A> . duplicated ( subset = <b> ) :
分割数を <A> として、 <C> データフレームの <b> 列を要素数が等しくなるように分割して、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	] = pd . qcut ( <C> [ <b> ] , <A> )
表属性 <b> と <c> を値が大きい順にし、 <A> に代入する	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> をインデックスを軸にソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <A> を <b> でソートし、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
色を e00RGB 値として、 <A> と <B> の折れ線グラフをプロットする	plt . plot ( <A> , <B> , color = ( e00 ) )	pd . merge ( <B> , <A> , color = ( e00 ) )
データフレーム <A> の <b> カラムのバリューを表示する	<A> [ <b> ] . values	<B> [ <a> ] . values
一番左の列をインデックスにして、 <a> を読み込む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
列番号 <a> を位置に、 <b> をデータフレームに格納する	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <B> 内にある <a> を欠損値に置換して、再代入する	<B> = <B> . replace ( <a> , np . nan )	<B> = <B> . replace ( <a> , np . nan )
<A> ( データフレーム ) の表属性 <b> と表属性 <c> を大から小へとして、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 中の未入力の値が存在する行を落とし、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
重複する最後の行を残して <A> ( データフレーム ) の中の重複する行をドロップする	<A> . drop_duplicates ( keep = False )	sns . drop_duplicates ( keep = False )
データフレーム <A> 中の未入力の値を <B> として、 <A> とする	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表 <A> 中で重複した行の合計を確認する	<A> . duplicated ( ) . sum ( )	x <A> . duplicated ( ) . sum ( )
<b> と <a> 列を値が大きい順に並び替え、 <C> に代入する	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> というエクセル <b> のシート全部を表に格納し、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
表 <A> の <b> と <c> を落とす	<A> . drop ( [ <b> , <c> ] , axis = 1 )	1 . drop ( [ <b> , <c> ] , axis = 1 )
表 <D> の <c> と <b> コラムと <a> について関係性を一気に描く	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ <c> , <b> , <a> ] ] )
表データ <D> の <c> と列 <b> ごとに <a> の値の合計値を求める	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	df . groupby ( [ <a> , <b> ] ) [ <a> ] . sum ( )
表 <B> に存在する <a> を未入力の値として、 <B> にする	<B> = <B> . replace ( <a> , np . nan )	<A> = <B> . replace ( <a> , np . nan )
<B> ( データフレーム ) の <c> とカラム <d> を逆順に並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	False = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
左外部結合で <B> と <A> 表を一つにまとめ、 <C> に代入する	<C> = pd . merge ( <B> , <A> , how = 'left' )	} = pd . merge ( <B> , <A> , how = 'left' )
表 <B> 内の <a> を NaN に置換し、 NaN が存在する行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
表データ <C> の <b> コラムと <a> の相関係数を確認する	<C> [ [ <b> , <a> ] ] . corr ( )	<D> [ [ <b> , <a> ] ] . corr ( )
データフレーム <D> <c> コラムと <D> <b> と <D> <a> コラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
そこで、マーカースタイルを円形とする	@option marker = 'o'	@option marker = 'o'
<A> の <b> と <c> を落とし、 <A> にする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <A> の <b> と <c> と列 <d> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> の <c> とコラム <d> を大きい順にソートを <A> にする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表 <A> のバリュー	<A> . values	<A> . values
表 <C> の <b> と <a> を削除を <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<E> = <D> . drop ( [ <b> , <a> ] , axis = 1 )
<A> の <b> 表属性の値を軸に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<C> のカラム <b> が <a> 以下データを得る	<C> [ <C> [ <b> ] <= <a> ]	<D> [ <C> [ <b> ] <= <a> ]
同じ軸のセットでデータフレーム <A> <b> コラムと <A> データフレームコラム <c> とデータフレーム <A> <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表示するグラフ枠の大きさを横 <b> 縦 <a> とする	plt . figure ( figsize = ( <b> , <a> ) )	figure plt . figure ( figsize = ( <b> , <a> ) )
データフレーム <B> の <a> カラムを四分位数ごとでビン分割して、 <C> とする	<C> = pd . qcut ( <B> [ <a> ] , 4 )	df = pd . qcut ( <B> [ <a> ] , 4 )
左側のデータの位置と右側のデータの <c> を項目名として、 <A> データフレームとデータフレーム <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	sns . pd ( <A> , <B> , left_index = True , right_on = <c> )
表データ <A> 内で重複する行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
同じグラフ内で <D> データフレームの <c> と <D> の <b> とデータフレーム <D> の表属性 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> を位置に設定して、インプレースする	<A> . set_index ( <b> , inplace = True )	<b> <A> . set_index ( <b> , inplace = True )
表 <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行をドロップして、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 中の NaN を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
コラム <b> と <a> を値が大きい順に並び替えて、インプレースする	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表データ <A> 内のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	'%Y-%m-%d' pd . get_dummies ( <A> )
ラベルを <c> として、 <A> と <B> のグラフを描画する	plt . plot ( <A> , <B> , label = <c> )	pd . merge ( <A> , <B> , label = <c> )
ヒストグラムで <A> データフレームの <b> をプロットする	plt . hist ( <A> [ <b> ] )	pd . hist ( <A> [ <b> ] )
表データ <A> から重複する行をドロップする	<A> . drop_duplicates ( )	df . drop_duplicates ( )
<a> と <b> を大から小へとする	df . sort_values ( [ <a> , <b> ] , ascending = False )	pd . read_csv ( [ <a> , <b> ] , ascending = False )
同じグラフ内で <A> 表データカラム <b> と <A> <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> をインデックスを軸にソートを <B> にする	<B> = <A> . sort_index ( )	= <A> . sort_index ( )
先頭の列をインデックスに指定して、 <a> からデータフレームとを読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表データ <B> 中の <a> を NaN に置換し、 NaN が存在する行を削除を <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<B> と表データ <A> を縦結合し、 <C> に代入する	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
そのとき、ラインスタイルを点線とする	@option linestyle = 'dotted'	sns . @option ( <A> , label = 'dotted' )
位置と <a> を項目名として <C> 表と <B> を結合し、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <A> 内の未入力の値を <B> に置換して、置き換える	<A> . fillna ( <B> , inplace = True )	<A> = <A> . fillna ( <B> )
<a> というエクセルデータの <b> シート名をデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	to_excel pd . read_excel ( <a> , sheet_name = <b> )
<a> という名前のエクセル <a> の全てのシートをデータフレームに格納して、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	df = pd . read_excel ( <a> , sheet_name = None )
表 <C> の <b> と <a> を大きい順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
ヒストグラムで表データ <B> の <a> 表属性をプロットする	plt . hist ( <B> [ <a> ] )	bins plt . hist ( <B> [ <a> ] )
ラベルは <a> として、 <C> と <B> を折れ線グラフで描画する	plt . plot ( <C> , <B> , label = <a> )	color = pd . merge ( <C> , <B> , label = <a> )
データフレーム <A> の <b> コラムごとに <c> の数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <d> ] . count ( )
<B> の <a> についての標準偏差を取得する	<B> [ <a> ] . std ( )	sns . std ( <B> [ <a> ] )
<B> を <a> カラムの値を軸にソートし、置き換える	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
ビン数を <A> 、ビンのラベルをインデックスとして、 <C> の <b> をビン分割する	pd . cut ( <C> [ <b> ] , <A> , label = False )	pd . cut ( <C> [ <b> ] , <A> , label = False )
<b> という名前のエクセルデータの <a> 番目のシートをデータフレームに格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name . pd ( <b> , <a> )
表データ <A> の中の列 <b> に重複があるのか表示してみる	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表 <B> 全体を表属性 <a> でソートし、置き換える	<B> = <B> . sort_values ( <a> )	df . sort_values ( <a> , inplace = True )
<a> を読んで、 <B> にする	<B> = pd . read_csv ( <a> )	df = pd . read_csv ( <a> )
表 <B> を <a> カラムを軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> 中の NaN を <A> で埋め、 <C> にする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
表 <B> 全体を <c> でソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
同じグラフ内で <D> コラム <c> と <D> <b> と <D> 表 <a> コラムを箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> <b> とデータフレーム <A> <c> と <A> <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> 内の未記入の値を <A> として、置き換える	<B> = <B> . fillna ( <A> )	fillna <B> = <B> . fillna )
もし <A> の各行に重複があるならば	if <A> . duplicated ( ) :	pd . if <A> . duplicated ( ) :
データフレーム <A> 中の未記入の値を <B> に置換して、 <A> とする	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
<A> のリセットして、元の位置を削除して、 <A> とする	<A> = <A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
表 <A> 内の重複している行を消し、再代入する	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
データフレーム <A> の中の NaN を直前の行の値で補って、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	fillna = <A> . fillna ( method = 'ffill' )
<A> ( データフレーム ) の <b> と <c> を降順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
区関の数を <a> として、 <B> のヒストグラムを表示する	plt . hist ( <B> , bins = <a> )	plt . hist ( <B> , bins = <a> )
データフレーム <B> を <a> の値を元にソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<a> と <b> 列を大きい順にソートして、再代入する	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	df = df . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <A> 中の <b> に重複があるか否か	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
データフレーム <B> の <e> について、 <c> を位置、 <d> をカラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表データ <A> を位置に基づいてソートし、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <A> の重複行を検出する	<A> . duplicated ( )	df . duplicated ( )
同じ x 軸と y 軸で表データ <D> <c> と <D> <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> の未入力の値がある行をドロップし、 <A> とする	<A> = <B> . dropna ( )	= <B> . dropna ( )
ヘッダーなしで <a> を読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
データフレーム <A> の中の <b> に重複はあるか否か	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表データ <B> の <a> を欠損値に置換し、欠損値がある行を落として、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> 内の重複した行を落として、 <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
データフレーム <C> の <b> の名前を <a> に変更し、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	<E> = <C> . rename ( index = { <b> : <a> } )
<a> を小さい順に並び替える	df . sort_values ( <a> )	df . sort_values ( <a> )
表示するグラフの枠のサイズを横幅 <b> 高さ <a> と設定する	plt . figure ( figsize = ( <b> , <a> ) )	color = plt . figure ( <b> , <a> ) ) )
表 <B> 内の <c> を未入力の値に置換し、未入力の値が存在する行をドロップを <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
分割数を <B> 、ビンのラベルを <A> として、表データ <D> の <c> をビン分割し、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
境界値を <C> として、 <A> の <b> コラムをビン分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を落とす	<A> . drop_duplicates ( keep = False )	df . drop_duplicates ( keep = False )
表データ <B> 全体をインデックスで並び替えて、 <A> とする	<A> = <B> . sort_index ( )	sort_index = <B> . sort_index ( )
データフレーム <B> 内の列にある <a> の個数の合計を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> 内の NaN を <A> に置き換えて、置き換える	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<a> に重複はあるのかどうかチェック	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <A> の中に存在する <b> を NaN として、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
<A> の列 <b> を昇順で並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
<b> カラムと <a> を降順にソートして、再代入する	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	df = df . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> を one - hot 表現にする	pd . get_dummies ( <A> )	get_dummies pd . get_dummies ( <A> )
表データ <C> の <b> コラムと <a> コラムをドロップを <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	sns = <C> . drop ( [ <b> , <a> ] , axis = 1 )
分割数を <D> 、ビンの名前を <E> として、 <B> のカラム <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表 <A> を <b> の値を元にソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表データ <A> 内の <b> に重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	if <A> . drop_duplicates ( subset = <b> ) :
表データ <A> をカラム <b> の値を元に昇順で並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <A> <b> カラムと <A> <c> とデータフレーム <A> <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> の <a> を削除する	<B> . drop ( <a> , axis = 1 )	<B> . drop ( <a> , axis = 1 )
データフレーム <A> 全体を <b> コラムの値に基づいてソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
位置と <a> をキーとして <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> の <c> を昇順に並び替え、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<b> という名前のエクセルデータの <a> 番目のシートから読む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
<B> 中の未記入の値を <C> に置換して、 <A> に代入する	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
<B> 全体を <c> カラムに沿ってソートし、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
分割数を <C> 、ビンのラベルを整数値として、データフレーム <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	pd . cut ( <A> [ <b> ] , <C> , label = False )
表 <C> 内の <b> と <a> に重複があるのかどうか確認を調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> の <b> コラムと表データ <A> の <c> と <A> 表データの <d> コラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の列 <b> をソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
左側のデータの位置と右側のデータの <a> コラムをキーとして、表データ <C> と <B> 表データを結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	] = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
今までのプロットを <a> というファイルに出力する	plt . savefig ( <a> )	pd . set_option ( 'display.max_columns' , <a> )
<A> 内の <b> に重複がある行をドロップ	<A> . drop_duplicates ( subset = <b> )	if <A> . drop_duplicates ( subset = <b> ) :
<A> の <b> を軸に昇順でソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
データフレーム <B> 内の未入力の値を <A> に置き換えて、置き換える	<B> = <B> . fillna ( <A> )	fillna <B> = <B> . fillna )
<A> の中の列に存在する <b> の個数の合計値を求める	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
ラベルを <a> と名づけて、 <C> と <B> をグラフでプロットする	plt . plot ( <C> , <B> , label = <a> )	sns = pd . merge ( <C> , <B> , label = <a> )
表 <A> 内の <b> を未入力の値に置換し、未入力の値が存在する行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	x <A> . replace ( <b> , np . nan ) . dropna ( )
<a> 番目の列をインデックスと設定して、 <b> をデータフレームとして読み込んで、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<B> の <a> コラムの値を軸にソートし、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> の欠損値を <A> の平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	plt . <A> ( <A> = <A> . mean ( ) , inplace = True )
表 <B> 全体を <c> の値を元に並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> に存在する <b> を未入力の値とし、再代入する	<A> = <A> . replace ( <b> , np . nan )	df = <A> . replace ( <b> , np . nan )
<B> を <a> を元に昇順でソートを <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <B> の欠損を <C> とし、 <A> とする	<A> = <B> . fillna ( <C> )	<B> = <B> . fillna ( <C> )
同じ x 軸と y 軸で <A> 列 <b> と <A> <c> と表 <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の行ごとに重複があるかどうか検出する	<A> . duplicated ( )	df . duplicated ( )
データフレーム <B> の列 <a> に重複がある行を落とし、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	df . drop_duplicates ( subset = <a> , inplace = True )
表データ <D> 表属性 <c> と <D> 表 <b> 表属性と <D> <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> 列を順に並び替える	df . sort_values ( <a> )	<a> df . sort_values ( <a> )
データフレーム <B> に存在する <a> を NaN に置き換える	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
同じグラフ内で <A> 表の <b> と列 <c> と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> のカラム名を <B> とする	<B> = <A> . columns	<B> = <A> . columns
ヘッダーなしで <a> を読み込む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
<A> の列 <b> と列 <c> をドロップ	<A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> . drop ( [ <b> , <c> ] , axis = 1 )
データフレーム <A> の列 <b> と <c> に重複があるのか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表 <A> 中の <b> と <c> 表属性に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	plt . duplicated ( subset = [ <b> , <c> ] ) :
表データ <C> の列名を <b> から <a> にリネームする	<C> . rename ( columns = { <b> : <a> } )	<D> . rename ( columns = { <b> : <a> } )
<A> の <b> コラムのユニークな要素数	<A> [ <b> ] . nunique ( )	sns . nunique ( <A> [ <b> ] ) . nunique ( )
表 <A> と表 <B> を縦向きに連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> 中の欠損値を <B> に置き換える	<A> . fillna ( <B> )	sns . fillna ( <B> )
表データ <B> のコラム <a> の分を表示する	<B> [ <a> ] . dt . minute	<B> [ <a> ] . dt . minute
<a> 列を順に並び替えて、再代入する	df = df . sort_values ( <a> )	sort_values = df . sort_values ( <a> )
そこで、 <A> に小数点 2 位まで出力することを指定し、パーセントを指定する。ことにする	@option <A> = '%.2f%%'	@option <A> = '%.2f%%'
<B> 中にある <a> を未入力の値とし、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
カンマ区切りで表データとして <a> を読む	pd . read_csv ( <a> , sep = ',' )	sep = pd . read_csv ( <a> , sep = ',' )
<B> の <c> の値を並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
同じ軸で <D> の <c> と <D> の <b> 列と <D> の <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸で <A> の <b> と <A> の <c> と表 <A> の <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
そこで、マーカーの形は白丸こととする	@option marker = 'o'	@option marker = 'o'
表データ <B> の最初の <a> 行を調べる	<B> . head ( <a> )	markeredgewidth . head ( <a> )
データフレーム <B> と <C> を横方向に結合して、 <A> とする	<A> = pd . merge ( <B> , <C> )	<C> = pd . merge ( <B> , <A> )
表データ <D> 表属性 <c> と <D> 表データ <b> 表属性と <D> 表データ表属性 <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> <b> 列と <A> <c> と <A> データフレーム <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> を <b> コラムに沿ってソートし、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> をインデックスを元にソートを <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<b> という名前のエクセルファイルのシート名 <c> をデータフレームとして読み込んで、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<b> <A> = pd . read_excel ( <b> , sheet_name = <c> )
表 <A> にある <b> を欠損値に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	df . replace ( <b> , np . nan , inplace = True )
表データ <A> の <b> と列 <c> に重複が存在するのかチェックを確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<A> 内の未記入の値の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表 <B> 中の欠損値が存在する行を削除を <A> にする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
y 軸の軸ラベルを <a> とする	plt . ylabel ( <a> )	sns . ylabel ( <a> )
境界値をリスト <A> として、データフレーム <C> の <b> をビン分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> )	<A> = pd . cut ( <C> [ <b> ] , <A> )
表データ <A> のコラム <b> を位置に設定し、 <A> とする	<A> = <A> . set_index ( <b> )	<A> = <A> . set_index ( <b> )
表データ <C> の <b> と <a> カラムを値が大きい順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> という名前のエクセルファイルの <a> を読む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
<a> 列と列 <b> を大から小へと並び替え、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<C> . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )
データフレーム <B> の NaN を <A> として、 <C> とする	<C> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<a> と <b> に重複は存在するのか見る	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
表データ <A> 内の <b> を NaN に置換し、 NaN が存在する行を削除	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
<C> ( データフレーム ) の <b> と <a> コラムを大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
カラム <a> を項目名として、 <C> と表 <B> をマージする	pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
表 <D> の <c> と <b> ごとに表属性 <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	groupby . groupby ( [ <b> , <a> ] ) [ <a> ] . sum ( )
表データ <B> 内のそれぞれのカラムに存在する <a> の個数を見る	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> の <b> と表属性 <c> を値が大きい順に並び替えて、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <C> の <b> と表属性 <a> を値が大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> の <b> を未入力の値に置換し、未入力の値がある行をドロップして、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <b> , np . nan ) . dropna ( inplace = True )
一番左の列をインデックスに指定して、 <b> ファイルパスを表に格納して、 <A> にする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
<A> 内の重複している行を削除する	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
データフレーム <B> の <c> と <d> 表属性を逆順にソートを <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
同じ x 軸と y 軸で <A> 表データの列 <b> と <c> と <d> 列を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 中の未入力の値を含む行を消して、 <A> に代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
データフレーム <C> 内のカラム <b> と <a> に重複は存在するのかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	<E> . duplicated ( subset = [ <b> , <a> ] )
同じ軸で <D> <c> と <D> 表カラム <b> と表 <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <C> の位置 <b> の名前を <a> にリネームし、 <D> にする	<D> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
文字コードをシフト JIS として、 <a> を読み込む	pd . read_csv ( <a> , encoding = 'shift_jis' )	pd . read_csv ( <a> , encoding = 'shift_jis' )
<b> コラムと <a> コラムを値が大きい順にして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> と <A> 表を横方向に一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
<C> ( データフレーム ) の <b> と <a> を大きい順にソートし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> のそれぞれの列に存在する <b> の個数の合計値を求める	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<C> の <a> 表属性の月を確認して、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
エンコーディングをシフト JIS として、 <a> ファイルを読み込む	pd . read_csv ( <a> , encoding = 'shift_jis' )	pd . read_csv ( <a> , encoding = 'shift_jis' )
<a> カラムを並び替え、 <B> にする	<B> = <B> . sort_values ( <a> )	df = df . sort_values ( <a> )
表データ <A> 中の表属性 <b> と <c> に重複はあるのかどうかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<A> 内の欠損値を <B> に置換し、置き換える	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表データ <A> 内の欠損値の合計を求める	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<B> 全体を <a> の値を軸にソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
データフレーム <A> の <b> 列をインデックスとして設定して、再代入する	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
<b> というエクセルデータのシート名 <a> を表に格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name = pd . read_excel ( <b> , sheet_name = <a> )
エクセルファイル <b> の全てのシートから読んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	to_excel = pd . read_excel ( <b> , sheet_name = None )
<A> の欠損を含む行を削除を <B> にする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <B> の <c> を位置、 <d> を列としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<A> = <B> . pivot_table ( index = <c> , columns = <d> )
インデックスと <c> を項目名としてデータフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <A> から重複している値がある行をドロップする	<A> . drop_duplicates ( )	@option drop_duplicates ( )
データフレーム <B> と <A> データフレームを縦方向で結合する	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<D> の <c> と <D> 表データのコラム <b> と <D> 表データの <a> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表を <a> 区切りで CSV ファイル <b> ( ファイル名 ) から読んで、 <C> に代入する	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
<B> 中の <a> に重複がある行を落とし、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	= <B> . drop_duplicates ( subset = <a> )
表 <B> 中の <a> を欠損に置換し、欠損がある行を削除して、 <B> に代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> の <b> 表属性を位置として、インプレースする	<A> . set_index ( <b> , inplace = True )	<A> . set_index ( <b> , inplace = True )
データフレーム <A> の重複する行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<B> ( データフレーム ) の <a> をダミー変数に変換し、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
<C> ( データフレーム ) の表属性 <b> と <a> を大から小へとして、 <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> 全体をカラム <a> の値で並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じ軸で <D> <c> と <D> <b> とデータフレーム <D> 表属性 <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> と <b> 表属性を逆順に並び替え、再代入する	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	df = df . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <A> の <b> カラムをソートを <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> ( データフレーム ) の <b> コラムと <c> コラムを逆順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <C> 内の <b> とカラム <a> に重複はあるか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表 <A> の <b> の月	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
表 <A> の欠損をドロップして、 <B> にする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表データ <A> 中の <b> に重複があるのかどうか調べる	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
データフレーム <A> 中に重複が存在するのか見る	<A> . duplicated ( )	df . duplicated ( )
表 <A> の <b> と <c> を逆順に並び替えて、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> 内の重複する行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<A> のリセットして、元のインデックスを削除して、 <A> とする	<A> = <A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
表データ <A> の列名を <b> から <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	x <A> . rename ( columns = { <b> : <c> } )
ヘッダーを指定せずにファイルパス <a> を読む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
表 <A> をファイル名 <b> に書き出す	<A> . to_csv ( <b> )	to_csv = <b> . to_csv ( <b> )
同じグラフ内で <D> 列 <c> と <D> <b> と表データ <D> <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <C> の <b> インデックスの名前を <a> に変更し、置き換える	<C> . rename ( index = { <b> : <a> } , inplace = True )	<A> = <C> . rename ( index = { <b> : <a> } )
表 <B> と <C> を縦向きに連結を <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
エクセルファイル <b> を表にし、 <A> とする	<A> = pd . read_excel ( <b> )	<A> = pd . read_excel ( <b> )
表 <A> の <b> コラムをインデックス、コラム <c> をコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	x <A> . pivot_table ( index = <b> , columns = <c> )
<a> というエクセルの全てのシートをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	df . pd ( <a> , sheet_name = None )
データフレーム <C> 内の <b> と <a> に重複が存在するのか	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <B> を <c> の値を軸に並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<C> ( データフレーム ) の <b> と列 <a> を大から小へとソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
<a> と列 <b> を降順にソートし、置き換える	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<E> = df . sort_values ( [ <a> , <b> ] , ascending = False )
<A> 軸のラベルを <A> から <b> 、 <c> 、 <d> へ変更する	plt . yticks ( <A> , [ <b> , <c> , <d> ] )	sns . xticks ( <A> , [ <b> , <c> , <d> ] )
左外部結合で表データ <A> と表データ <B> を結合する	pd . merge ( <A> , <B> , how = 'left' )	'left' pd . merge ( <A> , <B> , how = 'left' )
エクセルデータ <b> をデータフレームに読み込んで、 <A> に代入する	<A> = pd . read_excel ( <b> )	<A> = pd . read_excel ( <b> )
左側のデータのインデックスと右側のデータの <c> をキーとして、 <A> データフレームとデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> の <a> コラムのユニークな要素数を見る	<B> [ <a> ] . nunique ( )	sns . nunique ( <B> [ <a> ] ) . nunique ( )
表 <A> 内の欠損の合計を計算する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
同じ軸で <D> <c> と表 <D> カラム <b> と <D> 表 <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の中の未記入の値の数を計算する	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
データフレーム <A> 全体を <b> 列を元に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <B> と表データ <A> を縦方向に連結を <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <A> 中の <b> コラムと <c> コラムに重複はあるのかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	sns . duplicated ( subset = [ <b> , <c> ] )
データフレーム <A> を <b> の値に沿ってソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表 <A> の <b> をインデックスに設定する	<A> . set_index ( <b> )	pd . read_csv ( <b> , index_col = <a> )
データフレーム <A> の <c> の曜日の数値型を確認して、  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
表データ <A> の <b> の名前を <c> にリネームし、インプレースする	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<A> . rename ( index = { <b> : <c> } , inplace = True )
表データ <B> の <a> を落とす	<B> . drop ( <a> , axis = 1 )	<B> . drop ( <a> , axis = 1 )
同じグラフ内で <D> 表データ <c> 列と表データ <D> <b> と <D> <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 中の欠損値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そのとき、マーカーの色をマゼンタとする	@option markerfacecolor = 'magenta'	@option markerfacecolor = 'magenta'
表データ <B> 全体を <c> を軸にソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
分割数を <D> 、ビンのラベルをリスト <E> として、データフレーム <B> のカラム <c> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表 <E> の <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームして、 <E> に代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <A> 中の <b> と <c> に重複はあるか表示してみる	<A> . duplicated ( subset = [ <b> , <c> ] )	<B> . duplicated ( subset = [ <b> , <c> ] )
<B> ( データフレーム ) の <c> 列と <d> を降順にし、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<A> をインデックスでソートして、 <B> にする	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表データ <B> の <a> の月を調べる	<B> [ <a> ] . dt . month	<B> [ <a> ] . dt . month
表 <A> の行名を調べる	<A> . index	df . index ( index = <A> )
表データ <B> の <a> のユニーク値を調べる	<B> [ <a> ] . unique ( )	<B> [ <a> ] . unique ( )
表データ <A> と表データ <B> を横に一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
左側のデータの位置と右側のデータの <c> をキーとして、 <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <B> と <C> 表データを縦方向に連結を <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
表データ <A> の表属性 <b> をインデックスとして設定し、 <A> にする	<A> = <A> . set_index ( <b> )	<A> = <A> . set_index ( <b> )
<A> ( データフレーム ) の表属性 <b> を順番になるように並び替え、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
<B> ( データフレーム ) の <c> を値が小さい順に並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表 <A> 全体を位置に沿ってソートして、 <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表データ <A> 中の欠損を含む行を消し、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
<B> ( データフレーム ) の <a> についてダミー変数を作成して、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
さらに、フォントサイズを <a> とする	@option fontsize = <a>	<D> = pd . set_option ( 'display.max_columns' , <a> ) )
<b> というエクセルファイルのシート名 <a> から読んで、 <C> に代入する	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> の中の重複している行を落とし、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
データフレーム <A> 全体をインデックスを元に昇順でソート	<A> . sort_index ( )	df . sort_index ( )
列番号 <a> を位置に指定して、 <b> をデータフレームに格納し、 <C> に代入する	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
<C> の <b> の名前を <a> にリネームし、置き換える	<C> = <C> . rename ( index = { <b> : <a> } )	<E> = <C> . rename ( index = { <b> : <a> } )
データフレーム <B> 全体を <c> コラムの値に基づいてソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
表 <A> 内の未入力の値を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
<A> をヒストグラムで描写する	plt . hist ( <A> )	bins plt . hist ( <A> )
同じ軸のセットで表データ <A> <b> と表データ <A> 列 <c> と <A> 表データ列 <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の全ての列で重複している行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
<A> ( データフレーム ) の <b> 列と列 <c> を逆順にソートして、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> の <b> カラムと <A> 表の <c> と <A> の <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <C> の <b> と列 <a> に重複があるか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
色を <A> として、 <C> と <B> のグラフを描画する	plt . plot ( <C> , <B> , color = ( <A> ) )	plt . plot ( <C> , <B> , color = ( <A> ) ) )
表 <A> の列 <b> のそれぞれのデータの出現回数	<A> [ <b> ] . value_counts ( )	<b> <A> [ <a> ] . value_counts ( )
<A> <b> と <A> データフレームカラム <c> と <A> データフレーム <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> のカラム <b> ごとに <c> カラムの平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) とデータフレーム <A> を結合する	pd . merge ( <B> , <A> , how = 'outer' )	'outer' pd . merge ( <B> , <A> , how = 'outer' )
表 <B> 中のカラムそれぞれに存在する <a> の個数の合計を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
表データ <B> 内の <a> カラムに重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
全結合で <A> と表 <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	'outer' pd . merge ( <A> , <B> , how = 'outer' )
インデックスと列 <a> を項目名として <C> 表データと <B> 表データを結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<B> 内の <a> に重複はあるのかどうか表示する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
<b> というエクセルの <c> 番目のシートをデータフレームとして読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	df = pd . read_excel ( <b> , sheet_name = <c> )
<B> の <a> の前後の行の差分	<B> [ <a> ] . diff ( periods = 1 )	markeredgewidth [ <a> ] . diff ( periods = 1 )
表データ <B> の <a> カラムの時間	<B> [ <a> ] . dt . hour	<B> [ <a> ] . dt . hour
データフレーム <C> の <b> と <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<b> をダミー変数化し、 <A> とする	<A> = pd . get_dummies ( <A> [ <b> ] )	df = pd . get_dummies ( <A> [ <b> ] )
<C> ( データフレーム ) の <b> と <a> を値が大きい順にし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> から <a> というエクセルファイルにする	<B> . to_excel ( <a> )	pd . read_excel ( <a> , sheet_name = None )
表データ <A> のカラム <b> の年を確認する	<A> [ <b> ] . dt . year	year [ <b> ] . dt . year
表 <A> 中の欠損値の個数を表示する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<E> のカラム名を <d> から <c> に、 <b> から <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> . rename ( columns = { <c> : <b> : <a> } )
表 <A> の <c> カラムの曜日の数値型を  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	[ <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
同じ x 軸と y 軸で <A> <b> と <A> 列 <c> と表 <A> 列 <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 中に存在する <a> を NaN に置換する	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
CSV ファイル <a> ( ファイル名 ) から表を読んで、 <B> とする	<B> = pd . read_csv ( <a> )	<B> = pd . read_csv ( <a> )
表データ <A> 中の NaN の合計を計算する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表データ <B> 全体を <a> を元に昇順で並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
位置とコラム <d> をキーとして <B> と <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	= pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
同じ x 軸と y 軸で <D> <c> とデータフレーム <D> <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> というエクセルファイルの <a> 番目のシートをデータフレームとして読み込み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<b> <C> = pd . read_excel ( <b> , sheet_name = <a> )
ビン数を <C> 、ビンのラベルをインデックスとして、 <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	pd . cut ( <A> [ <b> ] , <C> , label = False )
<A> の NaN を <B> に置換し、再代入する	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
データフレーム <A> の <c> の月を見、  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . month	[ <A> [ <b> ] = <A> [ <c> ] . dt . month
<A> <b> 列と <A> <c> と <A> データフレーム <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <A> データフレームを一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	'outer' pd . merge ( <B> , <A> , how = 'outer' )
<B> を <a> という名前にしてエクセル形式に書き込む	<B> . to_excel ( <a> )	plt . savefig ( <a> )
ビン数を <C> として、データフレーム <A> の <b> を要素数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	] pd . qcut ( <A> [ <b> ] , <C> )
同じ x 軸と y 軸で <D> データフレーム <c> とデータフレーム <D> <b> と <D> <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
コラム <b> と <a> を降順にソート	df . sort_values ( [ <b> , <a> ] , ascending = False )	pd . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> のカラム <a> を昇順にソートを <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <B> 内の <a> に重複がある行を削除を <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	<D> = <B> . drop_duplicates ( subset = <a> )
<C> の <a> の日にちを確認して、  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . dt . day	<D> [ <b> ] = <C> [ <a> ] . dt . day
データフレーム <A> 内の <b> に重複はあるかどうかチェックを表示する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
データフレーム <B> 全体を <a> に沿ってソートし、置き換える	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <A> を位置に沿ってソートする	<A> . sort_index ( )	@option sort_index ( )
<C> の中のコラム <b> と <a> に重複があるか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表 <B> の中の未入力の値を <A> に置換し、インプレースする	<B> . fillna ( <A> , inplace = True )	df . fillna ( <B> , inplace = True )
<A> の <b> を昇順でソートし、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
<a> 番まで列が表示できるようにセットする	pd . set_option ( 'display.max_columns' , <a> )	plt . pd ( 'display.max_columns' , <a> )
エクセル <b> から読み込んで、 <A> とする	<A> = pd . read_excel ( <b> )	to_excel = pd . read_excel ( <b> )
<b> というエクセルの <a> 番目のシートを表に格納し、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	df = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> のカラム <b> と表 <A> の <c> と <A> 表の <d> カラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> の <c> の日にちを  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . day	[ <A> [ <b> ] = <A> [ <c> ] . dt . day
重複している最後の行を残して <A> ( データフレーム ) の重複している行をドロップし、 <B> にする	<B> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
<b> カラムと <a> を降順にして、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <D> 表属性 <c> と <D> データフレーム <b> と <D> <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 中の NaN を直前の行の値で補って、インプレースする	<A> . fillna ( method = 'ffill' , inplace = True )	fillna <A> . fillna ( method = 'ffill' , inplace = True )
左側のデータフレームに合わせてデータを一つにまとめ、 <A> とする	<A> = pd . merge ( df1 , df2 , how = 'left' )	'left' = pd . merge ( df1 , df2 , how = 'left' )
同じ軸で <D> の <c> と表属性 <b> と表属性 <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> と <A> を縦結合して、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
カンマ区切りで <b> から表を読み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = ',' )	sns = pd . read_csv ( <b> , sep = ',' )
表 <A> 中で重複する行数の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <B> の <c> 列と列 <d> を大から小へと並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<b> と <a> に重複があるかチェック	df . duplicated ( subset = [ <b> , <a> ] )	if df . duplicated ( subset = [ <b> , <a> ] ) :
表データ <A> の中のそれぞれのカラムに存在する <b> の個数の合計値を算出する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表データ <A> のカラム <b> 、 <c> 、 <d>	<A> [ [ <b> , <c> , <d> ] ]	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
データフレーム <B> の <c> をインデックス、 <d> を列としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<A> = <B> . pivot_table ( index = <c> , columns = <d> )
表データ <B> 内の欠損を <A> に置き換えて、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<B> のインデックスをリセットし、 <A> に代入する	<A> = <B> . reset_index ( )	df = <B> . reset_index ( )
表データ <B> の中の <c> を欠損値に置換し、欠損値が存在する行を消して、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表 <B> 中の <a> カラムに重複がある行を削除し、置き換える	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
表 <A> の元のインデックスをリセットし、置き換える	<A> = <A> . reset_index ( drop = True )	<A> . reset_index ( drop = True , inplace = True )
データフレーム <A> の <b> についてのヒストグラムを表示する	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
表データ <C> の列の名前を <b> から <a> にリネームして、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	<C> = <C> . rename ( columns = { <b> : <a> } )
データフレーム <C> のコラム <b> と <a> を消す	<C> . drop ( [ <b> , <a> ] , axis = 1 )	1 . drop ( [ <b> , <a> ] , axis = 1 )
<B> 中のそれぞれの列にある <a> の個数の合計値を見る	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> から <a> という CSV ファイルを書き込む	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<A> に存在する <b> を未入力の値とし、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
データフレーム <A> 中の欠損値の合計を調べる	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表データ <B> 中の未記入の値を直前の行の値で補って、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	method = <B> . fillna ( method = 'ffill' )
表 <A> の欠損値をドロップし、 <A> にする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
同じグラフ内で <D> の <c> と表 <D> のコラム <b> と表 <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
左側のデータのインデックスと右側のデータの <c> をキーとして、 <A> と <B> データフレームを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	sns . pd ( <A> , <B> , left_index = True , right_on = <c> )
<A> 中の欠損値がある行を消して、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <B> 中の <a> に重複がある行を削除して、 <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
<C> のコラム <b> とコラム <a> に重複は存在するのか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> の全ての列で重複している値がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ軸で <A> <b> と表 <A> 列 <c> と表 <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データとしてファイル <b> を <c> 区切りで読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
同じグラフ内で <D> データフレーム <c> と <D> <b> コラムとデータフレーム <D> <a> コラムを箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> 番目の列を位置に、 <b> ファイルパスから読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <B> 内にある <a> を未入力の値とする	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
データフレーム <A> の先頭の <b> 行	<A> . head ( <b> )	head . head ( <b> )
表 <C> の位置 <b> の名前を <a> に変更し、再代入する	<C> = <C> . rename ( index = { <b> : <a> } )	<A> = <C> . rename ( index = { <b> : <a> } )
表 <C> の <a> の分を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . minute	<D> [ <b> ] = <C> [ <a> ] . dt . minute
左側のデータのインデックスと右側のデータの <c> を項目名として、 <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <A> から重複する値がある行を削除する	<A> . drop_duplicates ( )	@option drop_duplicates ( )
<B> と <A> 表データを縦方向に結合して、 <C> にする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<C> の <b> と <a> カラムを削除して、 <C> とする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	1 = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<B> の表属性 <c> と表属性 <d> を落とし、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	sns = <B> . drop ( [ <c> , <d> ] , axis = 1 )
<A> 中の重複する行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ軸のセットで表 <A> <b> と <A> 表 <c> と表 <A> <d> カラムを箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の <c> 表属性の年を  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . year	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> の <c> を削除し、 <A> とする	<A> = <B> . drop ( <c> , axis = 1 )	<A> = <B> . drop ( <c> , axis = 1 )
重複した行を落とし、再代入する	df = df . drop_duplicates ( )	df = df . drop_duplicates ( )
データフレーム <A> の <b> の名前を <c> に変更して、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( index = { <b> : <c> } )
列 <b> と <a> に重複はあるか	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
表データ <B> 内の未入力の値を <A> とする	<B> . fillna ( <A> )	<B> . fillna ( <A> )
表データ <A> 中の未入力の値の数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の <b> ごとに列 <c> の数を計算する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <b> ] . count ( )
<A> を <b> という名前でエクセル形式で保存する	<A> . to_excel ( <b> )	to_excel . to_excel ( <b> )
表 <C> の <a> の前後の行の差分を  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )	<D> [ <b> ] = <C> [ <a> ] . diff ( periods = 1 )
表データ <A> 中の <b> に重複がある行を削除する	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
表 <A> の重複している行を消す	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
データフレーム <A> の <b> に重複があるのか確認	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<A> のカラム <b> と <c> と <d> カラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> を <b> コラムに沿ってソートする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
<A> をインデックスで並び替えて、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
表データ <C> と <B> 表に対して、 <a> 列を項目名としてデータを内部結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	<A> = pd . merge ( <B> , <C> , on = <a> )
<A> の <b> に重複があるかどうか	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<B> 中に存在する <a> を未記入の値に置換して、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<a> 番目の列をインデックスにして、 <b> から読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
一番左の列を位置にして、 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
描いたグラフを <a> という名前で保存する	plt . savefig ( <a> )	plt . savefig ( <a> )
同じ軸で <D> の列 <c> と <D> の <b> と <D> データフレームの列 <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで <A> 表データ <b> カラムと表データ <A> <c> と表データ <A> カラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> の <b> コラムの名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	x <A> . rename ( columns = { <b> : <c> } )
位置と <d> カラムを項目名として <B> と <C> 表を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	sns = pd . merge ( <B> , <A> , left_index = True , right_on = <d> )
<C> ( データフレーム ) の <b> コラムと <a> コラムを大から小へとソートし、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
<A> ( データフレーム ) の列 <b> と <c> を値が大きい順にして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> を <b> を元に昇順でソートを <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
同じ軸のセットで <A> の <b> 表属性と <c> と <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> を位置を軸にソートを <B> に代入する	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<B> 中のそれぞれのカラムに存在する <a> の個数の合計を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> のそれぞれのカラムに存在する <b> の個数を算出する	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <a> ] ) . sum ( )
<D> の <c> と表データ <D> の <b> と <D> の <a> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> のコラム <a> を削除し、再代入する	<B> = <B> . drop ( <a> , axis = 1 )	<B> = <B> . drop ( <a> , axis = 1 )
エクセルファイル <b> の <c> から読んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	sns = pd . read_excel ( <b> , sheet_name = <c> )
表 <B> の <e> について、 <c> をインデックス、 <d> 列を列としたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<F> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
データフレーム <E> のカラム名を <d> から <c> に、 <b> から <a> に変更し、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	sum <E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
エクセルファイル <b> のシート全てから読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	to_excel = pd . read_excel ( <b> , sheet_name = None )
表 <A> 中の欠損値がある行を削除して、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<B> 中の欠損値を直前の行の値で埋めて、 <A> にする	<A> = <B> . fillna ( method = 'ffill' )	= <B> . fillna ( method = 'ffill' )
表 <A> 内の重複要素がある行を取り除き、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
<a> を順にソートして、 <B> にする	<B> = <B> . sort_values ( <a> )	df = df . sort_values ( <a> )
<A> の <d> について、 <b> をインデックス、 <c> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
データフレーム <B> の <c> と <d> を大から小へとソートして、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<D> の <c> と <b> と <a> について関係性を一度に描く	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ <c> , <b> , <a> ] ] )
表データ <C> の列名を <b> から <a> にリネームして、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
表データ <B> の <c> カラムに重複がある行を落として、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
表データ <B> の <a> に重複がある行をドロップして、 <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
表 <A> の <b> と表 <A> の <c> と <A> 表の <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
左側のデータのインデックスと右側のデータの <d> カラムをキーとして、 <B> 表と <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表 <B> の未入力の値を <A> に置換して、インプレースする	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
<A> 内の欠損値が存在する行を削除して、置き換える	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
データフレーム <A> からファイル <b> という CSV ファイルを書き込む	<A> . to_csv ( <b> )	to_csv <b> . to_csv ( <b> )
同じグラフ内で <A> の <b> と <A> 表データの <c> と <A> の <d> カラムを箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> の <b> ごとに <c> 列の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<B> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
データフレーム <A> の <b> のユニークな要素数を表示する	<A> [ <b> ] . nunique ( )	pd . qcut ( <A> [ <b> ] , 4 )
位置と <d> をキーとして表データ <B> と <C> を一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	sns = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<A> の重複要素がある行を取り除き、再代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<A> 内の <b> を欠損に置換し、欠損が存在する行をドロップして、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
箱ひげ図で表データ <A> の <b> カラムを表す	plt . boxplot ( <A> [ <b> ] )	plt . boxplot ( <A> [ <b> ] )
ビン数を <D> として、 <B> データフレームの表属性 <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	@option <A> = pd . cut ( <B> [ <c> ] , <D> )
<A> と <B> データフレームを縦向きに結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> を <c> の値でソートを <A> に代入する	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
<B> 中にある <a> を欠損に置き換えて、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	<B> = <B> . replace ( <a> , np . nan )
<C> の表属性 <b> と <a> を削除し、置き換える	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<A> の <b> カラムを四分位数ごとで分割する	pd . qcut ( <A> [ <b> ] , 4 )	pd . qcut ( <A> [ <b> ] , 4 )
同じグラフ内で <A> データフレーム <b> 表属性と <A> データフレーム <c> とデータフレーム <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 内の <b> と <c> に重複があるかどうか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
データフレーム <A> のカラム <b> と <c> カラムを削除を <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
列番号 <a> をインデックスに指定して、 <b> からデータフレームとを読んで、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
表データ <A> の中の <b> に重複があるかどうか確認する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表データ <A> の NaN がある行をドロップし、 <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
<b> 区切りで <a> を表として読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
そのとき、マーカースタイルをバツとする	@option marker = 'x'	@option marker = 'x'
さらに、マーカーのエッジカラーを紫色とする	@option markeredgecolor = 'purple'	@option markeredgecolor = 'purple'
<a> というエクセルファイル <a> のシート全てをデータフレームに格納する	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> , sheet_name = None )
表データ <B> の表属性 <a> を四分位数ごとでビン分割する	pd . qcut ( <B> [ <a> ] , 4 )	sns . pd ( <B> [ <a> ] , 4 )
表 <B> の <a> を欠損に置換し、欠損がある行を削除する	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
<a> 番目の列をインデックスと設定して、 <b> ファイルパスを表に格納する	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<A> 中の欠損がある行を消し、インプレースする	<A> . dropna ( inplace = True )	@option dropna ( inplace = True )
表 <A> を位置で並び替え、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<a> 列に重複が存在するのか見る	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
同じ軸で表 <D> カラム <c> と表 <D> <b> と <D> 表 <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
出力するグラフの枠の大きさを横幅 <b> 高さ <a> に変更する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
同じ軸で <A> の <b> と <c> と <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> と <a> を大から小へと並び替え、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
データフレーム <A> 中のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表 <A> を位置でソートし、 <B> に代入する	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表 <A> 内にある <b> を欠損値に置き換え、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
<b> 番目の列をインデックスと設定して、パス <a> からデータフレームとを読む	pd . read_csv ( <a> , index_col = <b> )	<D> = pd . read_csv ( <a> , index_col = <b> )
<C> ( データフレーム ) の <b> と <a> 表属性を大から小へとして、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表としてファイル名 <b> を <c> 区切りで読み込み、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
表 <A> の <b> と <c> を逆順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
先頭の列をインデックスとして、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
同じ軸のセットでデータフレーム <A> <b> と <A> <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内で表 <D> <c> と <D> 表 <b> と <D> 表 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
エクセルファイル <a> からデータフレームを読み込み、 <B> に代入する	<B> = pd . read_excel ( <a> )	pd . read_excel ( <a> , sheet_name = None )
データフレーム <A> の表属性 <b> をドロップして、置き換える	<A> . drop ( <b> , axis = 1 , inplace = True )	df . drop ( <b> , axis = 1 , inplace = True )
<A> の中の欠損を <A> の平均値で埋めて、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	fillna <B> = <A> . fillna ( <A> . mean ( ) )
表 <A> 中の重複を確認を調べる	<A> . duplicated ( )	df [ <A> . duplicated ( ) ]
データフレーム <B> の <a> の年	<B> [ <a> ] . dt . year	markeredgewidth [ <a> ] . dt . year
<C> の <b> と <a> を削除を <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <A> のコラム <b> が <c> より小さいデータ	<A> [ <A> [ <b> ] <  <c> ]	plt <A> [ <A> [ <b> ] < <c> ]
表 <A> を位置に基づいてソートして、 <B> に代入する	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
データフレーム <C> の表属性 <b> と <a> の相関	<C> [ [ <b> , <a> ] ] . corr ( )	<D> [ [ <b> , <a> ] ] . corr ( )
さらに、マーカーの種類は点こととする	@option marker = '.'	sns . @option ( <D> , '.' = '.' )
表データ <A> をエクセルファイル <b> というファイル名で保存する	<A> . to_excel ( <b> )	<b> <A> . to_excel ( <b> )
<B> ( データフレーム ) の列 <a> を順にして、置き換える	<B> . sort_values ( <a> , inplace = True )	df = <B> . sort_values ( <a> )
表 <A> 内の重複している行を削除を <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表データ <A> の <b> ごとに列 <c> の数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <b> ] . count ( )
表データ <B> 中の未記入の値を <A> に置換し、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
<A> の <b> 表属性と表データ <A> の表属性 <c> と <A> 表データの <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ x 軸と y 軸でデータフレーム <D> の <c> と <b> と <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> の <a> コラムの値を昇順でソートする	<B> . sort_values ( <a> )	markeredgewidth . sort_values ( <a> )
<B> 全体を <a> 列の値に基づいてソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
表データ <C> と <B> 表データに対して、 <a> を項目名としてデータを内部結合する	pd . merge ( <C> , <B> , on = <a> )	sns pd . merge ( <C> , <B> , on = <a> )
同じ軸で表 <D> の <c> カラムと表 <D> の <b> と <D> の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> の <a> の前後の行の差分を算出する	<B> [ <a> ] . diff ( periods = 1 )	markeredgewidth <a> [ <b> ] . diff ( periods = 1 )
表 <A> の <b> についての箱ひげ図を描画する	plt . boxplot ( <A> [ <b> ] )	year plt . boxplot ( <A> [ <b> ] )
表データ <A> の最初の <b> 行を調べる	<A> . tail ( <b> )	head . head ( <b> )
<C> の <b> が <a> より多いデータ	<C> [ <C> [ <b> ] >  <a> ]	<A> [ <C> [ <b> ] > <a> ]
表データ <B> 内の表属性 <a> に重複があるか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <B> 中の <c> を欠損値に置換し、欠損値がある行をドロップし、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
表データ <B> を <a> を元に並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <B> の列名を <c> から <d> に、 <e> から <f> に変更して、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	<F> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
表データ <B> 全体を列 <a> を軸に並び替え、 <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
同じ軸のセットでデータフレーム <D> の <c> 表属性とデータフレーム <D> の <b> とデータフレーム <D> の表属性 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> 中の未入力の値が存在する行を落とし、 <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
ヒストグラムで <B> 表データの <a> を描く	plt . hist ( <B> [ <a> ] )	pd . hist ( <B> [ <a> ] )
<C> ( データフレーム ) の <b> と <a> を逆順にする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の <b> 列のそれぞれのデータの出現回数	<A> [ <b> ] . value_counts ( )	<b> <A> [ <a> ] . value_counts ( )
列番号 <b> を位置と設定して、 <a> から読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <B> の <e> カラムについて、 <c> をインデックス、 <d> カラムをカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	@option <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表データ <A> 内の未入力の値を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( <B> )
区間を <b> として、 <A> のヒストグラムを描写する	plt . hist ( <A> , bins = <b> )	plt . hist ( <A> , bins = <b> ) )
表データ <A> 中の NaN の数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
カンマ区切りで表データとして <a> を読み、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
カンマ区切りで CSV ファイル <a> を読み込む	pd . read_csv ( <a> , sep = ',' )	read_csv = pd . read_csv ( <a> , sep = ',' )
データフレーム <A> 全体をインデックスを軸に並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<A> を <b> の値に沿ってソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
カンマ区切りでデータフレームとして <a> ファイルパスを読んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	',' = pd . read_csv ( <a> , sep = ',' )
<B> と <A> を横方向にくっつけ、 <C> とする	<C> = pd . merge ( <B> , <A> )	<C> = pd . merge ( <B> , <A> )
表データ <B> 中の <a> 表属性に重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
<A> 内の重複している行を削除	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
データフレーム <A> についてダミー変数を作成する	pd . get_dummies ( <A> )	] pd . get_dummies ( <A> )
<B> のそれぞれの列にある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
とりあえず <A> の内容をチェックする	<A> . head ( )	head . head ( )
表 <B> 内の未記入の値を <A> とする	<B> . fillna ( <A> )	<B> . fillna ( <A> )
表 <A> 中の NaN がある行をドロップし、置き換える	<A> . dropna ( inplace = True )	<B> . dropna ( inplace = True )
列 <b> と <c> 列を値が大きい順にして、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	1 = df . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> を <c> の値に沿ってソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
<B> の <a> 表属性の出現回数	<B> [ <a> ] . value_counts ( )	<B> [ <a> ] . value_counts ( )
表データ <A> の先頭の <b> 行を確認する	<A> . head ( <b> )	plt . head ( <b> )
表 <D> の <c> と <b> と <a> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
レンジを <b> から <c> として、 <A> のヒストグラムをプロットする	plt . hist ( <A> , range = ( <b> , <c> ) )	sns . hist ( <A> , range = ( <b> , <c> ) )
表 <D> の <c> 表属性と <D> の表属性 <b> と表 <D> の <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ x 軸と y 軸で <A> <b> と <A> <c> と表 <A> <d> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> の <b> と <a> カラムを削除し、再代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <B> を <c> の値に基づいてソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
同じ x 軸と y 軸で表 <D> <c> と表 <D> <b> と表 <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データを CSV ファイル <a> ( ファイル名 ) から読んで、 <B> とする	<B> = pd . read_csv ( <a> )	<B> = pd . read_csv ( <a> )
表 <B> のコラム <a> をグループ化して、値ごとのデータ件数を求める	<B> . groupby ( <a> ) . size ( )	<a> <B> . groupby ( <a> ) . size ( )
<b> ファイルから <c> 区切りで表を読み込み、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
表データ <B> の未入力の値を <A> とする	<B> . fillna ( <A> )	plt . fillna ( <B> )
エクセルの <b> をデータフレームにし、 <A> にする	<A> = pd . read_excel ( <b> )	<A> = pd . read_excel ( <b> )
<A> の <b> と表属性 <c> ごとに <d> の値の合計値を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
データフレーム <A> 内の重複している値がある行を取り除き、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
<C> のカラム <b> ごとに <a> カラムの平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表データ <E> のカラム名を <d> から <c> に、 <b> から <a> にリネームして、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<b> と <a> に重複はあるかどうか確認する	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
表 <A> 中に重複は存在するのかチェックを調べる	<A> . duplicated ( )	df . duplicated ( )
表データ <B> の欠損を <A> とし、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
データフレーム <A> 中に重複があるのかどうか確認を確認する	<A> . duplicated ( )	df . duplicated ( )
表データ <A> <b> コラムと表 <A> コラム <c> と表 <A> <d> コラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 全体をコラム <a> の値を軸にソートを <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<b> 番目の列をインデックスとして、 <a> から読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表 <A> の表属性 <c> の年を見、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . year	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> に存在する <a> を欠損値に置き換えて、 <B> に代入する	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<a> ファイルパスを表データとして <b> 区切りで読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
表データとして <a> をカンマ区切りで読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	',' = pd . read_csv ( <a> , sep = ',' )
<B> の中の <a> を未入力の値に置換し、未入力の値が存在する行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	markeredgewidth = <a> . replace ( <a> , np . nan ) . dropna ( )
表 <A> の <b> を位置として設定する	<A> . set_index ( <b> )	pd . read_csv ( <b> , index_col = <a> )
表データ <A> 内に重複はあるならば	if <A> . duplicated ( ) :	plt . if <A> . duplicated ( ) :
カンマ区切りで <b> をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
表データ <B> を <a> の値に沿ってソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
同じグラフ内でデータフレーム <A> <b> と <A> データフレームコラム <c> と <A> <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> の <c> 列をソートを <A> に代入する	<A> = <B> . sort_values ( <c> )	<B> = <B> . sort_values ( <c> )
先頭の列を位置に指定して、ファイルパス <a> から読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表 <B> の <c> を NaN に置換し、 NaN がある行を消し、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	= <B> . replace ( <c> , np . nan ) . dropna ( )
データフレーム <A> に存在する <b> を欠損に置き換えて、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
<B> の <a> についての標準偏差	<B> [ <a> ] . std ( )	plt . std ( <B> [ <a> ] )
表データ <C> の <b> と <a> に重複はあるのかどうか調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> のコラム <a> を箱ひげ図に描写する	plt . boxplot ( <B> [ <a> ] )	pd . get_dummies ( <B> [ <a> ] )
<b> というエクセルファイルの <a> シート名を表に格納して、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<A> = pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の列の名前を <b> から <c> に、 <d> から <e> に変更し、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<a> 区切りでデータフレームを CSV ファイル <b> ( ファイル名 ) から読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
同じ x 軸と y 軸で <D> のカラム <c> と <D> データフレームのカラム <b> と <D> データフレームの <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで表 <D> <c> と <D> <b> と <D> 表属性 <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> のそれぞれのデータの出現回数	<A> [ <b> ] . value_counts ( )	<b> <A> [ <a> ] . value_counts ( )
データフレーム <B> を <a> という名前で保存する	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <A> の <b> と <c> 表属性の相関を調べる	<A> [ [ <b> , <c> ] ] . corr ( )	df [ [ <b> , <c> ] ] . corr ( )
データフレーム <C> のカラム <a> の日にちを  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . day	<D> [ <b> ] = <C> [ <a> ] . dt . day
列 <a> と <b> に重複はあるか	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
<B> の中の未入力の値を <C> に置換して、 <A> に代入する	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
表 <A> の列 <b> についての標準偏差を得る	<A> [ <b> ] . std ( )	<A> [ <b> ] . std ( )
表データ <A> の <b> が <c> 以上のデータを抽出する	<A> [ <A> [ <b> ] >= <c> ]	<A> [ <A> [ <b> ] >= <c> ]
データフレーム <A> 中の未記入の値を表 <A> の平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	sns . <A> ( <A> = <A> . mean ( ) , inplace = True )
同じグラフ内で <D> <c> コラムと <D> データフレーム <b> コラムと <D> データフレーム <a> コラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> のカラム <a> 内の前後の行の差分	<B> [ <a> ] . diff ( periods = 1 )	markeredgewidth [ <a> ] . diff ( periods = 1 )
表 <B> のそれぞれのカラムにある <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> 中の <b> を欠損に置換し、欠損がある行を削除し、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> 全体を位置を軸にソートする	<A> . sort_index ( )	@option sort_index ( )
表データ <C> の <b> カラムごとに <a> の平均値を算出する	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
<A> を <b> カラムの値を軸にソートし、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
境界値をリスト <A> として、 <C> データフレームの <b> コラムを分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	<E> = pd . cut ( <D> [ <b> ] , <A> )
分割数を <B> 、ビンのラベルをリスト <A> として、 <D> の列 <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	pd . cut ( <D> [ <c> ] , <B> , label = <A> )
左外部結合で <A> と <B> データフレームをマージする	pd . merge ( <A> , <B> , how = 'left' )	'left' pd . merge ( <A> , <B> , how = 'left' )
表データ <B> 内の NaN を <A> とする	<B> . fillna ( <A> )	plt . fillna ( <B> )
<B> 中の <c> カラムに重複がある行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
データフレーム <A> の <b> をヒストグラムで表示する	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
さらに、区切り文字として <A> をすることとする	@option sep = <A>	<A> = pd . read_csv ( sep = '\t' )
同じ軸で <A> の <b> とデータフレーム <A> の <c> と <A> の <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<D> のカラム <c> と <b> カラムと <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
パス <a> を表データに格納する	pd . read_csv ( <a> )	plt pd . read_csv ( <a> )
データフレーム <A> の <b> をインデックスとする	<A> . set_index ( <b> )	<C> . set_index ( <b> , set_index = False )
<B> の <a> コラムの値を軸に昇順でソートして、置き換える	<B> = <B> . sort_values ( <a> )	= <B> . sort_values ( <a> )
<A> 中にある <b> を欠損に置き換えて、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	df . replace ( <b> , np . nan , inplace = True )
先頭の列を位置に設定して、 <b> ファイル名をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
表データ <B> をインデックスに基づいてソートして、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <A> 内の <b> を欠損に置換し、欠損が存在する行を落として、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<B> = <A> . replace ( <b> , np . nan ) . dropna ( )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と表 <A> を結合する	pd . merge ( <B> , <A> , how = 'outer' )	'outer' pd . merge ( <B> , <A> , how = 'outer' )
表 <A> の <b> 表属性が <c> より少ないデータ	<A> [ <A> [ <b> ] <  <c> ]	< <A> [ <A> [ <b> ] < <c> ]
表 <A> の重複している行を消して、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
データフレーム <B> と <A> を縦向きにマージして、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表データ <B> の <a> 表属性についての標準偏差	<B> [ <a> ] . std ( )	<B> [ <a> ] . std ( )
CSV ファイル <a> ( ファイル名 ) をデータフレームに格納する	pd . read_csv ( <a> )	read_csv pd . read_csv ( <a> )
表 <A> 中に重複があるのかどうか確認	<A> . duplicated ( )	df . duplicated ( )
<A> の行の名前を <b> から <c> に変更する	<A> . rename ( index = { <b> : <c> } )	x <A> . rename ( index = { <b> : <c> } )
表 <B> の表属性 <a> を箱ひげ図に描画する	plt . boxplot ( <B> [ <a> ] )	plt . boxplot ( <B> [ <a> ] )
表 <D> の <c> コラムと <b> とコラム <a> について関係性を一気に描く	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )
データフレーム <B> の未記入の値を <A> として、インプレースする	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
<A> ( データフレーム ) の <b> を数値データにする	pd . get_dummies ( <A> [ <b> ] )	<A> . pd ( <b> )
<A> のカラム <b> に重複はあるかどうかチェック	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表 <A> 中の <b> を欠損に置換し、欠損が存在する行を消し、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> <b> と <A> <c> カラムと表 <A> <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> の <b> ごとに列 <a> の平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
データフレーム <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、 <A> に代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表データ <B> の <a> を NaN に置換し、 NaN が存在する行を削除し、 <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> の <a> のユニークな要素数を表示する	<B> [ <a> ] . nunique ( )	pd . qcut ( <B> [ <a> ] , 4 )
<B> の <a> についてのヒストグラムをプロットする	plt . hist ( <B> [ <a> ] )	bins plt . hist ( <B> [ <a> ] )
<A> の未入力の値を直前の行の値で補い、置き換える	<A> = <A> . fillna ( method = 'ffill' )	method . fillna ( method = 'ffill' , inplace = True )
同じグラフ内で <A> 表データ <b> と <A> 表データ表属性 <c> と表データ <A> <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <D> の <c> カラムと表 <D> の <b> と <D> の <a> カラムについての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> をエクセルファイル <a> という名前で保存する	<B> . to_excel ( <a> )	<B> . to_excel ( <a> )
データフレーム <A> をインデックスに基づいてソートする	<A> . sort_index ( )	<A> . sort_index ( )
分割数を <C> として、表 <A> の <b> を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	pd . qcut ( <A> [ <b> ] , <C> )
データフレーム <B> と <A> を横方向に結合する	pd . merge ( <B> , <A> )	pd . merge ( <B> , <A> )
<a> をデータフレームに格納する	pd . read_csv ( <a> )	plt . pd ( <a> )
同じグラフ内で <D> 表列 <c> と表 <D> <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> <b> と <A> <c> とデータフレーム <A> <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸のセットで <A> の <b> 列と <A> の <c> とデータフレーム <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> という名前のエクセルファイルのシート全部からデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = None )	df . pd ( <a> , sheet_name = None )
<A> の位置を軸にソートを <A> とする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表 <A> 内にある <b> を欠損値に置換し、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
表データ <B> を <a> という名前でエクセル形式に書き込む	<B> . to_excel ( <a> )	plt . savefig ( <a> )
<a> というエクセルファイル <a> の全部のシートをデータフレームに格納し、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	df = pd . read_excel ( <a> , sheet_name = None )
表データ <A> の全ての列の重複する値がある行を削除する	<A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<B> の <a> を軸にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <B> と <C> を横にマージして、 <A> とする	<A> = pd . merge ( <B> , <C> )	<C> = pd . merge ( <B> , <A> )
表データ <A> の <b> と <c> に重複があるかどうか	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> 中の重複している行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表 <B> の中の未入力の値を <A> に置換し、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表 <A> と <B> を横にくっつける	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
<B> 全体をカラム <a> の値を軸にソートを <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <B> の列 <a> を昇順にソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
全結合で <B> 表と <A> 表を一つにまとめる	pd . merge ( <B> , <A> , how = 'outer' )	<D> = pd . merge ( <B> , <A> , how = 'outer' )
そのとき、グラフは黄色で表示することとする	@option color = 'yellow'	@option color = 'yellow'
データフレーム <C> の列の名前を <b> から <a> に変更し、 <C> とする	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
<B> 中のそれぞれのカラムにある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
図を <a> として保存する	plt . savefig ( <a> )	sns . savefig ( <a> )
<a> と <b> に重複はあるかどうか見る	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
同じ x 軸と y 軸で <A> 表データの <b> と <c> と列 <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> 中のそれぞれの列にある <b> の個数の合計値を算出する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
表データ <C> と <B> 表に対して、 <a> をキーとしてデータを内部結合し、 <D> に代入する	<D> = pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
表 <A> 中の未記入の値を表データ <A> の平均値で埋めて、 <B> とする	<B> = <A> . fillna ( <A> . mean ( ) )	fillna <B> = <A> . mean ( ) ) , inplace = True )
<C> ( データフレーム ) の <b> 列と <a> を大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<a> に重複はあるのかどうか調べる	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <B> の <c> の名前を <d> に変更し、 <A> に代入する	<A> = <B> . rename ( index = { <c> : <d> } )	<A> = <B> . rename ( columns = { <c> : <d> } )
同じ軸のセットで <D> 表の <c> カラムと <D> 表の <b> と <D> 表の <a> カラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> のコラム <b> と <c> の相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	df [ [ <b> , <c> ] ] . corr ( )
表データ <A> 中の <b> 列に重複がある行をドロップ	<A> . drop_duplicates ( subset = <b> )	if <A> . drop_duplicates ( subset = <b> ) :
同じグラフ内で表 <A> の列 <b> と <A> 表の <c> 列と <A> 表の <d> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> ( データフレーム ) の <b> についてダミー変数をつくる	pd . get_dummies ( <A> [ <b> ] )	get_dummies pd . get_dummies ( <A> [ <b> ] )
<B> を <a> 列を元にソートを <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <A> 全体をインデックスを軸にソートを <A> に代入する	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と <B> 表をマージする	pd . merge ( <A> , <B> , how = 'outer' )	<D> = pd . merge ( <A> , <B> , how = 'outer' )
左側のデータの位置と右側のデータの列 <c> を項目名として、データフレーム <A> と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表データ <A> の <b> 表属性を位置として設定し、再代入する	<A> = <A> . set_index ( <b> )	<A> = <A> . set_index ( <b> )
データフレーム <B> の全ての列で重複している行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
エクセルファイル <a> を表に格納する	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> )
同じ x 軸と y 軸で <A> データフレームの <b> とデータフレーム <A> の表属性 <c> と <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> 内の <a> カラムに重複があるのかどうか調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
同じ軸のセットで <A> データフレーム <b> と <A> データフレーム <c> と <A> データフレーム <d> 列を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <E> のカラム名を <d> から <c> に、 <b> から <a> に変更して、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) から表を読み込む	pd . read_csv ( <a> , sep = ',' )	read_csv = pd . read_csv ( <a> , sep = ',' )
表 <C> の中の <b> と <a> に重複があるのか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<A> の <c> の前後の行の差分を  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . diff ( periods = 1 )	<B> [ <b> ] = <A> [ <c> ] . diff ( periods = 1 )
表 <B> 内に存在する <a> を欠損に置換する	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
データフレーム <A> 表属性 <b> と <A> <c> と表データ <A> <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> を順にし、置き換える	df = df . sort_values ( <a> )	df = df . sort_values ( <a> )
表データ <C> のコラム <b> と <a> に重複が存在するのか表示してみる	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
データフレーム <B> の <a> をインデックスとして、インプレースする	<B> . set_index ( <a> , inplace = True )	<B> . set_index ( <a> , inplace = True )
表データ <A> の <b> 列についての箱ひげ図を描画する	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
表 <A> の <b> とカラム <c> と <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <C> の表属性 <a> の日にちを調べて、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . day	<D> [ <b> ] = <C> [ <a> ] . dt . day
表データ <A> 内の未入力の値を直前の行の値で埋め、インプレースする	<A> . fillna ( method = 'ffill' , inplace = True )	fillna <A> . fillna ( method = 'ffill' , inplace = True )
同じ軸のセットで表データ <D> 表属性 <c> と <D> <b> と <D> <a> 表属性を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> 中の NaN を <A> の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
<A> のカラム <d> について、 <b> を位置、 <c> カラムをカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
表データ <A> 全体をインデックスで並び替えて、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> の <b> を欠損に置換し、欠損がある行を削除して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <b> , np . nan ) . dropna ( inplace = True )
表データ <A> についてダミー変数をつくって、 <A> に代入する	<A> = pd . get_dummies ( <A> )	df = pd . get_dummies ( <A> )
エクセルの <b> の <a> 番目のシートを表に格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name . pd ( <b> , <a> )
表データ <D> のカラム <c> と <D> データフレームの <b> と <D> の <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> コラムと <c> と <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> の <b> と <a> 表属性を値が大きい順に並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の <b> カラムの名前を <c> に、カラム <d> の名前を <e> に変更し、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<D> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
グラフの枠の大きさを横 <a> 縦 <b> にセットする	plt . figure ( figsize = ( <a> , <b> ) )	<F> = pd . read_csv ( <a> , <b> ) )
<a> に重複はあるかチェック	df . duplicated ( subset = <a> )	pd . duplicated ( subset = <a> )
同じ軸のセットで <D> 表の <c> と <D> 表の <b> と表 <D> の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
グラフ枠の大きさを横幅 <b> 高さ <a> と指定する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
<A> 内の <b> を未記入の値に置換し、未記入の値がある行を消し、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<B> = <A> . replace ( <b> , np . nan ) . dropna ( )
<b> とカラム <a> を大から小へと並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> の <e> について、 <c> を位置、 <d> を表属性としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<E> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
箱ひげ図で <B> のカラム <a> を表す	plt . boxplot ( <B> [ <a> ] )	plt . boxplot ( <B> [ <a> ] )
<A> の NaN を含む行を落とす	<A> . dropna ( )	dropna . dropna ( )
同じグラフ内で <D> の <c> と <D> の列 <b> と <D> データフレームの <a> 列を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> の <c> に重複がある行を消して、 <A> に代入する	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
<b> という名前のエクセルの <a> からデータフレームを読み込み、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
<b> というエクセルデータ <b> の全部のシートを表に格納して、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
表データ <A> の <b> とデータフレーム <A> のコラム <c> と <A> データフレームの <d> コラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <C> 中の表属性 <b> と <a> 表属性に重複はあるか	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
左側のデータのインデックスと右側のデータの <a> 表属性を項目名として、 <C> データフレームとデータフレーム <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <A> のカラム <b> 内の前後の行の差分を求める	<A> [ <b> ] . diff ( periods = 1 )	<A> [ <b> ] . diff ( periods = 1 )
インデックスとコラム <d> を項目名としてデータフレーム <B> と <C> データフレームを結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<B> の <c> コラムとコラム <d> を逆順にソートを <A> にする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表 <B> の列 <a> を位置として設定し、再代入する	<B> = <B> . set_index ( <a> )	<B> = <B> . set_index ( <a> )
<B> の <a> 中の前後の行の差分を求める	<B> [ <a> ] . diff ( periods = 1 )	markeredgewidth <a> [ <a> ] . diff ( periods = 1 )
データフレーム <B> の <a> をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	df . groupby ( <a> ) . size ( )
表データ <A> 中の重複している値がある行をドロップして、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
表データ <B> の <a> をヒストグラムにする	plt . hist ( <B> [ <a> ] )	plt . hist ( <B> [ <a> ] )
<A> ( データフレーム ) の <b> と列 <c> を降順にして、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> 中の未入力の値を <A> として、 <B> とする	<B> = <B> . fillna ( <A> )	fillna <B> = <B> . fillna )
さらに、円グラフの構成割合を小数点 2 位まで出力することとする	@option autopct = '%.2f%%'	@option autopct = '%.2f%%'
<b> と <a> を逆順にソートし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
同じグラフ内で <D> 表データの列 <c> と <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
左側のデータの位置と右側のデータの <b> を項目名として 2 つのデータを結合して、 <A> に代入する	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <b> )	<b> <A> = pd . merge ( df1 , df2 , left_index = True , right_on = <b> )
<B> 中の <c> を欠損値に置換し、欠損値がある行を削除を <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
同じ軸のセットで <A> <b> と <A> コラム <c> と <A> データフレームコラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の末尾 5 行	<A> . tail ( )	df . tail ( )
表 <A> 中にある <b> を欠損値とし、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	sns . replace ( <b> , np . nan , inplace = True )
<A> をインデックスでソートする	<A> . sort_index ( )	<A> . sort_index ( )
グラフに表示する棒の数を <a> として、 <B> のヒストグラムをプロットする	plt . hist ( <B> , bins = <a> )	plt . hist ( <B> , bins = <a> ) )
表 <B> を <a> の値を元にソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
データフレームを <a> 区切りで <b> から読む	pd . read_csv ( <b> , sep = <a> )	sep = pd . read_csv ( <b> , sep = <a> )
<A> ( データフレーム ) の <b> カラムを値が小さい順にする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表 <A> の <b> をグループ化して、値ごとのデータ件数	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
表 <B> 中の <a> を欠損に置換し、欠損が存在する行を消し、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
<D> <c> と <D> <b> 列とデータフレーム <D> <a> 列についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の中の未記入の値をドロップして、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<C> の行の名前を <b> から <a> に変更し、インプレースする	<C> . rename ( index = { <b> : <a> } , inplace = True )	<D> . rename ( index = { <b> : <a> } , inplace = True )
表データとして <a> 区切りで CSV ファイル <b> ( ファイル名 ) を読んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
データフレーム <A> 中の NaN を含む行を消して、 <B> に代入する	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
同じ x 軸と y 軸で <A> 表データの <b> と表データ <A> の <c> と <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <D> カラム <c> と <D> 表 <b> と <D> カラム <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表データ <A> のカラム <b> 、 <c> 、 <d> 、 <e> を表示する	<A> [ [ <b> , <c> , <d> , <e> ] ]	sns <A> . pairplot ( [ [ <b> , <c> , <d> ] ] )
表データ <A> の <b> コラムを位置に設定して、インプレースする	<A> . set_index ( <b> , inplace = True )	<b> <A> . set_index ( <b> , inplace = True )
データフレーム <A> 中の <b> を NaN に置換し、 NaN が存在する行を削除	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> <b> カラムとデータフレーム <A> <c> と <A> <d> カラムについての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <C> の列 <b> が <a> 以下データを取得する	<C> [ <C> [ <b> ] <= <a> ]	<D> <C> [ <C> [ <b> ] <= <a> ]
<A> のそれぞれの行において重複があるかどうかを検出する	<A> . duplicated ( )	df . duplicated ( )
<A> 全体をインデックスを元に昇順で並び替えて、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
さらに、文字 <A> で埋めることにする	@option fillchar = <A>	start = <A> . sort_index ( )
データフレーム <B> 内にある <a> を未入力の値に置換して、再代入する	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<B> のコラム <c> と <d> を逆順に並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<B> を <a> の値でソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
カンマ区切りでデータフレームとして <b> ファイルパスを読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
表 <A> 中に存在する <b> を未記入の値に置き換え、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
データフレーム <B> 中の <a> を NaN に置換し、 NaN が存在する行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
<C> の <b> と <a> を大きい順にソートを <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の中の未入力の値が存在する行を消し、 <A> にする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
一番左の列を位置に設定して、 <b> をデータフレームとして読んで、 <A> にする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
重複した行をドロップする	df . drop_duplicates ( )	df . drop_duplicates ( )
CSV ファイル <a> ( ファイル名 ) からカンマ区切りで表を読む	pd . read_csv ( <a> , sep = ',' )	sep = <a> pd . read_csv ( <a> , sep = ',' )
データフレーム <A> 全体を <b> を軸にソートして、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
<B> のそれぞれのカラムに存在する <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> を <b> という名前でエクセルファイルに書き出す	<A> . to_excel ( <b> )	to_excel . to_excel ( <b> )
<A> の全ての列の重複する値がある行をドロップして、 <B> にする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の中の <b> カラムに重複がある行を削除し、置き換える	<A> . drop_duplicates ( subset = <b> , inplace = True )	df . drop_duplicates ( subset = <b> , inplace = True )
データフレーム <A> に存在する <b> を NaN に置き換え、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
x 軸のラベルを <a> に設定する	plt . xlabel ( <a> )	<E> . set_index ( <a> )
データフレーム <A> のカラム <b> と <A> の <c> と <A> のカラム <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> をインデックスでソートを <B> にする	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表データ <A> 内で重複している行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> 中の未入力の値を含む行を消し、置き換える	<A> = <A> . dropna ( )	df = <A> . dropna ( )
<a> コラムと <b> を大きい順にする	df . sort_values ( [ <a> , <b> ] , ascending = False )	pd . sort_values ( [ <a> , <b> ] , ascending = False )
<A> と <B> 表データに対して、 <c> をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <c> )	sns pd . merge ( <A> , <B> , on = <c> )
データフレーム <B> をインデックスでソートを <A> にする	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
<b> を表としてカンマ区切りで読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
<D> の <c> とデータフレーム <D> の <b> と <D> データフレームの <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <b> とデータフレーム <A> の <c> とデータフレーム <A> の <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内で <D> 表データ <c> 表属性と表データ <D> <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
位置とカラム <a> をキーとして <C> データフレームと <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
重複した最後の行を残して <A> ( データフレーム ) の重複している行を落とし、置き換える	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
表 <A> 中のカラムそれぞれに存在する <b> の個数の合計を求める	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を消し、インプレースする	<A> . drop_duplicates ( keep = False , inplace = True )	df . drop_duplicates ( keep = False , inplace = True )
同じグラフ内で <D> 表のコラム <c> と表 <D> の <b> と <D> の <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> の列 <a> に重複があるのかを調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <A> の <c> 列の月を確認して、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . month	[ <A> [ <b> ] = <A> [ <c> ] . dt . month
表データ <A> 中に重複はあるのか	<A> . duplicated ( )	df . duplicated ( )
分割数を <D> 、ビンの名前を整数値として、データフレーム <B> の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )
同じ x 軸と y 軸で <D> の <c> 列と <D> の <b> とデータフレーム <D> の <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <C> のカラム <a> の曜日の数値型を表示して、  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . dayofweek	<b> <C> [ <a> ] = <C> [ <a> ] . dt . dayofweek
CSV ファイル <a> ( ファイル名 ) を表としてカンマ区切りで読み込む	pd . read_csv ( <a> , sep = ',' )	sep = <a> pd . read_csv ( <a> , sep = ',' )
<A> の先頭の 5 行を確認する	<A> . head ( )	sns . head ( )
棒グラフのラベルを <D> から <c> 、 <b> 、 <a> へ変更する	plt . xticks ( <D> , [ <c> , <b> , <a> ] )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <D> の <c> とカラム <b> と <a> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
位置と <a> を項目名として <C> と <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <C> の <b> カラムとカラム <a> を逆順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
タブ区切りで <a> を読み込み、 <B> とする	<B> = pd . read_csv ( <a> , sep = '\t' )	pd . read_csv ( <a> , sep = '\t' )
<B> 内の重複している行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
<b> に重複がある行をドロップを <A> に代入する	<A> = <A> . drop_duplicates ( subset = <b> )	= df . drop_duplicates ( subset = <b> )
表データ <B> 全体を <a> の値に基づいてソートして、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
コラム <a> をキーとして、 <C> と表データ <B> をマージする	pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
<A> , <B> を散布図で描く	plt . scatter ( <A> , <B> )	plt . scatter ( <A> , <B> )
表データとして CSV ファイル <a> ( ファイル名 ) をカンマ区切りで読み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<A> = pd . read_csv ( <a> , sep = ',' )
<A> ( データフレーム ) の <b> を小から大へとソート	<A> . sort_values ( <b> )	sns . sort_values ( <b> , ascending = False )
<a> 区切りで表として CSV ファイル <b> ( ファイル名 ) を読み込み、 <C> にする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
表 <B> のそれぞれの列にある <a> の個数の合計値を見る	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<C> ( データフレーム ) の <b> と <a> カラムを値が大きい順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
ビン数を <A> として、 <C> 表データの <b> カラムを要素数が等しくなるようにビン分割し、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	<A> = pd . qcut ( <C> [ <b> ] , <A> )
<D> <c> と <D> 表属性 <b> と <D> <a> 表属性の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 内のそれぞれのカラムにある <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<B> 内の未記入の値を <A> に置き換え、置き換える	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
同じ軸で <D> 表データの <c> と表データ <D> の <b> と <D> の <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
CSV ファイル <a> ( ファイル名 ) をデータフレームとして読み込み、 <B> にする	<B> = pd . read_csv ( <a> )	<B> = pd . read_csv ( <a> )
表 <B> 中にある <c> を未記入の値に置換して、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	sns = <B> . replace ( <c> , np . nan )
表 <A> のコラム <b> の名前を <c> に、 <d> コラムの名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<C> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
表データ <A> 中の未記入の値がある行をドロップする	<A> . dropna ( )	@option dropna ( )
そのとき、 <A> に小数点以下 2 桁まで表示することを指定し、パーセント表記を指定する。こととする	@option <A> = '%.2f%%'	@option <A> = '%.2f%%'
表 <B> 内の NaN を <A> に置換し、 <C> とする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
<C> ( データフレーム ) の <b> と <a> を逆順にソートして、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表 <A> 中の <b> を欠損に置換し、欠損が存在する行を削除し、 <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
左側のデータの位置と右側のデータのカラム <c> を項目名として、 <A> 表データと表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<b> と <a> を値が大きい順にし、 <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> 中の <a> を欠損値に置換し、欠損値が存在する行をドロップを <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <B> 全体を <c> の値でソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<C> ( データフレーム ) の <b> と <a> を降順に並び替え、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> の <a> の各要素の出現頻度	<B> [ <a> ] . value_counts ( )	<B> [ <a> ] . value_counts ( )
<B> ( データフレーム ) の <a> 表属性を小から大へとソートを <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <B> をインデックスでソートを <A> とする	<A> = <B> . sort_index ( )	pd . sort_index ( <A> , <B> )
同じ軸で表 <A> のカラム <b> と <A> のカラム <c> と表 <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> とコラム <b> を大きい順にし、置き換える	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	df = df . sort_values ( [ <a> , <b> ] , ascending = False )
同じ軸で <A> 表のカラム <b> と <c> カラムと <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> 全体を <a> を軸にソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <A> 中に存在する <b> を欠損値に置き換え、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
表 <A> 内の <b> に重複がある行を落として、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	<A> . drop_duplicates ( subset = <b> , inplace = True )
表データ <B> の <a> を昇順に並び替えて、 <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <B> の <a> に重複がある行を消して、 <C> に代入する	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
データフレーム <D> の <c> と <D> の <b> コラムと表データ <D> の <a> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
<A> ( データフレーム ) の表属性 <b> と表属性 <c> を大から小へとする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
先頭の列をインデックスとして、 <a> をデータフレームとして読んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表データ <A> <b> と <A> <c> と表 <A> コラム <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 中の列にある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
軸を <A> として、 <B> の横向きの棒グラフをプロットする	plt . barh ( <A> , <B> , align = 'center' )	align plt . barh ( <B> , <A> , align = 'center' )
ビン数を <C> 、ビンのラベルをインデックスとして、 <A> 表の表属性 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	pd . cut ( <A> [ <b> ] , <C> , label = False )
表データ <A> の <b> と <c> を削除して、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
データフレーム <A> の <b> ごとに列 <c> の数を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <b> ] . count ( )
表データ <E> のカラム名を <d> から <c> に、 <b> から <a> に変更して、 <F> に代入する	<F> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <B> の <a> に重複があるかチェックする	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
位置と <a> 表属性をキーとして <C> と <B> 表データを結合し、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum <D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <B> の <a> を未記入の値に置換し、未記入の値がある行を削除して、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 全体を列 <b> を軸に並び替える	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
<B> の <a> 行目を落とす	<B> . drop ( <a> )	<B> . drop ( <a> )
表 <A> を <b> という名前で CSV ファイルに書き出す	<A> . to_csv ( <b> )	<b> . to_csv ( <b> )
<A> ( データフレーム ) の <b> と <c> を逆順にする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	pd . sort_values ( [ <b> , <c> ] , ascending = False )
<A> にある <b> を欠損に置き換えて、置き換える	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
データフレーム <B> の <a> をソートを <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
同じ x 軸と y 軸で <A> <b> カラムとデータフレーム <A> <c> と <A> <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
位置と表属性 <c> を項目名として表データ <A> と <B> 表データを結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
さらに、マーカーの内部の色を黄色とする	@option markerfacecolor = 'yellow'	@option markerfacecolor = 'yellow'
データフレーム <A> 内の欠損を <B> に置換し、再代入する	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
同じグラフ内で <A> <b> 列と <A> データフレーム <c> 列と <A> データフレーム <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内で表 <D> <c> カラムと <D> カラム <b> と <D> 表カラム <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <c> カラムの月を見、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . month	<A> [ <b> ] = <A> [ <c> ] . dt . month
<B> の <a> コラムを並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	df = <B> . sort_values ( <a> )
データフレーム <A> の <b> 表属性をソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> を <b> にして保存する	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
同じグラフ内で <D> の <c> と <D> 表データの <b> と <D> の <a> カラムを箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
ファイルパス <b> から表データを読み込んで、 <A> にする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
表 <B> の <c> に重複がある行をドロップを <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	= <B> . drop_duplicates ( subset = <c> )
データフレーム <A> の重複している行を消して、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<b> を順にソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <D> の <a> について、 <c> 列をインデックス、 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	pivot_table . pivot_table ( index = <a> , columns = <b> , values = <a> )
表 <A> 全体を位置でソートを <A> とする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
データフレーム <B> 内のそれぞれのカラムに存在する <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <B> とデータフレーム <C> を横にくっつけ、 <A> にする	<A> = pd . merge ( <B> , <C> )	pd . merge ( <B> , <A> )
<B> をインデックスを元に並び替えて、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <B> を <a> 表属性を元に昇順で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 内のそれぞれの列にある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
カラム <a> を小から大へとソートして、 <B> とする	<B> = df . sort_values ( <a> )	<E> = <B> . sort_values ( <a> )
<E> の表属性 <d> の名前を <c> に、 <b> 表属性の名前を <a> に変更して、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<A> の重複している行をドロップし、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表 <A> 内で重複した行の合計を見る	<A> . duplicated ( ) . sum ( )	x <A> . duplicated ( ) . sum ( )
同じ x 軸と y 軸で <D> の <c> と <D> データフレームのコラム <b> とデータフレーム <D> のコラム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> の <a> カラムに重複がある行を落として、 <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
表 <B> 中の <a> に重複があるか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <A> の中の欠損したセル数を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
データフレーム <C> の <b> の名前を <a> に変更して、 <C> とする	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
表データ <D> <c> と <D> <b> とデータフレーム <D> <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の中のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	plt . pd ( <A> )
同じグラフ内で <A> の <b> と表 <A> のコラム <c> と表 <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> と <b> 列を値が大きい順に並び替える	df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> . sort_values ( [ <a> , <b> ] , ascending = False )
表 <C> の <b> カラムと <a> を逆順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 中のカラム <b> と <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<A> の中で重複した行数の合計を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<b> というエクセルの <a> シート名を読む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
境界値を <D> として、データフレーム <B> の <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
表データ <C> の <b> と <a> を値が大きい順に並び替え、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表 <B> と <C> 表を縦方向に一つにまとめ、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
データフレーム <B> と表 <A> を縦向きに結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <B> 中の欠損値を <A> とし、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
両方の列を使って <B> ( データフレーム ) と表 <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	pd = pd . merge ( <B> , <C> , how = 'outer' )
データフレーム <A> 中のそれぞれのカラムに存在する <b> の個数の合計を確認する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
ビン数を <A> として、 <C> の <b> 表属性を要素数が等しくなるようにビン分割する	pd . qcut ( <C> [ <b> ] , <A> )	] pd . qcut ( <C> [ <b> ] , <A> )
そのとき、白丸のマーカーを使用する	@option marker = 'o'	@option marker = 'o'
表データ <A> の <b> と <c> コラムと <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
グラフの枠のサイズを横 <b> 縦 <a> にする	plt . figure ( figsize = ( <b> , <a> ) )	color = plt . figure ( figsize = ( <b> , <a> ) )
データフレーム <A> 中の未入力の値を <A> の平均値で埋めて、 <A> に代入する	<A> = <A> . fillna ( <A> . mean ( ) )	( <A> = <A> . mean ( ) , inplace = True )
表 <A> 列 <b> と <A> 表 <c> と <A> 表 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内でデータフレーム <A> の <b> 表属性と <c> 表属性と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の NaN の数を見る	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表 <B> 全体をコラム <a> を元に昇順でソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<C> ( データフレーム ) の <b> と <a> 列を大から小へとソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> の <a> コラムの要素を表示する	<B> [ <a> ] . values	values [ <a> ] . values
表データ <A> をインデックスを軸にソートして、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<A> のそれぞれのカラムにある <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<A> ( データフレーム ) の <b> と <c> を降順に並び替え、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	df = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> の列 <a> の日にちを確認する	<B> [ <a> ] . dt . day	<B> [ <a> ] . dt . day
データフレーム <A> 中の未入力の値がある行を削除を <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <A> をカラム <b> を元にソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
<b> というエクセルファイルの全てのシートをデータフレームとして読んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
<A> の <b> と <A> の <c> と <A> の <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
CSV ファイル <b> ( ファイル名 ) からカンマ区切りでデータフレームを読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	<b> <A> = pd . read_csv ( <b> , sep = ',' )
同じグラフ内で <A> の <b> と <A> 表の <c> と <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<D> の <a> 列について、 <c> 列を位置、 <b> を列としたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<D> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表 <D> の <c> カラムと <b> と <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで <A> 表属性 <b> とデータフレーム <A> <c> 表属性とデータフレーム <A> <d> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の標準偏差	<A> . std ( )	pd . std ( <A> )
さらに、六角形のマーカーを表示することにする	@option marker = 'h'	@option marker = 'h'
<a> を小から大へとソートを <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <A> 中にある <b> を NaN に置き換え、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	df . replace ( <b> , np . nan , inplace = True )
コラム <b> と <a> を値が大きい順に並び替える	df . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> 内の欠損値を直前の行の値で補い、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
<d> をキーとして、表 <B> と <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	= pd . merge , <B> , <C> , on = <d> )
表 <B> と <C> 表を縦結合し、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
<A> 内の <b> に重複はあるのかどうか表示する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
データフレーム <C> 内の <b> 列と列 <a> に重複があるのかどうか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<E> . duplicated ( subset = [ <b> , <a> ] )
先頭の列を位置に設定して、 <a> からデータフレームとを読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
データフレーム <B> 全体をカラム <a> を元に昇順でソートを <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<b> というエクセルデータのシート全部を読んで、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
データフレーム <C> の <a> の日にちを  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . day	<D> [ <b> ] = <C> [ <a> ] . dt . day
<b> と <a> を大から小へと並び替えて、再代入する	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
列番号 <b> をインデックスに指定して、 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = <b> )	<D> = pd . read_csv ( <a> , index_col = <b> )
<b> という名前のエクセルファイルのシート名 <a> からデータフレームを読んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<A> = pd . read_excel ( <b> , sheet_name = <a> )
左側のデータのインデックスと右側のデータの <c> コラムを項目名として、 <A> とデータフレーム <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<b> カラムをキーとしてデータを結合し、 <A> に代入する	<A> = pd . merge ( df1 , df2 , on = <b> )	<A> = pd . merge ( df1 , df2 , on = <b> )
重複した行を削除	df . drop_duplicates ( )	df . drop_duplicates ( )
表データ <A> 全体を位置でソートし、 <B> とする	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
<b> という列を削除して、 <A> とする	<A> = df . drop ( <b> , axis = 1 )	<B> = <A> . drop ( <b> , axis = 1 )
データフレーム <B> の表属性 <a> をドロップする	<B> . drop ( <a> , axis = 1 )	<B> . drop ( <a> , axis = 1 )
同じ軸のセットで <A> 表データの <b> と表データ <A> の <c> と <A> 表データの表属性 <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
左側のデータのインデックスと右側のデータの <d> 列をキーとして、表 <B> と表 <C> をマージして、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表データ <A> 全体をインデックスで並び替え、 <A> とする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表 <B> を <a> コラムの値でソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <B> を <c> に基づいてソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
<D> の <c> と表 <D> の <b> と表 <D> の <a> 表属性についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> <b> と表データ <A> <c> と表データ <A> <d> 表属性についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> を <b> でソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<a> 表属性と <b> 表属性を大から小へとソートする	df . sort_values ( [ <a> , <b> ] , ascending = False )	ascending . sort_values ( [ <a> , <b> ] , ascending = False )
データフレーム <B> の <a> の分	<B> [ <a> ] . dt . minute	<B> [ <a> ] . dt . minute
表 <A> 内の <b> を未入力の値に置換し、未入力の値が存在する行をドロップ	<A> . replace ( <b> , np . nan ) . dropna ( )	x <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <B> を <a> の値を元に昇順でソートして、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> についてダミー変数を生成し、 <A> に代入する	<A> = pd . get_dummies ( <A> )	@option <A> = pd . get_dummies ( <A> )
表データ <D> の <c> と <b> コラムごとに <a> の値の和	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	df . groupby ( [ <a> , <b> ] ) [ <a> ] . sum ( )
データフレーム <A> の中の NaN を直前の行の値で埋め、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
データフレーム <B> の <a> に重複がある行を落とし、 <C> にする	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
<A> ( データフレーム ) の <b> を順にソートし、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
列番号 <a> を位置として、 <b> をデータフレームとして読んで、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<A> = pd . read_csv ( <b> , index_col = <a> )
フォーマットを指定して、表 <A> の <b> を年月日の形式に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	'%Y-%m-%d' pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )
データフレーム <A> の欠損値を削除を <A> に代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<c> コラムをキーとして、 <A> 表データと <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	'%Y-%m-%d' = pd . merge ( <A> , <B> , on = <c> )
表 <A> のカラム <c> の時間を表示し、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . hour	[ <A> [ <b> ] = <A> [ <c> ] . dt . hour
同じ軸のセットで <A> 表の <b> コラムと <A> の <c> と <A> の <d> コラムを箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> のインデックスを軸に並び替えて、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <C> の <b> と <a> をドロップして、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	1 = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <B> の <e> コラムについて、 <c> をインデックス、 <d> をコラムとしたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	@option <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
データフレーム <A> 内の列 <b> に重複は存在するのかチェックを確認する	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
データフレーム <A> の <b> 表属性とデータフレーム <A> の <c> とデータフレーム <A> の <d> についての箱ひげ図を描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> の <b> と <c> を落として、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> 中の <b> とコラム <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表 <A> の <b> の名前を <c> に、 <d> コラムの名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )
そのとき、マーカーの色を紫色とする	@option markerfacecolor = 'purple'	'purple' = pd . read_csv ( <b> , index_col = 'purple' )
<A> ( データフレーム ) の <b> を昇順に並び替える	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表データ <B> を <a> の値でソートする	<B> . sort_values ( <a> )	markeredgewidth . sort_values ( <a> )
表データ <A> の欠損値を <B> に置き換え、インプレースする	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
一番左の列を位置と設定して、ファイルパス <a> をデータフレームとして読んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	markeredgewidth = pd . read_csv ( <a> , index_col = 0 )
左側のデータフレームを全て残してデータをマージする	pd . merge ( df1 , df2 , how = 'left' )	df1 pd . merge ( df1 , df2 , how = 'left' )
一番左の列を位置に指定して、 <b> をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
表データ <C> 中の <b> 表属性と <a> 表属性に重複があるかどうかチェックを調べる	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<B> を位置に基づいてソートして、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <B> 全体を <a> の値に基づいてソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <D> の <a> について、 <c> を位置、 <b> を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
表データ <B> を <a> というエクセルファイルにして保存する	<B> . to_excel ( <a> )	df . sort_values ( <a> )
<B> を位置を軸にソートを <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
データフレーム <C> の <b> コラムと <a> をドロップを <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	sns = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> 内に存在する <b> を欠損に置換し、再代入する	<A> = <A> . replace ( <b> , np . nan )	@option replace = <A> . replace ( <b> , np . nan )
<B> の列 <a> を昇順で並び替えて、置き換える	<B> = <B> . sort_values ( <a> )	<C> . sort_values ( <a> , inplace = True )
同じグラフ内で <A> <b> 列とデータフレーム <A> <c> と <A> <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> と <B> を散布図のグラフで表示する	plt . scatter ( <A> , <B> )	pd . merge ( <A> , <B> )
<A> の中に重複があるかどうか	<A> . duplicated ( )	df . duplicated ( )
エクセルデータ <a> の <b> 番目のシートを表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name . pd ( <a> , sheet_name = <b> )
表示するグラフ枠のサイズを <a> x6 にセットする	plt . figure ( figsize = ( <a> , 6 ) )	figure = plt . figure ( figsize = ( <a> , 6 ) )
<A> の <b> と <c> をドロップを <A> にする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	= <A> . drop ( [ <b> , <c> ] , axis = 1 )
左側のデータのインデックスと右側のデータの <d> を項目名として、 <B> と <C> データフレームを一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<A> の <b> カラムと <c> と <d> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内で <A> データフレームの <b> とデータフレーム <A> の <c> と <A> の <d> 列を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> の <b> と <c> と表属性 <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> のカラム <c> を並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <A> の <b> を欠損値に置換し、欠損値がある行を落として、 <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <C> の <b> 列が <a> より少ないデータを抽出する	<C> [ <C> [ <b> ] <  <a> ]	<A> [ <C> [ <b> ] < <a> ]
表データ <A> 中のカラムに存在する <b> の個数を計算する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<b> という名前のエクセルの <c> 番目のシートから読み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	pd . read_excel ( <A> , sheet_name = <b> , sheet_name = <c> )
<B> 全体を <a> 列の値でソートして、 <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <B> と表 <A> を縦にくっつける	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
表データ <B> 内の未入力の値を <C> に置き換えて、 <A> とする	<A> = <B> . fillna ( <C> )	= <B> . fillna ( <C> )
インデックスと <d> コラムを項目名としてデータフレーム <B> とデータフレーム <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
左側のデータのインデックスと右側のデータの <a> コラムをキーとして、データフレーム <C> と <B> データフレームを一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
同じグラフ内で <A> <b> と表データ <A> <c> カラムと表データ <A> <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の <b> の出現回数を見る	<A> [ <b> ] . value_counts ( )	<b> <A> [ <a> ] . value_counts ( )
表 <D> <c> と <D> <b> と <D> <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> をファイル <b> にして保存する	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
表 <C> の列 <b> と列 <a> を消し、 <C> とする	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> の相関係数	<A> . corr ( )	corr . corr ( )
左側のデータのインデックスと右側のデータの <a> カラムをキーとして、 <C> 表データと表データ <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <A> の最後の 5 行を見る	<A> . tail ( )	<B> . tail ( )
とりあえず表データ <A> の内容をチェックする	<A> . head ( )	head . head ( )
データフレーム <B> 中に存在する <a> を NaN に置換し、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
表 <B> の列 <a> を位置として設定して、 <C> とする	<C> = <B> . set_index ( <a> )	<A> = <B> . set_index ( <a> )
左側のデータの位置と右側のデータのコラム <a> をキーとして、 <C> と <B> を結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum <D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
ビン数を <A> として、 <C> 表の <b> を分割し、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	<E> = pd . cut ( <D> [ <b> ] , <A> )
表データ <A> と <B> に対して、 <c> をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <c> )	sns pd . merge ( <A> , <B> , on = <c> )
データフレーム <B> 内の未記入の値を <A> に置き換えて、置き換える	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<A> の列 <b> を昇順で並び替えて、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
<A> 内の NaN をドロップ	<A> . dropna ( )	<A> . dropna ( )
<a> というエクセルファイルのシート全部から読む	pd . read_excel ( <a> , sheet_name = None )	sheet_name . pd ( <a> , sheet_name = None )
<d> をキーとして、 <B> 表データと <C> 表データを一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	sns = pd . merge ( <B> , <C> , on = <d> )
表 <C> の <b> と <a> コラムを降順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸で表データ <A> の <b> コラムと表データ <A> の <c> と <A> の <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> の <a> に重複がある行を消す	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
データフレーム <B> 全体を <c> の値に沿ってソートして、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
列番号 <a> を位置と設定して、 <b> ファイルパスをデータフレームに格納する	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<D> の列 <c> と表データ <D> の <b> と <D> の <a> 列についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
重複している行をドロップし、インプレースする	df . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
データフレーム <A> の中の <b> カラムに重複がある行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	1 = <A> . drop_duplicates ( subset = <b> )
データフレーム <B> 中のそれぞれのカラムに存在する <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の <b> 行目をドロップして、再代入する	<A> = <A> . drop ( <b> )	df = <A> . drop ( <b> )
表データ <B> と表 <A> を縦方向にくっつける	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<B> の NaN を <A> に置換して、 <C> にする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
表 <A> の <b> と列 <c> と <d> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表 <C> の <b> ごとに <a> コラムの平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
さらに、グラフカラーを黄緑とする	@option color = 'greenyellow'	@option color = 'greenyellow'
表データ <B> の <a> を位置とし、再代入する	<B> = <B> . set_index ( <a> )	<B> = <B> . set_index ( <a> )
<A> 中のそれぞれの列に存在する <b> の個数を算出する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
重複した行をドロップして、 <A> にする	<A> = df . drop_duplicates ( )	<A> = df . drop_duplicates ( )
表 <A> のカラムそれぞれにある <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<B> 内の <a> に重複がある行を削除を <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	<D> = <B> . drop_duplicates ( subset = <a> )
<B> 内の <a> に重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
表データ <C> と <B> 表に対して、 <a> をキーとしてデータを結合する	pd . merge ( <C> , <B> , on = <a> )	sns pd . merge ( <C> , <B> , on = <a> )
左側のデータの位置と右側のデータの <c> 表属性をキーとして、 <A> データフレームと <B> データフレームをマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <C> の <b> カラムとカラム <a> を大きい順にソートを <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の <b> と <c> を落として、 <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <C> の <b> と <a> を値が大きい順にソートして、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <C> の <b> と <a> を降順に並び替え、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	sns = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> の NaN を含む行を消して、 <A> とする	<A> = <B> . dropna ( )	= <B> . dropna ( )
同じ軸で <A> の <b> と表データ <A> の <c> と <A> 表データの <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
分割数を <D> 、ビンの名前をリスト <E> として、 <B> の <c> 列を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
データフレーム <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	df = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<D> の <c> 表属性と <b> 表属性と表属性 <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> の <a> 行目を削除	<B> . drop ( <a> )	<B> . drop ( <a> )
表 <B> の NaN を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	<B> = <B> . fillna ( <C> )
表データ <B> とデータフレーム <A> を縦向きにマージし、 <C> に代入する	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表データ <A> 内の欠損値を <A> の平均値で補って、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) , inplace = True )
<A> の列 <b> をソートし、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
描画するグラフ枠の大きさを横 <a> 縦 <b> とセットする	plt . figure ( figsize = ( <a> , <b> ) )	<F> = plt . figure ( figsize = ( <a> , <b> ) )
<D> の <c> とデータフレーム <D> の <b> と <D> データフレームの列 <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> カラムと <c> を降順にソートし、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	1 = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <A> 中の NaN を消し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
カラム <a> と <b> に重複はあるのか表示してみる	df . duplicated ( subset = [ <a> , <b> ] )	if df . duplicated ( subset = [ <a> , <b> ] ) :
<A> のそれぞれのカラムに存在する <b> の個数の合計を確認する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
データフレーム <A> 全体を <b> に基づいてソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> を <b> 列を元に昇順でソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
<b> とカラム <a> を大から小へと並び替えて、置き換える	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <b> , <a> ] , ascending = False )
<B> の <a> カラムをヒストグラムにする	plt . hist ( <B> [ <a> ] )	plt . hist ( <B> [ <a> ] )
表データ <B> 全体を列 <a> を軸に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <A> 内の <b> に重複があるとき	if <A> . duplicated ( subset = <b> ) :	: if <A> . duplicated ( subset = <b> ) :
<A> の分散	<A> . var ( )	var . var ( )
表 <A> 内の重複した行を消して、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
CSV ファイル <b> ( ファイル名 ) を表データとして <a> 区切りで読み込み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
同じ軸で表データ <A> の <b> と <A> 表データの <c> と <A> 表データのカラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内で表 <D> <c> と <D> コラム <b> と <D> コラム <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> のコラム <b> についての箱ひげ図を表示する	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
<A> 内の重複している行をドロップ	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<B> 内の <a> に重複はあるのか表示する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
<a> という名前のエクセル <a> の全てのシートを表データに格納する	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> , sheet_name = None )
<b> と <a> を大から小へとソートする	df . sort_values ( [ <b> , <a> ] , ascending = False )	pd . sort_values ( [ <b> , <a> ] , ascending = False )
<A> の未入力の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そこで、マーカーの輪郭線の色を青とする	@option markeredgecolor = 'blue'	@option markeredgecolor = 'blue'
表 <A> 内の未入力の値を <A> の平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	sns <A> = <A> . fillna ( <A> . mean ( ) , inplace = True )
<B> のコラム <a> の値を並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表 <B> 全体を <a> を元に昇順で並び替えて、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表データ <A> の <b> の名前を <c> にリネームする	<A> . rename ( columns = { <b> : <c> } )	sns . rename ( index = { <b> : <c> } )
<C> のカラム <a> の月を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
表 <B> を <a> カラムの値でソートを <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <A> 内の列にある <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
同じ x 軸と y 軸で <A> 表データの表属性 <b> と表データ <A> の <c> と表データ <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> 中の <a> を NaN に置換し、 NaN がある行をドロップを <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> 中のカテゴリ変数をダミー変数に変換する	pd . get_dummies ( <A> )	'%Y-%m-%d' pd . get_dummies ( <A> )
同じグラフ内で <D> の <c> と <D> の <b> と <D> 表データの <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> 中の <a> を欠損に置換し、欠損が存在する行を消し、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
そこで、マーカースタイルを星型五角形とする	@option marker = '*'	@option marker = '*'
<A> のカラム名を <b> から <c> に、 <d> から <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<C> の <b> の名前を <a> に変更し、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
<b> から表データをカンマ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	sns = pd . read_csv ( <b> , sep = ',' )
データフレーム <C> の <b> と <a> 表属性をドロップして、 <D> に代入する	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<A> の <b> を NaN に置換し、 NaN がある行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
データフレーム <A> 中の欠損をドロップし、 <A> とする	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <A> 表をマージして、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
<b> と <c> 列を値が大きい順に並び替え、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	= df . sort_values ( [ <b> , <c> ] , ascending = False )
<A> の中の重複している行をドロップして、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
データフレーム <B> の中の <a> を欠損値に置換し、欠損値がある行を削除して、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> の列 <b> と列 <c> を消す	<A> . drop ( [ <b> , <c> ] , axis = 1 )	sns . drop ( [ <A> , <b> ] , axis = 1 )
<B> と <C> のどちらにも存在するデータでマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
<A> 全体をカラム <b> を元に昇順で並び替えて、 <A> とする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<A> 中にある <b> を NaN に置き換えて、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	sns <A> = <A> . replace ( <b> , np . nan )
<B> の位置を軸に昇順でソートを <A> とする	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
表データ <B> の全ての列の重複する行をドロップし、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表データ <A> の <b> と <c> を逆順にソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
<a> カラムを項目名としてデータを結合する	pd . merge ( df1 , df2 , on = <a> )	<D> pd . merge ( df1 , df2 , on = <a> )
<B> と <A> を縦方向にくっつけて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <D> カラム <c> とデータフレーム <D> <b> カラムと <D> データフレームカラム <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
同じ x 軸と y 軸で <A> <b> 列とデータフレーム <A> <c> と <A> データフレーム列 <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> のカラム <c> と <d> カラムを削除を <A> にする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	1 = <B> . drop ( [ <c> , <d> ] , axis = 1 )
データフレーム <B> の <a> カラムを中央値で分割し、 <C> とする	<C> = pd . qcut ( <B> [ <a> ] , 2 )	df = pd . qcut ( <C> [ <a> ] , 2 )
<c> 区切りで <b> をデータフレームとして読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<A> = pd . read_csv ( <b> , sep = <c> )
表データ <B> の <a> 列の時間	<B> [ <a> ] . dt . hour	<B> [ <a> ] . dt . hour
表データ <B> とデータフレーム <A> を縦に結合して、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <A> のコラム <b> と <A> の <c> と <A> の <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の中の <b> を NaN に置換し、 NaN が存在する行を落とし、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
<B> の列名を <c> から <d> に変更し、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	sns = <B> . rename ( columns = { <c> : <d> } )
<c> カラムをキーとして、表データ <A> と <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	'%Y-%m-%d' = pd . merge ( <A> , <B> , on = <c> )
データフレーム <D> の <c> と表 <D> の <b> と <D> 表のコラム <a> についての箱ひげ図を描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> の列 <a> を位置として設定し、 <B> とする	<B> = <B> . set_index ( <a> )	df = <B> . set_index ( <a> )
表 <A> 中の欠損の合計を見る	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
データフレーム <B> の <a> をインデックスとし、 <C> に代入する	<C> = <B> . set_index ( <a> )	df = <B> . set_index ( <a> )
<a> というエクセルの <b> から読む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表データ <B> の中のそれぞれのカラムにある <a> の個数の合計を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> 中のそれぞれの列に存在する <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
表示するグラフ枠のサイズを横 <b> 縦 <a> とする	plt . figure ( figsize = ( <b> , <a> ) )	figure plt . figure ( figsize = ( <b> , <a> ) )
データフレーム <A> 内の重複要素がある行を削除し、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<b> と <a> 表属性を逆順にソートを <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 内の未入力の値がある行を削除を <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <B> 中の <a> に重複があるかどうかチェックを調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <E> の <d> の名前を <c> に、 <b> の名前を <a> に変更して、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	sum <E> = <E> . rename ( index = { <d> : <c> , <b> : <a> } )
表 <A> の <b> コラムについてのヒストグラムを描く	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
表 <A> の列 <b> をソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <A> の <b> を消して、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	1 = <A> . drop ( <b> , axis = 1 )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
表 <A> のそれぞれのカラムにある <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <a> ] ) . sum ( )
表データ <A> の <b> と <c> を降順にソートし、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
表 <B> 中の欠損値を <A> とし、 <B> とする	<B> = <B> . fillna ( <A> )	fillna <B> = <B> . fillna )
<b> 表属性と <a> に重複はあるのならば	if df . duplicated ( subset = [ <b> , <a> ] ) :	plt . duplicated ( subset = [ <b> , <a> ] ) :
重複した最後の行を残して <A> ( データフレーム ) の中の重複している行をドロップ	<A> . drop_duplicates ( keep = False )	df . drop_duplicates ( keep = False )
<A> をダミー変数にする	pd . get_dummies ( <A> )	df . pd ( <A> )
表 <A> の <b> の日にちを確認する	<A> [ <b> ] . dt . day	[ <A> [ <b> ] . dt . day
データフレーム <A> を位置でソートを <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
データフレーム <C> の <b> と <a> を大から小へとソートし、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> のそれぞれのカラムに存在する <b> の個数を表示する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
<B> の未記入の値を <A> に置き換え、置き換える	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
カラム <b> とカラム <a> を値が大きい順にして、置き換える	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
左側のデータのインデックスと右側のデータの <d> をキーとして、データフレーム <B> とデータフレーム <C> をマージし、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
データフレーム <B> の <a> を one - hot 表現に変換する	pd . get_dummies ( <B> [ <a> ] )	plt . pd ( <B> [ <a> ] )
表 <A> 中の未入力の値が存在する行を落として、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
表データ <C> のカラム <b> と <a> を大から小へとソートして、 <D> にする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の <b> カラムの月を見る	<A> [ <b> ] . dt . month	dt . month ( <A> [ <b> ] , ascending = False )
同じ x 軸と y 軸で <A> データフレームの表属性 <b> と表属性 <c> と表属性 <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の <b> 列と <A> の <c> と <A> の <d> 列の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> 内の <a> を欠損に置換し、欠損がある行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
表 <A> の振り直して、元のインデックスを削除し、置き換える	<A> . reset_index ( drop = True , inplace = True )	df . reset_index ( drop = True , inplace = True )
同じ軸で表データ <D> の <c> 表属性と <D> の <b> 表属性と <D> 表データの <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ x 軸と y 軸で <A> データフレームの <b> と <c> と <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> の中に存在する <a> を NaN とし、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<D> . replace ( <a> , np . nan , inplace = True )
<A> を <b> コラムの値を軸に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
位置と <c> を項目名として <A> 表データと <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> の <a> の値を軸に昇順で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <B> の <c> と <d> をドロップして、 <A> とする	<A> = <B> . drop ( [ <c> , <d> ] , axis = 1 )	1 = <B> . drop ( [ <c> , <d> ] , axis = 1 )
<A> の <b> の値を軸に昇順で並び替え、 <A> とする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表 <B> の全ての列で重複している行をドロップして、 <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
同じグラフ内で表データ <D> <c> 表属性と <D> 表データ <b> と <D> 表データ <a> 表属性を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> の元のインデックスをリセットして、置き換える	<A> = <A> . reset_index ( drop = True )	df . reset_index ( drop = True , inplace = True )
表データ <A> のコラム <b> をソートして、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <A> 全体をインデックスでソートを <A> とする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表データ <A> を位置に基づいてソートし、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
表データ <A> の列 <b> が <c> のデータを取得する	<A> [ <A> [ <b> ] == <c> ]	<A> [ <A> [ <b> ] == <c> ]
<B> をコラム <a> でソートし、置き換える	<B> = <B> . sort_values ( <a> )	df . sort_values ( <a> , inplace = True )
<b> という名前のエクセルデータの <a> から読み込み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
表データとして CSV ファイル <a> ( ファイル名 ) を <b> 区切りで読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
コラム <a> に重複がある行を削除し、再代入する	df = df . drop_duplicates ( subset = <a> )	df = df . drop_duplicates ( subset = <a> )
<A> の欠損を <B> に置き換えて、再代入する	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
<A> 中にある <b> を未入力の値とし、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	df = <A> . replace ( <b> , np . nan )
表 <B> と表 <A> を縦方向に一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	= pd . concat ( [ <B> , <A> ] )
表データ <C> の <b> と <a> の相関係数を見る	<C> [ [ <b> , <a> ] ] . corr ( )	<D> [ [ <b> , <a> ] ] . corr ( )
データフレーム <C> と <B> に対して、 <a> をキーとしてデータを内部結合する	pd . merge ( <C> , <B> , on = <a> )	pd . merge ( <C> , <B> , on = <a> )
データフレーム <A> 中のそれぞれのカラムに存在する <b> の個数を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
同じ軸でデータフレーム <A> コラム <b> と <A> <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表としてカンマ区切りで <a> を読み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
同じ軸のセットで <D> データフレーム <c> とデータフレーム <D> <b> と <D> データフレーム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
ビン数を <C> 、ビンのラベルをリスト <D> として、データフレーム <A> の <b> コラムを分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
同じグラフ内で表データ <D> <c> と表データ <D> <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレームを <a> から <b> 区切りで読み込む	pd . read_csv ( <a> , sep = <b> )	sep = <a> pd . read_csv ( <b> , sep = <a> )
表 <A> の <b> ごとに <c> 列の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> と <B> データフレームを縦向きに連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <A> 中の NaN の合計を調べる	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表 <B> をインデックスを元に並び替え、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
さらに、灰色で表示する	@option color = 'gray'	'gray' @option color = 'gray'
データフレーム <A> をインデックスでソートを <A> にする	<A> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
表 <A> と <B> 表を縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<a> という名前のエクセルファイルの <b> からデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<b> というエクセルの <c> 番目のシートを表に格納し、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<b> <A> = pd . read_excel ( <b> , sheet_name = <c> )
<C> の <b> と <a> を消し、再代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <B> の <a> 列をインデックスとし、インプレースする	<B> . set_index ( <a> , inplace = True )	<B> . set_index ( <a> , inplace = True )
<A> 内の <b> に重複があるのかチェックを調べる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
データフレーム <A> 内の未入力の値がある行を削除し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <A> 列 <b> と <A> データフレーム <c> と <A> データフレーム <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> と <c> を大から小へとソートする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> から <a> という名前でエクセルファイルにする	<B> . to_excel ( <a> )	pd . to_excel ( <B> , <a> )
表 <A> の <b> コラムと <c> を消して、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	axis = <A> . drop ( [ <b> , <c> ] , axis = 1 )
左側のデータの位置と右側のデータの <a> を項目名として、 <C> と <B> をマージし、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <A> のデータの性質を見る	<A> . info ( )	<A> [ . info ( ) ]
インデックスとコラム <c> を項目名として <A> と表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表 <B> の NaN を <A> として、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<A> の <b> のユニークな要素	<A> [ <b> ] . unique ( )	plt . unique ( <A> [ <b> ] )
同じ軸のセットで表 <A> <b> と <A> <c> と <A> <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
出力するグラフのサイズを横幅 <b> 高さ <a> と設定する	plt . figure ( figsize = ( <b> , <a> ) )	sns . figure ( figsize = ( <b> , <a> ) )
<C> の <b> カラムを位置、カラム <a> をカラムとしたピボットテーブルを作成し、 <D> にする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	pivot_table = <C> . pivot_table ( index = <b> , columns = <a> )
表データ <A> から重複する行を削除する	<A> . drop_duplicates ( )	df . drop_duplicates ( )
表 <B> 内の欠損値を <A> として、再代入する	<B> = <B> . fillna ( <A> )	@option fillna = <B> )
同じ x 軸と y 軸で <A> <b> 表属性と <A> 表 <c> と <A> <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> 内の重複している行を削除	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表データ <B> の <a> についての要約統計量を確認する	<B> [ <a> ] . describe ( )	<B> [ <a> ] . describe ( )
表データ <A> 中の重複をチェックを見る	<A> . duplicated ( )	pd . merge ( <A> )
<A> を <b> という名前でエクセル形式に書き込む	<A> . to_excel ( <b> )	<b> pd . read_excel ( <A> [ <b> ] , sheet_name = False )
データフレーム <B> 中に存在する <a> を NaN に置換して、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> と <B> 表を一つにまとめ、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<a> と表属性 <b> に重複は存在するのかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
<A> 中の未入力の値をドロップする	<A> . dropna ( )	<A> . dropna ( )
表データ <A> の列名を <b> から <c> に、 <d> から <e> にリネームし、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
データフレーム <A> を <b> の値を元にソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表データ <A> 中の重複している行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<B> の <a> 表属性を位置とする	<B> . set_index ( <a> )	<B> . set_index ( <a> )
左側のデータのインデックスと右側のデータの <a> を項目名として、 <C> と <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
一番左の列を位置と設定して、パス <a> を表に格納して、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
データフレーム <A> 内の重複している行をドロップを <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表 <A> 中の欠損値を消し、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
<B> を <a> の値に基づいてソートし、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
表データ <B> 内の <a> カラムに重複がある行をドロップを <C> に代入する	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
そこで、マーカーの内の色をグレーとする	@option markerfacecolor = 'gray'	@option markerfacecolor = 'gray'
表データ <D> <c> カラムと <D> <b> と <D> カラム <a> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> というエクセルファイルの <a> をデータフレームに格納する	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
表 <A> 内の重複している行をドロップを <A> にする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
<B> ( データフレーム ) の <a> をソートを <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<b> と <a> を降順にして、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> の <a> を中央値で分割する	pd . qcut ( <B> [ <a> ] , 2 )	median pd . qcut ( <B> [ <a> ] , 2 )
<A> の <b> と <c> 表属性を値が大きい順に並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> 全体を <b> の値を元にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <A> の <b> とコラム <c> ごとに <d> の値の和	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
<b> と <a> を値が大きい順にソートし、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	df = df . sort_values ( [ <b> , <a> ] , ascending = False )
インデックスと <a> をキーとして表データ <C> と <B> 表データを結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレームを <b> から読んで、 <A> にする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
表データ <A> の重複した行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
データフレーム <A> 内の未記入の値を直前の行の値で補って、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	fillna = <A> . fillna ( method = 'ffill' )
同じ軸のセットでデータフレーム <D> <c> と <D> データフレーム <b> とデータフレーム <D> <a> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> のそれぞれの列にある <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<A> の <b> 中の前後の行の差分	<A> [ <b> ] . diff ( periods = 1 )	[ <A> [ <b> ] . diff ( periods = 1 )
表 <B> の <a> についての要約統計量	<B> [ <a> ] . describe ( )	<B> [ <a> ] . describe ( )
<A> のものを得る	<A> [ <A> . duplicated ( ) ]	if <A> . duplicated ( ) ]
データフレーム <B> の中にある <c> を欠損値に置換し、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan )	sns = <B> . replace ( <c> , np . nan )
<D> の列 <c> と <b> と <a> 列について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ [ <c> , <b> , <a> ] ] ] ] . corr ( )
グラフの大きさを横 <b> 縦 <a> とする	plt . figure ( figsize = ( <b> , <a> ) )	color = plt . figure ( <b> , <a> ) ) )
表 <B> の <a> を未入力の値に置換し、未入力の値が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	markeredgewidth = <a> . replace ( <a> , np . nan ) . dropna ( )
同じ軸のセットで <D> データフレームの列 <c> と <b> と <a> 列を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸で <D> の <c> コラムと <D> データフレームの <b> とデータフレーム <D> のコラム <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> 番目の列を位置に指定して、 <b> ファイルパスを読み込み、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<A> = pd . read_csv ( <b> , index_col = <a> )
表データ <C> のカラム <a> の日にちを見て、  <C> [ <b> ] にする	<C> [ <b> ] = <C> [ <a> ] . dt . day	subset <C> [ <b> ] = <C> [ <a> ] . dt . day
表データ <B> 中の <a> に重複はあるのかどうか見る	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <A> の <b> と <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> の <b> と <c> を降順に並び替え、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<C> の <b> 列が <a> より少ないデータを抽出する	<C> [ <C> [ <b> ] <  <a> ]	plt <C> [ <C> [ <b> ] < <a> ]
<B> 内のそれぞれのカラムにある <a> の個数の合計を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> の <a> をヒストグラムで描く	plt . hist ( <B> [ <a> ] )	pd . hist ( <B> [ <a> ] )
<A> の <b> 列が <c> より少ないデータを抽出する	<A> [ <A> [ <b> ] <  <c> ]	< <A> [ <A> [ <b> ] < <c> ]
データフレーム <B> 内の NaN を <A> に置き換えて、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
表データ <B> をカラム <a> に沿ってソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
データフレーム <B> 中の <a> カラムに重複がある行を削除し、 <B> にする	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
<A> 中の NaN を直前の行の値で埋め、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	fillna <A> . fillna ( method = 'ffill' , inplace = True )
さらに、グラフ線を破線でひくことにする	@option linestyle = 'dashed'	<E> = pd . read_csv ( <a> , header = None )
全結合で <B> データフレームとデータフレーム <A> をマージし、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
データフレーム <B> の表属性 <a> の月	<B> [ <a> ] . dt . month	<B> [ <a> ] . dt . month
<C> ( データフレーム ) の <b> と <a> を大きい順にソートし、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<C> ( データフレーム ) の <b> 列と列 <a> を逆順にソートし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> の <b> カラムとカラム <c> を大きい順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
同じ x 軸と y 軸で <A> データフレーム <b> カラムと <A> データフレーム <c> と <A> <d> カラムを箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の列 <c> 内の前後の行の差分を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . diff ( periods = 1 )	[ <b> ] = <A> [ <c> ] . diff ( periods = 1 )
<C> ( データフレーム ) の列 <b> と <a> を大から小へと並び替えて、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <C> の列名を <b> から <a> にリネームし、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
左側のデータの位置と右側のデータの <a> を項目名として、 <C> 表データと <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
分割数を <D> として、 <B> の <c> コラムを要素数が等しくなるようにビン分割して、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	] = pd . qcut ( <B> [ <c> ] , <D> )
表 <A> の中で重複する行の合計を確認する	<A> . duplicated ( ) . sum ( )	sns . duplicated ( ) . sum ( )
表 <B> 中の未記入の値を <A> で埋めて、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
表データ <D> の <c> と <b> と列 <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ [ <c> , <b> , <a> ] ] ] ] . corr ( )
データフレーム <A> を位置を軸にソートして、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <B> 内にある <a> を未記入の値に置換する	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
データフレーム <B> 中のそれぞれの列に存在する <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> の <a> を昇順にソートして、置き換える	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じグラフ内で <A> データフレームの <b> と <A> の <c> とデータフレーム <A> の表属性 <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
列番号 <c> をインデックスに指定して、 <b> を表データに格納し、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
データフレーム <A> の元の位置を振り直す	<A> . reset_index ( drop = True )	sns . reset_index ( drop = True )
表 <A> の中の欠損値を <B> として、 <A> にする	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
データフレーム <B> の <c> カラムを中央値で分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 2 )	df = pd . qcut ( <B> [ <c> ] , 2 )
表データ <B> の要素を <A> にする	<A> = <B> . values	plt . values ( <B> )
<A> ( データフレーム ) の <b> コラムを小さい順に並び替えて、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表 <B> 内のそれぞれのカラムにある <a> の個数を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <B> の中のそれぞれの列にある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
軸を <A> として、 <B> の縦向きの棒グラフをプロットする	plt . bar ( <A> , <B> )	x plt . bar ( <A> , <B> ) )
表 <C> の <b> と <a> を大から小へとソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
同じグラフ内で表 <A> の <b> カラムと <c> と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> 中の欠損値の合計を算出する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表 <A> の <b> をインデックスとして設定し、置き換える	<A> = <A> . set_index ( <b> )	df . set_index ( <b> , inplace = True )
表 <A> のカラム <b> と <c> を調べる	<A> [ [ <b> , <c> ] ]	sns . pairplot ( <A> [ [ <b> , <c> ] ] )
表 <A> の元のインデックスをリセットして、インプレースする	<A> . reset_index ( drop = True , inplace = True )	sns . reset_index ( drop = True , inplace = True )
表 <A> 中の欠損値がある行を削除して、 <B> にする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
<a> ファイル名からデータフレームをカンマ区切りで読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	',' = pd . read_csv ( <a> , sep = ',' )
表データ <A> から重複している行を削除して、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
<c> 区切りで CSV ファイル <b> を読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<A> = pd . read_csv ( <b> , sep = <c> )
表データ <A> の NaN を <B> に置換して、置き換える	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表データ <D> の <c> コラムと <b> とコラム <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> の <b> カラムが <c> もしくは <d> のデータを得る	<A> [ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]	[ <A> [ <b> ] . isin ( [ <c> , <d> ] ) ]
<A> 中の欠損値がある行を消し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
データフレーム <C> のカラム <a> の曜日の数値型を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . dayofweek	<b> <C> [ <a> ] = <C> [ <a> ] . dt . dayofweek
同じグラフ内で <D> <c> と <D> <b> と表 <D> <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データとして <a> 区切りで CSV ファイル <b> ( ファイル名 ) を読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
グラフに格子を表示する	plt . grid ( True )	sns . grid ( True )
<B> の <a> に重複がある行を削除	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
<A> 全体を位置を元にソートする	<A> . sort_index ( )	@option sort_index ( )
データフレーム <B> の列 <c> を位置、 <d> 列を列としたピボットテーブルを作成し、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<A> = <B> . pivot_table ( index = <c> , columns = <d> )
データフレーム <D> のカラム <a> について、 <c> を位置、カラム <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
<B> と表データ <C> を縦結合し、 <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <B> と <C> 表データを縦にくっつけ、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表データ <B> の欠損を <A> として、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
同じ軸のセットで表データ <D> <c> と <D> 表データ <b> コラムと表データ <D> <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <D> の <a> カラムについて、 <c> をインデックス、 <b> カラムをカラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<b> と <a> に重複はあるかどうか見る	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
データフレーム <A> と表 <B> を縦向きに結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <C> の <b> コラムの名前を <a> にリネームして、 <C> に代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
ヒストグラムで <A> 表の <b> を描画する	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
データフレーム <B> の <a> 列をインデックスとして設定し、 <B> にする	<B> = <B> . set_index ( <a> )	<B> = <B> . set_index ( <a> )
データフレーム <A> 中の重複する値がある行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の <b> の名前を <c> にリネームして、置き換える	<A> = <A> . rename ( index = { <b> : <c> } )	df = <A> . rename ( index = { <b> : <c> } )
値を <b> から <a> の範囲で、 <C> のヒストグラムを描写する	plt . hist ( <C> , range = ( <b> , <a> ) )	mode = pd . merge ( <C> , <b> , <a> ) )
同じ軸で <A> の <b> と <A> の <c> とデータフレーム <A> のコラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> のリセットして、元の位置を削除して、 <A> とする	<A> = <A> . reset_index ( drop = True )	reset_index = <A> . reset_index ( drop = True )
そこで、グラフは青色で表示することとする	@option color = 'blue'	sns . @option ( color = 'blue' )
データフレーム <A> を <b> というファイル名で書き出す	<A> . to_csv ( <b> )	plt . savefig ( <b> )
<B> をインデックスでソートを <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データ <B> を <a> パスという名前にして CSV ファイルに書き込む	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<A> 中の欠損を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
列名を指定せずにファイル名 <a> を読み、 <B> とする	<B> = pd . read_csv ( <a> , header = None )	<B> = pd . read_csv ( <a> , header = None )
表 <B> のバリューを <A> とする	<A> = <B> . values	sns . values ( <A> )
表データ <A> の <b> コラムごとに <c> の平均を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
<A> の <b> 表属性の秒	<A> [ <b> ] . dt . second	[ <A> [ <b> ] . dt . second
データフレーム <A> の欠損値をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <A> をマージする	pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
同じ x 軸と y 軸で表 <A> 表属性 <b> と <A> 表 <c> と表 <A> 表属性 <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> 全体を <a> の値に沿ってソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
コラム <c> をキーとして、 <A> と表データ <B> をマージする	pd . merge ( <A> , <B> , on = <c> )	'%Y-%m-%d' = pd . merge ( <A> , <B> , on = <c> )
データフレーム <A> 内のそれぞれのカラムにある <b> の個数の合計値を確認する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> をインデックスを元にソートを <B> に代入する	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<b> ファイル名からデータフレームを <a> 区切りで読んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
<A> を位置を元にソートを <B> にする	<B> = <A> . sort_index ( )	= <A> . sort_index ( )
データフレーム <A> の <b> と表属性 <c> と表属性 <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
<B> のカラム <a> に重複はあるかどうかチェック	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
同じグラフ内で <D> の <c> と <D> の <b> と <D> 表の列 <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> <b> と表 <A> <c> と <A> <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> の曜日を調べる	<A> [ <b> ] . dt . weekday_name	<A> [ <b> ] . dt . weekday_name
同じ軸で <A> 表データの表属性 <b> と <A> 表データの <c> と表データ <A> の <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<b> と表属性 <a> を大きい順に並び替え、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
分割数を <D> 、ビンのラベルを 0 始まりの連番として、データフレーム <B> の <c> 表属性をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	pd . cut ( <A> [ <B> , <c> ] , <D> , label = False )
データフレーム <B> の <a> 表属性をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	<B> . groupby ( <a> ) . size ( )
<C> ( データフレーム ) のコラム <b> と <a> コラムを大きい順にソートして、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> ( データフレーム ) の <b> と <c> 列を大から小へとソートして、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<a> という名前のエクセルの全部のシートからデータフレームを読み、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	df = pd . read_excel ( <a> , sheet_name = None )
<C> の <b> と <a> に重複があるのかどうか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表データ <B> のカラム <e> について、 <c> を位置、 <d> カラムをカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	@option <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
一番左の列をインデックスに指定して、ファイルパス <a> から読んで、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
表データ <B> を <a> パスという名前で CSV ファイルで保存する	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<A> の <b> カラムを確認する	<A> [ <b> ]	<A> [ <b> ]
表 <B> 全体をカラム <c> を元にソートを <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> の <b> カラムと <A> の <c> と <A> 表データのカラム <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
列番号 <c> を位置に指定して、 <b> をデータフレームとして読んで、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
エクセルファイル <b> の <a> をデータフレームとして読み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<b> <C> = pd . read_excel ( <b> , sheet_name = <a> )
<a> というエクセルファイルのシート全てを読み込む	pd . read_excel ( <a> , sheet_name = None )	df . pd ( <a> , sheet_name = None )
<a> という列を削除	df . drop ( <a> , axis = 1 )	<B> . drop ( <a> , axis = 1 )
表 <B> と表 <A> を縦に一つにまとめる	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
データフレーム <B> のリセットして、元の位置を削除し、 <A> に代入する	<A> = <B> . reset_index ( drop = True )	= <B> . reset_index ( drop = True )
表 <A> 中の重複を表示してみる	<A> . duplicated ( )	[ <A> . duplicated ( ) ]
同じ軸のセットで <A> の <b> と <A> の <c> 列と <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> ( データフレーム ) の表属性 <a> を小さい順にし、 <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <C> の <b> 列ごとに <a> の平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
カンマ区切りで表データとして CSV ファイル <b> ( ファイル名 ) を読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
表 <B> を列 <c> を元に昇順で並び替え、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<A> の <b> に重複がある行を削除を <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
データフレーム <C> 内の <b> 表属性と <a> に重複があるのかどうかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <C> の <b> と <a> を降順にソートし、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表データ <B> 内の <a> に重複がある行を落とす	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
<b> というエクセルデータの <a> をデータフレームに格納する	pd . read_excel ( <b> , sheet_name = <a> )	pd . read_excel ( <b> , sheet_name = <a> )
表 <B> の <e> について、カラム <c> を位置、 <d> をカラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	@option <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
データフレーム <B> の中のそれぞれのカラムに存在する <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> 中のそれぞれのカラムに存在する <a> の個数の合計を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の未記入の値が存在する行を落として、再代入する	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> 中の列にある <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
データフレーム <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行を消す	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
表 <A> の中の重複する行をドロップし、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
ヒストグラムで表 <B> の <a> コラムを表す	plt . hist ( <B> [ <a> ] )	bins plt . hist ( <B> [ <a> ] )
表データ <C> の <a> 列の時間を見て、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . hour	<b> <C> [ <a> ] = <C> [ <a> ] . dt . hour
データフレーム <A> 中の未記入の値を消して、 <A> とする	<A> = <A> . dropna ( )	<B> = <A> . dropna ( )
表 <A> 中の <b> を欠損に置換し、欠損がある行を削除して、置き換える	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<B> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> 中で重複した行数を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<C> のインデックス名を <b> から <a> にリネームして、インプレースする	<C> . rename ( index = { <b> : <a> } , inplace = True )	markeredgewidth = <a> } . rename ( index = { <b> : <a> } , inplace = True )
表 <C> の <b> カラムとカラム <a> を大から小へと並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレームを CSV ファイル <b> ( ファイル名 ) から <c> 区切りで読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
<C> の <b> と <a> をドロップを <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<a> というエクセルの全てのシートをデータフレームとして読んで、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	df = pd . read_excel ( <a> , sheet_name = None )
表データ <B> と <C> データフレームを縦方向にくっつけ、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	= pd . concat ( [ <B> , <C> ] )
表属性 <b> と <c> を値が大きい順に並び替え、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> の列名を <b> から <c> に、 <d> から <e> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
データフレーム <A> 内の重複している値がある行をドロップする	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
データフレーム <A> の <b> 位置の名前を <c> にリネームする	<A> . rename ( index = { <b> : <c> } )	x <A> . rename ( index = { <b> : <c> } )
列番号 <c> をインデックスとして、 <b> を読み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
表 <A> 内に存在する <b> を NaN に置き換えて、インプレースする	<A> . replace ( <b> , np . nan , inplace = True )	df . replace ( <b> , np . nan , inplace = True )
データフレーム <E> の列名を <d> から <c> に、 <b> から <a> にリネームし、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
先頭の列を位置に指定して、ファイル <a> から読み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
同じグラフ内で <D> <c> とデータフレーム <D> <b> と <D> データフレーム <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> の <b> についての要約統計量を確認する	<A> [ <b> ] . describe ( )	<B> [ <a> ] . describe ( )
<A> の行の名前を <b> から <c> に変更し、インプレースする	<A> . rename ( index = { <b> : <c> } , inplace = True )	<A> . rename ( index = { <b> : <c> } , inplace = True )
<A> 中の未入力の値の合計を見る	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<b> を <c> 区切りで表データとして読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<A> = pd . read_csv ( <b> , sep = <c> )
同じ x 軸と y 軸で表データ <D> の <c> と <D> の <b> と <D> 表データの <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
重複した最後の行を残して <A> ( データフレーム ) 中の重複している行を消す	<A> . drop_duplicates ( keep = False )	df . drop_duplicates ( keep = False )
分割数を <A> として、 <C> 表の <b> コラムを分割して、 <D> とする	<D> = pd . cut ( <C> [ <b> ] , <A> )	<E> = pd . cut ( <D> [ <b> ] , <A> )
凡例を追加する	plt . legend ( )	legend . plt ( )
データフレーム <A> 中の未記入の値を <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . mean ( ) , inplace = True )
表 <A> の未記入の値の合計を確認する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<b> というエクセルファイルのシート名 <a> から読み込む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
エクセル <b> のシート全部を表に格納し、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = None )	to_excel = pd . read_excel ( <b> , sheet_name = None )
表データ <A> にいくつ欠損値があるか確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> の表属性 <b> をインデックス、 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	x <A> . pivot_table ( index = <b> , columns = <c> )
<b> を <a> 区切りでデータフレームとして読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
<A> のコラム <b> ごとにコラム <c> の平均を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> の列 <b> をソートを <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <B> の表属性 <a> の年	<B> [ <a> ] . dt . year	if <B> [ <a> ] . dt . year
重複している行を落とす	df . drop_duplicates ( )	df . drop_duplicates ( )
列 <a> と <b> 列を値が大きい順にし、インプレースする	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<a> df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )
データフレーム <B> 全体を <a> に基づいてソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> ( データフレーム ) の <a> を one - hot 表現に変換する	pd . get_dummies ( <B> [ <a> ] )	sns . pd ( <B> [ <a> ] )
<A> のカラム名を <b> から <c> にリネームして、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	<D> = <A> . rename ( columns = { <b> : <c> } )
表データ <B> の <a> に重複がある行を消す	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
境界値を <D> として、表 <B> の <c> を分割し、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
<a> というエクセル <a> の全てのシートを表に格納し、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	df = pd . read_excel ( <a> , sheet_name = None )
表データ <B> の中の <a> に重複があるか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <A> を位置を元に昇順で並び替え、 <A> とする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<B> と <A> 表データを横にマージする	pd . merge ( <B> , <A> )	pd . merge ( <B> , <A> )
表データ <A> 内の NaN を <B> に置換して、 <A> とする	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
表データ <B> の位置を振り直し、 <A> に代入する	<A> = <B> . reset_index ( )	sort_index = <B> . reset_index ( )
棒グラフの位置を中心に設定して、 <B> と <A> の棒グラフを描く	plt . bar ( <B> , <A> , align = 'center' )	<E> = pd . merge ( <B> , <A> , align = 'center' )
エクセルファイル <a> の <b> を表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表 <A> <b> 表属性と <A> 表属性 <c> と <A> <d> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> のインデックス名を <b> から <a> にリネームし、 <C> とする	<C> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
<B> の <c> とカラム <d> を降順にソートを <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表 <B> を <a> の値でソートを <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表 <A> のそれぞれの列にある <b> の個数の合計値を算出する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<b> 表属性と <a> を値が大きい順にソートする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸のセットで <D> <c> と <D> <b> 表属性と <D> 表データ <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
そのとき、列名いらないことにする	@option encoding = 'shift_jis'	start @option encoding = 'shift_jis'
重複した最後の行を残して <A> ( データフレーム ) 中の重複した行をドロップを <B> とする	<B> = <A> . drop_duplicates ( keep = False )	keep = <A> . drop_duplicates ( keep = False )
表データ <A> のコラム <b> を削除して、 <A> とする	<A> = <A> . drop ( <b> , axis = 1 )	<b> <A> = <A> . drop ( <b> , axis = 1 )
データフレーム <A> 中の重複を調べる	<A> . duplicated ( )	[ <A> . duplicated ( ) ]
データフレーム <C> の <b> 列が <a> より少ないデータ	<C> [ <C> [ <b> ] <  <a> ]	<A> [ <C> [ <b> ] < <a> ]
表 <A> の <b> コラムと <c> とコラム <d> について関係性を一気に描く	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	plt . boxplot ( [ <A> [ <b> , <c> ] , <A> [ <d> ] ] ] ] )
データフレーム <A> 内のカラムに存在する <b> の個数の合計を調べる	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
表データ <A> の表属性 <c> の曜日を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name	<A> [ <b> ] = <A> [ <c> ] . dt . weekday_name
x 軸に軸ラベル <a> を付ける	plt . xlabel ( <a> )	plt . xlabel ( <a> )
データフレーム <A> から <b> という名前のエクセルファイルに変換する	<A> . to_excel ( <b> )	pd . to_excel ( <A> [ <b> ] , sheet_name = False )
<D> の <c> 表属性と表 <D> の <b> と表 <D> の表属性 <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
ビン数を <D> 、ビンの名前をリスト <E> として、表データ <B> の列 <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表 <B> の <a> のバリュー	<B> [ <a> ] . values	values [ <a> ] . values
データフレーム <A> 内の <b> と列 <c> に重複があるかどうかチェック	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> の中の NaN が存在する行を落とし、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
表データ <A> 内に重複はあるかどうか表示してみる	<A> . duplicated ( )	df . duplicated ( )
表データ <A> の <b> の名前を <c> に変更する	<A> . rename ( columns = { <b> : <c> } )	x <A> . rename ( columns = { <b> : <c> } )
表データ <B> 中の <a> を欠損に置換し、欠損が存在する行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
<B> 中の <a> を未入力の値に置換し、未入力の値が存在する行を消して、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> の元のインデックスを振り直して、置き換える	<A> . reset_index ( drop = True , inplace = True )	sns . reset_index ( drop = True , inplace = True )
表データ <A> の表属性 <b> をソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
色を e00RGB 値として、 <A> と <B> の折れ線グラフを描画する	plt . plot ( <A> , <B> , color = ( e00 ) )	pd . merge ( <B> , <A> , color = ( e00 ) )
<a> を項目名として、 <C> 表と <B> 表を一つにまとめて、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
コラム <b> をソートを <A> とする	<A> = df . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <B> のコラム <a> を位置に設定し、再代入する	<B> = <B> . set_index ( <a> )	<B> = <B> . set_index ( <a> )
表 <B> と表 <C> を縦向きに一つにまとめて、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	= pd . concat ( [ <B> , <C> ] )
表を <b> から <a> 区切りで読み込む	pd . read_csv ( <b> , sep = <a> )	<D> [ <b> pd . read_csv ( <a> , sep = <b> ] )
左側のデータのインデックスと右側のデータの <c> 列を項目名として、 <A> データフレームと <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表データ <A> 内の重複要素がある行を取り除き、 <B> にする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の列名を <b> から <c> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	1 = <A> . rename ( columns = { <b> : <c> } )
左側のデータのインデックスと右側のデータの <a> を項目名として 2 つのデータを一つにまとめ、 <B> とする	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
そのとき、マーカーカラーをマゼンタとする	@option markerfacecolor = 'magenta'	@option markerfacecolor = 'magenta'
<a> 列を数値データにする	pd . get_dummies ( df [ <a> ] )	<C> pd . get_dummies ( df [ <a> ] )
表 <A> と <B> を縦方向で結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <B> 内の未入力の値を <A> に置換して、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
エクセル <a> からデータフレームを読み込む	pd . read_excel ( <a> )	to_excel pd . read_excel ( <a> )
コラム <b> と <a> を大きい順にし、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸で表 <A> <b> と <A> <c> と表 <A> 列 <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
文字コードを shift_jis として、 <a> を読み込み、 <B> とする	<B> = pd . read_csv ( <a> , encoding = 'shift_jis' )	pd . read_csv ( <a> , encoding = 'shift_jis' )
データフレームをファイル <b> から読み込んで、 <A> とする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
一番左の列を位置に指定して、 <a> からデータフレームとを読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	markeredgewidth = pd . read_csv ( <a> , index_col = 0 )
表 <C> のカラム <b> と <a> を調べる	<C> [ [ <b> , <a> ] ]	<E> [ [ <b> , <a> ] ]
<A> 中の NaN の数	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
データフレーム <B> の欠損値を削除を <A> にする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <D> の <c> と <D> データフレームの <b> コラムと <D> の <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで表 <A> の <b> と <c> と <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> の <c> カラムの名前を <d> に、カラム <e> の名前を <f> に変更し、 <A> にする	<A> = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )	sns = <B> . rename ( columns = { <c> : <d> , <e> : <f> } )
表 <A> 内の NaN の数	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表 <A> のコラム <b> のユニークな要素数を確認する	<A> [ <b> ] . nunique ( )	pd . qcut ( <A> [ <b> ] , 4 )
一番左の列を位置と設定して、 <a> ファイル名を読む	pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
<a> から表を読んで、 <B> とする	<B> = pd . read_csv ( <a> )	df = pd . read_csv ( <a> )
同じ x 軸と y 軸で表 <D> <c> と <D> 表 <b> コラムと <D> 表 <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> の名前を <c> に、 <d> の名前を <e> に変更し、置き換える	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表データ <B> を <a> コラムの値を元に昇順で並び替え、 <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
ビン数を <C> 、ビンのラベルを <D> として、 <A> 表の表属性 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表 <A> のカラム <b> 、 <c> 、 <d> 、 <e> を抽出する	<A> [ [ <b> , <c> , <d> , <e> ] ]	x <A> [ [ <b> , <c> , <d> , <e> ] ]
同じグラフ内でデータフレーム <D> の <c> 列と <D> の <b> と <D> の <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> と列 <c> を落として、インプレースする	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	sns . drop ( <A> [ <b> , <c> ] , axis = 1 , inplace = True )
表データ <A> の全ての列の重複する値がある行を削除し、 <A> に代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<B> ( データフレーム ) の表属性 <a> を値が小さい順に並び替え、置き換える	<B> . sort_values ( <a> , inplace = True )	df = <B> . sort_values ( <a> )
表 <B> を <a> 列の値に沿ってソートして、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<B> 中にある <a> を欠損値に置き換え、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
表 <B> 全体を <a> に沿ってソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
<A> の中の重複した行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
表 <A> 中の未記入の値が存在する行を削除して、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <A> の <b> を昇順にソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
表 <C> と <B> データフレームに対して、 <a> をキーとしてデータを内部結合する	pd . merge ( <C> , <B> , on = <a> )	'%Y-%m-%d' pd . merge ( <C> , <B> , on = <a> )
<b> というエクセルファイルの <c> から読み込み、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	sns = pd . read_excel ( <b> , sheet_name = <c> )
表を <a> から読み込む	pd . read_csv ( <a> )	df . pd ( <a> )
<A> の <c> 列の曜日の数値型を見、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	[ <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
<B> の最初の <a> 行を表示する	<B> . tail ( <a> )	<B> . head ( <a> )
表データ <A> 内のそれぞれの列にある <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
先頭の列を位置に設定して、 <a> を表に格納する	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
同じ x 軸と y 軸で <A> の <b> コラムと <A> の <c> と表データ <A> のコラム <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> のコラム <a> に重複があるかどうかチェックを調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <B> をカラム <c> に基づいてソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
表データ <D> の <c> と <b> 表属性と <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
もしデータフレーム <A> の <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	duplicated if <A> . duplicated ( subset = <b> ) :
表 <B> を <a> の値を軸にソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
カラム <c> をキーとして、 <A> データフレームと <B> データフレームをマージする	pd . merge ( <A> , <B> , on = <c> )	'%Y-%m-%d' = pd . merge ( <A> , <B> , on = <c> )
列番号 <a> をインデックスに指定して、 <b> を読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <C> の <b> と <a> を降順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	sns = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
左側のデータのインデックスと右側のデータの <d> を項目名として、 <B> と <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
<E> の <d> , <c> , <b> 行目の <a> , <c> 列目を抽出する	<E> . iloc [ [ <d> , <c> , <b> ] , [ <a> , <c> ] ]	<E> . iloc [ [ <d> , <c> ] , <b> ] , [ <a> , <c> ] ]
同じグラフ内で <A> 表データのカラム <b> と <A> の <c> と表データ <A> のカラム <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> の全ての列の重複する値がある行をドロップし、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
同じ軸で表 <D> <c> と <D> 表 <b> と <D> 表 <a> カラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> の <b> カラムのユニーク値	<A> [ <b> ] . unique ( )	<b> <A> [ <c> ] . unique ( )
<B> をエクセルファイル <a> という名前にして保存する	<B> . to_excel ( <a> )	df . to_excel ( <a> )
<B> ( データフレーム ) の <a> を小から大へとソートを <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じ x 軸と y 軸でデータフレーム <A> <b> と <A> <c> コラムとデータフレーム <A> コラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
位置と <a> を項目名として表データ <C> と表データ <B> を結合して、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum <D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <A> の列名を <b> から <c> に、 <d> から <e> に変更して、置き換える	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
同じ x 軸と y 軸でデータフレーム <D> のコラム <c> と <D> の <b> とデータフレーム <D> の <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> という名前のエクセルファイルの <b> 番目のシートをデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	<a> pd . read_excel ( <a> , sheet_name = <b> )
表 <A> 中の未記入の値を数える	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表を CSV ファイル <b> ( ファイル名 ) からカンマ区切りで読み込んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
<A> 中の未記入の値をデータフレーム <A> の平均値で埋めて、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	sns <A> . fillna ( <A> . mean ( ) , inplace = True )
先頭の列を位置として、ファイル名 <a> を表に格納する	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
<B> の表属性 <a> の値を昇順で並び替えて、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <B> 中の NaN を含む行を消して、 <A> に代入する	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
<B> 中の <a> を欠損値に置換し、欠損値が存在する行を消して、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <B> を <a> という名前でエクセル形式で保存する	<B> . to_excel ( <a> )	plt . savefig ( <a> )
そこで、区切り文字は <A> にする	@option sep = <A>	pd . read_csv ( <A> , sep = '\t' )
データフレーム <A> の列 <b> と列 <c> を値が大きい順に並び替え、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	sort_values = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> の <b> ごとに表属性 <c> の数を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <b> ] . count ( )
表データ <B> 中のカラムに存在する <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<a> という名前のエクセルのシート全部をデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	df . pd ( <a> , sheet_name = None )
<A> 中の重複しているデータを抽出する	<A> [ <A> . duplicated ( ) ]	if <A> [ <A> . duplicated ( ) ]
一番左の列を位置に指定して、 <a> をデータフレームとして読み込む	pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
<A> ( データフレーム ) の <b> 表属性を小から大へとソートを <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
ファイルパス <a> を表データとして読んで、 <B> に代入する	<B> = pd . read_csv ( <a> )	= pd . read_csv ( <a> )
描画するグラフのサイズを横幅 <b> 高さ <a> と指定する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
<A> ( データフレーム ) の <b> を昇順に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
データフレーム <A> 内にある <b> を NaN とし、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	<A> . replace ( <b> , np . nan , inplace = True )
表データ <B> を <a> に基づいてソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<C> . sort_values ( <a> , inplace = True )
<B> 内の <a> に重複がある行をドロップを <C> にする	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
表データ <A> 中の未記入の値の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <A> の <b> を削除	<A> . drop ( <b> , axis = 1 )	1 . drop ( <b> , axis = 1 )
表データ <A> の元のインデックスをリセットして、再代入する	<A> = <A> . reset_index ( drop = True )	<B> = <A> . reset_index ( drop = True )
<b> を <a> 区切りでデータフレームとして読み込んで、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
<a> というエクセルデータの <b> シート名を表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<a> に重複はあるかどうか表示する	df . duplicated ( subset = <a> )	pd . duplicated ( subset = <a> )
描画するグラフの枠の大きさを横幅 <b> 高さ <a> に指定する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
凡例をグラフに被らない位置に付ける	plt . legend ( loc = 'best' )	legend . legend ( loc = 'best' )
表データ <B> 内の未入力の値を <A> に置き換え、置き換える	<B> . fillna ( <A> , inplace = True )	fillna <B> = <B> . fillna )
同じ軸のセットで <A> の <b> と表データ <A> の <c> カラムと表データ <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> と <a> を降順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
さらに、 <A> にパーセントを指定し、小数点 2 位まで出力することを指定することとする	@option <A> = '%.2f%%'	@option <A> = '%.2f%%'
全結合で <A> と <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	to_excel pd . merge ( <A> , <B> , how = 'outer' )
<D> の <c> コラムと <D> のコラム <b> とデータフレーム <D> の <a> コラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
同じ x 軸と y 軸で <D> <c> とデータフレーム <D> <b> コラムとデータフレーム <D> コラム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
左側のデータの位置と右側のデータのコラム <c> をキーとして、 <A> 表データと <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表データ <A> の <b> のユニークな要素	<A> [ <b> ] . unique ( )	<B> [ <a> ] . unique ( )
ラベル名を <c> として、 <A> と <B> のグラフをプロットする	plt . plot ( <A> , <B> , label = <c> )	pd . merge ( <A> , <B> , label = <c> )
ラベルは <a> として、 <C> と <B> をグラフでプロットする	plt . plot ( <C> , <B> , label = <a> )	sns = pd . merge ( <C> , <B> , label = <a> )
<A> の重複している行を削除し、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ軸のセットで <A> データフレーム <b> と <A> <c> とデータフレーム <A> カラム <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> を表データとしてカンマ区切りで読む	pd . read_csv ( <a> , sep = ',' )	sep = <a> pd . read_csv ( <a> , sep = ',' )
データフレーム <C> の <b> ごとに <a> カラムの平均値	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
データフレーム <B> 内のそれぞれのカラムに存在する <a> の個数の合計値を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の <b> コラムと <A> 表の <c> と表 <A> のコラム <d> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
先頭の列をインデックスと設定して、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
<B> の <c> の値を軸に昇順でソートを <A> とする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
コラム <b> と <a> を逆順にソート	df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <C> の <b> カラムとカラム <a> を逆順にソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の <b> ごとに <c> コラムの平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> 中の重複する行をドロップし、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
表 <A> のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
同じ x 軸と y 軸で <D> の <c> カラムと <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> の <a> をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	markeredgewidth . groupby ( <a> ) . size ( )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) から表を読み、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
表データ <B> 全体を <a> カラムの値で並び替え、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表データ <A> <b> カラムと表 <A> <c> と表 <A> カラム <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
そこで、グラフは赤色で表示する	@option color = 'red'	@option color = 'red'
<A> 中で重複する行数の合計を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> 全体を位置を元に並び替えて、置き換える	<A> = <A> . sort_index ( )	df . sort_index ( inplace = True )
同じ軸で <A> の <b> とデータフレーム <A> の <c> とデータフレーム <A> の <d> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> 中のコラム <a> に重複があるか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
エクセルデータ <a> を表データにする	pd . read_excel ( <a> )	pd . read_excel ( <a> )
表 <A> の行名を <b> から <c> に変更して、 <A> とする	<A> = <A> . rename ( index = { <b> : <c> } )	df = <A> . rename ( index = { <b> : <c> } )
表データ <A> の <b> ごとにカラム <c> の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<B> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表 <A> の表属性 <b> を昇順にソートし、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
同じグラフ内で <D> 表データの <c> と表データ <D> の <b> と <D> 表データの <a> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> 内の <a> に重複があるのかどうかを見る	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
同じ軸で <A> の <b> と <A> の <c> と <A> 表データの列 <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> とデータフレーム <B> を縦にマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> のコラム <b> の名前を <c> に、 <d> コラムの名前を <e> にリネームして、インプレースする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<A> 全体を <b> カラムに沿ってソートして、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <A> 全体を位置でソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<B> と表 <C> を縦結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
境界値を <A> として、表データ <C> の <b> を分割し、 <D> に代入する	<D> = pd . cut ( <C> [ <b> ] , <A> )	<E> = pd . cut ( <D> [ <b> ] , <A> )
データフレーム <A> <b> カラムと <A> 表 <c> と表 <A> カラム <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の <b> と <A> データフレームの <c> と <A> データフレームの <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> 全体を位置を軸にソートして、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<D> の <c> と表属性 <b> ごとに <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	groupby . groupby ( [ <b> , <a> ] ) [ <a> ] . sum ( )
<B> 全体をインデックスを軸にソートし、 <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
同じ x 軸と y 軸で <A> <b> と <A> カラム <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
左側のデータのインデックスと右側のデータの <a> をキーとして、 <C> と <B> データフレームを結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sns . pd ( <C> , <B> , left_index = True , right_on = <a> )
<B> の <a> を削除して、 <C> に代入する	<C> = <B> . drop ( <a> , axis = 1 )	<A> = <B> . drop ( <a> , axis = 1 )
<B> を <c> を元に昇順でソートを <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
同じ軸で <A> データフレーム <b> と <A> データフレーム <c> 表属性と <A> データフレーム <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸で表データ <D> の表属性 <c> と <D> の <b> 表属性と <D> 表データの表属性 <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> 中の欠損がある行を削除を <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
同じグラフ内で <A> 表データ <b> と表データ <A> <c> と <A> 表データ <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> の <a> コラムの年	<B> [ <a> ] . dt . year	if <B> [ <a> ] . dt . year
表 <D> の <c> 表属性と <D> 表の <b> と <D> 表の表属性 <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <b> の秒	<A> [ <b> ] . dt . second	second [ <b> ] . dt . second
データフレーム <A> 内の未記入の値を <B> に置換して、置き換える	<A> . fillna ( <B> , inplace = True )	<B> = <A> . fillna ( <B> )
<A> のカラム <b> が <c> 以下データ	<A> [ <A> [ <b> ] <= <c> ]	pd [ <A> [ <b> ] <= <c> ]
列番号 <a> を位置として、ファイル名 <b> を読み込む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
インデックスと <d> を項目名としてデータフレーム <B> と <C> を一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	sns = pd . merge ( <A> , <B> , <C> , left_index = True , right_on = <d> )
<a> をキーとしてデータを内部結合する	pd . merge ( df1 , df2 , on = <a> )	<D> pd . merge ( df1 , df2 , on = <a> )
データフレーム <A> の表属性 <c> の月を確認して、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . month	[ <A> [ <b> ] = <A> [ <c> ] . dt . month
データフレーム <A> の <b> とコラム <c> ごとに <d> の値の和を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
表 <A> の <b> を未入力の値に置換し、未入力の値が存在する行をドロップし、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <b> , np . nan ) . dropna ( inplace = True )
描画するグラフのサイズを横 <a> 縦 <b> にセットする	plt . figure ( figsize = ( <a> , <b> ) )	figure plt . figure ( figsize = ( <a> , <b> ) )
表 <A> 内の欠損を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	<B> = <A> . fillna ( <B> )
表 <A> の <b> コラムと <c> ごとに <d> の値の和を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	<b> <A> . groupby ( [ <c> , <d> ] ) [ <d> ] . sum ( )
<A> の元の位置をリセットして、置き換える	<A> = <A> . reset_index ( drop = True )	sns . reset_index ( drop = True , inplace = True )
<a> をデータフレームとしてカンマ区切りで読む	pd . read_csv ( <a> , sep = ',' )	sep = <a> pd . read_csv ( <a> , sep = ',' )
<A> の NaN を <B> に置き換え、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
表 <B> 中の <c> に重複がある行を削除を <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	= <B> . drop_duplicates ( subset = <c> )
データフレーム <A> 内の欠損値を消し、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
軸を <B> として、 <A> の縦向きの棒グラフを描写する	plt . bar ( <B> , <A> )	plt . bar ( <B> , <A> )
同じグラフ内で <D> の列 <c> と <D> の <b> と <D> データフレームの <a> 列を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> 中の <b> カラムに重複がある行を削除し、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
そこで、グラフの色をシアンとする	@option color = 'cyan'	color = pd . color ( 'cyan' , 'cyan' ) )
表データ <A> 内の欠損を <B> に置換し、置き換える	<A> . fillna ( <B> , inplace = True )	df = <A> . fillna ( <B> )
表 <A> の <b> コラムと <c> を消す	<A> . drop ( [ <b> , <c> ] , axis = 1 )	sns . drop ( [ <A> , <b> ] , axis = 1 )
エクセルファイル <b> の <a> 番目のシートをデータフレームに格納する	pd . read_excel ( <b> , sheet_name = <a> )	sheet_name . pd ( <b> , <a> )
左外部結合で <B> 表データと <C> を結合して、 <A> に代入する	<A> = pd . merge ( <B> , <C> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
表 <B> 全体をインデックスを元にソートを <A> にする	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
左外部結合で表データ <A> と表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , how = 'left' )	} = pd . merge ( <A> , <B> , how = 'left' )
表 <A> のコラム <b> の日にちを見る	<A> [ <b> ] . dt . day	<A> [ <b> ] . dt . day
データフレーム <C> 中の <b> と列 <a> に重複があるのかどうかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	<E> . duplicated ( subset = [ <b> , <a> ] )
<D> の <c> 表属性と <D> 表の <b> と <D> 表の <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表 <B> の <a> を並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <B> と <A> 表を縦向きに一つにまとめ、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	= pd . concat ( [ <B> , <A> ] )
表データ <A> の元の位置を振り直す	<A> . reset_index ( drop = True )	sns . reset_index ( drop = True )
<A> の <b> と <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 内の未入力の値を <A> に置換し、 <B> にする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
同じグラフ内で表 <D> の列 <c> と <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <B> を <a> を元に並び替え、 <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
エクセルファイル <a> の <b> を読み込む	pd . read_excel ( <a> , sheet_name = <b> )	read_excel <a> pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <B> の表属性 <a> のデータの種類	<B> [ <a> ] . unique ( )	markeredgewidth <a> ] . unique ( )
<D> の <a> について、 <c> をインデックス、列 <b> を列としたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	figsize = <D> . pivot_table ( index = <a> , columns = <b> , values = <c> )
そこで、マーカーの種類を星とする	@option marker = '*'	@option marker = '*'
同じグラフ内で <A> 表列 <b> と表 <A> <c> と <A> <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
さらに、文字コードは <A> とする	@option encoding = <A>	@option encoding = <A>
表データ <A> の <b> と <A> データフレームの <c> 列と <A> の列 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <D> の表属性 <c> と <b> と表属性 <a> について関係性を一度にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	pairplot sns . pairplot ( <D> [ <c> , <b> , <a> ] ] )
表 <A> をファイル <b> という名前にして書き出す	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
エクセルファイル <a> の全てのシートを読んで、 <B> にする	<B> = pd . read_excel ( <a> , sheet_name = None )	<B> = pd . read_excel ( <a> , sheet_name = None )
<b> 列と <a> に重複があるのかどうか調べる	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
表 <A> の <b> とデータフレーム <A> の <c> と <A> の表属性 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸のセットで <A> の <b> と <A> の <c> と表データ <A> の <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<b> を値が小さい順にし、 <A> に代入する	<A> = df . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <C> の <b> と <a> をドロップして、置き換える	<C> . drop ( [ <b> , <a> ] , axis = 1 , inplace = True )	1 = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表データ <B> を <a> に書き込む	<B> . to_csv ( <a> )	df . to_csv ( <a> )
<b> というエクセルファイルの全部のシートから読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	sns = pd . read_excel ( <b> , sheet_name = None )
表データ <B> と表データ <C> に対して、カラム <d> をキーとしてデータを内部結合して、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	<A> = pd . merge ( <B> , <C> , on = <d> )
同じグラフ内で <A> の <b> と <A> 表の <c> 列と <A> の <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
位置と <a> を項目名として <C> データフレームと <B> データフレームを結合し、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
同じ軸で <A> の <b> コラムと <c> と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> と <A> データフレームを横に一つにまとめて、 <C> とする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
<b> と <a> を降順に並び替え、 <C> にする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> 内の <a> を NaN に置換し、 NaN が存在する行をドロップして、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 中の欠損値を含む行を消し、 <B> に代入する	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
<B> の重複している行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
表 <C> の <a> コラムの月を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
データフレーム <B> の <c> をインデックスとし、 <A> に代入する	<A> = <B> . set_index ( <c> )	<A> = <B> . set_index ( <c> )
カンマ区切りで表データとして CSV ファイル <a> ( ファイル名 ) を読む	pd . read_csv ( <a> , sep = ',' )	sep = pd . read_csv ( <a> , sep = ',' )
データフレーム <C> の <b> カラムとカラム <a> を逆順にソートを <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	sns = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
ヒストグラムに表示する棒の数は <a> として、 <B> でグラフを表示する	plt . hist ( <B> , bins = <a> )	plt . hist ( <B> , bins = <a> )
表データを <b> からカンマ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	sns = pd . read_csv ( <b> , sep = ',' )
<a> 表属性と <b> に重複があるかどうか確認する	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
同じ軸で <D> <c> と表 <D> <b> カラムと <D> 表 <a> カラムを箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで表データ <A> 表属性 <b> と <A> <c> と <A> <d> 表属性を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> と列 <b> に重複が存在するのかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
表 <C> の <b> 列と列 <a> を大から小へと並び替えて、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	sns = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 中に存在する <b> を欠損値に置き換える	<A> . replace ( <b> , np . nan )	sns . replace ( <b> , np . nan )
<C> ( データフレーム ) の <b> 列と列 <a> を逆順にソートして、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表示するグラフ枠のサイズを横幅 <a> 高さ <b> に設定する	plt . figure ( figsize = ( <a> , <b> ) )	figure = plt . figure ( figsize = ( <a> , <b> ) )
表データ <A> 内の未入力の値を直前の行の値で埋めて、 <B> にする	<B> = <A> . fillna ( method = 'ffill' )	fillna = <A> . fillna ( method = 'ffill' )
表データ <A> の <b> コラムを位置に設定して、置き換える	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
表データ <B> 内の <a> カラムに重複がある行をドロップを <B> に代入する	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
<B> の <a> コラムを軸に並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
色を e00RGB 値として、 <B> と <A> のグラフをプロットする	plt . plot ( <B> , <A> , color = ( e00 ) )	pd . merge ( <B> , <A> , color = ( e00 ) )
<b> に重複がある行をドロップを <A> とする	<A> = df . drop_duplicates ( subset = <b> )	= df . drop_duplicates ( subset = <b> )
表データ <B> のカラム <a> の日にちを見る	<B> [ <a> ] . dt . day	<B> [ <a> ] . dt . day
データフレーム <B> の <a> を NaN に置換し、 NaN が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
同じ x 軸と y 軸で <D> 表の <c> と <b> と <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> と表 <B> を縦向きにくっつける	pd . concat ( [ <A> , <B> ] )	plt . pd ( <A> , <B> )
表 <C> の <b> と <a> 表属性を値が大きい順に並び替えて、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸のセットで <A> の <b> と <A> のコラム <c> と表データ <A> の <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表として CSV ファイル <b> ( ファイル名 ) をカンマ区切りで読んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = ',' )	<b> <A> = pd . read_csv ( <b> , sep = ',' )
列番号 <a> を位置と設定して、ファイル名 <b> を読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<D> のカラム <c> と <b> と <a> カラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <D> の <a> について、 <c> をインデックス、 <b> 列を列としたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
データフレーム <A> 中の重複している行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> の <b> と <c> カラムと <d> カラムについて関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
ヒストグラムで <A> 表データの <b> を表す	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
一番左の列を位置として、 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
同じグラフ内で表データ <A> の <b> と <A> の表属性 <c> と <A> 表データの表属性 <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<D> <c> と <D> データフレーム <b> 表属性と <D> <a> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> <b> と表データ <A> <c> と <A> 表データ <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸のセットでデータフレーム <A> <b> とデータフレーム <A> <c> と <A> 列 <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
エクセルファイル <a> を表にし、 <B> とする	<B> = pd . read_excel ( <a> )	markeredgewidth = <a> )
<a> ラベルを x 軸に付ける	plt . xlabel ( <a> )	show . xlabel ( <a> )
データフレーム <A> の <b> と <c> と列 <d> について関係性を一気に表示する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表 <B> を <a> に沿ってソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <B> の <c> カラムとカラム <d> を大から小へと並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
<C> のカラム名を <b> から <a> にリネームして、置き換える	<C> . rename ( columns = { <b> : <a> } , inplace = True )	<D> = <C> . rename ( columns = { <b> : <a> } )
<A> 軸を <A> とした <B> の棒グラフを描画する	plt . bar ( <A> , <B> )	pd . merge ( <A> , <B> )
データフレーム <E> の列名を <d> から <c> に、 <b> から <a> に変更して、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	sum <E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<A> <b> と <A> データフレーム <c> カラムと <A> <d> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> の <b> 行から <a> 行まで	<C> [ <b> : <a> ]	<A> [ <b> : <a> ]
<C> の <b> と表属性 <a> を値が大きい順に並び替えて、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
エクセルファイル <b> の <a> 番目のシートからデータフレームを読み込み、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<b> <C> = pd . read_excel ( <b> , sheet_name = <a> )
列番号 <a> を位置として、 <b> を読み込む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <B> と <A> を縦方向でマージする	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
同じ軸のセットで <A> の <b> コラムとデータフレーム <A> の <c> とデータフレーム <A> の <d> コラムを箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> を <b> という名前で保存する	<A> . to_csv ( <b> )	plt . savefig ( <b> )
表 <A> 中の未入力の値の合計を求める	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表データ <B> の <a> 表属性を位置として設定し、再代入する	<B> = <B> . set_index ( <a> )	df = <B> . set_index ( <a> )
表として <b> を <a> 区切りで読み、 <C> とする	<C> = pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
データフレーム <B> のカラム <a> についてのヒストグラムを描写する	plt . hist ( <B> [ <a> ] )	bins plt . hist ( <B> [ <a> ] )
データフレーム <B> とデータフレーム <C> を縦方向で結合して、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	] = pd . concat ( [ <B> , <C> ] )
エクセルの <b> を読み込んで、 <A> とする	<A> = pd . read_excel ( <b> )	<b> = pd . read_excel ( <A> )
<A> の末尾 5 行を調べる	<A> . tail ( )	tail <A> . tail ( )
表データ <B> 中の <a> 列に重複がある行をドロップ	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
表データ <C> の <a> の分を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . minute	<D> [ <b> ] = <C> [ <a> ] . dt . minute
表 <A> の未入力の値がある行をドロップして、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
表データ <A> 内の列にある <b> の個数を求める	<A> . isin ( [ <b> ] ) . sum ( )	<b> <A> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 全体をインデックスでソートを <B> にする	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
<A> の重複している行を落として、 <A> にする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表データ <A> 内の表属性 <b> に重複があるか	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<A> 内の重複している行を落として、 <B> にする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <B> 内の欠損を <C> に置換し、 <A> に代入する	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
データフレーム <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行を消し、置き換える	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> の <b> カラムの時間	<A> [ <b> ] . dt . hour	<A> [ <b> ] . dt . hour
重複した最後の行を残して <B> ( データフレーム ) 中の重複している行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( keep = False )	<A> = <B> . drop_duplicates ( keep = False )
表データ <B> を <a> の値に沿ってソートし、置き換える	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <A> と表 <B> を横にくっつける	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表データ <A> 中の未入力の値を直前の行の値で補って、再代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <A> の未入力の値を <A> 表の平均値で埋め、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	sns <A> . fillna ( <A> . mean ( ) , inplace = True )
左側のデータのインデックスと右側のデータの <d> 表属性を項目名として、 <B> と <C> データフレームを一つにまとめ、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	pd . merge ( <A> , <B> , left_index = True , right_on = <d> )
<a> 表属性を項目名として、表データ <C> と <B> を結合する	pd . merge ( <C> , <B> , on = <a> )	<D> pd . merge ( <C> , <B> , on = <a> )
表データ <B> の <a> を NaN に置換し、 NaN が存在する行を削除し、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <A> 中に存在する <b> を未記入の値とし、再代入する	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
<D> の <a> について、 <c> を位置、 <b> をコラムとしたピボットテーブルを作成し、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<D> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
一番左の列をインデックスとして、 <a> ファイルから読み込んで、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	markeredgewidth = pd . read_csv ( <a> , index_col = 0 )
データフレーム <A> 中の重複要素がある行を削除する	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
重複する最後の行を残して <A> ( データフレーム ) 中の重複する行を削除する	<A> . drop_duplicates ( keep = False )	sns . drop_duplicates ( keep = False )
データフレーム <E> のカラム名を <d> から <c> に、 <b> から <a> に変更して、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
左側のデータの位置と右側のデータの <a> をキーとして、 <C> データフレームと <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> 内にある <a> を未入力の値に置換し、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
表 <B> 内のそれぞれのカラムにある <a> の個数の合計を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <C> の <b> インデックスの名前を <a> に変更して、 <D> とする	<D> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
<A> の先頭から <b> 行目まで	<A> [ : <b> ]	: <A> [ <b> : ]
<A> 内の欠損値が存在する行を削除する	<A> . dropna ( )	@option dropna ( )
表 <A> をインデックスで並び替える	<A> . sort_index ( )	sort_index . sort_index ( )
表データ <A> を位置で並び替え、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> <b> と <A> 表データ <c> と <A> <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <C> の <b> と <a> に重複があるかどうか見る	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<B> の <a> の値を並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の <b> カラムと <c> を値が大きい順にソートして、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
表データ <C> の列の名前を <b> から <a> にリネームして、 <C> とする	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
エクセルファイル <a> の <b> 番目のシートを指定して読み込む	pd . read_excel ( <a> , sheet_name = <b> )	<a> pd . read_excel ( <a> , sheet_name = <b> )
表データ <A> 表属性 <b> と表 <A> <c> と <A> 表 <d> 表属性の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 全体を <b> の値を元にソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<A> 中の重複している行を落として、 <B> にする	<B> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
データフレーム <B> 全体を <c> の値を軸に並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<b> と <a> 表属性を逆順に並び替える	df . sort_values ( [ <b> , <a> ] , ascending = False )	pd . sort_values ( [ <b> , <a> ] , ascending = False )
表 <D> のコラム <c> と <b> とコラム <a> について関係性を一度に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	@option sns . pairplot ( <D> [ <c> , <b> , <a> ] ] )
列番号 <c> を位置として、 <b> ファイルを表に格納して、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
同じ x 軸と y 軸で <A> データフレームの <b> とデータフレーム <A> の <c> とデータフレーム <A> の <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 中に存在する <a> を欠損値に置き換えて、置き換える	<B> = <B> . replace ( <a> , np . nan )	<B> = <B> . replace ( <a> , np . nan )
表 <A> の NaN を <B> で埋めて、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
データフレーム <B> の列 <a> を datetime 型に変換する	pd . to_datetime ( <B> [ <a> ] )	sns . pd ( <B> [ <a> ] )
表データ <C> 中の <b> と <a> コラムに重複はあるか確認を確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
同じ軸のセットで <D> 表の <c> と <D> 表の <b> と <D> の <a> コラムを箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで表データ <A> <b> コラムと <A> 表データ <c> と <A> 表データ <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の重複している行を削除し、 <A> にする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> 全体を <b> 表属性に沿ってソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> = <A> . sort_values ( <b> )
位置と <d> をキーとしてデータフレーム <B> と <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	] = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
同じグラフ内で <D> 表データ <c> と <D> 表属性 <b> と <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 内の未入力の値を <B> に置換する	<A> . fillna ( <B> )	sns . fillna ( <B> )
コラム <c> を項目名として、表データ <A> と表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	<D> = pd . merge ( <A> , <B> , on = <c> )
<b> と <a> 列を値が大きい順に並び替えて、置き換える	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の <b> が <c> 以上のデータ	<A> [ <A> [ <b> ] >= <c> ]	<A> [ <A> [ <b> ] >= <c> ]
<B> の <a> 表属性を位置とし、 <B> とする	<B> = <B> . set_index ( <a> )	df = <B> . set_index ( <a> )
表 <A> の <b> コラムと <A> 表の <c> コラムと <A> 表のコラム <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> ( データフレーム ) のカラム <b> を小さい順に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
列番号 <a> を位置に設定して、 <b> から読み込み、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<b> <C> = pd . read_csv ( <b> , index_col = <a> )
表データ <A> 内の NaN が存在する行を消して、 <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
位置と <a> をキーとしてデータフレーム <C> と <B> をマージして、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	markeredgewidth = <a> )
表 <B> の <c> と <d> を降順にソートを <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
データフレーム <A> 中の重複している行を落とす	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表 <A> 内の欠損値を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	fillna . fillna ( method = 'ffill' )
<A> 全体を <b> の値を元にソートし、再代入する	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
エクセルファイル <b> をデータフレームとして読んで、 <A> にする	<A> = pd . read_excel ( <b> )	to_excel = pd . read_excel ( <b> )
表データ <B> の <a> についての最頻値を取得する	<B> [ <a> ] . mode ( )	<B> [ <a> ] . mode ( )
表データ <A> のインデックス <b> の名前を <c> にリネームする	<A> . rename ( index = { <b> : <c> } )	x <A> . rename ( index = { <b> : <c> } )
表 <A> の <b> カラムを昇順にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
表データ <C> の <b> の名前を <a> に変更し、再代入する	<C> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
<B> の NaN を <C> に置換して、 <A> にする	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
全結合で <B> と表データ <A> をマージする	pd . merge ( <B> , <A> , how = 'outer' )	'outer' pd . merge ( <B> , <A> , how = 'outer' )
データフレーム <B> の <a> 行から最後まで	<B> [ <a> : ]	<B> [ <a> : ]
<C> の行名を <b> から <a> に変更して、置き換える	<C> . rename ( index = { <b> : <a> } , inplace = True )	df = <C> . rename ( index = { <b> : <a> } )
<A> を位置を軸にソートを <A> にする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
<a> を表データに格納し、 <B> にする	<B> = pd . read_csv ( <a> )	df = pd . read_csv ( <a> )
<b> という名前のエクセルファイルのシート名 <a> をデータフレームとして読み込む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <B> を <a> という名前でエクセルファイルにして保存する	<B> . to_excel ( <a> )	plt . savefig ( <a> )
<A> の表属性 <b> ごとに <c> 表属性の個数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <b> ] . count ( )
データフレーム <B> 中の <a> に重複があるか確認	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <A> の <b> 列についての標準偏差	<A> [ <b> ] . std ( )	<B> [ <b> ] . std ( )
同じ x 軸と y 軸で <D> 表データのコラム <c> と <b> コラムと <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
棒グラフのラベル名を <A> から <b> 、 <c> 、 <d> に変える	plt . xticks ( <A> , [ <b> , <c> , <d> ] )	align = pd . read_csv ( <b> , [ <c> , <d> ] )
表データ <B> をファイル名 <a> に書き出す	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<a> という名前のエクセルファイルのシート名 <b> をデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	to_excel pd . read_excel ( <a> , sheet_name = <b> )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行を削除し、再代入する	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
ラベルを <c> と名づけて、 <A> と <B> をグラフでプロットする	plt . plot ( <A> , <B> , label = <c> )	sns = pd . merge ( <A> , <B> , label = <c> )
位置と <a> を項目名として表データ <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sns pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
そこで、ヘッダーを指定しないことにする	@option encoding = 'shift_jis'	sns = pd . read_csv ( <b> , encoding = 'shift_jis' )
表 <B> の <a> カラムを昇順にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> 内にある <a> を NaN に置き換えて、 <B> とする	<B> = <B> . replace ( <a> , np . nan )	fillna <B> = <B> . replace ( <a> , np . nan )
表データ <B> 中のそれぞれの列にある <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表 <A> の中の未記入の値が存在する行を削除し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
そこで、グラフの打点の形を四角とする	@option marker = 's'	@option marker = 's'
表示するグラフの枠の大きさを横幅 <b> 高さ <a> と指定する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
<A> の中の欠損が存在する行をドロップし、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> の欠損を <B> に置き換えて、 <A> に代入する	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
<B> の欠損をドロップを <A> とする	<A> = <B> . dropna ( )	sns = <B> . dropna ( )
データフレーム <A> のカラムにある <b> の個数の合計を算出する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
エクセルファイル <b> の <c> 番目のシートを指定して読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<b> <A> = pd . read_excel ( <b> , sheet_name = <c> )
データフレーム <A> の列 <b> と <c> に重複は存在するのか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<c> をキーとして、 <A> データフレームと <B> データフレームを結合する	pd . merge ( <A> , <B> , on = <c> )	<D> pd . merge ( <A> , <B> , on = <c> )
<a> という列を消し、インプレースする	df . drop ( <a> , axis = 1 , inplace = True )	pd . read_csv ( <a> , axis = 1 , inplace = True )
同じ軸で <A> カラム <b> と <A> カラム <c> と <A> カラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の列名を <b> から <c> に、 <d> から <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> . rename ( columns = { <d> : <c> , <b> : <e> } )
もし表 <A> の表属性 <b> と <c> に重複があるならば	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	plt . duplicated ( subset = [ <b> , <c> ] ) :
<B> と <A> の散布図のグラフを描画する	plt . scatter ( <B> , <A> )	pd . scatter ( <B> , <A> )
<A> の NaN をドロップして、 <B> にする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表 <B> 内の未記入の値を <A> に置き換える	<B> . fillna ( <A> )	pd . fillna ( <B> , <A> )
<B> を <a> を軸に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
先頭の列をインデックスに設定して、ファイル名 <a> を表データに格納し、 <B> に代入する	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
境界値をリスト <D> として、表データ <B> の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
インデックスと <a> を項目名として <C> 表データと <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<B> と <A> を縦向きにマージする	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
フォーマットを指定して、表データ <B> の <a> 列を年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	sns . pd ( <B> [ <a> ] , format = '%Y-%m-%d' )
表示するグラフの枠の大きさを横 <b> 縦 <a> に変更する	plt . figure ( figsize = ( <b> , <a> ) )	<F> = plt . figure ( figsize = ( <b> , <a> ) )
同じ x 軸と y 軸で <A> 表の <b> と <A> 表の <c> と <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の行の名前を <B> に代入する	<B> = <A> . index	index <B> = <A> . index
分割数を <D> 、ビンの名前を <E> として、 <B> データフレームの <c> をビン分割し、 <A> にする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	] = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表データ <A> 内 ] [ で重複している行数の合計を見る	<A> . duplicated ( ) . sum ( )	sns . duplicated ( ) . sum ( )
表データ <D> のカラム <c> 、 <b> 、 <a>	<D> [ [ <c> , <b> , <a> ] ]	[ <D> [ [ <c> , <b> , <a> ] ] ]
<b> を <a> 区切りで表として読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <a> , sep = <b> )
表 <A> 内の <b> に重複はあるのか確認する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表 <A> 中の重複要素がある行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	<C> . drop_duplicates ( inplace = True )
同じ軸のセットでデータフレーム <A> の <b> と <c> と <d> コラムを箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> と表属性 <c> をドロップする	<A> . drop ( [ <b> , <c> ] , axis = 1 )	1 . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> の <b> を並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
表 <A> をカラム <b> に基づいてソートして、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
分割数を <B> 、ビンのラベルを <A> として、 <D> 表の <c> 表属性を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	pd . cut ( <D> [ <c> ] , <B> , label = <A> )
同じ軸で <D> の <c> 表属性と表データ <D> の <b> 表属性と表データ <D> の表属性 <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <D> の <c> と <b> と列 <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> を <a> コラムの値を軸に並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
エクセルデータ <b> を読み込んでデータフレームにして、 <A> とする	<A> = pd . read_excel ( <b> )	df = pd . read_excel ( <b> )
さらに、星型五角形のマーカーを表示することとする	@option marker = '*'	@option marker = '*'
表 <A> のカラム <b> をインデックスとして設定する	<A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
表 <A> の <b> コラムの要素を調べる	<A> [ <b> ] . values	<A> [ <b> ] . values
<B> と <A> データフレームを縦にくっつける	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<B> 中の <a> を未記入の値に置換し、未記入の値が存在する行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	plt . dropna ( <a> , <B> , np . nan ) . dropna ( )
データフレーム <B> の中の <a> を NaN に置換し、 NaN が存在する行を落として、 <C> に代入する	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<a> を小から大へとし、 <B> とする	<B> = df . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<a> という名前のエクセルファイルの <b> シート名から読み込む	pd . read_excel ( <a> , sheet_name = <b> )	markeredgewidth = <a> pd . read_excel ( <a> , sheet_name = <b> )
表 <A> 中のカラム <b> に重複があるのか確認を確認する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<D> のコラム <a> について、 <c> を位置、 <b> コラムをコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
表データ <A> の中の未記入の値がある行をドロップする	<A> . dropna ( )	dropna . dropna ( )
<a> というエクセルデータの <b> 番目のシートから読み込む	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name . pd ( <a> , sheet_name = <b> )
表データ <A> の全ての列で重複している行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <B> の最初の <a> 行を調べる	<B> . tail ( <a> )	markeredgewidth . head ( <a> )
一番左の列をインデックスに指定して、 <b> をデータフレームとして読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
表データ <A> のカラム <b> と <c> を値が大きい順に並び替えて、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <C> の <a> の曜日を表示して、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	<D> [ <b> ] = <C> [ <a> ] . dt . weekday_name
データフレーム <A> から重複している値がある行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
さらに、マーカーの色を黄緑とする	@option markerfacecolor = 'greenyellow'	@option markerfacecolor = 'greenyellow'
色を RGB 値 <C> として、 <A> と <B> のグラフを描画する	plt . plot ( <A> , <B> , color = ( <C> ) )	plt . plot ( <A> , <B> , color = ( <C> ) ) )
表データ <D> <c> カラムと表 <D> <b> と表 <D> カラム <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで表データ <A> <b> カラムと <A> <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の未入力の値の合計を調べる	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
列 <b> についてダミー変数をつくり、 <A> にする	<A> = pd . get_dummies ( <A> [ <b> ] )	@option pd . get_dummies ( <A> [ <b> ] )
左側のデータのインデックスと右側のデータの表属性 <a> を項目名として、データフレーム <C> と <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> を <a> を元に並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
データフレーム <A> 中の重複している行をドロップして、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<A> の重複をチェックを見る	<A> . duplicated ( )	duplicated . duplicated ( )
<A> の列 <b> の値を軸にソートし、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表データ <A> の <b> に重複があるかどうか調べる	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
カラム <a> と <b> に重複はあるのかどうかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	<D> . duplicated ( subset = [ <a> , <b> ] )
<C> の行の名前を <b> から <a> にリネームし、 <D> に代入する	<D> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
<A> の重複した行の数を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
位置と表属性 <a> をキーとして <C> と <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
同じ軸のセットで <D> 表属性 <c> と表データ <D> 表属性 <b> と <D> 表データ <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> 中の <a> を欠損に置換し、欠損がある行を落として、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <D> の表属性 <a> について、 <c> を位置、 <b> を表属性としたピボットテーブルを作成して、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <A> の <b> カラムとカラム <c> に重複があるのか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<B> と <A> 表データを縦方向に結合する	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
同じグラフ内で <D> データフレームの <c> とデータフレーム <D> の <b> と <D> の <a> 列を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<D> コラム <c> と <D> 表データ <b> と <D> <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
分割数を <A> 、ビンのラベルを 0 始まりの連番として、データフレーム <C> の <b> を分割し、 <D> にする	<D> = pd . cut ( <C> [ <b> ] , <A> , label = False )	] = pd . cut ( <D> [ <b> ] , <A> , label = False )
表 <B> の <e> について、 <c> を位置、表属性 <d> を表属性としたピボットテーブルを作成して、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	] <A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
表データ <B> 中の <a> 表属性に重複がある行をドロップを <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	<A> = <B> . drop_duplicates ( subset = <a> )
グラフにグリッドを描く	plt . grid ( True )	sns . grid ( True )
表 <C> の <a> の年を表示して、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . year	<D> [ <b> ] = <C> [ <a> ] . dt . year
データフレーム <A> 内のコラム <b> に重複が存在するのか表示してみる	<A> . duplicated ( subset = <b> )	<b> <A> . duplicated ( subset = <b> )
同じ軸のセットでデータフレーム <D> <c> カラムと <D> カラム <b> と <D> <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> 内の <a> 列に重複がある行を落として、 <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
表データ <A> 中の重複しているデータを抽出する	<A> [ <A> . duplicated ( ) ]	if <A> [ <A> . duplicated ( ) ]
データフレーム <E> の列の名前を <d> から <c> に、 <b> から <a> に変更し、再代入する	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	sum <E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
データフレーム <B> を <a> ファイルに書き込む	<B> . to_csv ( <a> )	plt . savefig ( <a> )
表データ <A> の全ての列で重複している値がある行を削除する	<A> . drop_duplicates ( )	df . drop_duplicates ( )
CSV ファイル <a> をカンマ区切りで読む	pd . read_csv ( <a> , sep = ',' )	sep = pd . read_csv ( <a> , sep = ',' )
<A> の <b> カラム	<A> [ <b> ]	x [ <b> ]
表データ <A> の行の重複を確認する	<A> . duplicated ( )	df . duplicated ( )
<B> 全体を <a> の値を軸にソートして、 <B> に代入する	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <A> の <b> が <c> より小さいデータ	<A> [ <A> [ <b> ] <  <c> ]	plt <A> [ <A> [ <b> ] < <c> ]
エクセルファイル <b> の <a> 番目のシートから読み込む	pd . read_excel ( <b> , sheet_name = <a> )	plt . pd ( <b> , <a> )
表 <A> の <b> の名前を <c> に変更する	<A> . rename ( columns = { <b> : <c> } )	x <A> . rename ( columns = { <b> : <c> } )
さらに、色は赤色で表示する	@option color = 'red'	@option color = 'red'
<B> 中に存在する <a> を未記入の値に置換し、置き換える	<B> = <B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan , inplace = True )
<A> ( データフレーム ) の <b> コラムとコラム <c> を大きい順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> を <b> の値を元に並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <A> の表属性 <b> をヒストグラムでプロットする	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
<C> ( データフレーム ) の <b> と列 <a> を大から小へとソートして、インプレースする	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
表 <A> 中の未記入の値が存在する行を削除して、 <B> にする	<B> = <A> . dropna ( )	= <A> . dropna ( )
<A> の <b> コラムとコラム <c> を逆順にソートを <A> に代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> の列名を <b> から <c> に、 <d> から <e> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表 <A> 内の <b> に重複がある行を削除	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
<C> のインデックス名を <b> から <a> にリネームする	<C> . rename ( index = { <b> : <a> } )	<D> . rename ( index = { <b> : <a> } )
さらに、黄緑色で表示する	@option color = 'greenyellow'	@option color = 'greenyellow'
表 <A> から重複する値がある行を取り除いて、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<A> の表属性 <b> と表属性 <c> を落とし、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表データ <B> と表 <A> を横にくっつける	pd . merge ( <B> , <A> )	pd . merge ( <B> , <A> )
先頭の列をインデックスと設定して、ファイル名 <a> を読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
同じ軸で <A> の <b> と <A> の <c> 表属性と <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
左側のデータの位置と右側のデータの <a> 表属性をキーとして、 <C> と <B> 表データをマージして、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> ( データフレーム ) の <b> と表属性 <c> を値が大きい順にし、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<D> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
列番号 <b> を位置と設定して、 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
データフレーム <A> の <b> カラムを四分位数ごとでビン分割する	pd . qcut ( <A> [ <b> ] , 4 )	pd . qcut ( <A> [ <b> ] , 4 )
表 <A> の NaN を <A> の平均値で補って、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	plt . <A> ( <A> = ( <A> . mean ( ) )
表データ <B> 中の <c> を NaN に置換し、 NaN が存在する行を削除を <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
<C> 内の <b> と <a> に重複があるか確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表 <B> の NaN を <A> に置き換え、再代入する	<B> = <B> . fillna ( <A> )	@option fillna = <B> )
先頭の列をインデックスとして、ファイル名 <a> を読み込み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
<a> を数値データで置き換える	pd . get_dummies ( df [ <a> ] )	get_dummies pd . get_dummies ( df [ <a> ] )
データフレーム <A> 内の欠損を直前の行の値で埋め、 <B> とする	<B> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
コラム <a> をソートを <B> に代入する	<B> = <B> . sort_values ( <a> )	sort_index = df . sort_values ( <a> )
<A> ( データフレーム ) の <b> を昇順にして、置き換える	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<C> の <b> 表属性と表属性 <a> をドロップする	<C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> から重複している行を取り除く	<A> . drop_duplicates ( )	df . drop_duplicates ( )
列 <a> に重複があるかチェックを確認する	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
同じ x 軸と y 軸でデータフレーム <D> <c> 表属性と <D> データフレーム <b> と <D> データフレーム <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じグラフ内で <D> の表属性 <c> と <D> の <b> と表 <D> の <a> 表属性を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 内の NaN が存在する行をドロップを <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <B> の重複する行を消し、 <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
<B> 内の <a> に重複はあるのか	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
<A> の中で重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
データフレーム <A> のコラム <b> と <c> コラムと <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <D> の <a> について、 <c> をインデックス、 <b> コラムをコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
表 <A> の行の名前を <b> から <c> に変更し、 <A> に代入する	<A> = <A> . rename ( index = { <b> : <c> } )	df = <A> . rename ( index = { <b> : <c> } )
<b> をカンマ区切りでデータフレームとして読み込んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
<B> ( データフレーム ) の <a> を並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <B> 内の欠損を <C> で埋めて、 <A> にする	<A> = <B> . fillna ( <C> )	= <B> . fillna ( <C> )
表データ <B> 内の欠損をドロップを <A> とする	<A> = <B> . dropna ( )	sns = <B> . dropna ( )
データフレーム <B> の中にある <a> を未記入の値とし、置き換える	<B> = <B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan , inplace = True )
<A> の表属性 <b> の月を調べる	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
表データ <A> 内に重複はあるかどうか確認	<A> . duplicated ( )	df . duplicated ( )
データフレーム <C> の列 <b> を位置、 <a> 列を列としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	<A> . pivot_table ( index = <b> , columns = <a> )
<a> 区切りで表データをファイル <b> から読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
<A> の <b> のユニークな要素数を確認する	<A> [ <b> ] . nunique ( )	<A> [ <b> ] . nunique ( )
表 <B> の未入力の値を直前の行の値で補い、 <A> とする	<A> = <B> . fillna ( method = 'ffill' )	method = <B> . fillna ( method = 'ffill' )
表データ <B> 中に存在する <c> を欠損に置き換えて、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	sns <A> = <B> . replace ( <c> , np . nan )
<A> の列 <b> を並び替えて、インプレースする	<A> . sort_values ( <b> , inplace = True )	<b> <A> . sort_values ( <b> , inplace = True )
データフレーム <A> の <b> の名前を <c> に変更し、 <A> に代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( columns = { <b> : <c> } )
フォーマットを指定して、データフレーム <B> の <a> を年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	sns . pd ( <B> [ <a> ] , format = '%Y-%m-%d' )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と <B> をマージする	pd . merge ( <A> , <B> , how = 'outer' )	<D> = pd . merge ( <A> , <B> , how = 'outer' )
<A> の重複要素がある行を取り除く	<A> . drop_duplicates ( )	df . drop_duplicates ( )
表 <A> 中の NaN の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
とりあえず <A> データフレームの内容を表示する	<A> . head ( )	head . head ( )
表 <A> の <b> とカラム <c> とカラム <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の <c> の月を  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . month	<A> [ <b> ] = <A> [ <c> ] . dt . month
表データ <A> の <b> を NaN に置換し、 NaN が存在する行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> の <b> と <c> 列と <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、置き換える	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
同じグラフ内で <D> の <c> と <D> データフレームの <b> とデータフレーム <D> の <a> コラムを箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <b> カラムを位置、カラム <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> )	x <A> . pivot_table ( index = <b> , columns = <c> )
表データ <B> の <c> の名前を <d> に変更して、 <A> とする	<A> = <B> . rename ( index = { <c> : <d> } )	<A> = <B> . rename ( columns = { <c> : <d> } )
左外部結合で表データ <B> と <C> 表データをマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
データフレーム <B> 全体を <a> の値を元に並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
一番左の列をインデックスとして、 <b> ファイルから読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	index_col <A> = pd . read_csv ( <b> , index_col = 0 )
<B> の <a> 表属性を位置として、置き換える	<B> = <B> . set_index ( <a> )	<B> . set_index ( <a> , inplace = True )
表 <A> 中の <b> に重複があるかどうか表示する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
同じ軸でデータフレーム <D> の <c> と <b> と列 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
エクセルファイル <b> の <a> を表データに格納し、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
表データ <A> 中の重複している行を削除し、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ軸のセットでデータフレーム <A> の列 <b> と <A> の <c> とデータフレーム <A> の <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<D> の <c> 列と列 <b> と <a> 列について関係性を一度に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	@option sns . pairplot ( <D> [ <c> , <b> , <a> ] ] )
<A> のデータ型を調べる	<A> . dtypes	pd . to_datetime ( <A> )
位置と <a> 表属性をキーとして <C> と表 <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <A> 中の NaN の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
データフレーム <D> の <c> と <b> と <a> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表属性 <b> と <a> を値が大きい順に並び替え、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の列名を <b> から <c> に変更する	<A> . rename ( columns = { <b> : <c> } )	sns . rename ( columns = { <b> : <c> } )
<A> の <b> の分	<A> [ <b> ] . dt . minute	[ <A> [ <b> ] . dt . minute
左側のデータの位置と右側のデータの <c> をキーとして、 <A> 表データと <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<A> の NaN を <B> に置き換える	<A> . fillna ( <B> )	plt . fillna ( <B> )
表データ <B> 全体を <a> コラムを元に昇順で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<A> 内の <b> に重複があるののとき	if <A> . duplicated ( subset = <b> ) :	duplicated if <A> . duplicated ( subset = <b> ) :
表データ <A> 内の <b> に重複がある行をドロップして、 <A> にする	<A> = <A> . drop_duplicates ( subset = <b> )	df = <A> . drop_duplicates ( subset = <b> )
<b> という名前のエクセルデータの <a> 番目のシートからデータフレームを読み込む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> のカラム <d> について、 <b> を位置、カラム <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<A> ( データフレーム ) の <b> を昇順にし、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <D> の <c> と表データ <D> の <b> と <D> のカラム <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> を <a> 列の値を元に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <A> 全体をインデックスに基づいてソートして、 <B> とする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
同じ x 軸と y 軸でデータフレーム <D> の <c> と <D> の列 <b> とデータフレーム <D> の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の <b> と <A> の <c> とデータフレーム <A> の <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> のオブジェクトデータの要約統計量を調べる	<A> . describe ( include = 'O' )	<A> . describe ( include = 'O' )
データフレーム <B> をエクセルファイル <a> というファイル名で保存する	<B> . to_excel ( <a> )	df . to_excel ( <a> )
データフレーム <A> の <b> コラムごとにコラム <c> の平均を求める	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
同じ軸のセットで <D> 表の <c> コラムと <D> の <b> と <D> の <a> コラムを箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
同じ x 軸と y 軸で <D> <c> と <D> 表 <b> と <D> 表 <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <E> のカラム名を <d> から <c> に、 <b> から <a> に変更する	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> . rename ( columns = { <c> : <b> : <a> } )
<A> 中の未入力の値を含む行を削除し、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <B> の行名を <c> から <d> にリネームして、 <A> に代入する	<A> = <B> . rename ( index = { <c> : <d> } )	1 = <B> . rename ( index = { <c> : <d> } )
表 <B> 中のそれぞれのカラムにある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<b> と <c> を逆順にソートして、 <A> とする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
<A> 中の <b> を欠損に置換し、欠損が存在する行を消して、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> 内の未入力の値が存在する行を消して、インプレースする	<A> . dropna ( inplace = True )	dropna . dropna ( inplace = True )
データフレーム <B> の中にある <a> を欠損値に置換し、再代入する	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
同じグラフ内で表データ <D> の <c> コラムと <D> の <b> と <D> の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
<A> のコラム <d> について、 <b> を位置、 <c> コラムをコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
表データ <B> の <a> コラムの分を調べる	<B> [ <a> ] . dt . minute	<B> [ <a> ] . dt . minute
表 <B> を <a> を元に並び替え、 <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<A> の <b> 列のユニークな要素数を表示する	<A> [ <b> ] . nunique ( )	bins <A> [ <b> ] . nunique ( )
<B> 全体を <a> の値を元に並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
表データとして <a> をカンマ区切りで読み、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
データフレーム <B> を <a> の値を元に昇順で並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <B> 全体を列 <a> の値を軸に並び替え、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <C> 内の <b> と <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<A> ( データフレーム ) の <b> 列を小から大へとソートする	<A> . sort_values ( <b> )	sns . sort_values ( <b> , ascending = False )
<B> の下 <a> 行	<B> . tail ( <a> )	<B> . tail ( <a> )
データフレーム <D> の <c> と <b> と <a> について関係性を一度にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	@option sns . pairplot ( <D> [ <c> , <b> , <a> ] ] )
インデックスと <a> を項目名として <C> と <B> データフレームを一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sns pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> を <b> の値に基づいてソートし、置き換える	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<a> 表属性と <b> を値が大きい順にソートし、置き換える	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
表 <A> の NaN を <A> の平均値で補って、インプレースする	<A> . fillna ( <A> . mean ( ) , inplace = True )	plt . <A> ( <A> . mean ( ) , inplace = True )
表 <B> のカラムそれぞれにある <a> の個数の合計値を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <D> の <a> について、 <c> をインデックス、 <b> カラムをカラムとしたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
<A> 内の重複している行を落とし、 <A> に代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
グラフ幅を <a> として、 <C> 軸を <C> とした <B> の棒グラフを表示する	plt . bar ( <C> , <B> , width = <a> )	x plt . bar ( <C> , <B> , width = <a> ) )
表 <A> 内の欠損を直前の行の値で補い、 <A> に代入する	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
データフレーム <B> 内のそれぞれの列に存在する <a> の個数を計算する	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
表データ <D> の <c> と列 <b> ごとに列 <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	df . groupby ( [ <a> , <b> ] ) [ <a> ] . sum ( )
左外部結合で表データ <B> と <A> 表データを結合し、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'left' )	df = pd . merge ( <B> , <A> , how = 'left' )
表データ <A> の <b> を未記入の値に置換し、未記入の値がある行を落として、再代入する	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <C> 中の <b> 表属性と <a> 表属性に重複があるかどうかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表データ <A> の欠損値が存在する行を削除を <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<B> の <a> 列をソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<b> カラムと <a> に重複が存在するのか確認する	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
表データ <D> の列 <c> と列 <b> と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ [ <c> , <b> , <a> ] ] ] ] . corr ( )
表 <A> 内の NaN がある行を削除して、 <A> にする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
重複する最後の行を残して <A> ( データフレーム ) 中の重複する行をドロップを <B> とする	<B> = <A> . drop_duplicates ( keep = False )	keep = <A> . drop_duplicates ( keep = False )
表 <B> の中の列それぞれにある <a> の個数	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の <b> と <c> に重複はあるのかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> 内の <b> カラムに重複はあるか表示する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表 <B> から <a> という CSV ファイルを書き出す	<B> . to_csv ( <a> )	plt . savefig ( <a> )
表 <D> <c> と <D> 列 <b> と <D> <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じグラフ内で <A> 表データの <b> と <A> の <c> コラムと <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> と <A> の散布図をプロットする	plt . scatter ( <B> , <A> )	pd . scatter ( <B> , <A> )
データフレーム <A> の重複要素がある行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
表 <A> の重複している行を取り除いて、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<C> ( データフレーム ) の <b> とカラム <a> を逆順に並び替えて、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<E> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表属性 <a> と <b> を値が大きい順に並び替え、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <a> , <b> ] , ascending = False )
<a> というエクセルファイルのシート全てを読む	pd . read_excel ( <a> , sheet_name = None )	df . pd ( <a> , sheet_name = None )
表データ <A> 内のそれぞれのカラムに存在する <b> の個数を見る	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表 <C> の <b> と <a> 表属性を値が大きい順に並び替え、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> 内の <b> を欠損に置換し、欠損がある行を削除	<A> . replace ( <b> , np . nan ) . dropna ( )	<A> . replace ( <b> , np . nan ) . dropna ( )
同じ x 軸と y 軸で表 <D> の <c> と表 <D> の <b> と <D> の <a> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <b> と <c> の相関係数を見る	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
<A> 内の <b> を欠損に置換し、欠損が存在する行をドロップする	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 中のそれぞれの列に存在する <b> の個数の合計値を調べる	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
同じ軸で <A> 表 <b> コラムと <A> コラム <c> と表 <A> コラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の最初の 5 行	<A> . head ( )	tail . tail ( )
<b> という名前のエクセルファイルの <a> からデータフレームを読み込んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<A> = pd . read_excel ( <b> , sheet_name = <a> )
先頭の列を位置にして、 <b> から読み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
一番左の列を位置として、ファイル名 <a> をデータフレームとして読み込んで、 <B> に代入する	<B> = pd . read_csv ( <a> , index_col = 0 )	<E> = pd . read_csv ( <a> , index_col = 0 )
<a> を表データに格納する	pd . read_csv ( <a> )	plt . pd ( <a> )
表属性 <b> と表属性 <a> に重複が存在するのか調べる	df . duplicated ( subset = [ <b> , <a> ] )	pd . duplicated ( subset = [ <b> , <a> ] )
ビン数を <B> 、ビンのラベルを <A> として、 <D> 表の表属性 <c> をビン分割し、 <E> とする	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
同じ軸のセットで表データ <A> の <b> と <c> とカラム <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 中に重複はあるかどうかチェック	<A> . duplicated ( )	df . duplicated ( )
<C> ( データフレーム ) の <b> とカラム <a> を降順にソートを <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> のそれぞれのカラムにある <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <C> の <b> コラムの名前を <a> にリネームして、 <D> にする	<D> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
<b> 区切りで表データを CSV ファイル <a> ( ファイル名 ) から読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
表 <B> と <C> を横方向にマージし、 <A> にする	<A> = pd . merge ( <B> , <C> )	] = pd . merge ( <B> , <C> )
<B> ( データフレーム ) の <a> を値が小さい順に並び替えて、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じ x 軸と y 軸で <D> <c> と表データ <D> コラム <b> と <D> <a> コラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じグラフ内で表データ <A> の <b> と <A> の <c> コラムと <A> 表データの <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <D> 表属性 <c> と表データ <D> <b> と表データ <D> <a> 表属性についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> の中の重複している行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
<B> を <B> 軸、 <A> を <A> 軸として、散布図を描く	plt . scatter ( <B> , <A> )	pd . scatter ( <B> , <A> )
表データ <D> の <c> と列 <b> ごとに <a> の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	df . groupby ( [ <a> , <b> ] ) [ <a> ] . sum ( )
境界値を <C> リストとして、 <A> 表の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
表データ <A> 中の <b> と <c> に重複はあるかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
<A> の <b> カラムの値をソートを <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> 内の未入力の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
そのとき、円形のマーカーを表示することにする	@option marker = 'o'	@option marker = 'o'
同じグラフ内で <A> の <b> と <A> の <c> コラムと <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> とカラム <c> を大から小へとソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> の中にある <b> を未記入の値に置換して、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
<b> と <a> を降順にソートする	df . sort_values ( [ <b> , <a> ] , ascending = False )	pd . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <B> をファイル <a> にして保存する	<B> . to_csv ( <a> )	plt . savefig ( <a> )
同じグラフ内で <A> データフレームの <b> 表属性とデータフレーム <A> の表属性 <c> と <A> の <d> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> 内の <b> と <a> カラムに重複はあるのか表示してみる	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<a> という名前のエクセルファイルのシート全部を読み込み、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	<B> = pd . read_excel ( <a> , sheet_name = None )
表データ <B> の <a> を昇順にソートして、 <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <A> 内の欠損を <A> の平均値で埋めて、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	( <A> = <A> . fillna ( <A> . mean ( ) )
データフレーム <A> 内の欠損値を直前の行の値で埋めて、インプレースする	<A> . fillna ( method = 'ffill' , inplace = True )	fillna <A> . fillna ( method = 'ffill' , inplace = True )
表示するグラフ枠の大きさを <a> x6 に変更する	plt . figure ( figsize = ( <a> , 6 ) )	figure = plt . figure ( figsize = ( <a> , 6 ) )
エクセル <a> を表データに格納して、 <B> に代入する	<B> = pd . read_excel ( <a> )	df = pd . read_excel ( <a> )
ビン数を <A> として、表 <C> の <b> カラムをビンに含まれる個数が等しくなるように分割して、 <D> に代入する	<D> = pd . qcut ( <C> [ <b> ] , <A> )	<A> = pd . qcut ( <C> [ <b> ] , <A> )
そのとき、グラフ線を点と線で描くこととする	@option linestyle = 'dashbot'	sns . set ( font = 'dashbot' )
データフレーム <B> を位置を元にソートを <A> に代入する	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
表データ <A> をカラム <b> を元に並び替え、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
データフレーム <B> の <a> 行目をドロップを <C> に代入する	<C> = <B> . drop ( <a> )	df = <B> . drop ( <a> )
<a> と <b> に重複があるのか確認を調べる	df . duplicated ( subset = [ <a> , <b> ] )	if df . duplicated ( subset = [ <a> , <b> ] ) :
インデックスと <a> をキーとして <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> 全体を <a> の値を元に昇順でソートを <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> 中の欠損値を含む行を消して、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<b> と <c> 列を逆順にソートして、 <A> にする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> の <b> が <c> より大きいデータ	<A> [ <A> [ <b> ] >  <c> ]	<A> [ <A> [ <b> ] > <c> ]
同じ軸のセットで <A> データフレームの <b> と <A> データフレームの表属性 <c> と <A> の <d> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
左外部結合で <A> と <B> 表データを結合する	pd . merge ( <A> , <B> , how = 'left' )	sns . pd ( <A> , <B> , how = 'left' )
表データ <B> の <a> カラムを並び替えて、置き換える	<B> . sort_values ( <a> , inplace = True )	df = <B> . sort_values ( <a> )
<A> の <c> の分を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . minute	<A> [ <b> ] = <A> [ <c> ] . dt . minute
データフレーム <A> 中の重複している行を消して、 <B> にする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<A> 中の NaN の数を計算する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
表データ <B> を <a> に沿ってソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
同じ軸で <A> の <b> と <A> の <c> と表 <A> のコラム <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<D> <c> カラムと表データ <D> <b> と <D> 表データ <a> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
先頭の列をインデックスに、 <a> ファイル名をデータフレームに格納する	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
表 <A> の <b> をインデックスに設定して、インプレースする	<A> . set_index ( <b> , inplace = True )	<b> <A> . set_index ( <b> , inplace = True )
表データ <A> の <b> のそれぞれのデータの出現回数を見る	<A> [ <b> ] . value_counts ( )	<b> <A> [ <a> ] . value_counts ( )
表データ <D> のカラム <a> について、カラム <c> をインデックス、 <b> をカラムとしたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
そのとき、マーカーの内の色を青色とする	@option markerfacecolor = 'blue'	@option markerfacecolor = 'blue'
表 <C> の <b> が <a> 以上のデータを取得する	<C> [ <C> [ <b> ] >= <a> ]	<A> [ <C> [ <b> ] >= <a> ]
表データをファイルパス <a> から読み込み、 <B> とする	<B> = pd . read_csv ( <a> )	df = pd . read_csv ( <a> )
表データ <A> の <b> についての箱ひげ図を描写する	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
表データ <B> の <c> の名前を <d> にリネームして、 <A> とする	<A> = <B> . rename ( index = { <c> : <d> } )	sns = <B> . rename ( index = { <c> : <d> } )
表データ <E> の <d> の名前を <c> に、 <b> の名前を <a> に変更し、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<b> という名前のエクセルファイルの <a> 番目のシートをデータフレームとして読み込んで、 <C> にする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<b> <C> = pd . read_excel ( <b> , sheet_name = <a> )
<B> のコラム <a> のそれぞれのデータの出現回数を確認する	<B> [ <a> ] . value_counts ( )	<B> [ <a> ] . value_counts ( )
データフレーム <A> の <b> と <A> データフレームの <c> と <A> データフレームの <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <C> の <b> と <a> を逆順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> の中の NaN を直前の行の値で埋めて、 <B> にする	<B> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表データ <B> と <A> 表データを縦方向で一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	= pd . concat ( [ <B> , <A> ] )
表データ <A> の <b> 列の月を確認する	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
同じグラフ内で <A> <b> と <A> データフレーム表属性 <c> と <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
さらに、マーカーの種類は六角形こととする	@option marker = 'h'	@option marker = 'h'
同じ x 軸と y 軸で <A> 表データの <b> と <c> と <d> 表属性を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
一番左の列をインデックスと設定して、 <a> から読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
同じ軸で <A> 表の <b> と <A> の <c> コラムと表 <A> のコラム <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> 中の <b> に重複がある行をドロップを <A> にする	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
<A> の <b> 表属性と表属性 <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
データフレーム <A> 内の NaN を <B> に置き換えて、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
データフレーム <B> 中の欠損を <A> に置き換える	<B> . fillna ( <A> )	plt . fillna ( <B> )
<B> を <B> 軸、 <A> を <A> 軸として、散布図を表示する	plt . scatter ( <B> , <A> )	pd . scatter ( <B> , <A> )
同じ x 軸と y 軸で <D> <c> と表データ <D> <b> と表データ <D> 表属性 <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の位置をソートを <A> にする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表データ <D> の <a> コラムについて、 <c> をインデックス、 <b> をコラムとしたピボットテーブルを作成し、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
データフレーム <A> 内の未記入の値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
<A> 内の重複している行をドロップを <A> に代入する	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
データフレーム <D> 表属性 <c> と <D> <b> と <D> <a> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表を <b> からタブ区切りで読み込み、 <A> とする	<A> = pd . read_csv ( <b> , sep = '\t' )	pd . read_csv ( <b> , sep = '\t' )
左側のデータの位置と右側のデータの <a> をキーとして、 <C> と表データ <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sns . pd ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> 内にある <a> を NaN に置き換え、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	day <C> = <B> . replace ( <a> , np . nan )
表 <A> 内に重複はあるかチェック	<A> . duplicated ( )	df . duplicated ( )
表データ <A> 中の <b> 列と <c> に重複はあるかどうかチェックを確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	<A> . duplicated ( subset = [ <b> , <c> ] )
列番号 <a> を位置と設定して、 <b> から読み込む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <B> と <A> データフレームを縦方向にマージして、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
<A> の数値データ以外の要約統計量を確認する	<A> . describe ( include = 'O' )	@option describe . describe ( include = 'O' )
パス <a> を表として読み込み、 <B> とする	<B> = pd . read_csv ( <a> )	pd . merge ( <B> , <A> )
<C> のインデックス名を <b> から <a> に変更する	<C> . rename ( index = { <b> : <a> } )	<D> . rename ( index = { <b> : <a> } )
表 <B> の <a> 列	<B> [ <a> ]	<B> [ <a> ]
<A> についてダミー変数を作る	pd . get_dummies ( <A> )	get_dummies pd . get_dummies ( <A> )
表 <A> のカテゴリ変数を one - hot 表現に変換する	pd . get_dummies ( <A> )	plt . pd ( <A> )
データフレーム <A> 全体を列 <b> を軸に並び替え、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
CSV ファイル <a> ( ファイル名 ) を <b> 区切りで表データとして読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
<A> の表属性 <b> と <c> と表属性 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> と <A> を縦向きに一つにまとめて、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	= pd . concat ( [ <B> , <A> ] )
データフレーム <A> の <b> に重複がある行をドロップする	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
<b> 番目の列をインデックスに指定して、 <a> を表データに格納する	pd . read_csv ( <a> , index_col = <b> )	<D> = pd . read_csv ( <a> , index_col = <b> )
<a> 番目の列を位置に指定して、 <b> を読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<B> の <c> 列をソートして、 <A> に代入する	<A> = <B> . sort_values ( <c> )	<B> = <B> . sort_values ( <c> )
表データ <A> 中の未記入の値の数	<A> . isnull ( ) . sum ( )	<B> . isnull ( ) . sum ( )
分割数を <D> 、ビンのラベルを <E> として、 <B> の <c> を分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表 <D> の列 <c> と <D> データフレームの <b> 列とデータフレーム <D> の <a> 列についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表 <A> 中の未入力の値をドロップして、 <A> にする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<A> 中に重複はあるのか	<A> . duplicated ( )	df . duplicated ( )
表データ <A> 中のそれぞれのカラムに存在する <b> の個数の合計値を確認する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表属性 <a> と <b> を値が大きい順に並び替える	df . sort_values ( [ <a> , <b> ] , ascending = False )	<A> . sort_values ( [ <a> , <b> ] , ascending = False )
<A> 内の <b> を未入力の値に置換し、未入力の値が存在する行を削除する	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
分割数を <B> 、ビンの名前を <A> として、 <D> 表データの <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	pd . cut ( <D> [ <c> ] , <B> , label = <A> )
データフレーム <A> 中の欠損の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<B> 全体を <c> に基づいてソートして、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
<B> ( データフレーム ) の <a> を並び替え、置き換える	<B> . sort_values ( <a> , inplace = True )	df = <B> . sort_values ( <a> )
位置と <c> をキーとしてデータフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
データフレーム <A> 中の未入力の値がある行を削除して、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<B> の位置をソートを <A> とする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<B> 内の <c> 表属性に重複がある行を落とし、 <A> とする	<A> = <B> . drop_duplicates ( subset = <c> )	<A> = <B> . drop_duplicates ( subset = <c> )
データフレーム <A> の <b> コラムとコラム <c> を降順にソートし、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
ビン数を <A> として、 <C> の <b> をビンに含まれる個数が等しくなるようにビン分割して、 <D> とする	<D> = pd . qcut ( <C> [ <b> ] , <A> )	<A> = pd . qcut ( <C> [ <b> ] , <A> )
<A> の中の欠損値をドロップ	<A> . dropna ( )	@option dropna ( )
表 <A> の <b> の名前を <c> に、 <d> コラムの名前を <e> にリネームして、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<D> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表データ <A> の中の重複しているデータ	<A> [ <A> . duplicated ( ) ]	if <A> [ <A> . duplicated ( ) ]
<C> ( データフレーム ) の列 <b> と <a> 列を値が大きい順にソートを <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> の <a> の曜日の数値型を見る	<B> [ <a> ] . dt . dayofweek	<B> [ <a> ] . dt . dayofweek
表データ <A> の <b> 列と <c> を消す	<A> . drop ( [ <b> , <c> ] , axis = 1 )	1 . drop ( [ <b> , <c> ] , axis = 1 )
表データ <A> 中のそれぞれの列にある <b> の個数の合計値を算出する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表属性 <b> と <a> に重複があるのか	df . duplicated ( subset = [ <b> , <a> ] )	if df . duplicated ( subset = [ <b> , <a> ] ) :
インデックスと <a> を項目名として表 <C> と <B> 表を結合して、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <B> の <a> をドロップし、置き換える	<B> = <B> . drop ( <a> , axis = 1 )	df . drop ( <a> , axis = 1 , inplace = True )
<B> の列 <c> を位置、 <d> を列としたピボットテーブルを作成し、 <A> にする	<A> = <B> . pivot_table ( index = <c> , columns = <d> )	<A> = <B> . pivot_table ( index = <c> , columns = <d> )
データフレーム <B> を <c> 表属性を元に昇順で並び替えて、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <B> 全体をインデックスを元にソートを <A> に代入する	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
データフレーム <A> 中の NaN を <A> の平均値で補って、再代入する	<A> = <A> . fillna ( <A> . mean ( ) )	( <A> = <A> . fillna ( <A> . mean ( ) , inplace = True )
同じグラフ内で <D> <c> とデータフレーム <D> <b> と <D> カラム <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
列 <a> と <b> を値が大きい順にソートする	df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> . sort_values ( [ <a> , <b> ] , ascending = False )
同じ軸のセットで <A> データフレームの表属性 <b> と <c> と <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
さらに、マーカーの輪郭の色を黄緑色とする	@option markeredgecolor = 'greenyellow'	@option markeredgecolor = 'greenyellow'
表データ <C> の <b> と <a> 列を大きい順に並び替え、 <C> に代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> の NaN を <A> に置き換え、 <C> とする	<C> = <B> . fillna ( <A> )	@option fillna <A> = <B> )
表 <A> 列 <b> とデータフレーム <A> <c> 列とデータフレーム <A> 列 <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレームとして <c> 区切りで <b> を読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <A> 中にある <b> を未入力の値に置換して、 <A> にする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
表データ <B> の列の名前を <A> にする	<A> = <B> . columns	fillna <A> = <B> . columns
表データ <A> の <b> 表属性と <c> 表属性を逆順にソートして、 <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <B> の NaN がある行をドロップし、 <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <B> 中の <a> を欠損に置換し、欠損が存在する行を削除し、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> の列の名前を <b> から <c> に、 <d> から <e> に変更し、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<D> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
左側のデータの位置と右側のデータの <a> を項目名として 2 つのデータを結合して、 <B> に代入する	<B> = pd . merge ( df1 , df2 , left_index = True , right_on = <a> )	= pd . merge ( df1 , df2 , left_index = True , right_on = <a> )
同じグラフ内で <A> 表データの <b> コラムと <A> の <c> と <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> 列と <c> 列と <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の未記入の値をデータフレーム <A> の平均値で補う	<A> . fillna ( <A> . mean ( ) )	fillna <A> . mean ( ) , inplace = True )
描画するグラフの枠の大きさを横 <b> 縦 <a> に設定する	plt . figure ( figsize = ( <b> , <a> ) )	<F> = plt . figure ( figsize = ( <b> , <a> ) )
<D> 軸のラベル名を <D> から <c> 、 <b> 、 <a> へ変更する	plt . xticks ( <D> , [ <c> , <b> , <a> ] )	<D> . rename ( columns = { <c> , <b> : <a> } )
<b> から表データを <a> 区切りで読む	pd . read_csv ( <b> , sep = <a> )	sep = pd . read_csv ( <b> , sep = <a> )
表 <B> を <a> 列の値に沿ってソートして、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <A> を <b> という名前でエクセル形式で保存する	<A> . to_excel ( <b> )	to_excel . to_excel ( <b> )
表 <D> の列 <c> と <D> の <b> とデータフレーム <D> の <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の <b> をソートして、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <B> 全体を位置を元に並び替え、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
表データを <a> からカンマ区切りで読んで、 <B> とする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
表データ <B> の <e> について、 <c> コラムを位置、コラム <d> をコラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<D> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
<A> の位置をソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<C> 中の <b> と <a> に重複はあるのか	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
表 <A> の中で重複する行の合計	<A> . duplicated ( ) . sum ( )	duplicated . duplicated ( ) . sum ( )
同じ軸のセットで <D> の <c> 表属性と <b> と <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じグラフ内で <D> 表データの <c> と <D> 表データの <b> と <D> の <a> 列を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
同じ軸のセットで表 <A> の <b> と <c> 列と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <D> の <a> について、 <c> 表属性を位置、表属性 <b> を表属性としたピボットテーブルを作成して、 <E> とする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
表データ <A> から重複している値がある行をドロップして、置き換える	<A> = <A> . drop_duplicates ( )	df . drop_duplicates ( inplace = True )
<A> 中の <b> 表属性と <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
同じ x 軸と y 軸で <A> <b> 列と <A> <c> と表データ <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の <b> と <c> をドロップして、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	axis = <A> . drop ( [ <b> , <c> ] , axis = 1 )
データフレーム <A> の <b> コラムと <c> をドロップ	<A> . drop ( [ <b> , <c> ] , axis = 1 )	1 . drop ( [ <b> , <c> ] , axis = 1 )
表データ <A> 内のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表 <B> と <A> を縦方向に連結	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<B> の <a> を削除する	<B> . drop ( <a> , axis = 1 )	<B> . drop ( <a> , axis = 1 )
<C> とデータフレーム <B> に対して、 <a> をキーとしてデータを結合する	pd . merge ( <C> , <B> , on = <a> )	sns pd . merge ( <C> , <B> , on = <a> )
表 <B> 全体を <a> コラムを軸にソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <B> をカラム <a> を元にソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	<B> = <B> . sort_values ( <a> )
<b> を読んで、 <A> にする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
重複した最後の行を残して <A> ( データフレーム ) の重複している行をドロップして、置き換える	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
表 <A> の列 <b> のそれぞれのデータの出現回数を表示する	<A> [ <b> ] . value_counts ( )	pd . read_excel ( <A> [ <b> ] , value_counts ( )
<A> を位置を元に昇順でソートする	<A> . sort_index ( )	@option sort_index ( )
表 <D> の <c> と列 <b> と <a> について関係性を一気にプロットする	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . corr ( )
位置と <c> をキーとして <A> データフレームと <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<A> の欠損値を <B> に置き換え、インプレースする	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
データフレーム <B> を <a> という名前で CSV ファイルに書き込む	<B> . to_csv ( <a> )	plt . savefig ( <a> )
データフレーム <A> の先頭から <b> 行目まで	<A> [ : <b> ]	: <A> [ <b> : ]
データフレーム <A> の列名を <b> から <c> にリネームし、置き換える	<A> . rename ( columns = { <b> : <c> } , inplace = True )	df = <A> . rename ( columns = { <b> : <c> } )
<A> ( データフレーム ) の <b> カラムとカラム <c> を値が大きい順にする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> を <a> という名前にしてエクセル形式に書き込む	<B> . to_excel ( <a> )	df . to_excel ( <a> )
<B> を列 <a> の値に沿ってソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
同じグラフ内で <A> の <b> と表データ <A> の <c> と <A> 表データの <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> ( データフレーム ) の <b> と列 <c> を大から小へとソートして、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> 全体を <b> の値を元にソートし、 <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表 <A> 中の重複している行を消す	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
表 <D> のカラム <c> と <D> データフレームのカラム <b> と <D> の <a> についての箱ひげ図を描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <C> の <b> の名前を <a> に変更し、置き換える	<C> . rename ( index = { <b> : <a> } , inplace = True )	<E> = <C> . rename ( index = { <b> : <a> } )
<B> ( データフレーム ) の列 <a> を順にして、 <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <E> のコラム <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームして、インプレースする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	sum <E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )
<b> を <a> 区切りで表として読み、 <C> に代入する	<C> = pd . read_csv ( <b> , sep = <a> )	subset = pd . read_csv ( <b> , sep = <a> )
同じグラフ内で <D> の <c> と <D> 表のコラム <b> と表 <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> をソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表 <A> の未入力の値が存在する行を削除し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <A> 中にある <b> を未記入の値とし、再代入する	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
列番号 <b> をインデックスとして、 <a> を読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <b> , index_col = <a> )
そこで、改行の代わりに <A> をすることとする	@option end = <A>	@option end = <A> )
エクセルファイル <a> のシート全てを表データに格納する	pd . read_excel ( <a> , sheet_name = None )	sheet_name = pd . read_excel ( <a> , sheet_name = None )
<A> 中の <b> を欠損に置換し、欠損が存在する行を削除	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
<A> を <b> という名前にして CSV ファイルで保存する	<A> . to_csv ( <b> )	plt . savefig ( <b> )
表 <A> の中の列それぞれにある <b> の個数	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
データフレーム <B> と <A> データフレームをマージする	pd . merge ( <B> , <A> )	sns . pd ( <B> , <A> )
表データ <A> の <b> と <c> を大から小へと並び替える	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
そこで、バイトオーダーはリトルエンディアンとする	@option byteorder = 'little'	start = pd . merge ( df1 , df2 , how = 'outer' )
表 <D> の <c> とデータフレーム <D> のコラム <b> とデータフレーム <D> の <a> コラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <E> の <d> の名前を <c> に、表属性 <b> の名前を <a> に変更して、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
<b> から <c> 区切りで表を読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
データフレーム <A> 中のそれぞれのカラムにある <b> の個数の合計値を求める	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 内の重複している行をドロップし、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表 <A> の <b> の一意の値	<A> [ <b> ] . unique ( )	<A> [ <b> ] . unique ( )
ビン数を <D> 、ビンの名前をリスト <E> として、データフレーム <B> の <c> をビン分割して、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = <E> )	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<B> ( データフレーム ) の表属性 <a> を小さい順にソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <B> と <A> 表を縦方向で一つにまとめる	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
表データ <A> 中の未記入の値を直前の行の値で埋める	<A> . fillna ( method = 'ffill' )	fillna . fillna ( method = 'ffill' )
表データ <A> のそれぞれのカラムにある <b> の個数の合計値を表示する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
データフレーム <C> の <b> をインデックス、 <a> を列としたピボットテーブルを作成して、 <D> とする	<D> = <C> . pivot_table ( index = <b> , columns = <a> )	<A> = <C> . pivot_table ( index = <b> , columns = <a> )
<B> ( データフレーム ) のカラム <c> を小さい順に並び替え、 <A> に代入する	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <B> 内の欠損を <A> に置換し、再代入する	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
<A> 内の <b> を欠損に置換し、欠損が存在する行をドロップして、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )
<A> の <c> の曜日の数値型を見て、  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	[ <A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
表データ <B> 中の <a> を欠損に置換し、欠損が存在する行をドロップし、 <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> の欠損値が存在する行を削除を <B> に代入する	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
データフレーム <B> の <a> に重複があるのか表示する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
左側のデータのインデックスと右側のデータの <a> 列を項目名として、 <C> データフレームと <B> を一つにまとめる	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> 中の <b> に重複があるのかどうか見る	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
データフレーム <B> 中の未記入の値を <C> に置換し、 <A> とする	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
<B> をコラム <a> でソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<A> 内で重複した行数の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表データ <A> 中の重複する行をドロップ	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<B> の表属性 <a> を箱ひげ図にプロットする	plt . boxplot ( <B> [ <a> ] )	pd . boxplot ( <B> [ <a> ] )
データフレーム <A> をインデックスを元に昇順でソートして、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
エクセル <a> の全部のシートをデータフレームに格納する	pd . read_excel ( <a> , sheet_name = None )	sheet_name = pd . read_excel ( <a> , sheet_name = None )
表 <A> の要約統計量	<A> . describe ( )	sns . describe ( )
そこで、グラフの打点の色を黄色とする	@option markerfacecolor = 'yellow'	@option markerfacecolor = 'yellow'
表データ <A> の欠損をドロップする	<A> . dropna ( )	<A> . dropna ( )
表示するグラフの枠の大きさを横 <b> 縦 <a> とセットする	plt . figure ( figsize = ( <b> , <a> ) )	color = plt . figure ( figsize = ( <b> , <a> ) )
表データ <B> の <a> コラムを位置に設定して、インプレースする	<B> . set_index ( <a> , inplace = True )	<D> . set_index ( <a> , inplace = True )
<A> ( データフレーム ) の <b> カラムと <c> を大きい順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> の NaN を <B> に置換する	<A> . fillna ( <B> )	sns . fillna ( <B> )
<A> のコラム <b> の分を調べる	<A> [ <b> ] . dt . minute	[ <A> [ <b> ] . dt . minute
表 <A> の表属性 <b> の一意の値を調べる	<A> [ <b> ] . unique ( )	pd . unique ( <A> [ <b> ] )
そのとき、 <A> にパーセント表記を指定し、小数点 2 位まで表現することを指定することとする	@option <A> = '%.2f%%'	<E> = pd . @option <A> , <B> , label = '%.2f%%' )
<A> 中の <b> 列と <c> に重複はある場合	if <A> . duplicated ( subset = [ <b> , <c> ] ) :	plt . duplicated ( subset = [ <b> , <c> ] ) :
表 <A> の <b> カラムと <c> と <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 全体をインデックスを軸にソートし、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<C> の <b> 列と <a> をドロップして、 <D> にする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
同じ軸のセットで <A> 表データの <b> と <c> と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 中の欠損を含む行をドロップを <A> にする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
<A> ( データフレーム ) の表属性 <b> を小さい順にして、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
境界値をリスト <A> として、表データ <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	cut pd . cut ( <C> [ <b> ] , <A> )
表データ <C> のカラム名を <b> から <a> に変更する	<C> . rename ( columns = { <b> : <a> } )	<D> . rename ( columns = { <b> : <a> } )
表 <A> の重複要素がある行を削除し、 <A> に代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <C> の <b> と <a> をドロップして、 <C> に代入する	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
<A> の <c> の秒を  <A> [ <b> ] にする	<A> [ <b> ] = <A> [ <c> ] . dt . second	[ <A> [ <b> ] = <A> [ <c> ] . dt . second
左外部結合で <B> と <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	<D> = pd . merge ( <B> , <A> , how = 'left' )
エクセルファイル <a> の <b> 番目のシートをデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表 <A> 中にある <b> を欠損値に置き換える	<A> . replace ( <b> , np . nan )	sns . replace ( <b> , np . nan )
ビン数を <C> として、 <A> の表属性 <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
データフレーム <A> の欠損値を削除	<A> . dropna ( )	<B> . dropna ( )
データフレーム <A> 内で重複している行数の合計	<A> . duplicated ( ) . sum ( )	sns . duplicated ( ) . sum ( )
表データ <A> 中の <b> と <c> に重複があるのかどうか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<a> に重複は存在するのか確認	df . duplicated ( subset = <a> )	pd . duplicated ( subset = <a> )
表示するグラフの枠のサイズを横幅 <a> 高さ <b> と設定する	plt . figure ( figsize = ( <a> , <b> ) )	figure = plt . figure ( figsize = ( <a> , <b> ) )
表 <B> 内の <a> に重複がある行を消して、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	df . drop_duplicates ( subset = <a> , inplace = True )
表 <C> 中の <b> と <a> に重複は存在するのか表示する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
そのとき、 <A> に小数点以下 2 桁まで表現することを指定し、パーセント表記を指定する。	@option <A> = '%.2f%%'	@option <A> = '%.2f%%'
表を CSV ファイル <a> ( ファイル名 ) から <b> 区切りで読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
データフレーム <C> の <a> の曜日を調べ、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	<D> [ <b> ] = <C> [ <a> ] . dt . weekday_name
同じ x 軸と y 軸で <D> データフレームの表属性 <c> と表属性 <b> と表属性 <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> の中の欠損値を含む行を削除	<A> . dropna ( )	dropna . dropna ( )
データフレーム <B> と表 <A> を一つにまとめ、 <C> とする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
左側のデータの位置と右側のデータのカラム <d> を項目名として、 <B> 表データと表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	pd . merge ( <A> , <B> , left_index = True , right_on = <d> )
データフレーム <A> 全体をインデックスを元に並び替え、置き換える	<A> = <A> . sort_index ( )	<A> . sort_index ( inplace = True )
<B> 内の index が <a> の行	<B> . loc [ <a> ]	loc . loc [ <a> ]
データフレーム <B> を <a> 表属性を元にソートして、 <B> にする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表示するビンの数を <b> として、 <A> のヒストグラムを描画する	plt . hist ( <A> , bins = <b> )	plt . hist ( <A> , bins = <b> ) )
表データ <A> 内の未記入の値がある行を削除して、置き換える	<A> = <A> . dropna ( )	df . dropna ( inplace = True )
データフレーム <A> 中に存在する <b> を欠損値に置き換えて、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	<b> <A> = <A> . replace ( <b> , np . nan )
<C> の <b> が <a> 以上のデータを取得する	<C> [ <C> [ <b> ] >= <a> ]	<A> [ <C> [ <b> ] >= <a> ]
表を <c> 区切りで <b> から読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
ラベルの名前を <c> として、 <A> と <B> をグラフで描写する	plt . plot ( <A> , <B> , label = <c> )	<E> = pd . merge ( <A> , <B> , label = <c> )
表データを <a> から読んで、 <B> とする	<B> = pd . read_csv ( <a> )	df = pd . read_csv ( <a> )
表データ <B> と <A> をマージして、 <C> とする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
表 <B> の <a> 行目を削除し、再代入する	<B> = <B> . drop ( <a> )	<B> = <B> . drop ( <a> )
エクセルファイル <a> の全てのシートをデータフレームとして読み込む	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> , sheet_name = None )
同じ軸で <A> <b> と <A> <c> と表 <A> <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <D> <c> カラムと <D> <b> と <D> <a> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> の <a> コラムの要素を調べる	<B> [ <a> ] . values	values [ <a> ] . values
同じグラフ内で <A> 表 <b> と <A> <c> カラムと表 <A> カラム <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> と列 <a> を落とす	<C> . drop ( [ <b> , <a> ] , axis = 1 )	1 . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> 中の重複している行をドロップし、 <A> にする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
左外部結合でデータフレーム <A> とデータフレーム <B> をマージする	pd . merge ( <A> , <B> , how = 'left' )	} = pd . merge ( <A> , <B> , how = 'left' )
<A> 中の <b> と表属性 <c> に重複を判定する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
同じ x 軸と y 軸でデータフレーム <D> の <c> コラムと <D> の <b> コラムと <D> データフレームのコラム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <C> の列名を <b> から <a> にリネームする	<C> . rename ( columns = { <b> : <a> } )	<D> . rename ( columns = { <b> : <a> } )
<b> というエクセルファイルの <a> 番目のシートをデータフレームに格納する	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の <b> に重複があるのか	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
一番左の列をインデックスに設定して、 <a> を読み込む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
表 <B> の <a> 列をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	<B> . groupby ( <a> ) . size ( )
グラフタイトルを <a> とセットする	plt . title ( <a> )	show . title ( <a> )
<A> の <b> を選択する	<A> [ <b> ]	pd . read_csv ( <b> )
表 <A> 中の重複している行をドロップ	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
<D> の列 <c> と <D> データフレームの <b> 列と <D> データフレームの <a> 列についての箱ひげ図を描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
<c> コラムを項目名として、 <A> と <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	<D> = pd . merge ( <A> , <B> , on = <c> )
<B> 全体を <a> に基づいてソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表 <A> 全体を位置を軸にソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<B> 中の欠損値を <A> に置換して、 <C> とする	<C> = <B> . fillna ( <A> )	df = <B> . fillna ( <A> )
データフレーム <A> の中のそれぞれの列にある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表 <A> を位置でソート	<A> . sort_index ( )	@option sort_index ( )
<A> 中にある <b> を欠損値に置き換え、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	@option replace = <A> . replace ( <b> , np . nan )
データフレーム <A> 内の欠損値が存在する行を落とし、置き換える	<A> . dropna ( inplace = True )	df . dropna ( inplace = True )
データフレーム <B> の <a> 表属性のユニークな要素数を確認する	<B> [ <a> ] . nunique ( )	pd . qcut ( <B> [ <a> ] , 4 )
重複している最後の行を残して <A> ( データフレーム ) 中の重複している行を消して、再代入する	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
そこで、 <A> から始めることとする	@option start = <A>	markeredgewidth = <A> )
表 <C> の <b> と <a> を逆順に並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> という名前のエクセルデータのシート全てをデータフレームとして読み、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
データフレーム <B> 全体を <a> に基づいてソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
同じグラフ内で <A> の <b> と <A> 表データの <c> と <A> 表データの <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
インデックスとカラム <a> を項目名として <C> と <B> を一つにまとめ、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表 <B> の <a> についての分散を抽出する	<B> [ <a> ] . var ( )	sns . pairplot ( <B> [ <a> ] )
表データ <C> 中の表属性 <b> と表属性 <a> に重複があるかどうかチェック	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<a> という名前のエクセル <a> のシート全部を表に格納する	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> , sheet_name = None )
重複する行を削除を <A> とする	<A> = <A> . drop_duplicates ( )	df = df . drop_duplicates ( )
位置と <d> を項目名として <B> 表と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
同じ軸のセットでデータフレーム <D> <c> カラムと <D> カラム <b> とデータフレーム <D> <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
表 <B> をインデックスでソートし、 <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<a> という名前のエクセルの全部のシートから読み込む	pd . read_excel ( <a> , sheet_name = None )	markeredgewidth = <a> pd . read_excel ( <a> , sheet_name = None )
<a> と <b> 列に重複はあるのかどうかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
表データ <B> のカラム <a> をダミー変数化し、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
表データ <A> の <b> コラムの分を調べる	<A> [ <b> ] . dt . minute	<A> [ <b> ] . dt . minute
<D> <c> カラムと表 <D> <b> と表 <D> <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 全体を <b> 列の値に基づいてソートし、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <A> のカラム名を <b> から <c> に、 <d> から <e> に変更し、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<A> の位置を軸にソートし、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> の <b> を削除を <A> にする	<A> = <A> . drop ( <b> , axis = 1 )	<b> <A> = <A> . drop ( <b> , axis = 1 )
データフレーム <B> の <a> を未入力の値に置換し、未入力の値がある行をドロップして、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> の欠損値を <A> に置き換えて、 <B> とする	<B> = <B> . fillna ( <A> )	<B> = <B> . fillna ( <A> )
データフレームを <a> からタブ区切りで読み込む	pd . read_csv ( <a> , sep = '\t' )	pd . read_csv ( <a> , sep = '\t' )
<c> をキーとして、表データ <A> と表データ <B> を結合する	pd . merge ( <A> , <B> , on = <c> )	'%Y-%m-%d' pd . merge ( <A> , <B> , on = <c> )
プロットに格子線を描画する	plt . grid ( True )	sns . grid ( True )
表データ <B> の未記入の値が存在する行をドロップを <A> にする	<A> = <B> . dropna ( )	= <B> . dropna ( )
表データ <B> の表属性 <a> をソートして、置き換える	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
表 <B> の <a> カラムをソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
<B> 中の列に存在する <a> の個数を算出する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> の <b> 表属性をグループ化して、値ごとのデータ件数を求める	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
<b> というエクセルデータの <c> 番目のシートを表データに格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<B> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <B> 中のそれぞれのカラムに存在する <a> の個数の合計値を確認する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
表データ <A> の内容を表示してみる	<A> . head ( )	head . head ( )
エクセルファイル <a> の <b> 番目のシートからデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表データ <A> 中のカテゴリ変数をダミー変数化する	pd . get_dummies ( <A> )	) pd . get_dummies ( <A> )
フォーマットを指定して、 <B> の <a> を日付型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	format = pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )
表 <A> とデータフレーム <B> を横方向にくっつける	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
<b> と <c> を逆順にソートし、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
列番号 <c> を位置に、 <b> をデータフレームに格納して、 <A> にする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
<a> というエクセルデータからデータフレームを読み込んで、 <B> とする	<B> = pd . read_excel ( <a> , sheet_name = None )	pd . read_csv ( <a> , sheet_name = None )
表データ <B> 中の <a> 列に重複がある行をドロップを <C> とする	<C> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
同じ軸のセットで <D> <c> と表 <D> <b> 表属性と表 <D> <a> 表属性を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> と <c> を大から小へとソートし、 <A> に代入する	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <D> の表属性 <c> とデータフレーム <D> の <b> と <D> の <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
棒グラフの位置を真ん中として、 <A> と <B> の棒グラフを表示する	plt . bar ( <A> , <B> , align = 'center' )	<E> = plt . bar ( <A> , <B> , align = 'center' )
表データ <B> 内の <a> を欠損に置換し、欠損が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
表 <C> 中の <b> と <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<C> のカラム <b> と <a>	<C> [ [ <b> , <a> ] ]	<E> [ [ <b> , <a> ] ]
<A> ( データフレーム ) のカラム <b> をソート	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表データ <B> を <a> を軸に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> の先頭 5 行	<A> . head ( )	pie . head ( )
データフレーム <A> の表属性 <c> の月を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . month	<A> [ <b> ] = <A> [ <c> ] . dt . month
表データ <C> の <b> と <a> カラムを値が大きい順に並び替えて、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
位置と <c> カラムを項目名として <A> と <B> 表を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表データを <b> ファイルパスからカンマ区切りで読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	sns = pd . read_csv ( <b> , sep = ',' )
<A> の列 <b> と <c> を削除	<A> . drop ( [ <b> , <c> ] , axis = 1 )	1 . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> 全体を位置を軸にソートし、 <A> にする	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
そのとき、グラフの色を紫色とする	@option color = 'purple'	x @option markerfacecolor = 'purple'
表 <B> と <A> 表を縦方向に一つにまとめ、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	= pd . concat ( [ <B> , <A> ] )
表 <A> 内の欠損を削除を <B> に代入する	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
データフレーム <A> の <b> と表属性 <c> と <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
データフレーム <A> 全体を <b> の値に基づいてソートし、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
表データ <A> 中の未記入の値がある行を消し、 <B> に代入する	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
表データ <D> コラム <c> と <D> <b> と <D> データフレーム <a> コラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
データフレーム <D> の <c> と <D> 表の表属性 <b> と <D> 表の <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> を <a> という名前で保存する	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<B> 中の未記入の値がある行を削除を <A> とする	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
表 <B> 内の欠損値を <A> で埋めて、置き換える	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
<A> の <b> ごとに列 <c> の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表 <A> 中の未入力の値が存在する行を落とす	<A> . dropna ( )	<A> . dropna ( )
<b> というエクセルの <c> シート名を読んで、 <A> にする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	to_excel = pd . read_excel ( <b> , sheet_name = <c> )
<D> <c> コラムと <D> 表 <b> と <D> 表 <a> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
カンマ区切りで CSV ファイル <a> ( ファイル名 ) をデータフレームとして読んで、 <B> に代入する	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
表 <A> の中の NaN をドロップし、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
同じ軸のセットでデータフレーム <A> <b> と <A> <c> と <A> 列 <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> 中のコラム <a> に重複はあるかどうか調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <A> にある <b> を欠損値に置換する	<A> . replace ( <b> , np . nan )	sns . replace ( <b> , np . nan )
表 <B> の表属性 <a> の一意の値を調べる	<B> [ <a> ] . unique ( )	<B> [ <a> ] . unique ( )
データフレーム <A> 中の欠損を直前の行の値で埋めて、インプレースする	<A> . fillna ( method = 'ffill' , inplace = True )	fillna <A> . fillna ( method = 'ffill' , inplace = True )
<b> を one - hot 表現にして、 <A> にする	<A> = pd . get_dummies ( <A> [ <b> ] )	sns = pd . get_dummies ( <A> [ <b> ] )
表 <B> 全体を <a> に沿ってソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <B> 中の未入力の値を含む行を消し、 <A> にする	<A> = <B> . dropna ( )	= <B> . dropna ( )
データフレーム <A> 内の欠損値を落とし、置き換える	<A> = <A> . dropna ( )	<B> . dropna ( inplace = True )
<B> ( データフレーム ) の表属性 <a> を順番になるように並び替え、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表データ <B> 中のそれぞれの列に存在する <a> の個数の合計値	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
そのとき、色は青で表示することとする	@option color = 'blue'	@option color = 'blue'
<b> という名前のエクセルの <a> シート名をデータフレームとして読んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> 内の未記入の値を <B> として、置き換える	<A> = <A> . fillna ( <B> )	<A> . fillna ( <B> , inplace = True )
<A> 全体をカラム <b> を元に昇順で並び替え、再代入する	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表データ <A> の欠損値が存在する行をドロップして、インプレースする	<A> . dropna ( inplace = True )	dropna . dropna ( inplace = True )
表データ <A> 内の欠損値を <B> に置き換えて、再代入する	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
表データ <A> 内のそれぞれの列にある <b> の個数の合計を見る	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
図を表示する	plt . show ( )	sns . show ( )
<A> 中の欠損を表 <A> の平均値で埋めて、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) ) )
データフレーム <B> 中の <a> を未記入の値に置換し、未記入の値が存在する行をドロップを <B> に代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表 <B> 内の未記入の値を <A> として、 <C> とする	<C> = <B> . fillna ( <A> )	<C> = <B> . fillna ( <A> )
<B> の <a> を未入力の値に置換し、未入力の値がある行を消して、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<b> 番目の列を位置に設定して、 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = <b> )	<D> = pd . read_csv ( <a> , index_col = <b> )
表 <C> のカラム <b> を位置、 <a> をカラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	<A> . pivot_table ( index = <b> , columns = <a> )
<D> の <a> コラムについて、 <c> を位置、 <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	pivot_table . pivot_table ( index = <a> , columns = <b> , values = <a> )
表データ <A> の <b> を削除を <A> にする	<A> = <A> . drop ( <b> , axis = 1 )	<b> <A> = <A> . drop ( <b> , axis = 1 )
同じ x 軸と y 軸でデータフレーム <A> の表属性 <b> と <A> データフレームの <c> 表属性とデータフレーム <A> の <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> と <b> 列を逆順にソートして、インプレースする	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<a> df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )
データフレーム <C> 内の <b> とコラム <a> に重複はあるのかどうか	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> から <b> という CSV ファイルを書き出す	<A> . to_csv ( <b> )	plt . savefig ( <b> )
<a> と列 <b> に重複はあるかどうか確認する	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
<A> の <b> の値を昇順でソートする	<A> . sort_values ( <b> )	<B> . sort_values ( <b> )
表 <D> の <a> カラムについて、 <c> カラムを位置、 <b> をカラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
ラベルを <a> として、 <C> と <B> の折れ線グラフを表示する	plt . plot ( <C> , <B> , label = <a> )	pd . merge ( <C> , <B> , label = <a> )
データフレーム <B> のカラム <a> についての箱ひげ図を描画する	plt . boxplot ( <B> [ <a> ] )	plt . boxplot ( <B> [ <a> ] )
そこで、円グラフ上に構成割合を示す小数点以下 2 桁までの数値をパーセントで表示することにする	@option autopct = '%.2f%%'	@option autopct = '%.2f%%'
データフレーム <B> と <C> データフレームを縦方向に連結を <A> に代入する	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
表データ <B> の表属性 <a> の曜日を見る	<B> [ <a> ] . dt . weekday_name	<B> [ <a> ] . dt . weekday_name
<B> の <a> コラムの一意の値を見る	<B> [ <a> ] . unique ( )	<B> [ <a> ] . unique ( )
列番号 <a> を位置に、 <b> を読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<a> をソートし、置き換える	df = df . sort_values ( <a> )	df = df . sort_values ( <a> )
<B> の中の <a> を欠損に置換し、欠損がある行をドロップする	<B> . replace ( <a> , np . nan ) . dropna ( )	markeredgewidth = <a> . replace ( <a> , np . nan ) . dropna ( )
同じ x 軸と y 軸で <D> 表データ <c> カラムと表データ <D> <b> と表データ <D> カラム <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の表属性 <b> の名前を <c> に、 <d> 表属性の名前を <e> に変更する	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )
エクセルファイル <b> の <c> シート名から読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	sns = pd . read_excel ( <b> , sheet_name = <c> )
表データ <A> 中の <b> を欠損に置換し、欠損が存在する行を消して、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表 <D> カラム <c> と <D> <b> と <D> <a> についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
位置と <a> 表属性をキーとして <C> と <B> 表データを結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <A> の <b> と <A> の <c> とデータフレーム <A> の <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> のカラム名を <b> から <c> に変更して、置き換える	<A> = <A> . rename ( columns = { <b> : <c> } )	df = <A> . rename ( columns = { <b> : <c> } )
<C> の <a> 表属性の年を表示し、  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . year	<D> [ <b> ] = <C> [ <a> ] . dt . year
<A> の重複要素がある行を取り除いて、 <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
データフレーム <A> の <b> コラムの要素を表示する	<A> [ <b> ] . values	<B> [ <a> ] . values
表 <A> 内の未入力の値を <A> の平均値で埋め、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) , inplace = True )
表示する棒の数を <b> として、 <A> のヒストグラムを表示する	plt . hist ( <A> , bins = <b> )	plt . hist ( <A> , bins = <b> ) )
<A> のカラム <b> と <A> 表データの <c> と表データ <A> の <d> カラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> ( データフレーム ) の <b> と表属性 <a> を値が大きい順にする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> と <a> を大から小へと並び替えて、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <B> の列 <a> についての標準偏差	<B> [ <a> ] . std ( )	plt . std ( <B> [ <a> ] )
表 <B> の <a> に重複があるのかどうか確認する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
位置と <a> を項目名として <C> データフレームと <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
表データ <A> の欠損の合計を調べる	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
左外部結合で <A> 表データと表データ <B> を結合する	pd . merge ( <A> , <B> , how = 'left' )	'left' pd . merge ( <A> , <B> , how = 'left' )
<b> 区切りで表データとして CSV ファイル <a> ( ファイル名 ) を読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
データフレーム <B> 中の <a> を欠損値に置換し、欠損値がある行を削除する	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
表データ <B> の中に存在する <a> を欠損値に置き換える	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
エクセルの <a> をデータフレームにする	pd . read_excel ( <a> )	markeredgewidth <a> )
<C> の <b> と <a> コラムの相関を調べる	<C> [ [ <b> , <a> ] ] . corr ( )	<D> [ [ <b> , <a> ] ] . corr ( )
表 <A> の <b> 列をグループ化して、値ごとのデータ件数	<A> . groupby ( <b> ) . size ( )	<b> <A> . groupby ( <b> ) . size ( )
表 <A> の位置 <b> の名前を <c> に変更し、再代入する	<A> = <A> . rename ( index = { <b> : <c> } )	<A> = <A> . rename ( index = { <b> : <c> } )
表 <A> 全体を <b> の値を元に並び替えて、置き換える	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
<A> を <b> の値で並び替えて、 <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表 <D> の表属性 <c> と <D> 表の <b> と表 <D> の <a> 表属性についての箱ひげ図を描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> 番目の列を位置にして、 <b> から読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表 <A> の中の <b> を未記入の値に置換し、未記入の値がある行を削除し、置き換える	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	df . replace ( <b> , np . nan ) . dropna ( inplace = True )
表 <A> 中の <b> と <c> に重複はあるか調べる	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<B> 中の NaN を <A> で埋める	<B> . fillna ( <A> )	plt . fillna ( <B> )
先頭の列を位置に指定して、 <a> をデータフレームとして読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
データフレーム <C> の表属性 <a> の月を確認して、  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . month	<b> <C> [ <a> ] = <C> [ <a> ] . dt . month
<B> 中の NaN を <A> で埋め、置き換える	<B> = <B> . fillna ( <A> )	<A> . fillna ( <B> , inplace = True )
位置と <c> 表属性をキーとして <A> と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> 中の <c> を欠損に置換し、欠損が存在する行を削除を <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
分割数を <B> 、ビンの名前を <A> として、 <D> データフレームの <c> をビン分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	pd . cut ( <D> [ <c> ] , <B> , label = <A> )
<D> <c> と <D> 表 <b> と <D> <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<C> ( データフレーム ) の <b> と表属性 <a> を値が大きい順にして、 <D> とする	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> 中の欠損を含む行を消して、 <B> とする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
表データ <B> 内の重複している行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
表データ <A> の中の未記入の値がある行をドロップして、置き換える	<A> . dropna ( inplace = True )	<A> . dropna ( inplace = True )
分割数を <D> として、 <B> データフレームの <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
同じ軸のセットで表 <D> <c> と <D> <b> 列と <D> <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
ラベル名を <a> として、 <C> , <B> をグラフで描画する	plt . plot ( <C> , <B> , label = <a> )	<E> = pd . merge ( <C> , <B> , label = <a> )
表 <A> 内の未入力の値の個数を計算する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<B> を <a> コラムの値を軸に並び替え、 <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<E> のコラム <d> の名前を <c> に、 <b> コラムの名前を <a> にリネームする	<E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> . rename ( columns = { <c> : <b> : <a> } )
表 <A> を <b> コラムに沿ってソートして、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <B> の <c> と <d> コラムを降順に並び替えて、 <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表 <D> <c> 表属性と表 <D> 表属性 <b> と <D> <a> 表属性の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
そのとき、グラフ線の見た目を破線とする	@option linestyle = 'dashed'	@option linestyle = 'dashed'
さらに、エラー処理は厳密にする	@option errors = 'strict'	errors = pd . read_csv ( <a> )
表 <B> 中の <c> を未入力の値に置換し、未入力の値が存在する行を削除し、 <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
先頭の列を位置と設定して、 <b> をデータフレームとして読んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
表 <C> の <b> と <a> を逆順に並び替えて、置き換える	<C> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> という名前のエクセルファイルの <c> を表データに格納し、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	] = pd . read_excel ( <b> , sheet_name = <c> )
表 <A> の <b> と表属性 <c> ごとに <d> の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
表 <A> の <b> を昇順にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <A> の欠損値を <A> の平均値で埋め、 <B> にする	<B> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) ) )
<C> ( データフレーム ) の <b> とカラム <a> を逆順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <D> の <c> と <b> 列と <a> についての箱ひげ図を描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の <b> コラムとコラム <c> の相関係数	<A> [ [ <b> , <c> ] ] . corr ( )	df [ [ <b> , <c> ] ] . corr ( )
表データ <B> の <c> 表属性を中央値で分割し、 <A> とする	<A> = pd . qcut ( <B> [ <c> ] , 2 )	df = pd . qcut ( <B> [ <c> ] , 2 )
先頭の列をインデックスと設定して、 <a> をデータフレームに格納する	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
データフレーム <B> の列名を <c> から <d> にリネームして、 <A> に代入する	<A> = <B> . rename ( columns = { <c> : <d> } )	1 = <B> . rename ( columns = { <c> : <d> } )
<A> 内の重複している行を削除して、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
<a> という名前のエクセルデータの <b> をデータフレームとして読む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
表データ <B> 中の <c> を欠損に置換し、欠損が存在する行をドロップし、 <A> にする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
同じグラフ内で表データ <A> <b> 表属性と <A> 表データ <c> と <A> 表データ <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> のコラム <a> の月	<B> [ <a> ] . dt . month	<B> [ <a> ] . dt . month
<B> を <a> でソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の <b> の名前を <c> に変更して、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	df = <A> . rename ( columns = { <b> : <c> } )
表 <A> 内の <b> に重複がある行を消し、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
エクセルファイル <b> の <c> シート名をデータフレームとして読み込んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	pd . read_excel ( <A> , sheet_name = <b> , sheet_name = <c> )
<B> の <c> と <d> 表属性を大きい順にソートを <A> とする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	sns = <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表データ <B> の <a> 列に重複は存在するのか確認を表示する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <A> を <b> の値に基づいてソートする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
表属性 <b> と <a> を値が大きい順にして、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = df . sort_values ( [ <b> , <a> ] , ascending = False )
<B> の <a> コラムを軸に昇順でソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表属性 <b> と <c> を値が大きい順に並び替えて、 <A> に代入する	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
ヘッダーを指定せずに <a> ファイル名を読み込む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
データフレーム <B> 内の欠損値を落とし、 <A> とする	<A> = <B> . dropna ( )	<B> = <B> . dropna ( )
表 <B> の <a> についてのヒストグラムをプロットする	plt . hist ( <B> [ <a> ] )	pd . hist ( <B> [ <a> ] )
データフレーム <B> 内のカラムに存在する <a> の個数の合計	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
データフレーム <A> 内の重複する行をドロップする	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
グラフ枠の大きさを <a> x6 と設定する	plt . figure ( figsize = ( <a> , 6 ) )	color = plt . figure ( figsize = ( <a> , 6 ) )
表 <A> のコラム <b> ごとにコラム <c> の数	<A> . groupby ( [ <b> ] ) [ <c> ] . count ( )	<b> <A> . groupby ( [ <c> ] ) [ <d> ] . count ( )
CSV ファイル <a> ( ファイル名 ) を表として読み込んで、 <B> とする	<B> = pd . read_csv ( <a> )	<B> = pd . read_csv ( <a> )
表 <A> の <b> 表属性と <A> 表の <c> と <A> 表の表属性 <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> ごとに <a> カラムの数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
<C> ( データフレーム ) の <b> カラムと <a> を逆順にして、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の <b> と <A> 表のカラム <c> と <A> 表のカラム <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> 内にある <a> を未記入の値に置換して、再代入する	<B> = <B> . replace ( <a> , np . nan )	<B> = <B> . replace ( <a> , np . nan )
<A> ( データフレーム ) の <b> と <c> 表属性を大から小へとして、インプレースする	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	sns . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
表データ <B> 中の <a> に重複はあるかどうか確認する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表データ <B> の未入力の値を <C> とし、 <A> とする	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
表データ <B> を表属性 <a> に基づいてソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
<A> を位置でソートを <B> とする	<B> = <A> . sort_index ( )	sort_index = <A> . sort_index ( )
列 <b> と <a> 列を値が大きい順にし、インプレースする	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	<A> . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )
<B> と <C> を縦方向で結合し、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
表データ <B> 中の <c> を欠損値に置換し、欠損値が存在する行をドロップを <A> とする	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )	<A> = <B> . replace ( <c> , np . nan ) . dropna ( )
位置と <c> を項目名として <A> と <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> の列 <a> を昇順で並び替えて、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
データフレーム <B> を <a> という名前のエクセルファイルに書き出す	<B> . to_excel ( <a> )	df . to_excel ( <a> )
データフレーム <B> 全体を <a> カラムの値を元に昇順でソートを <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
棒グラフの位置を真ん中として、 <B> と <A> の棒グラフを描く	plt . bar ( <B> , <A> , align = 'center' )	align = pd . read_csv ( <a> , align = 'center' )
表 <A> 全体を <b> を元にソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
表データ <B> 全体をカラム <a> を軸にソートを <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
表 <A> 中で重複した行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
カンマ区切りで表を <a> から読んで、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
分割数を <D> 、ビンの名前を 0 始まりの連番として、 <B> 表の <c> を分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> , label = False )	sns = pd . cut ( <B> [ <c> ] , <D> , label = False )
表データ <D> <c> コラムと <D> <b> と <D> <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 中の欠損を落として、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
<B> 内の <a> に重複があるかチェック	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <E> の列の名前を <d> から <c> に、 <b> から <a> に変更し、置き換える	<E> . rename ( columns = { <d> : <c> , <b> : <a> } , inplace = True )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <A> の位置をリセットして、インプレースする	<A> . reset_index ( inplace = True )	<A> . reset_index ( inplace = True )
CSV ファイル <b> を読み込んで、 <A> とする	<A> = pd . read_csv ( <b> )	<b> = pd . read_csv ( <b> )
位置と <c> を項目名として <A> と <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
表 <B> のコラム <a> をグループ化して、値ごとのデータ件数	<B> . groupby ( <a> ) . size ( )	markeredgewidth . groupby ( <a> ) . size ( )
データフレーム <B> の <a> についての最頻値を抽出する	<B> [ <a> ] . mode ( )	mode [ <B> [ <a> ] . mode ( )
データフレーム <A> と <B> データフレームを縦方向に連結	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <B> 全体をカラム <a> の値でソート	<B> . sort_values ( <a> )	markeredgewidth . sort_values ( <a> )
表 <A> 内の <b> を NaN に置換し、 NaN が存在する行をドロップを <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
左側のデータのインデックスと右側のデータの <c> をキーとして、 <A> と表データ <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	sns . pd ( <A> , <B> , left_index = True , right_on = <c> )
表データ <A> とデータフレーム <B> を縦向きにマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<A> のインデックスをリセットし、置き換える	<A> . reset_index ( inplace = True )	<A> . reset_index ( inplace = True )
データフレーム <B> 中の <a> を NaN に置換し、 NaN がある行をドロップ	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
範囲を <b> から <a> として、 <C> のヒストグラムをプロットする	plt . hist ( <C> , range = ( <b> , <a> ) )	sns . hist ( <C> , range = ( <b> , <a> ) )
左側のデータのインデックスと右側のデータの <b> 列をキーとして 2 つのデータを結合して、 <A> にする	<A> = pd . merge ( df1 , df2 , left_index = True , right_on = <b> )	] = pd . merge ( df1 , df2 , left_index = True , right_on = <b> )
表 <A> の位置 <b> の名前を <c> に変更し、インプレースする	<A> . rename ( index = { <b> : <c> } , inplace = True )	<A> . rename ( index = { <b> : <c> } , inplace = True )
表データ <A> のそれぞれのカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<A> のコラム <b> と <A> の <c> と <A> の <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の中に重複があるかどうか確認する	<A> . duplicated ( )	df . duplicated ( )
<A> の未入力の値がある行をドロップして、 <B> にする	<B> = <A> . dropna ( )	dropna = <A> . dropna ( )
データフレーム <A> の <b> が <c> 以上のデータ	<A> [ <A> [ <b> ] >= <c> ]	<A> [ <A> [ <b> ] >= <c> ]
<b> と <a> を大きい順にソートを <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 内の欠損値を表データ <A> の平均値で埋めて、 <A> とする	<A> = <A> . fillna ( <A> . mean ( ) )	( <A> = <A> . mean ( ) , inplace = True )
<A> 内の列 <b> と列 <c> に重複があるのか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<A> に重複があるかどうか確認する	<A> . duplicated ( )	df . duplicated ( )
そこで、正方形のマーカーを表示する	@option marker = 's'	@option marker = 's'
表データ <A> の <b> の名前を <c> に、 <d> の名前を <e> に変更し、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表 <A> のそれぞれのカラムにある <b> の個数の合計値を求める	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
<b> と <a> 列を逆順にソートして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<A> の <b> コラムを軸に並び替えて、置き換える	<A> = <A> . sort_values ( <b> )	df . sort_values ( <b> , inplace = True )
<a> に重複があるのかどうかチェックする	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <A> を位置を軸にソートして、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
先頭の列をインデックスにして、 <b> パスをデータフレームに格納して、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
データフレーム <D> のカラム <c> とカラム <b> とカラム <a> について関係性を一気に表示する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . corr ( )
片方のテーブルにしかないデータも全て残して <A> ( データフレーム ) と <B> データフレームを一つにまとめる	pd . merge ( <A> , <B> , how = 'outer' )	<D> = pd . merge ( <A> , <B> , how = 'outer' )
表データ <A> のデータの詳細を確認する	<A> . info ( )	@option info . info ( )
<A> ( データフレーム ) の <b> 列をソートして、置き換える	<A> . sort_values ( <b> , inplace = True )	df . sort_values ( <b> , inplace = True )
<A> の <b> と <c> とカラム <d> についての箱ひげ図を描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> ごとに <c> の平均値を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
データフレーム <A> 全体を <b> コラムの値に基づいてソートし、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <A> を <b> という名前にして保存する	<A> . to_csv ( <b> )	plt . savefig ( <b> )
表データ <A> 内の <b> と <c> に重複があるのかどうか表示する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表 <A> の <b> と <c> を値が大きい順にソートして、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <A> を <b> カラムを軸にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<B> を <a> という名前でエクセル形式で保存する	<B> . to_excel ( <a> )	plt . savefig ( <a> )
データフレーム <B> の位置を振り直して、 <A> にする	<A> = <B> . reset_index ( )	sort_index = <B> . reset_index ( )
左側のデータのインデックスと右側のデータの <a> 列を項目名として、データフレーム <C> と <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sns . pd ( <C> , <B> , left_index = True , right_on = <a> )
<a> を項目名として、 <C> とデータフレーム <B> を一つにまとめる	pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
同じ軸で <A> 表の <b> と表 <A> の列 <c> と <A> の <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <B> 中の重複する行を削除を <A> とする	<A> = <B> . drop_duplicates ( )	df = <B> . drop_duplicates ( )
表データ <D> の <c> コラムと <D> データフレームの <b> とデータフレーム <D> のコラム <a> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> の未入力の値を直前の行の値で補い、 <A> とする	<A> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
表 <B> 中にある <a> を NaN に置き換える	<B> . replace ( <a> , np . nan )	df . replace ( <a> , np . nan )
表 <A> と表データ <B> を横に一つにまとめる	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
表データ <A> を <b> という名前でエクセルファイルに書き込む	<A> . to_excel ( <b> )	to_excel . to_excel ( <b> )
表 <D> の <c> と <b> と <a> について関係性を一気に表示する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . corr ( )
同じ軸のセットで <A> 表データ <b> 表属性と <A> <c> と <A> 表データ <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> の <b> と <A> 表データの <c> と <A> の <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <C> 内の <b> 表属性と <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
データフレーム <A> 中の <b> に重複がある行を消す	<A> . drop_duplicates ( subset = <b> )	<A> . drop_duplicates ( subset = <b> )
データフレーム <B> を <a> パスに書き出す	<B> . to_csv ( <a> )	df . to_csv ( <a> )
表 <B> と表 <C> を横方向にくっつけて、 <A> とする	<A> = pd . merge ( <B> , <C> )	pd . merge ( <B> , <A> )
表データ <A> <b> と <A> <c> と表 <A> カラム <d> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> に重複がある行を削除	df . drop_duplicates ( subset = <a> )	df . drop_duplicates ( subset = <a> )
一番左の列を位置に指定して、 <a> からデータフレームとを読み込む	pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
ビン数を <D> として、 <B> のカラム <c> を分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
全結合で <B> 表と <A> 表を一つにまとめて、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
表 <A> 中の欠損値を消して、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
境界値を <D> として、 <B> の <c> カラムをビン分割して、 <A> に代入する	<A> = pd . cut ( <B> [ <c> ] , <D> )	<A> = pd . cut ( <B> [ <c> ] , <D> )
<A> と <B> を縦方向にくっつける	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
凡例を最も適切な位置に付ける	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
表 <D> の <c> と <D> データフレームの <b> と <D> の <a> 列の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
ラベルは <c> として、 <A> と <B> を折れ線グラフで描く	plt . plot ( <A> , <B> , label = <c> )	pd . merge ( <A> , <B> , label = <c> )
データフレーム <C> の <b> と <a> を値が大きい順にソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> の <a> 表属性を位置として設定し、インプレースする	<B> . set_index ( <a> , inplace = True )	<B> . set_index ( <a> , inplace = True )
そこで、文字コードは shift - jis をすることにする	@option encoding = 'shift_jis'	start = pd . read_csv ( <a> , encoding = 'shift_jis' )
<A> 表属性 <b> と <A> データフレーム <c> と <A> 表属性 <d> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸のセットで <D> <c> と <D> <b> と表データ <D> <a> コラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<a> を y 軸に付ける	plt . ylabel ( <a> )	sns . ylabel ( <a> )
同じ軸のセットで <D> の <c> と表データ <D> の <b> カラムと表データ <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<b> 区切りで <a> をデータフレームとして読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
<D> の <c> と <b> と <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> をカラム <a> を元に昇順で並び替え、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<a> を <b> 区切りで表データとして読み込む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <b> , sep = <a> )
データフレーム <A> と <B> に対して、 <c> 表属性をキーとしてデータを内部結合する	pd . merge ( <A> , <B> , on = <c> )	sns . pd ( <A> , <B> , on = <c> )
データフレーム <A> の列 <b> と列 <c> を値が大きい順に並び替え、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<C> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )
<B> ( データフレーム ) の <a> を値が小さい順にし、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
同じ軸のセットでデータフレーム <D> の <c> 表属性と <D> の <b> と <D> データフレームの <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> を <a> カラムでソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
同じ軸のセットで表 <A> <b> と <A> <c> と表 <A> <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> カラムが <a> 以上のデータ	<C> [ <C> [ <b> ] >= <a> ]	<A> [ <C> [ <b> ] >= <a> ]
同じグラフ内で <D> 表の <c> と <D> の <b> 列と表 <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	<F> = <D> [ <c> ] . dt . boxplot ( [ <b> ] , <D> [ <a> ] ] )
そのとき、ヘッダーは無しこととする	@option encoding = 'shift_jis'	@option encoding = 'shift_jis'
<B> 中の欠損値を <C> に置換して、 <A> とする	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
表データ <C> の <b> カラムと <a> を降順にソートし、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
分割数を <C> 、ビンの名前を <D> として、表データ <A> の <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表データ <B> を位置でソートし、 <A> に代入する	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
<A> をインデックスを元に昇順で並び替える	<A> . sort_index ( )	df . sort_index ( )
表 <A> 内のそれぞれのカラムに存在する <b> の個数の合計値を表示する	<A> . isin ( [ <b> ] ) . sum ( )	<b> . isin ( [ <a> ] ) . sum ( )
表 <B> のコラム <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	duplicated if <B> . duplicated ( subset = <a> ) :
さらに、グラフの打点の形を十字とする	@option marker = 'x'	@option marker = 'x'
データフレーム <B> 中の <a> を欠損値に置換し、欠損値がある行を削除し、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	df = <B> . replace ( <a> , np . nan ) . dropna ( )
<A> 中の <b> に重複があるかどうか	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
表 <A> の <b> をインデックスとして設定し、インプレースする	<A> . set_index ( <b> , inplace = True )	<A> . set_index ( <b> , inplace = True )
<b> という名前のエクセルの全部のシートから読み込み、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = None )	to_excel = pd . read_excel ( <b> , sheet_name = None )
表 <A> の全ての列の重複する値がある行をドロップして、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表データ <A> 内のそれぞれのカラムに存在する <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
そのとき、マーカーの種類を菱形とする	@option marker = 'D'	@option marker = 'D'
データフレーム <A> のものを得る	<A> [ <A> . duplicated ( ) ]	if <A> . duplicated ( ) ]
表 <A> 全体を <b> 表属性の値でソートし、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
表 <A> 内の重複をを見る	<A> . duplicated ( )	[ <A> . duplicated ( ) ]
<B> の中の NaN を <C> に置換し、 <A> にする	<A> = <B> . fillna ( <C> )	<B> = <B> . fillna ( <C> )
<A> ( データフレーム ) の表属性 <b> と表属性 <c> を大から小へとし、再代入する	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<B> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
先頭の列をインデックスにして、ファイル <b> をデータフレームとして読み、 <A> にする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
<a> コラムをキーとして、表 <C> と <B> をマージする	pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
同じ軸でデータフレーム <D> <c> コラムと <D> <b> とデータフレーム <D> <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 中の欠損値を <A> の平均値で補い、置き換える	<A> . fillna ( <A> . mean ( ) , inplace = True )	<A> . fillna ( <A> . mean ( ) , inplace = True )
左側のデータのインデックスと右側のデータの <a> をキーとして、 <C> 表データと <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
カラム <a> に重複がある行を drop を <B> とする	<B> = df . drop_duplicates ( subset = <a> )	df = df . drop_duplicates ( subset = <a> )
<A> をインデックスを元に昇順でソートし、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <B> と <C> を縦方向に連結を <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	sns = pd . concat ( [ <B> , <C> ] )
データフレーム <A> の列 <b> に重複がある行を落とし、置き換える	<A> . drop_duplicates ( subset = <b> , inplace = True )	df . drop_duplicates ( subset = <b> , inplace = True )
表 <B> の <a> 行目を落とし、 <C> にする	<C> = <B> . drop ( <a> )	df = <B> . drop ( <a> )
<A> 内の重複している行を削除して、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
左外部結合で <A> データフレームと <B> をマージする	pd . merge ( <A> , <B> , how = 'left' )	'left' pd . merge ( <A> , <B> , how = 'left' )
列番号 <b> を位置に、ファイル名 <a> をデータフレームに格納する	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
今までのプロットを <a> というファイルで保存する	plt . savefig ( <a> )	plt . savefig ( <a> )
表 <C> の <b> と <a> を削除	<C> . drop ( [ <b> , <a> ] , axis = 1 )	1 . drop ( [ <b> , <a> ] , axis = 1 )
グラフの枠のサイズを横 <b> 縦 <a> に変更する	plt . figure ( figsize = ( <b> , <a> ) )	figure = plt . figure ( figsize = ( <b> , <a> ) )
表データ <A> の中の未記入の値がある行をドロップして、 <B> とする	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
<A> のカラム名を <B> とする	<B> = <A> . columns	<B> = <A> . columns
表 <A> を位置を元に並び替えて、再代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
<A> の <b> と <A> 表データの <c> と <A> のコラム <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の振り直して、元の位置を削除する	<A> . reset_index ( drop = True )	<B> . reset_index ( drop = True )
表データ <B> 内の <a> に重複がある行を削除する	<B> . drop_duplicates ( subset = <a> )	<B> . drop_duplicates ( subset = <a> )
CSV ファイル <a> ( ファイル名 ) から表を <b> 区切りで読む	pd . read_csv ( <a> , sep = <b> )	sep = <a> pd . read_csv ( <a> , sep = <b> )
同じグラフ内で <A> 列 <b> と <A> <c> と表データ <A> <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
カラム <d> をキーとして、 <B> データフレームと <C> データフレームをマージし、 <A> にする	<A> = pd . merge ( <B> , <C> , on = <d> )	<A> = pd . merge ( <B> , <C> , on = <d> )
表 <A> のコラム <b> に重複があるならば	if <A> . duplicated ( subset = <b> ) :	duplicated if <A> . duplicated ( subset = <b> ) :
<b> という名前のエクセルファイルの <a> を表データに格納する	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
<A> 中の <b> を未入力の値に置換し、未入力の値が存在する行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
そのとき、マーカーの形はダイヤモンドことにする	@option marker = 'D'	@option marker = 'D'
データフレーム <A> の <b> の曜日の数値型	<A> [ <b> ] . dt . dayofweek	<b> <A> [ <a> ] . dt . dayofweek
データフレーム <C> の <b> と <a> を大きい順にソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> 中の未入力の値を <C> に置き換え、 <A> にする	<A> = <B> . fillna ( <C> )	= <B> . fillna ( <C> )
表 <A> の NaN を含む行を消し、置き換える	<A> . dropna ( inplace = True )	df = <A> . dropna ( )
データフレーム <B> 中のそれぞれの列に存在する <a> の個数を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<D> . isin ( [ <a> ] ) . sum ( )
<a> カラムと <b> を値が大きい順に並び替えて、インプレースする	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<D> . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )
エクセルファイル <b> の <a> を表データに格納する	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
データフレーム <A> の <b> と <c> の相関係数を調べる	<A> [ [ <b> , <c> ] ] . corr ( )	<A> [ [ <b> , <c> ] ] . corr ( )
<B> 全体をカラム <c> を元に昇順で並び替え、 <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
表データ <B> 内の <a> に重複がある行を落として、置き換える	<B> . drop_duplicates ( subset = <a> , inplace = True )	df . drop_duplicates ( subset = <a> , inplace = True )
<A> 中にある <b> を NaN に置き換えて、置き換える	<A> = <A> . replace ( <b> , np . nan )	df . replace ( <b> , np . nan , inplace = True )
<B> の <a> コラムのユニーク値	<B> [ <a> ] . unique ( )	<B> [ <a> ] . unique ( )
データフレーム <A> の欠損値を消す	<A> . dropna ( )	<B> . dropna ( )
<A> を <b> カラムを元にソートして、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
<A> 中の未記入の値を <B> に置換し、 <A> とする	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
データフレーム <D> の <c> と表データ <D> の <b> 列と表データ <D> の <a> 列についての箱ひげ図を描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
分割数を <B> 、ビンのラベルを <A> として、データフレーム <D> の <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表 <A> 内の <b> 列に重複がある行を落として、インプレースする	<A> . drop_duplicates ( subset = <b> , inplace = True )	<A> . drop_duplicates ( subset = <b> , inplace = True )
データフレーム <A> で重複している行数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
左側のデータのインデックスと右側のデータのコラム <c> をキーとして、 <A> 表データと <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<D> の <c> コラムと <D> データフレームの <b> コラムとデータフレーム <D> の <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <A> のカラム名を <b> から <c> にリネームし、 <A> とする	<A> = <A> . rename ( columns = { <b> : <c> } )	1 = <A> . rename ( columns = { <b> : <c> } )
<B> の <a> を昇順でソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
表データ <A> の <c> カラムの秒を  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . second	[ <A> [ <b> ] = <A> [ <c> ] . dt . second
表 <A> <b> と <A> <c> と表 <A> <d> の箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> と <c> と <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
ビン数を <C> として、表データ <A> の <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	to_excel pd . cut ( <A> [ <b> ] , <C> )
<a> という名前のエクセルデータのシート全てからデータフレームを読む	pd . read_excel ( <a> , sheet_name = None )	to_excel pd . read_excel ( <a> , sheet_name = None )
同じ x 軸と y 軸で <D> 表の <c> と <D> 表の <b> と <D> の <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <A> の表属性 <b> と <c> と <d> についての箱ひげ図を描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じグラフ内でデータフレーム <D> コラム <c> と <D> <b> とデータフレーム <D> <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> 中のカラム <a> に重複がある行を削除を <B> とする	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
データフレーム <A> の <b> が <c> より小さいデータ	<A> [ <A> [ <b> ] <  <c> ]	plt <A> [ <A> [ <b> ] < <c> ]
表データ <B> の表属性 <a> をソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<A> ( データフレーム ) の <b> カラムと <c> を値が大きい順にする	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> の <b> 列ごとに <c> 列の平均値	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<B> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表データ <A> の列 <b> についての箱ひげ図をプロットする	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
表データ <A> 内の NaN を落とし、置き換える	<A> = <A> . dropna ( )	<B> . dropna ( inplace = True )
インデックスとカラム <a> をキーとして表 <C> と表 <B> を一つにまとめ、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<A> 中の <b> に重複が存在するのかを調べる	<A> . duplicated ( subset = <b> )	<A> . duplicated ( subset = <b> )
<B> の <a> コラムを年月日の形式に変換する	pd . to_datetime ( <B> [ <a> ] )	sns . pd ( <B> [ <a> ] )
表 <A> の <b> を削除し、置き換える	<A> = <A> . drop ( <b> , axis = 1 )	df . drop ( <b> , axis = 1 , inplace = True )
さらに、ラインスタイルを破線とする	@option linestyle = 'dashed'	sns . set ( @option , header = None )
左外部結合で <B> と <A> をマージする	pd . merge ( <B> , <A> , how = 'left' )	'left' pd . merge ( <B> , <A> , how = 'left' )
表データ <B> 中に存在する <a> を未入力の値に置き換えて、置き換える	<B> . replace ( <a> , np . nan , inplace = True )	<B> = <B> . replace ( <a> , np . nan )
<A> ( データフレーム ) の <b> 表属性と <c> を降順に並び替えて、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <B> とデータフレーム <A> を縦向きに連結	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
<a> 表属性と表属性 <b> に重複はあるのか確認する	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
データフレーム <A> から重複する行を削除して、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
表 <B> と表 <A> を結合して、 <C> とする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
表データ <B> のコラム <a> の分	<B> [ <a> ] . dt . minute	<B> [ <a> ] . dt . minute
表データ <C> の <a> の曜日を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . weekday_name	<D> [ <b> ] = <C> [ <a> ] . dt . weekday_name
ビン数を <C> として、 <A> のカラム <b> を要素数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	] pd . qcut ( <A> [ <b> ] , <C> )
<A> の <c> の曜日の数値型を  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek	<A> [ <b> ] = <A> [ <c> ] . dt . dayofweek
<A> 中の <b> と <c> に重複はあるのかを確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	sns . duplicated ( subset = [ <b> , <c> ] )
表データ <C> の <b> と <a> を落とし、 <D> とする	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	sns = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <A> の <b> コラムと <A> の <c> と <A> の <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸で <D> の <c> と <D> の <b> と <D> データフレームの <a> コラムを箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 中の <b> に重複はあるかどうかチェックを表示する	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<A> の NaN をドロップし、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
表 <A> の <b> と <c> とカラム <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> 全体を <b> で並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
同じ x 軸と y 軸で <D> <c> 表属性と <D> 表 <b> と <D> <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> の表属性 <a> を四分位数ごとでビン分割し、 <C> にする	<C> = pd . qcut ( <B> [ <a> ] , 4 )	<A> = pd . qcut ( <B> [ <a> ] , 4 )
同じ軸でデータフレーム <D> の <c> コラムと <D> データフレームの <b> と <D> の <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
出力するグラフ枠の大きさを横幅 <b> 高さ <a> に指定する	plt . figure ( figsize = ( <b> , <a> ) )	<E> = plt . figure ( figsize = ( <b> , <a> ) )
<D> の <c> と <D> の <b> とデータフレーム <D> の <a> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
フォーマットを指定して、 <A> の <b> を datetime 型に変換する	pd . to_datetime ( <A> [ <b> ] , format = '%Y-%m-%d' )	sns . pd ( <A> [ <b> ] , format = '%Y-%m-%d' )
表データ <B> 中の <a> を未記入の値に置換し、未記入の値が存在する行を落とす	<B> . replace ( <a> , np . nan ) . dropna ( )	<B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> 内の <b> と <c> に重複が存在するのかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
同じグラフ内で <D> 表データの <c> と <D> 表データの <b> と <D> の表属性 <a> を箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データとして <b> 区切りで <a> パスを読み込む	pd . read_csv ( <a> , sep = <b> )	<b> pd . read_csv ( <a> , sep = <b> )
<a> カラムについてダミー変数をつくって、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
表 <A> 中の <b> を欠損に置換し、欠損が存在する行を消して、インプレースする	<A> . replace ( <b> , np . nan ) . dropna ( inplace = True )	<B> . replace ( <b> , np . nan ) . dropna ( inplace = True )
表データ <B> 中に存在する <c> を欠損値に置き換え、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	@option replace = <B> . replace ( <c> , np . nan )
<A> と <B> 表データを縦方向に一つにまとめる	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表 <C> の <b> と <a> を逆順にソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<a> 列についてダミー変数を生成して、 <B> にする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
<A> の列 <b> を消し、インプレースする	<A> . drop ( <b> , axis = 1 , inplace = True )	<A> . drop ( <b> , axis = 1 , inplace = True )
<A> の中の重複した行を削除し、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
同じ x 軸と y 軸で表データ <D> の <c> コラムと <D> の <b> と <D> 表データの <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
データフレーム <C> のカラム名を <b> から <a> に変更して、置き換える	<C> = <C> . rename ( columns = { <b> : <a> } )	<E> = <C> . rename ( columns = { <b> : <a> } )
同じ軸のセットで <A> <b> と <A> <c> カラムとデータフレーム <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<B> の <a> を昇順でソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<a> カラムと <b> を降順にして、置き換える	df . sort_values ( [ <a> , <b> ] , ascending = False , inplace = True )	<A> = df . sort_values ( [ <a> , <b> ] , ascending = False )
<b> という名前のエクセルの <a> 番目のシートから読み込んで、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
<A> の未記入の値の数	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
列 <c> を項目名として、 <A> と表 <B> を一つにまとめる	pd . merge ( <A> , <B> , on = <c> )	<D> = pd . merge ( <A> , <B> , on = <c> )
<B> 全体を <a> 表属性で並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
マーカーの大きさを <a> とする	markersize = <a>	plt . title ( <a> ) )
同じグラフ内で <A> 表データ <b> 表属性と表データ <A> <c> と <A> <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> の <a> を削除し、 <B> とする	<B> = <B> . drop ( <a> , axis = 1 )	<B> = <B> . drop ( <a> , axis = 1 )
<A> ( データフレーム ) の <b> を値が小さい順にする	<A> . sort_values ( <b> )	<A> . sort_values ( <b> )
データフレーム <A> から重複している値がある行を取り除く	<A> . drop_duplicates ( )	df . drop_duplicates ( )
表 <A> 中の <b> と <c> に重複はあるのかチェックする	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
データフレーム <A> を <b> 列を元にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<a> をキーとして、 <C> と <B> 表をマージし、 <D> にする	<D> = pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
位置と <d> コラムをキーとして <B> と表 <C> を一つにまとめて、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	sns = pd . merge ( <B> , <A> , left_index = True , right_on = <d> )
表 <C> の <b> と <a> を削除し、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表 <A> 内の重複した行を消し、再代入する	<A> = <A> . drop_duplicates ( )	<A> . drop_duplicates ( inplace = True )
表 <B> を <c> を元に並び替えて、 <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
<b> と <a> 表属性を大きい順にソートして、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
カラム <b> に重複がある行を drop を <A> とする	<A> = df . drop_duplicates ( subset = <b> )	<A> = df . drop_duplicates ( subset = <b> )
<B> ( データフレーム ) の <a> 列をソートして、 <B> に代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表 <B> のコラム <a> についての標準偏差を取得する	<B> [ <a> ] . std ( )	sns . std ( <B> [ <a> ] )
データフレーム <A> 内の欠損の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<B> のコラム <a> についての箱ひげ図を表示する	plt . boxplot ( <B> [ <a> ] )	plt . boxplot ( <B> [ <a> ] )
表 <A> の <b> と <c> をドロップ	<A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> . drop ( [ <b> , <c> ] , axis = 1 )
<a> カラムをソートを <B> に代入する	<B> = <B> . sort_values ( <a> )	sort_values = df . sort_values ( <a> )
データフレーム <A> の <b> 行目をドロップして、 <A> とする	<A> = <A> . drop ( <b> )	df = <A> . drop ( <b> )
左外部結合で <B> と <A> データフレームを結合し、 <C> とする	<C> = pd . merge ( <B> , <A> , how = 'left' )	df = pd . merge ( <B> , <A> , how = 'left' )
表 <B> 内の <a> を未入力の値に置換し、未入力の値が存在する行をドロップし、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> 中の <b> に重複はあるのかどうか見る	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<A> をインデックスを軸にソートし、 <A> に代入する	<A> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <B> の中の未入力の値を <A> に置換し、 <C> に代入する	<C> = <B> . fillna ( <A> )	figsize = <B> . fillna ( <A> )
列番号 <b> を位置に設定して、 <a> を読む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
表データ <A> の <c> の分を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . minute	<A> [ <b> ] = <A> [ <c> ] . dt . minute
データフレーム <A> 全体を位置を軸にソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
<A> 全体を列 <b> の値を軸にソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
データフレーム <A> の最初から <b> 行までを見る	<A> [ : <b> ]	: <A> [ <b> : ]
表 <B> 中にある <a> を欠損値に置換し、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<b> コラムと <c> を逆順にして、 <A> に代入する	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
<a> 番目の列をインデックスに、 <b> からデータフレームとを読み込んで、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
そこで、マーカーの種類は円ことにする	@option marker = 'o'	@option marker = 'o'
<B> の <a> を並び替え、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表データ <A> の先頭の <b> 行	<A> . head ( <b> )	head . head ( <b> )
データフレーム <A> 全体を <b> の値に沿ってソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
もしデータフレーム <B> の <a> に重複があるならば	if <B> . duplicated ( subset = <a> ) :	duplicated if <B> . duplicated ( subset = <a> ) :
<B> ( データフレーム ) のカラム <a> を小さい順に並び替え、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<A> 内の重複する行数を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> 全体を <b> 列の値でソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<A> 中の <b> 列と <c> に重複はあるかどうか	<A> . duplicated ( subset = [ <b> , <c> ] )	sns . duplicated ( subset = [ <b> , <c> ] )
<A> の <b> を NaN に置換し、 NaN が存在する行を削除	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
<A> の中の欠損を <A> の平均値で埋める	<A> . fillna ( <A> . mean ( ) )	fillna <A> . fillna ( <A> . mean ( ) )
x 軸の軸ラベルを <a> に設定する	plt . xlabel ( <a> )	plt . xlabel ( <a> )
<a> カラムを小さい順にして、インプレースする	df . sort_values ( <a> , inplace = True )	<C> . sort_values ( <a> , inplace = True )
表データ <C> のカラム <a> の年を  <C> [ <b> ] とする	<C> [ <b> ] = <C> [ <a> ] . dt . year	<D> [ <b> ] = <C> [ <a> ] . dt . year
表 <A> の <d> について、 <b> をインデックス、 <c> を表属性としたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<B> 内の欠損がある行を削除して、 <A> に代入する	<A> = <B> . dropna ( )	<A> = <B> . dropna ( )
データフレーム <A> 中の未入力の値の数を表示する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<a> カラムに重複はあるのか見る	df . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <C> の <b> の名前を <a> に変更し、 <D> に代入する	<D> = <C> . rename ( index = { <b> : <a> } )	<D> = <C> . rename ( index = { <b> : <a> } )
表データ <C> の <b> の名前を <a> に変更して、 <D> とする	<D> = <C> . rename ( columns = { <b> : <a> } )	<C> = <C> . rename ( columns = { <b> : <a> } )
表 <A> の中の欠損値の数を算出する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> ( データフレーム ) の <b> とカラム <c> を降順に並び替えて、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
値を <b> から <c> の範囲で、 <A> のヒストグラムを描写する	plt . hist ( <A> , range = ( <b> , <c> ) )	sns . hist ( <A> , range = ( <b> , <c> ) )
<A> の未記入の値をドロップする	<A> . dropna ( )	<A> . dropna ( )
データフレーム <C> の <b> コラムごとに <a> の数を算出する	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
<B> の列 <a> の要素を見る	<B> [ <a> ] . values	values [ <a> ] . values
先頭の列を位置と設定して、 <a> を読み、 <B> にする	<B> = pd . read_csv ( <a> , index_col = 0 )	<D> = pd . read_csv ( <a> , index_col = 0 )
<B> の未記入の値を <A> で埋めて、再代入する	<B> = <B> . fillna ( <A> )	@option fillna = <B> )
表 <B> の表属性 <a> の日にち	<B> [ <a> ] . dt . day	<B> [ <a> ] . dt . day
表 <B> 内の <a> に重複があるのかどうか確認する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
グラフ枠の大きさを横 <a> 縦 <b> と設定する	plt . figure ( figsize = ( <a> , <b> ) )	figure = plt . figure ( figsize = ( <a> , <b> ) )
表データ <A> の表属性 <b> についての箱ひげ図を描写する	plt . boxplot ( <A> [ <b> ] )	align plt . boxplot ( <A> [ <b> ] )
ヒストグラムで <B> の <a> 表属性を表す	plt . hist ( <B> [ <a> ] )	pd . hist ( <B> [ <a> ] )
データフレーム <B> の <a> 行目を落とし、再代入する	<B> = <B> . drop ( <a> )	df = <B> . drop ( <a> )
データフレーム <B> の <c> をソートを <A> にする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
ヒストグラムで <A> のコラム <b> を表す	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
表 <B> の <a> 内の前後の行の差分	<B> [ <a> ] . diff ( periods = 1 )	<D> [ <a> ] . diff ( periods = 1 )
データフレーム <A> のカラム <b> のユニークな要素数を見る	<A> [ <b> ] . nunique ( )	pd . qcut ( <A> [ <b> ] , 4 )
表データ <B> 内の <a> を欠損値に置換し、欠損値がある行をドロップして、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
列番号 <a> をインデックスに、ファイル名 <b> を読み込み、 <C> にする	<C> = pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <A> と <B> を縦にマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<B> 全体を <a> の値を元にソートを <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<b> というエクセルデータの <a> をデータフレームに格納し、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
<B> のカラム <a> のそれぞれのデータの出現頻度	<B> [ <a> ] . value_counts ( )	value_counts [ <B> [ <a> ] . value_counts ( )
<A> の中の重複している行を落とし、 <A> とする	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
左側のデータの位置と右側のデータの <a> をキーとして、 <C> と表 <B> を結合する	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<B> の列 <a> を並び替えて、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
列番号 <c> を位置と設定して、 <b> からデータフレームとを読み込み、 <A> とする	<A> = pd . read_csv ( <b> , index_col = <c> )	<b> <A> = pd . read_csv ( <b> , index_col = <c> )
列 <b> と <a> を値が大きい順にソートし、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> 中の <b> と <c> に重複があるのか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> 内の <b> を欠損に置換し、欠損が存在する行を落として、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> 中の NaN を直前の行の値で補い、置き換える	<A> . fillna ( method = 'ffill' , inplace = True )	<A> . fillna ( method = 'ffill' , inplace = True )
表 <B> を位置を元にソートを <A> にする	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
<B> の中の未入力の値を <A> に置換して、 <C> に代入する	<C> = <B> . fillna ( <A> )	figsize = <B> . fillna ( <A> )
データフレーム <A> 中の重複要素がある行を取り除き、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
表 <C> の <b> と <a> を大から小へとソートする	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
<b> というエクセルの <a> シート名をデータフレームとして読む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) と <C> を結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'outer' )	] = pd . merge ( <B> , <C> , how = 'outer' )
そこで、マーカーの内の色を赤色とする	@option markerfacecolor = 'red'	@option markerfacecolor = 'red'
表データ <A> から <b> ファイル名という CSV ファイルを書き出す	<A> . to_csv ( <b> )	plt . savefig ( <b> )
表 <A> と表データ <B> を結合する	pd . merge ( <A> , <B> )	pd . merge ( <A> , <B> )
<B> 内の <a> カラムに重複はあるか表示する	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
データフレーム <A> 内の欠損値を直前の行の値で補う	<A> . fillna ( method = 'ffill' )	<B> . fillna ( method = 'ffill' )
ビン数を <C> 、ビンの名前を 0 始まりの連番として、 <A> の <b> カラムを分割する	pd . cut ( <A> [ <b> ] , <C> , label = False )	pd . cut ( <A> [ <b> ] , <C> , label = False )
表 <A> の <b> と <c> ごとに表属性 <d> の値の合計値を算出する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
<B> の <a> を四分位数ごとで分割する	pd . qcut ( <B> [ <a> ] , 4 )	sns . pd ( <B> [ <a> ] , 4 )
同じグラフ内でデータフレーム <A> の <b> と <c> 表属性と <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
エクセルデータ <b> の <c> 番目のシートを表に格納して、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	<b> <A> = pd . read_excel ( <b> , sheet_name = <c> )
表データ <A> の <b> の名前を <c> に変更し、再代入する	<A> = <A> . rename ( index = { <b> : <c> } )	df = <A> . rename ( columns = { <b> : <c> } )
<a> という名前のエクセルのシート名 <b> からデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = <b> )	to_excel pd . read_excel ( <a> , sheet_name = <b> )
インデックスと <a> 列をキーとして <C> 表データと <B> をマージし、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	markeredgewidth = <a> )
表 <C> の <b> と <a> を逆順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<C> ( データフレーム ) の列 <b> と <a> 列を降順に並び替えて、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の表属性 <b> をヒストグラムにする	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
表データ <A> の行名を <B> に代入する	<B> = <A> . index	index <B> = <A> . index
ビン数を <B> 、ビンのラベルを <A> リストとして、 <D> の <c> をビン分割して、 <E> に代入する	<E> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )	<F> = pd . cut ( <D> [ <c> ] , <B> , label = <A> )
コラム <b> を小さい順にソートして、 <A> とする	<A> = df . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<A> 内にある <b> を未入力の値に置換して、 <A> とする	<A> = <A> . replace ( <b> , np . nan )	df = <A> . replace ( <b> , np . nan )
データフレーム <D> の <a> について、 <c> をインデックス、 <b> をコラムとしたピボットテーブルを作成する	<D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<E> . pivot_table ( index = <a> , columns = <b> , values = <a> )
表 <B> 全体を <a> 表属性を元にソートし、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <B> を <a> を元に並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
重複した行を消し、 <A> にする	<A> = <A> . drop_duplicates ( )	df = df . drop_duplicates ( )
<a> という名前のエクセルデータの <b> からデータフレームを読み込む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
同じ軸のセットで表データ <A> <b> 列と表データ <A> <c> と表データ <A> 列 <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <C> の <b> 表属性の名前を <a> にリネームし、再代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
<A> 内の重複している行を消し、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <B> 中の <a> 列に重複があるか調べる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
先頭の列をインデックスに指定して、 <b> からデータフレームとを読み込んで、 <A> とする	<A> = pd . read_csv ( <b> , index_col = 0 )	<b> <A> = pd . read_csv ( <b> , index_col = 0 )
データフレーム <B> 中の欠損値を含む行を消し、 <A> に代入する	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
表 <A> の <c> の年を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . year	year [ <b> ] = <A> [ <c> ] . dt . year
表 <B> と <A> データフレームをマージする	pd . merge ( <B> , <A> )	sns . pd ( <B> , <A> )
<c> をキーとして、 <A> 表と表 <B> をマージする	pd . merge ( <A> , <B> , on = <c> )	'%Y-%m-%d' = pd . merge ( <A> , <B> , on = <c> )
<B> ( データフレーム ) の <c> と列 <d> を大から小へとソートして、 <A> にする	<A> = <B> . sort_values ( [ <c> , <d> ] , ascending = False )	= <B> . sort_values ( [ <c> , <d> ] , ascending = False )
表データ <B> と <A> データフレームを縦向きに結合する	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
表 <A> のカラム <b> と <A> 表のカラム <c> と <A> 表の <d> カラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> 全体を <a> カラムを元にソートを <C> に代入する	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
列名を指定せずにファイルパス <a> を読む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
表を CSV ファイル <b> ( ファイル名 ) から <c> 区切りで読んで、 <A> にする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
表データ <D> <c> と表 <D> 列 <b> と <D> 表 <a> についての箱ひげ図を表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> と <A> 表を縦向きに結合する	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
表データ <B> に存在する <a> を未記入の値に置き換えて、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	day = <B> . replace ( <a> , np . nan )
左側のデータのインデックスと右側のデータのコラム <c> を項目名として、 <A> と <B> をマージする	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )
<B> を <a> という名前にして保存する	<B> . to_csv ( <a> )	plt . savefig ( <a> )
表データ <B> 内の <a> を欠損に置換し、欠損が存在する行をドロップを <C> にする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データとして <a> 区切りで <b> を読む	pd . read_csv ( <b> , sep = <a> )	sep = pd . read_csv ( <b> , sep = <a> )
<a> を項目名として、 <C> データフレームと <B> を一つにまとめて、 <D> とする	<D> = pd . merge ( <C> , <B> , on = <a> )	<D> = pd . merge ( <C> , <B> , on = <a> )
<a> 区切りで CSV ファイル <b> ( ファイル名 ) から表データを読み込み、 <C> にする	<C> = pd . read_csv ( <b> , sep = <a> )	<D> = pd . read_csv ( <b> , sep = <a> )
データフレーム <A> の <b> コラムとコラム <c> を降順にソートして、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<D> のカラム <c> と <D> 表データの <b> と表データ <D> の <a> カラムの箱ひげ図を一枚のグラフで描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> を <a> の値を軸にソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<a> カラムという列を落として、 <B> に代入する	<B> = df . drop ( <a> , axis = 1 )	<A> = <B> . drop ( <a> , axis = 1 )
<A> の <b> カラムの値を昇順でソートを <A> とする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
<B> 内にある <a> を未記入の値に置換して、置き換える	<B> = <B> . replace ( <a> , np . nan )	<B> = <B> . replace ( <a> , np . nan )
データフレーム <A> の <b> と <c> を値が大きい順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <A> 中の重複している行数を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<A> の未入力の値がある行をドロップして、再代入する	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
文字コードを shift_jis として、 <b> を読んで、 <A> とする	<A> = pd . read_csv ( <b> , encoding = 'shift_jis' )	<A> = pd . read_csv ( <b> , encoding = 'shift_jis' )
<A> <b> と表 <A> <c> コラムと <A> コラム <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
コラム <a> をキーとして、 <C> 表と表 <B> を結合する	pd . merge ( <C> , <B> , on = <a> )	merge pd . merge ( <C> , <B> , on = <a> )
データフレーム <B> 中の <a> を未入力の値に置換し、未入力の値が存在する行を削除	<B> . replace ( <a> , np . nan ) . dropna ( )	<D> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> の <b> と <A> データフレームの <c> と <A> データフレームの <d> コラムの箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ x 軸と y 軸で <D> データフレーム <c> とデータフレーム <D> カラム <b> と <D> データフレーム <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> をインデックスでソートを <A> にする	<A> = <B> . sort_index ( )	<A> = <B> . sort_index ( )
同じ x 軸と y 軸で <D> 表 <c> と <D> 表 <b> と <D> 表表属性 <a> を箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> の欠損値を含む行を消して、置き換える	<A> . dropna ( inplace = True )	df = <A> . dropna ( )
表データ <D> の <c> と <b> と <a> について関係性を一気に描写する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . nan )
左側のデータの位置と右側のデータの <a> をキーとして、 <C> 表と <B> 表をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
データフレーム <B> と表 <A> を横にマージし、 <C> とする	<C> = pd . merge ( <B> , <A> )	<D> = pd . merge ( <C> , <B> , how = 'outer' )
<B> の <e> について、表属性 <c> を位置、 <d> を表属性としたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<D> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
同じ x 軸と y 軸で <D> <c> カラムと表 <D> カラム <b> と <D> <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <C> の <b> と <a> を降順にソートを <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
同じ軸で <D> データフレームの <c> とデータフレーム <D> の <b> と <D> の <a> を箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> 内のそれぞれの列にある <b> の個数の合計を計算する	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
表 <B> 中の <a> に重複が存在するのか表示してみる	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <A> と <B> を縦にマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
<c> をキーとして、データフレーム <A> と <B> を結合する	pd . merge ( <A> , <B> , on = <c> )	<D> = pd . merge ( <A> , <B> , on = <c> )
表 <C> のカラム名を <b> から <a> にリネームして、インプレースする	<C> . rename ( columns = { <b> : <a> } , inplace = True )	<D> . rename ( columns = { <b> : <a> } , inplace = True )
左外部結合で <A> データフレームと <B> データフレームを結合する	pd . merge ( <A> , <B> , how = 'left' )	'left' pd . merge ( <A> , <B> , how = 'left' )
<b> とコラム <a> を大きい順にして、 <C> に代入する	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
<B> とデータフレーム <C> に対して、 <d> をキーとしてデータを結合し、 <A> とする	<A> = pd . merge ( <B> , <C> , on = <d> )	sns = pd . merge ( <B> , <C> , on = <d> )
表 <C> の <b> コラムをインデックス、コラム <a> をコラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	markeredgewidth = <b> , columns = <a> )
表データ <B> のカラム <a> の年	<B> [ <a> ] . dt . year	'magenta' <B> [ <a> ] . dt . year
表 <A> の <b> 表属性をインデックスとして設定して、インプレースする	<A> . set_index ( <b> , inplace = True )	<A> . set_index ( <b> , inplace = True )
グラフに格子線を表示する	plt . grid ( True )	sns . grid ( True )
<a> と <b> に重複はあるかどうかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
<B> の <a> コラムを昇順でソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレーム <A> を <b> の値に沿ってソートして、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
同じ軸のセットで <A> <b> と <A> <c> と <A> 表 <d> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> を <b> ファイル名に書き込む	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
データフレーム <A> <b> コラムと <A> <c> コラムとデータフレーム <A> <d> についての箱ひげ図をプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<D> <c> と <D> 表データ <b> と表データ <D> <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
片方のテーブルにしかないデータも全て残して <B> ( データフレーム ) とデータフレーム <A> を一つにまとめ、 <C> にする	<C> = pd . merge ( <B> , <A> , how = 'outer' )	<A> = pd . merge ( <B> , <C> , how = 'outer' )
表データ <A> と <B> を一つにまとめる	pd . merge ( <A> , <B> )	sns . pd ( <B> )
<B> の <c> を軸に昇順でソートし、 <A> にする	<A> = <B> . sort_values ( <c> )	= <B> . sort_values ( <c> )
表データ <B> 中の未記入の値がある行を消し、 <A> に代入する	<A> = <B> . dropna ( )	= <B> . dropna ( )
表データ <B> の <c> コラムを位置に設定して、 <A> とする	<A> = <B> . set_index ( <c> )	<A> = <B> . set_index ( <c> )
同じ軸のセットで <A> <b> と <A> 表表属性 <c> と <A> <d> 表属性を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の先頭の <b> 行を見る	<A> . head ( <b> )	head . head ( <b> )
表データ <A> 全体をインデックスを元に並び替え、 <B> にする	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表 <B> の <a> を削除を <C> とする	<C> = <B> . drop ( <a> , axis = 1 )	<D> = <B> . drop ( <a> , axis = 1 )
<a> というエクセルの <b> 番目のシートから読み込む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<a> をキーとして、 <C> 表と表 <B> を一つにまとめ、 <D> に代入する	<D> = pd . merge ( <C> , <B> , on = <a> )	sns = pd . merge ( <C> , <B> , on = <a> )
エクセルファイル <a> をデータフレームにし、 <B> とする	<B> = pd . read_excel ( <a> )	markeredgewidth = <a> )
CSV ファイル <b> をカンマ区切りで読んで、 <A> とする	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
表 <C> の <b> 表属性ごとに <a> の平均	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
同じ軸で <D> <c> と <D> <b> と <D> 表データ <a> カラムを箱ひげ図で描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <A> の <b> と <c> カラムを値が大きい順に並び替えて、 <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> ( データフレーム ) の <b> 表属性と <c> を値が大きい順にして、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <B> 中にある <c> を欠損に置換して、 <A> に代入する	<A> = <B> . replace ( <c> , np . nan )	sns = <B> . replace ( <c> , np . nan )
表 <B> 内にある <a> を欠損値に置換し、 <C> にする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<A> 中の NaN を含む行を消し、 <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
<A> の列 <b> と列 <c> をドロップを <A> とする	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	sns = <A> . drop ( [ <b> , <c> ] , axis = 1 )
<A> の <b> を削除し、インプレースする	<A> . drop ( <b> , axis = 1 , inplace = True )	1 . drop ( <b> , axis = 1 , inplace = True )
<C> ( データフレーム ) の列 <b> と <a> を大から小へと並び替えて、置き換える	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> とデータフレーム <C> をマージして、 <A> にする	<A> = pd . merge ( <B> , <C> )	] = pd . merge ( <B> , <C> , how = 'outer' )
データフレーム <B> の <a> 列の年	<B> [ <a> ] . dt . year	<a> <B> [ <a> ] . dt . year
表 <B> 中の未記入の値が存在する行をドロップし、 <A> とする	<A> = <B> . dropna ( )	dropna = <B> . dropna ( )
表データを <a> ファイルパスからカンマ区切りで読み込む	pd . read_csv ( <a> , sep = ',' )	<B> = pd . read_csv ( <a> , sep = ',' )
データフレーム <A> 中に重複はあるか確認を調べる	<A> . duplicated ( )	df . duplicated ( )
左側のデータの位置と右側のデータの <c> をキーとして、 <A> と表データ <B> を一つにまとめる	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	sns . pd ( <A> , <B> , left_index = True , right_on = <c> )
ヒストグラムで表 <A> の <b> を表す	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
<A> 中の未入力の値をドロップし、置き換える	<A> = <A> . dropna ( )	<A> . dropna ( inplace = True )
表 <A> の中の欠損値を直前の行の値で補って、 <B> にする	<B> = <A> . fillna ( method = 'ffill' )	method = <A> . fillna ( method = 'ffill' )
ラベルを <a> と名づけて、 <C> と <B> をグラフで描画する	plt . plot ( <C> , <B> , label = <a> )	sns = pd . merge ( <C> , <B> , label = <a> )
<a> 番目の列をインデックスと設定して、 <b> をデータフレームとして読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <A> 内のカラムにある <b> の個数の合計値	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
インデックスと <a> 列をキーとして <C> と <B> 表データをマージし、 <D> にする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	sum <D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
左側のデータの位置と右側のデータの <a> を項目名として、 <C> とデータフレーム <B> をマージする	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
コラム <a> と <b> を逆順にソート	df . sort_values ( [ <a> , <b> ] , ascending = False )	<D> . sort_values ( [ <a> , <b> ] , ascending = False )
<A> ( データフレーム ) の <b> と <c> コラムを大きい順にソート	<A> . sort_values ( [ <b> , <c> ] , ascending = False )	sns . sort_values ( [ <b> , <c> ] , ascending = False )
データフレーム <C> 内の <b> とコラム <a> に重複はあるのかどうかを確認する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
<A> の <b> カラム内の前後の行の差分	<A> [ <b> ] . diff ( periods = 1 )	<A> [ <b> ] . diff ( periods = 1 )
<C> のカラム名を <b> から <a> にリネームし、 <C> に代入する	<C> = <C> . rename ( columns = { <b> : <a> } )	<D> = <C> . rename ( columns = { <b> : <a> } )
グラフ枠のサイズを横幅 <a> 高さ <b> と設定する	plt . figure ( figsize = ( <a> , <b> ) )	<E> = plt . figure ( figsize = ( <a> , <b> ) )
表 <A> のコラム <b> と <A> データフレームのコラム <c> と <A> の <d> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> <b> とデータフレーム <A> 列 <c> とデータフレーム <A> <d> についての箱ひげ図を表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> ( データフレーム ) の <b> と表属性 <a> を値が大きい順にして、再代入する	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
さらに、マーカーの形をバツ印とする	@option marker = 'x'	@option marker = 'x'
同じ軸で表データ <A> <b> 列と <A> 表データ <c> 列と <A> <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> の <b> コラムが <a> 以上のデータを得る	<C> [ <C> [ <b> ] >= <a> ]	<A> [ <C> [ <b> ] >= <a> ]
データフレーム <A> 中の NaN をカウントする	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
エクセルファイル <a> のシート全てから読み、 <B> にする	<B> = pd . read_excel ( <a> , sheet_name = None )	<B> = pd . read_excel ( <a> , sheet_name = None )
<a> 区切りで <b> を表として読む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
分割数を <C> として、 <A> データフレームの <b> を分割する	pd . cut ( <A> [ <b> ] , <C> )	cut pd . cut ( <A> [ <b> ] , <C> )
グラフ枠の大きさを横幅 <a> 高さ <b> にする	plt . figure ( figsize = ( <a> , <b> ) )	<E> = plt . figure ( figsize = ( <a> , <b> ) )
列番号 <a> を位置として、 <b> をデータフレームとして読む	pd . read_csv ( <b> , index_col = <a> )	pd . read_csv ( <b> , index_col = <a> )
データフレーム <A> の <b> の名前を <c> に、 <d> の名前を <e> に変更して、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
<a> と <b> に重複はあるのかチェックする	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
同じ軸で表データ <D> <c> 列と <D> 表データ <b> 列と <D> <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <B> の <a> 表属性のユニークな要素数を見る	<B> [ <a> ] . nunique ( )	pd . qcut ( <B> [ <a> ] , 4 )
データフレーム <B> 内にある <a> を未入力の値とし、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<D> . replace ( <a> , np . nan , inplace = True )
表データ <B> の <a> 行目を削除を <C> とする	<C> = <B> . drop ( <a> )	df = <B> . drop ( <a> )
表データ <A> 内の欠損値がある行を消す	<A> . dropna ( )	@option dropna ( )
表データ <A> を <b> に沿ってソートし、 <A> とする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
<B> の未記入の値を <A> で埋め、インプレースする	<B> . fillna ( <A> , inplace = True )	<A> . fillna ( <B> , inplace = True )
<a> 番目の列をインデックスに設定して、 <b> からデータフレームとを読む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
<A> の <b> に重複がある行をドロップして、再代入する	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
データフレーム <A> の <b> と <c> 列を消して、置き換える	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <B> 内の表属性 <a> に重複がある行をドロップし、再代入する	<B> = <B> . drop_duplicates ( subset = <a> )	df = <B> . drop_duplicates ( subset = <a> )
カラム <a> に重複がある行を drop を <B> にする	<B> = <B> . drop_duplicates ( subset = <a> )	df = df . drop_duplicates ( subset = <a> )
データフレーム <A> 内にある <b> を未入力の値に置換する	<A> . replace ( <b> , np . nan )	sns . replace ( <b> , np . nan )
<A> と <B> を縦向きにマージする	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
ヘッダーなしで <a> ファイル名を読み込む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
表 <A> の行の重複を検出する	<A> . duplicated ( )	df . duplicated ( )
エクセルファイル <a> のシート全てをデータフレームとして読む	pd . read_excel ( <a> , sheet_name = None )	pd . read_excel ( <a> , sheet_name = None )
<b> と <a> を大きい順にし、置き換える	df . sort_values ( [ <b> , <a> ] , ascending = False , inplace = True )	df = df . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> 内 ] [ で重複する行数の合計を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
表 <A> 中の欠損値を <B> に置き換え、 <A> とする	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
一番左の列を位置に設定して、 <a> から読み、 <B> とする	<B> = pd . read_csv ( <a> , index_col = 0 )	'magenta' = pd . read_csv ( <a> , index_col = 0 )
エクセルデータ <a> をデータフレームに格納する	pd . read_excel ( <a> , sheet_name = None )	sheet_name . pd ( <a> )
データフレーム <B> 全体を <a> コラムの値を元に昇順でソートして、置き換える	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表 <C> のカラム名を <b> から <a> にリネームする	<C> . rename ( columns = { <b> : <a> } )	<D> . rename ( columns = { <b> : <a> } )
表として <a> 区切りで CSV ファイル <b> ( ファイル名 ) を読んで、 <C> にする	<C> = pd . read_csv ( <b> , sep = <a> )	<A> = pd . read_csv ( <b> , sep = <a> )
<a> と <b> を大から小へと並び替える	df . sort_values ( [ <a> , <b> ] , ascending = False )	<B> . sort_values ( [ <a> , <b> ] , ascending = False )
<B> の中の <a> を NaN に置換し、 NaN がある行を消し、 <B> とする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<B> の <a> の値を軸にソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	df . sort_values ( <a> , inplace = True )
データフレーム <A> の <b> と表属性 <c> をドロップして、再代入する	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )	1 = <A> . drop ( [ <b> , <c> ] , axis = 1 )
表 <A> のカラム <c> の分を確認して、  <A> [ <b> ] に代入する	<A> [ <b> ] = <A> [ <c> ] . dt . minute	[ <A> [ <b> ] = <A> [ <c> ] . dt . minute
表データ <B> の <c> カラムをインデックスとして設定して、 <A> にする	<A> = <B> . set_index ( <c> )	<A> = <B> . set_index ( <c> )
表 <A> の <b> と <A> の <c> と <A> 表の <d> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> 全体を <b> コラムの値を元に昇順で並び替える	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
さらに、グラフの打点の形をひし形とする	@option marker = 'D'	@option marker = 'D'
表 <B> の <c> を削除し、 <A> とする	<A> = <B> . drop ( <c> , axis = 1 )	<A> = <B> . drop ( <c> , axis = 1 )
表データ <A> 全体をインデックスに基づいてソートして、置き換える	<A> . sort_index ( inplace = True )	df . sort_index ( inplace = True )
表 <B> 中のカラム <a> に重複があるのか確認	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
ヘッダーを指定せずに <a> を読み込む	pd . read_csv ( <a> , header = None )	pd . read_csv ( <a> , header = None )
<A> のそれぞれのカラムに存在する <b> の個数の合計	<A> . isin ( [ <b> ] ) . sum ( )	sns . isin ( [ <b> ] ) . sum ( )
同じ軸のセットで <D> 表 <c> カラムと表 <D> <b> と表 <D> <a> カラムを箱ひげ図でプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> のカラム名を <b> から <c> に、 <d> から <e> にリネームし、再代入する	<A> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )	df = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
同じグラフ内で <A> 表の列 <b> と <c> と <d> 列を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<a> をカンマ区切りで読み込み、 <B> にする	<B> = pd . read_csv ( <a> , sep = ',' )	<D> = pd . read_csv ( <a> , sep = ',' )
データフレーム <B> をエクセルファイル <a> に変換する	<B> . to_excel ( <a> )	df . to_excel ( <a> )
表データ <A> のカラム <d> について、カラム <b> をインデックス、 <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
表データ <C> の <a> カラムの時間を  <C> [ <b> ] に代入する	<C> [ <b> ] = <C> [ <a> ] . dt . hour	<D> [ <b> ] = <C> [ <a> ] . dt . hour
同じグラフ内で表 <A> <b> と <A> <c> と <A> <d> を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸で <A> 表データ <b> と <A> 表データコラム <c> と表データ <A> <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<A> の未入力の値の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<a> を昇順にし、再代入する	df = df . sort_values ( <a> )	df = df . sort_values ( <a> )
インデックスとカラム <d> をキーとして表 <B> と表 <C> を一つにまとめ、 <A> に代入する	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	= pd . merge ( <B> , <A> , left_index = True , right_on = <d> )
表データ <B> のコラム <a> をソートし、 <C> とする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<A> の列 <b> を箱ひげ図に描写する	plt . boxplot ( <A> [ <b> ] )	year plt . boxplot ( <A> [ <b> ] )
<A> 内の欠損がある行を削除して、 <B> に代入する	<B> = <A> . dropna ( )	<B> = <A> . dropna ( )
データフレーム <B> の中にある <c> を欠損値に置き換えて、 <A> とする	<A> = <B> . replace ( <c> , np . nan )	sns <A> = <B> . replace ( <c> , np . nan )
データフレーム <A> の中の <b> と <c> に重複は存在するのか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
<b> コラムとコラム <a> を大から小へとソートを <C> にする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <B> 中の重複要素がある行を取り除いて、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<a> 列を順番になるようにソートして、置き換える	df . sort_values ( <a> , inplace = True )	df = df . sort_values ( <a> )
表 <A> を <b> の値でソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<b> というエクセルファイルの <a> を表に格納し、 <C> に代入する	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<D> = pd . read_excel ( <b> , sheet_name = <a> )
表データ <A> 中に存在する <b> を欠損値に置き換えて、置き換える	<A> = <A> . replace ( <b> , np . nan )	<A> . replace ( <b> , np . nan , inplace = True )
表 <B> の未入力の値を <A> に置き換え、置き換える	<B> . fillna ( <A> , inplace = True )	<B> = <B> . fillna ( <A> )
表 <A> のコラム <b> と <c> とコラム <d> について関係性を一度に描画する	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
表データ <A> の表属性 <b> についての標準偏差を取得する	<A> [ <b> ] . std ( )	pd . std ( <A> [ <b> ] )
エクセルの <a> を読み込んで、 <B> とする	<B> = pd . read_excel ( <a> )	markeredgewidth = <a> )
一番左の列を位置に設定して、 <a> をデータフレームとして読み込む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
データフレーム <B> 全体を <a> に沿ってソートして、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表データ <B> のコラム <a> についての標準偏差を抽出する	<B> [ <a> ] . std ( )	plt . std ( <B> [ <a> ] )
表データ <C> 中の <b> と列 <a> に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	if <C> . duplicated ( subset = [ <b> , <a> ] ) :
<a> を値が小さい順に並び替えて、 <B> にする	<B> = df . sort_values ( <a> )	df = <B> . sort_values ( <a> )
<A> の <b> と <c> ごとに <d> の値の合計を計算する	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
データフレーム <A> の形状	<A> . shape	pd . merge ( <A> ) ]
表データ <A> の最後の 5 行	<A> . tail ( )	<B> . tail ( )
<A> 内の重複している行を削除を <A> とする	<A> = <A> . drop_duplicates ( )	df = <A> . drop_duplicates ( )
表 <A> 中にいくつ欠損値があるか確認する	<A> . isnull ( ) . sum ( )	<A> . isnull ( ) . sum ( )
<A> ( データフレーム ) の <b> と <c> コラムを値が大きい順にソートを <A> とする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表 <C> の <b> 列と <a> 列に重複を判定する	<C> . duplicated ( subset = [ <b> , <a> ] )	<D> . duplicated ( subset = [ <b> , <a> ] )
表 <A> 中にある <b> を未記入の値に置換して、置き換える	<A> . replace ( <b> , np . nan , inplace = True )	df . replace ( <b> , np . nan , inplace = True )
データフレーム <C> の <b> をインデックス、 <a> をコラムとしたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	<A> . pivot_table ( index = <b> , columns = <a> )
データフレーム <A> 中の欠損を <B> に置換して、再代入する	<A> = <A> . fillna ( <B> )	df = <A> . fillna ( <B> )
表 <A> の <d> について、 <b> をインデックス、 <c> コラムをコラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
左外部結合で <B> 表データと表データ <C> を一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , how = 'left' )	pd = pd . merge ( <B> , <C> , how = 'left' )
凡例を表示する場所を自動でグラフに被らない位置につける	plt . legend ( loc = 'best' )	sns . legend ( loc = 'best' )
表 <B> を <a> を元に並び替え、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <A> 全体を位置を元に並び替えて、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <A> 全体を位置を軸に並び替えて、置き換える	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
表 <B> 中の <a> を欠損に置換し、欠損がある行を削除し、再代入する	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
同じ軸のセットで <A> <b> と <A> 列 <c> と <A> <d> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
さらに、四角形のマーカーを表示することとする	@option marker = 's'	@option marker = 's'
表データ <C> と <B> 表に対して、 <a> 列を項目名としてデータを内部結合する	pd . merge ( <C> , <B> , on = <a> )	sns . pd ( <C> , <B> , on = <a> )
フォーマットを指定して、データフレーム <B> の <a> を datetime 型に変換する	pd . to_datetime ( <B> [ <a> ] , format = '%Y-%m-%d' )	sns . pd ( <B> [ <a> ] , format = '%Y-%m-%d' )
ヒストグラムで <A> の <b> を表す	plt . hist ( <A> [ <b> ] )	bins plt . hist ( <A> [ <b> ] )
表 <A> の元の位置を振り直し、再代入する	<A> = <A> . reset_index ( drop = True )	sns . reset_index ( drop = True , inplace = True )
表データ <B> 全体を <a> を軸にソートし、置き換える	<B> = <B> . sort_values ( <a> )	df . sort_values ( <a> , inplace = True )
表 <B> から <a> という CSV ファイルを書き込む	<B> . to_csv ( <a> )	plt . savefig ( <a> )
<D> の表属性 <c> と <D> の <b> と <D> の <a> 表属性についての箱ひげ図を描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表 <C> の表属性 <b> と <a> を大から小へとソート	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	df . sort_values ( [ <b> , <a> ] , ascending = False )
<B> の <a> の値をソートし、 <C> にする	<C> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> の列 <b> を四分位数ごとで分割する	pd . qcut ( <A> [ <b> ] , 4 )	pd . qcut ( <A> [ <b> ] , 4 )
表 <A> の表属性 <b> に重複がある行を落とす	<A> . drop_duplicates ( subset = <b> )	if <A> . drop_duplicates ( subset = <b> ) :
表 <B> の <c> の名前を <d> に変更して、 <A> とする	<A> = <B> . rename ( columns = { <c> : <d> } )	<A> = <B> . rename ( columns = { <c> : <d> } )
表 <A> の <b> 表属性ごとに <c> の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表 <A> <b> 表属性と表 <A> 表属性 <c> と <A> <d> 表属性の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <D> の <a> について、 <c> をインデックス、 <b> 列を列としたピボットテーブルを作成し、 <E> にする	<E> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )	<A> = <D> . pivot_table ( index = <c> , columns = <b> , values = <a> )
分割数を <C> 、ビンのラベルをリスト <D> として、 <A> の列 <b> を分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表データ <B> を <a> の値で並び替えて、置き換える	<B> = <B> . sort_values ( <a> )	<C> . sort_values ( <a> , inplace = True )
<A> を <b> から <c> の範囲でヒストグラムに描画する	plt . hist ( <A> , range = ( <b> , <c> ) )	range = plt . hist ( <A> [ <b> , <c> ] ) )
<B> を <a> カラムを元にソートして、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表データ <A> 中の <b> を欠損に置換し、欠損が存在する行をドロップして、 <A> にする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
左側のデータの位置と右側のデータの <a> をキーとして、 <C> 表データと <B> を一つにまとめ、 <D> とする	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	= pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
棒グラフの位置を真ん中として、 <A> 軸を <A> とした <B> の棒グラフを描画する	plt . barh ( <A> , <B> , align = 'center' )	align = plt . bar ( <A> , <B> , align = 'center' )
表として <a> 区切りで CSV ファイル <b> ( ファイル名 ) を読み込む	pd . read_csv ( <b> , sep = <a> )	pd . read_csv ( <b> , sep = <a> )
ラベル名を <a> として、 <C> , <B> のグラフを表示する	plt . plot ( <C> , <B> , label = <a> )	<E> = pd . merge ( <C> , <B> , label = <a> )
同じグラフ内で <D> データフレーム <c> とデータフレーム <D> 列 <b> と <D> <a> を箱ひげ図で表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> 全体を <a> 表属性で並び替えて、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <B> をコラム <a> の値でソートし、再代入する	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
表 <B> の表属性 <a> についてのヒストグラムを描画する	plt . hist ( <B> [ <a> ] )	bins plt . hist ( <B> [ <a> ] )
同じグラフ内でデータフレーム <A> の <b> と <A> の <c> とデータフレーム <A> の <d> を箱ひげ図で描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
<C> ( データフレーム ) の <b> コラムと <a> コラムを逆順にソートを <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> <b> と表データ <A> <c> 列と表データ <A> <d> 列の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
分割数を <C> として、 <A> の <b> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <A> [ <b> ] , <C> )	pd . qcut ( <A> [ <b> ] , <C> )
データフレーム <B> と表データ <A> を縦結合し、 <C> とする	<C> = pd . concat ( [ <B> , <A> ] )	<A> = pd . concat ( [ <B> , <C> ] )
さらに、マーカーの塗り潰しの色を青とする	@option markerfacecolor = 'blue'	@option markerfacecolor = 'blue'
同じ x 軸と y 軸で <A> 表データの <b> と <A> の <c> と <A> 表データの <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
エクセルファイル <a> の <b> シート名を表に格納する	pd . read_excel ( <a> , sheet_name = <b> )	sheet_name = pd . read_excel ( <a> , sheet_name = <b> )
同じ x 軸と y 軸で <A> 表データのコラム <b> と <c> コラムと <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表 <A> をインデックスに基づいてソートし、インプレースする	<A> . sort_index ( inplace = True )	<A> . sort_index ( inplace = True )
列 <a> をダミー変数に変換する	pd . get_dummies ( df [ <a> ] )	sns . pd ( df [ <a> ] )
表 <A> 内の <b> とコラム <c> に重複はあるのか表示してみる	<A> . duplicated ( subset = [ <b> , <c> ] )	<B> . duplicated ( subset = [ <b> , <c> ] )
エクセルファイル <b> の全てのシートをデータフレームとして読んで、 <A> に代入する	<A> = pd . read_excel ( <b> , sheet_name = None )	<b> <A> = pd . read_excel ( <b> , sheet_name = None )
同じグラフ内でデータフレーム <D> の <c> とデータフレーム <D> のコラム <b> とデータフレーム <D> の <a> コラムを箱ひげ図で描画する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データを CSV ファイル <b> ( ファイル名 ) から読んで、 <A> とする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
<b> に重複がある行を削除を <A> にする	<A> = df . drop_duplicates ( subset = <b> )	= df . drop_duplicates ( subset = <b> )
表 <A> の <b> 表属性と <c> を逆順に並び替え、置き換える	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	df = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
<A> を <b> という名前で書き出す	<A> . to_csv ( <b> )	pd . read_excel ( <b> , sheet_name = <a> )
同じグラフ内で <A> 表データの <b> と <A> の列 <c> と <A> 表データの列 <d> を箱ひげ図で描く	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> に重複があるのか確認を確認する	<A> . duplicated ( )	df . duplicated ( )
<A> から重複している行を削除し、置き換える	<A> . drop_duplicates ( inplace = True )	df . drop_duplicates ( inplace = True )
グラフに格子線を付ける	plt . grid ( True )	sns . grid ( True )
そこで、 <A> で埋める	@option fillchar = <A>	<A> = pd . read_csv ( )
表 <A> の <b> ごとに <c> の平均	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
表 <C> の列 <b> と列 <a> を消す	<C> . drop ( [ <b> , <a> ] , axis = 1 )	1 . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <A> 中の欠損値の合計を計算する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<B> の重複している行を削除して、 <A> にする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> 内の <b> に重複があるのかチェック	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
そのとき、 <A> を使うことにする	@option encoding = <A>	fillna @option sep = <A> )
<a> と <b> 表属性に重複があるのかどうか見る	df . duplicated ( subset = [ <a> , <b> ] )	pd . duplicated ( subset = [ <a> , <b> ] )
列名を指定せずに <b> ファイルを読み込み、 <A> とする	<A> = pd . read_csv ( <b> , header = None )	pd . read_csv ( <b> , header = None )
データフレーム <A> の <b> の分を確認する	<A> [ <b> ] . dt . minute	[ <A> [ <b> ] . dt . minute
<b> からカンマ区切りで表データを読み込んで、 <A> に代入する	<A> = pd . read_csv ( <b> , sep = ',' )	<A> = pd . read_csv ( <b> , sep = ',' )
ビン数を <C> 、ビンの名前を <D> として、 <A> 表データの <b> をビン分割する	pd . cut ( <A> [ <b> ] , <C> , label = <D> )	pd . cut ( <A> [ <b> ] , <C> , label = <D> )
表 <A> 中の重複している行をドロップし、再代入する	<A> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
エクセルファイル <a> の全てのシートをデータフレームとして読んで、 <B> に代入する	<B> = pd . read_excel ( <a> , sheet_name = None )	<B> = pd . read_excel ( <a> , sheet_name = None )
<A> 中の重複する値がある行を取り除き、 <B> とする	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <A> 中のそれぞれのカラムに存在する <b> の個数の合計値を計算する	<A> . isin ( [ <b> ] ) . sum ( )	<A> . isin ( [ <b> ] ) . sum ( )
同じ軸のセットで <A> データフレームの <b> と <A> データフレームの <c> と <A> の <d> を箱ひげ図で表示する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <A> の <b> を昇順にソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
一番左の列を位置にして、 <a> ファイル名を表に格納して、 <B> に代入する	<B> = pd . read_csv ( <a> , index_col = 0 )	<A> = pd . read_csv ( <a> , index_col = 0 )
<D> の <c> 表属性とデータフレーム <D> の <b> と <D> の表属性 <a> の箱ひげ図を一枚のグラフで表示する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<A> 中の <b> を欠損値に置換し、欠損値が存在する行を消す	<A> . replace ( <b> , np . nan ) . dropna ( )	<b> <A> . replace ( <b> , np . nan ) . dropna ( )
表 <A> 全体を <b> 表属性を元にソートし、 <A> にする	<A> = <A> . sort_values ( <b> )	df = <A> . sort_values ( <b> )
グラフのサイズを横 <b> 縦 <a> とする	plt . figure ( figsize = ( <b> , <a> ) )	figure plt . figure ( figsize = ( <b> , <a> ) )
<b> と <c> を値が大きい順にソートし、 <A> にする	<A> = df . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <A> 中の表属性 <b> と表属性 <c> に重複はあるのかどうか確認する	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
表データ <A> の <b> と列 <c> に重複が存在するのかチェック	<A> . duplicated ( subset = [ <b> , <c> ] )	if <A> . duplicated ( subset = [ <b> , <c> ] ) :
列 <b> と <a> を降順に並び替え、 <C> とする	<C> = df . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の列 <b> をダミー変数化する	pd . get_dummies ( <A> [ <b> ] )	bins pd . get_dummies ( <A> [ <b> ] )
<B> 内に存在する <a> を NaN とする	<B> . replace ( <a> , np . nan )	replace . replace ( <a> , np . nan )
データフレーム <A> の <b> を未記入の値に置換し、未記入の値がある行を削除し、 <A> とする	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )	<A> = <A> . replace ( <b> , np . nan ) . dropna ( )
表データ <A> の <b> カラムと <c> を落として、置き換える	<A> . drop ( [ <b> , <c> ] , axis = 1 , inplace = True )	<A> = <A> . drop ( [ <b> , <c> ] , axis = 1 )
<A> 全体を <b> コラムを元に昇順でソートする	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
<B> の <a> を昇順にソートを <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
<b> というエクセルデータの <a> シート名をデータフレームに格納して、 <C> に代入する	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<A> = pd . read_excel ( <b> , sheet_name = <a> )
<A> を列 <b> の値に沿ってソートし、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <A> 中の <b> に重複があるのかチェックする	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
<C> のインデックス名を <b> から <a> に変更し、置き換える	<C> . rename ( index = { <b> : <a> } , inplace = True )	<D> = <C> . rename ( index = { <b> : <a> } )
そのとき、円グラフ上に構成割合を示す小数点以下 2 桁までの数値をパーセントを付けて表示することにする	@option autopct = '%.2f%%'	@option autopct = '%.2f%%'
<B> 全体を <a> の値を元に並び替えて、 <B> にする	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> の <b> に重複がある行を消して、 <A> とする	<A> = <A> . drop_duplicates ( subset = <b> )	<A> = <A> . drop_duplicates ( subset = <b> )
表データ <A> の <b> カラムをインデックスとして設定して、再代入する	<A> = <A> . set_index ( <b> )	<B> = <A> . set_index ( <b> )
表 <A> の <b> 列	<A> [ <b> ]	<b> <A> [ <a> ]
表データ <A> の重複している行の数	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
位置と <d> をキーとして <B> と <C> をマージして、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	] = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
列 <a> と <b> を降順に並び替え、置き換える	df = df . sort_values ( [ <a> , <b> ] , ascending = False )	df = df . sort_values ( [ <a> , <b> ] , ascending = False )
<a> というエクセルデータの <b> 番目のシートからデータフレームを読む	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
データフレーム <B> の <e> について、 <c> コラムをインデックス、 <d> をコラムとしたピボットテーブルを作成して、 <A> とする	<A> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )	<D> = <B> . pivot_table ( index = <c> , columns = <d> , values = <e> )
<a> 番目の列をインデックスに、 <b> ファイル名からデータフレームとを読み込む	pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
データフレーム <B> の <a> に重複があるのか確認	<B> . duplicated ( subset = <a> )	df . duplicated ( subset = <a> )
表 <B> 中の重複する値がある行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
<A> の 5 行を調べる	<A> . head ( )	df . head ( )
表データ <B> 内に存在する <a> を欠損値とし、 <C> とする	<C> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
ラベルの名前を <a> として、 <C> , <B> の折れ線グラフをプロットする	plt . plot ( <C> , <B> , label = <a> )	<E> = pd . merge ( <C> , <B> , label = <a> )
棒と棒の隙間を <a> として、 <C> 軸を <C> とした <B> の縦向きの棒グラフを描写する	plt . bar ( <C> , <B> , width = <a> )	plt . bar ( <C> , <B> , width = <a> ) )
重複した最後の行を残して <A> ( データフレーム ) の重複している行をドロップを <B> とする	<B> = <A> . drop_duplicates ( keep = False )	keep = <A> . drop_duplicates ( keep = False )
<A> 中の未入力の値の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<B> の <c> コラムを昇順でソートを <A> とする	<A> = <B> . sort_values ( <c> )	<A> = <B> . sort_values ( <c> )
データフレーム <A> の振り直して、元の位置を削除して、再代入する	<A> = <A> . reset_index ( drop = True )	@option <A> = <A> . reset_index ( drop = True )
同じ軸のセットで <A> 表の <b> と <A> 表の <c> と <A> の <d> 列を箱ひげ図で描画する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
境界値をリスト <D> として、 <B> 表のコラム <c> をビン分割し、 <A> とする	<A> = pd . cut ( <B> [ <c> ] , <D> )	sns = pd . cut ( <B> [ <c> ] , <D> )
表 <B> 内に存在する <a> を欠損に置換し、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	<D> . replace ( <a> , np . nan , inplace = True )
データフレーム <C> の <b> カラムごとに <a> の個数	<C> . groupby ( [ <b> ] ) [ <a> ] . count ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . count ( )
データフレーム <B> の中のそれぞれの列にある <a> の個数の合計を調べる	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
ラベル名を <c> として、 <A> , <B> の折れ線グラフを描画する	plt . plot ( <A> , <B> , label = <c> )	<E> = pd . merge ( <A> , <B> , label = <c> )
<b> と <a> を逆順に並び替える	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> をデータフレームに格納して、 <A> とする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
表 <A> の <b> を datetime 型に変換する	pd . to_datetime ( <A> [ <b> ] )	plt . pd ( <A> [ <b> ] )
<C> の <b> と <a> を降順に並び替える	<C> . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
<b> というエクセルの <a> 番目のシートから読み込む	pd . read_excel ( <b> , sheet_name = <a> )	to_excel pd . read_excel ( <b> , sheet_name = <a> )
表 <A> を <b> カラムの値でソート	<A> . sort_values ( <b> )	<b> <A> . sort_values ( <b> )
先頭の列を位置にして、 <a> から読む	pd . read_csv ( <a> , index_col = 0 )	pd . read_csv ( <a> , index_col = 0 )
表データ <A> の <b> を昇順に並び替えて、 <A> に代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表データ <B> 全体を <a> に沿ってソートし、 <B> とする	<B> = <B> . sort_values ( <a> )	<B> = <B> . sort_values ( <a> )
データフレーム <A> と <B> 表データを縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
表データ <A> の <d> カラムについて、カラム <b> をインデックス、カラム <c> をカラムとしたピボットテーブルを作成する	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )	<A> . pivot_table ( index = <b> , columns = <c> , values = <d> )
<b> と <a> を値が大きい順にし、置き換える	df = df . sort_values ( [ <b> , <a> ] , ascending = False )	<B> = df . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> にある <b> を欠損値に置き換える	<A> . replace ( <b> , np . nan )	sns . replace ( <b> , np . nan )
表 <B> 中の <a> を未入力の値に置換し、未入力の値が存在する行を削除し、 <C> とする	<C> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
<B> ( データフレーム ) の <a> を小から大へとソート	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
データフレームを <b> から読み込んで、 <A> とする	<A> = pd . read_csv ( <b> )	<A> = pd . read_csv ( <b> )
表 <A> の <b> コラムの月を表示する	<A> [ <b> ] . dt . month	<A> [ <b> ] . dt . month
<a> という列をドロップし、 <B> にする	<B> = <B> . drop ( <a> , axis = 1 )	<D> = df . drop ( <a> , axis = 1 )
データフレーム <A> 中の未記入の値を <A> の平均値で補って、 <A> にする	<A> = <A> . fillna ( <A> . mean ( ) )	= <A> . fillna ( <A> . mean ( ) , inplace = True )
同じグラフ内で <D> データフレーム <c> と <D> <b> とデータフレーム <D> コラム <a> を箱ひげ図で描写する	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
コラム <a> を小さい順にソートし、インプレースする	df . sort_values ( <a> , inplace = True )	<A> . sort_values ( <a> , inplace = True )
<A> の重複要素がある行を削除して、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
表データ <C> の <b> と <a> を降順にソートして、 <C> にする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	<D> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表 <A> の NaN をドロップを <A> とする	<A> = <A> . dropna ( )	dropna = <A> . dropna ( )
もし <a> と <b> に重複はあるならば	if df . duplicated ( subset = [ <a> , <b> ] ) :	pd . duplicated ( subset = [ <a> , <b> ] ) :
<B> の <c> の名前を <d> にリネームし、 <A> とする	<A> = <B> . rename ( index = { <c> : <d> } )	sns = <B> . rename ( index = { <c> : <d> } )
表 <B> にある <a> を欠損とし、再代入する	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
<b> と <c> 表属性を逆順にソートを <A> にする	<A> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )	False = df . sort_values ( [ <b> , <c> ] , ascending = False )
表データ <C> の <b> 列を位置、 <a> を列としたピボットテーブルを作成する	<C> . pivot_table ( index = <b> , columns = <a> )	<A> . pivot_table ( index = <b> , columns = <a> )
<A> の中で重複している行の数を確認する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
<b> という名前のエクセルデータの <a> 番目のシートを表データに格納して、 <C> とする	<C> = pd . read_excel ( <b> , sheet_name = <a> )	<A> = pd . read_excel ( <b> , sheet_name = <a> )
表 <A> の <b> ごとに <c> コラムの平均値を算出する	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <c> ] . mean ( )
分割数を <A> として、 <C> の <b> を分割する	pd . cut ( <C> [ <b> ] , <A> )	cut pd . cut ( <C> [ <b> ] , <A> )
<B> とデータフレーム <C> を縦にマージし、 <A> にする	<A> = pd . concat ( [ <B> , <C> ] )	<A> = pd . concat ( [ <B> , <C> ] )
表 <C> の <b> 列と列 <a> を削除を <D> に代入する	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
データフレーム <B> 内の重複している行をドロップし、 <A> とする	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
左外部結合で表 <B> と <C> 表をマージし、 <A> に代入する	<A> = pd . merge ( <B> , <C> , how = 'left' )	<C> = pd . merge ( <B> , <A> , how = 'left' )
<D> の <c> と <b> と <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . nan )
表データ <D> の <c> と <b> ごとに <a> 列の値の合計値	<D> . groupby ( [ <c> , <b> ] ) [ <a> ] . sum ( )	df . groupby ( [ <a> , <b> ] ) [ <a> ] . sum ( )
表 <B> の <a> コラムを中央値でビン分割し、 <C> とする	<C> = pd . qcut ( <B> [ <a> ] , 2 )	df = pd . qcut ( <B> [ <a> ] , 2 )
列番号 <b> を位置と設定して、 <a> を読み込む	pd . read_csv ( <a> , index_col = <b> )	pd . read_csv ( <a> , index_col = <b> )
左側のデータのインデックスと右側のデータの <a> カラムを項目名として、表データ <C> と <B> 表データを結合して、 <D> に代入する	<D> = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )	] = pd . merge ( <C> , <B> , left_index = True , right_on = <a> )
<B> をインデックスを元に昇順でソートして、 <A> とする	<A> = <B> . sort_index ( )	= <B> . sort_index ( )
<A> 中で重複する行の数を表示する	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
重複した最後の行を残して <A> ( データフレーム ) の重複した行を削除を <B> とする	<B> = <A> . drop_duplicates ( keep = False )	keep = <A> . drop_duplicates ( keep = False )
表 <B> の中のそれぞれの列に存在する <a> の個数を求める	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> の表属性 <a> の値をソートし、置き換える	<B> = <B> . sort_values ( <a> )	df = <B> . sort_values ( <a> )
データフレーム <A> の <b> の名前を <c> に、 <d> の名前を <e> にリネームする	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )	<A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表 <A> 全体をインデックスを元に昇順でソートを <A> とする	<A> = <A> . sort_index ( )	= <A> . sort_index ( )
表データ <B> のそれぞれのカラムにある <a> の個数の合計値を表示する	<B> . isin ( [ <a> ] ) . sum ( )	<B> . isin ( [ <a> ] ) . sum ( )
<B> と <C> データフレームを縦方向でマージして、 <A> とする	<A> = pd . concat ( [ <B> , <C> ] )	] = pd . concat ( [ <B> , <C> ] )
<a> というエクセルデータの <b> 番目のシートを表データに格納する	pd . read_excel ( <a> , sheet_name = <b> )	pd . read_excel ( <a> , sheet_name = <b> )
<B> 内にある <a> を未入力の値として、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
表 <D> の列 <c> と列 <b> と列 <a> について関係性を一気に描画する	sns . pairplot ( <D> [ [ <c> , <b> , <a> ] ] )	<D> [ <c> , <b> , <a> ] ] . corr ( )
重複した最後の行を残して <A> ( データフレーム ) 内の重複している行をドロップして、置き換える	<A> . drop_duplicates ( keep = False , inplace = True )	df = <A> . drop_duplicates ( keep = False )
表 <A> をインデックスに基づいてソートして、 <B> に代入する	<B> = <A> . sort_index ( )	<B> = <A> . sort_index ( )
表データ <A> の <b> に重複はあるのかどうか表示してみる	<A> . duplicated ( subset = <b> )	df . duplicated ( subset = <b> )
さらに、円グラフに小数点 2 位まで構成割合をパーセントを付けて表示する	@option autopct = '%.2f%%'	@option autopct = '%.2f%%'
エクセルの <a> を表にして、 <B> にする	<B> = pd . read_excel ( <a> )	df = pd . read_excel ( <a> )
表データ <A> 内の重複する行を削除する	<A> . drop_duplicates ( )	<B> . drop_duplicates ( )
データフレーム <A> 中の欠損値の合計	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
<b> カラムと <a> を降順にソートする	df . sort_values ( [ <b> , <a> ] , ascending = False )	<A> . sort_values ( [ <b> , <a> ] , ascending = False )
データフレーム <A> 内の NaN を <B> に置き換えて、置き換える	<A> . fillna ( <B> , inplace = True )	<A> . fillna ( <B> , inplace = True )
エクセルファイル <b> の <c> 番目のシートを ] [ データフレームとして読んで、 <A> とする	<A> = pd . read_excel ( <b> , sheet_name = <c> )	pd . read_excel ( <A> [ <b> , <c> ] , ascending = False )
データフレーム <A> 内の NaN の数を算出する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表 <A> のインデックス名を <b> から <c> にリネームする	<A> . rename ( index = { <b> : <c> } )	x <A> . rename ( index = { <b> : <c> } )
表 <A> 内 ] [ で重複している行の合計	<A> . duplicated ( ) . sum ( )	<A> . duplicated ( ) . sum ( )
分割数を <C> として、 <A> 表のカラム <b> をビンに含まれる個数が等しくなるようにビン分割する	pd . qcut ( <A> [ <b> ] , <C> )	qcut pd . qcut ( <A> [ <b> ] , <C> )
<B> 中の <a> を欠損値に置換し、欠損値が存在する行をドロップを <B> にする	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )	<D> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> 内の <b> カラムに重複がある行をドロップ	<A> . drop_duplicates ( subset = <b> )	if <A> . drop_duplicates ( subset = <b> ) :
データフレーム <A> を <b> パスという名前にして CSV ファイルに書き込む	<A> . to_csv ( <b> )	<b> <A> . to_csv ( <b> )
<B> をエクセルファイル <a> という名前で書き込む	<B> . to_excel ( <a> )	df . to_excel ( <a> )
<a> を順に並び替えて、 <B> とする	<B> = df . sort_values ( <a> )	sort_values = df . sort_values ( <a> )
分割数を <B> 、ビンの名前をリスト <A> として、 <D> データフレームの <c> を分割する	pd . cut ( <D> [ <c> ] , <B> , label = <A> )	pd . cut ( <D> [ <c> ] , <B> , label = <A> )
表データ <A> の <b> とデータフレーム <A> の <c> 表属性とデータフレーム <A> の <d> の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
同じ軸で <A> の <b> 表属性と <c> と <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> の <a> を欠損値に置換し、欠損値がある行をドロップし、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
データフレーム <A> を <b> を元に並び替え、インプレースする	<A> . sort_values ( <b> , inplace = True )	<A> . sort_values ( <b> , inplace = True )
表データ <B> のカラム <a> の年を確認する	<B> [ <a> ] . dt . year	markeredgewidth [ <a> ] . dt . year
データフレーム <A> 全体を列 <b> を軸に並び替え、置き換える	<A> = <A> . sort_values ( <b> )	<A> . sort_values ( <b> , inplace = True )
表 <E> の列の名前を <d> から <c> に、 <b> から <a> に変更して、 <E> とする	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	plt . rename ( columns = { <d> : <c> , <b> : <a> } )
表データ <A> の中の欠損を <B> とする	<A> . fillna ( <B> )	sns . fillna ( <B> )
データフレーム <A> 中の未記入の値を <B> に置き換える	<A> . fillna ( <B> )	sns . fillna ( <B> )
<b> 区切りで <a> を読む	pd . read_csv ( <a> , sep = <b> )	pd . read_csv ( <a> , sep = <b> )
データフレーム <A> 中の欠損したセル数を数える	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表データ <A> のオブジェクトデータの要約統計量を調べる	<A> . describe ( include = 'O' )	<A> . describe ( include = 'O' )
データフレーム <B> の <a> をソートする	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
ビン数を <D> として、 <B> の <c> 表属性を要素数が等しくなるようにビン分割し、 <A> にする	<A> = pd . qcut ( <B> [ <c> ] , <D> )	] = pd . qcut ( <B> [ <c> ] , <D> )
<a> 番目の列を位置に、ファイル <b> を表に格納し、 <C> とする	<C> = pd . read_csv ( <b> , index_col = <a> )	<D> = pd . read_csv ( <b> , index_col = <a> )
表データ <C> の <b> ごとに <a> 列の平均を計算する	<C> . groupby ( [ <b> ] ) [ <a> ] . mean ( )	<A> . groupby ( [ <b> ] ) [ <a> ] . mean ( )
表 <A> 中の重複した行を消し、インプレースする	<A> . drop_duplicates ( inplace = True )	<B> . drop_duplicates ( inplace = True )
表データ <A> の <b> の名前を <c> に、 <d> の名前を <e> に変更し、置き換える	<A> . rename ( columns = { <b> : <c> , <d> : <e> } , inplace = True )	<E> = <A> . rename ( columns = { <b> : <c> , <d> : <e> } )
表 <A> の表属性 <c> の年を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . year	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
データフレーム <B> 全体を <a> の値を元に並び替える	<B> . sort_values ( <a> )	<B> . sort_values ( <a> )
位置と <d> をキーとして <B> と <C> データフレームを一つにまとめて、 <A> とする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	sns = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )
表データ <A> の列の名前	<A> . columns	<A> . columns
データフレーム <B> 中の欠損を <C> に置換して、 <A> とする	<A> = <B> . fillna ( <C> )	<C> = <B> . fillna ( <A> )
表データ <A> の <b> を昇順にソートして、 <A> にする	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
データフレーム <D> <c> と <D> データフレーム <b> と <D> データフレーム <a> についての箱ひげ図をプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> の重複している行をドロップを <A> に代入する	<A> = <B> . drop_duplicates ( )	<A> = <B> . drop_duplicates ( )
データフレーム <B> と表 <C> を一つにまとめ、 <A> とする	<A> = pd . merge ( <B> , <C> )	pd . merge ( <B> , <A> )
<c> を項目名として、 <A> と表データ <B> をマージする	pd . merge ( <A> , <B> , on = <c> )	<D> = pd . merge ( <A> , <B> , on = <c> )
データフレーム <A> の <b> と列 <c> と <d> について関係性を一気にプロットする	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )	sns . pairplot ( <A> [ [ <b> , <c> , <d> ] ] )
同じ軸で <A> の <b> と <A> の <c> 列と <A> 表データの <d> を箱ひげ図でプロットする	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <B> 中にある <a> を未記入の値として、インプレースする	<B> . replace ( <a> , np . nan , inplace = True )	df . replace ( <a> , np . nan , inplace = True )
表 <A> の中の未記入の値が存在する行を削除し、インプレースする	<A> . dropna ( inplace = True )	dropna . dropna ( inplace = True )
<A> の <b> と <c> カラムごとに <d> の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
位置と <d> を項目名として表データ <B> と表データ <C> を結合して、 <A> にする	<A> = pd . merge ( <B> , <C> , left_index = True , right_on = <d> )	= pd . merge ( <B> , <A> , left_index = True , right_on = <d> )
表データ <A> の <b> コラムと <c> ごとに <d> コラムの値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
左側のデータのインデックスと右側のデータの <c> を項目名として、 <A> と表 <B> を結合する	pd . merge ( <A> , <B> , left_index = True , right_on = <c> )	sns . pd ( <A> , <B> , left_index = True , right_on = <c> )
そのとき、ヘッダー行を含まないこととする	@option encoding = 'shift_jis'	read_csv = 'shift_jis' . drop_duplicates ( )
重複した最後の行を残して <A> ( データフレーム ) の中の重複した行をドロップして、 <A> とする	<A> = <A> . drop_duplicates ( keep = False )	df = <A> . drop_duplicates ( keep = False )
表 <C> の <b> と列 <a> をドロップし、置き換える	<C> = <C> . drop ( [ <b> , <a> ] , axis = 1 )	<D> = <C> . drop ( [ <b> , <a> ] , axis = 1 )
表 <D> <c> と <D> 表データ <b> コラムと <D> 表データ <a> の箱ひげ図を一枚のグラフで描く	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
<B> と <A> を縦結合する	pd . concat ( [ <B> , <A> ] )	sns . pd ( <B> , <A> )
データフレーム <A> の NaN を <B> とし、 <A> とする	<A> = <A> . fillna ( <B> )	<A> = <A> . fillna ( <B> )
表 <A> の <b> と <c> 表属性を値が大きい順に並び替え、置き換える	<A> . sort_values ( [ <b> , <c> ] , ascending = False , inplace = True )	<C> = <A> . sort_values ( [ <b> , <c> ] , ascending = False )
表として CSV ファイル <b> ( ファイル名 ) を <c> 区切りで読み、 <A> とする	<A> = pd . read_csv ( <b> , sep = <c> )	<b> <A> = pd . read_csv ( <b> , sep = <c> )
<b> 番目の列をインデックスにして、パス <a> を表データに格納する	pd . read_csv ( <a> , index_col = <b> )	<D> = pd . read_csv ( <a> , index_col = <b> )
表データ <B> 全体を <a> 表属性に基づいてソートし、インプレースする	<B> . sort_values ( <a> , inplace = True )	<B> . sort_values ( <a> , inplace = True )
表 <A> 中の欠損の数を算出する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
表データ <A> の <c> コラムの分を  <A> [ <b> ] とする	<A> [ <b> ] = <A> [ <c> ] . dt . minute	<A> [ <b> ] = <A> [ <c> ] . dt . minute
データフレーム <A> の <b> を削除する	<A> . drop ( <b> , axis = 1 )	1 . drop ( <b> , axis = 1 )
<C> ( データフレーム ) の <b> とカラム <a> を値が大きい順にして、 <C> とする	<C> = <C> . sort_values ( [ <b> , <a> ] , ascending = False )	df = <C> . sort_values ( [ <b> , <a> ] , ascending = False )
表データ <A> の <b> とデータフレーム <A> の列 <c> と <A> の <d> 列の箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )	plt . boxplot ( [ <A> [ <b> ] , <A> [ <c> ] , <A> [ <d> ] ] )
表データ <A> 内の欠損の合計を算出する	<A> . isnull ( ) . sum ( )	x <A> . isnull ( ) . sum ( )
データフレーム <A> の表属性 <b> を削除し、置き換える	<A> = <A> . drop ( <b> , axis = 1 )	<C> . drop ( <b> , axis = 1 , inplace = True )
表データ <A> と <B> 表データを縦結合する	pd . concat ( [ <A> , <B> ] )	pd . concat ( [ <A> , <B> ] )
データフレーム <A> 内の重複している値がある行を取り除いて、 <B> に代入する	<B> = <A> . drop_duplicates ( )	<B> = <A> . drop_duplicates ( )
データフレーム <D> <c> 列と <D> <b> と <D> 表データ <a> の箱ひげ図を一枚のグラフでプロットする	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )	plt . boxplot ( [ <D> [ <c> ] , <D> [ <b> ] , <D> [ <a> ] ] )
表データ <B> の表属性 <a> を one - hot 表現に変換し、 <B> とする	<B> = pd . get_dummies ( <B> [ <a> ] )	df = pd . get_dummies ( <B> [ <a> ] )
表 <A> を <b> を元に並び替え、再代入する	<A> = <A> . sort_values ( <b> )	<A> = <A> . sort_values ( <b> )
表 <E> の列名を <d> から <c> に、 <b> から <a> に変更して、置き換える	<E> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )	<D> = <E> . rename ( columns = { <d> : <c> , <b> : <a> } )
表 <B> 内に存在する <a> を NaN に置き換えて、再代入する	<B> = <B> . replace ( <a> , np . nan )	df = <B> . replace ( <a> , np . nan )
データフレーム <B> の中の <a> を NaN に置換し、 NaN が存在する行を落とし、置き換える	<B> . replace ( <a> , np . nan ) . dropna ( inplace = True )	<B> = <B> . replace ( <a> , np . nan ) . dropna ( )
表データ <A> の <b> と <c> ごとに <d> 列の値の合計	<A> . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )	sns . groupby ( [ <b> , <c> ] ) [ <d> ] . sum ( )
